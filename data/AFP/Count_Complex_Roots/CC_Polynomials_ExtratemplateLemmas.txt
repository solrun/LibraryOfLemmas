   [("CC_Polynomials_Extra.map_poly_Im_cpoly",
     "map_poly Im (cpoly_of ?pR ?pI) = ?pI",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CC_Polynomials_Extra.map_poly_Re_cpoly",
     "map_poly Re (cpoly_of ?pR ?pI) = ?pR",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("CC_Polynomials_Extra.order_normalize",
     "order ?x (normalize ?p) = order ?x ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CC_Polynomials_Extra.rsquarefree_times",
     "rsquarefree (?p * ?q) ==> rsquarefree ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("CC_Polynomials_Extra.cpoly_of_decompose",
     "?p = cpoly_of (map_poly Re ?p) (map_poly Im ?p)",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("CC_Polynomials_Extra.path_poly_comp",
     "path ?g ==> path (poly ?p o ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("CC_Polynomials_Extra.card_proots_within_rsquarefree",
     "rsquarefree ?p ==> proots_count ?p ?s = card (proots_within ?p ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("CC_Polynomials_Extra.cpoly_of_eq_0_iff",
     "(cpoly_of ?pR ?pI = 0) = (?pR = 0 & ?pI = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("CC_Polynomials_Extra.rsquarefree_smult_iff",
     "?s ~= (0::?'a) ==> rsquarefree (smult ?s ?p) = rsquarefree ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("CC_Polynomials_Extra.rsquarefree_gcd_pderiv",
     "?p ~= 0 ==> rsquarefree (?p div gcd ?p (pderiv ?p))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("CC_Polynomials_Extra.poly_cpoly_of_real",
     "poly (cpoly_of ?pR ?pI) (complex_of_real ?x) =
      Complex (poly ?pR ?x) (poly ?pI ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CC_Polynomials_Extra.cpoly_of_dist_right",
     "cpoly_of (?pR * ?g) (?pI * ?g) =
      cpoly_of ?pR ?pI * map_poly complex_of_real ?g",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("CC_Polynomials_Extra.poly_gcd_pderiv_iff",
     "(poly (?p div gcd ?p (pderiv ?p)) ?x = (0::?'a)) =
      (poly ?p ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_var 1)))),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 0))),
    ("CC_Polynomials_Extra.pderiv_power",
     "pderiv (?p ^ ?n) = smult (of_nat ?n) (?p ^ (?n - 1)) * pderiv ?p",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app (template_hole 6, template_var 1)))),
    ("CC_Polynomials_Extra.poly_linepath_comp'",
     "poly ?p (linepath ?a ?b ?t) =
      poly (?p \<circ>\<^sub>p [:?a, ?b - ?a:]) (of_real ?t)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 2)),
                 template_hole 1)))),
         template_app (template_hole 0, template_var 0)))),
    ("CC_Polynomials_Extra.poly_cpoly_of_real_iff",
     "(poly (cpoly_of ?pR ?pI) (complex_of_real ?t) = 0) =
      (poly ?pR ?t = 0 & poly ?pI ?t = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0))
           ))),
    ("CC_Polynomials_Extra.order_pderiv",
     "[| ?p ~= 0; poly ?p ?x = (0::?'a) |]
      ==> order ?x ?p = Suc (order ?x (pderiv ?p))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("CC_Polynomials_Extra.cpoly_of_times",
     "cpoly_of ?pR ?pI * cpoly_of ?qR ?qI =
      cpoly_of (?pR * ?qR - ?pI * ?qI) (?pI * ?qR + ?pR * ?qI)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("CC_Polynomials_Extra.order_cpoly_gcd_eq",
     "?pR ~= 0 | ?pI ~= 0 ==>
      order (complex_of_real ?t) (cpoly_of ?pR ?pI) =
      order ?t (gcd ?pR ?pI)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_hole 6))),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("CC_Polynomials_Extra.order_gcd",
     "[| ?p ~= 0; ?q ~= 0 |]
      ==> order ?x (gcd ?p ?q) = min (order ?x ?p) (order ?x ?q)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("CC_Polynomials_Extra.cindex_poly_noroot",
     "[| ?a < ?b; ALL x. ?a < x & x < ?b --> poly ?p x ~= 0 |]
      ==> cindex_poly ?a ?b ?q ?p = 0",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("CC_Polynomials_Extra.poly_circlepath_tan_eq",
     "[| 0 <= ?t; ?t <= 1; ?t ~= 1 / 2 |]
      ==> poly ?p (circlepath ?z0.0 ?r ?t) =
          poly
           (fcompose ?p
             [:(?z0.0 + complex_of_real ?r) * \<i>,
               ?z0.0 - complex_of_real ?r:]
             [:\<i>, 1:])
           (complex_of_real (tan (pi * ?t))) /
          poly ([:\<i>, 1:] ^ degree ?p) (complex_of_real (tan (pi * ?t)))",
     template_implication
      ([template_inequation (less_equals, template_hole 25, template_var 3),
        template_inequation (less_equals, template_var 3, template_hole 24),
        template_negation
         (
            template_equation
             (template_var 3,
              template_app
               (template_app (template_hole 21, template_hole 24),
                template_app
                 (template_hole 20,
                  template_app (template_hole 19, template_hole 18))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 16, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 15, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_app (template_hole 13, template_var 2),
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_app
                                (template_hole 10, template_var 1),
                               template_app
                                (template_hole 9, template_var 0))),
                           template_hole 8)),
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app
                            (template_app (template_hole 7, template_var 1),
                             template_app
                              (template_hole 9, template_var 0))),
                         template_hole 6))),
                   template_app
                    (template_app (template_hole 12, template_hole 8),
                     template_app
                      (template_app (template_hole 12, template_hole 5),
                       template_hole 6)))),
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 3))))),
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 12, template_hole 8),
                     template_app
                      (template_app (template_hole 12, template_hole 5),
                       template_hole 6))),
                 template_app (template_hole 0, template_var 2))),
             template_app
              (template_hole 9,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 3))))))))]
