   [("Count_Half_Plane.proots_upper_card_code",
     "proots_upper_card ?p =
      (if ?p = 0 then 0
       else let pf = ?p div gcd ?p (pderiv ?p);
                pp = smult (inverse (lead_coeff pf)) pf;
                pI = map_poly Im pp; pR = map_poly Re pp; g = gcd pR pI
            in nat ((int (degree pf) - changes_R_smods g (pderiv g) -
                     changes_R_smods pR pI) div
                    2))",
     template_implication
      ([template_predicate
         (template_app (template_hole 26, template_var 0))],
       template_dunno)),
    ("Count_Half_Plane.proots_half_code1",
     "proots_half ?p ?a ?b =
      (if ?a ~= ?b
       then if ?p ~= 0
            then proots_upper (?p \<circ>\<^sub>p [:?a, ?b - ?a:])
            else Code.abort STR ''proots_half fails when p=0.''
                  (%_. proots_half ?p ?a ?b)
       else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Count_Half_Plane.proots_upper_code1",
     "proots_upper ?p =
      (if ?p ~= 0
       then let pp = smult (inverse (lead_coeff ?p)) ?p;
                pI = map_poly Im pp; pR = map_poly Re pp; g = gcd pI pR
            in nat ((int (degree ?p -
                          nat (changes_R_smods_ext g (pderiv g))) -
                     changes_R_smods pR pI) div
                    2)
       else Code.abort STR ''proots_upper fails when p=0.''
             (%_. proots_upper ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 30, template_var 0))],
       template_dunno))]
