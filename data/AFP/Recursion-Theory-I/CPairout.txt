Loading theory "Draft.CPair" (required by "Draft.CPairMoreTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.158s elapsed time, 0.653s cpu time, 0.050s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.CPair"
### 0.199s elapsed time, 0.818s cpu time, 0.050s GC time
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.865s cpu time, 0.050s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.336s elapsed time, 1.248s cpu time, 0.160s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.726s elapsed time, 2.239s cpu time, 0.341s GC time
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.768s elapsed time, 2.189s cpu time, 0.231s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.837s elapsed time, 4.082s cpu time, 0.917s GC time
Loading theory "Draft.Templates" (required by "Draft.CPairMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CPairMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.450s elapsed time, 0.456s cpu time, 0.000s GC time
Loading theory "Draft.CPairMoreTemplates"
val templateLemmas =
   [("CPair.arg_le_sf", "?x <= sf ?x",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("CPair.c_fst_le_arg", "c_fst ?u <= ?u",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_var 0)),
    ("CPair.c_snd_le_arg", "c_snd ?u <= ?u",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_var 0)),
    ("CPair.c_sum_le_arg", "c_sum ?u <= ?u",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_var 0)),
    ("CPair.arg1_le_c_pair", "?x <= c_pair ?x ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CPair.arg2_le_c_pair", "?y <= c_pair ?x ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("CPair.c_fst_le_c_sum", "c_fst ?u <= c_sum ?u",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("CPair.c_snd_le_c_sum", "c_snd ?u <= c_sum ?u",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("CPair.sf_c_sum_le_arg", "sf (c_sum ?u) <= ?u",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("CPair.c_fst_of_c_pair", "c_fst (c_pair ?x ?y) = ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("CPair.c_snd_of_c_pair", "c_snd (c_pair ?x ?y) = ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CPair.c_pair_of_c_fst_c_snd", "c_pair (c_fst ?u) (c_snd ?u) = ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("CPair.arg_less_sf_at_Suc_of_c_sum", "?u < sf (c_sum ?u + 1)",
     template_inequation
      (less_than, template_var 0,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("CPair.sum_le_c_pair", "?x + ?y <= c_pair ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CPair.c_sum_is_sum", "c_sum ?u = c_fst ?u + c_snd ?u",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("CPair.c_sum_of_c_pair", "c_sum (c_pair ?x ?y) = ?x + ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CPair.sf_c_sum_plus_c_fst", "sf (c_sum ?u) + c_fst ?u = ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("CPair.arg_less_sf", "1 < ?x ==> ?x < sf ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 0)))),
    ("CPair.c_snd_less_arg", "1 < ?x ==> c_snd ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("CPair.sf_posI", "0 < ?x ==> 0 < sf ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("CPair.c_fst_less_arg", "0 < ?x ==> c_fst ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("CPair.c_fst_eq_arg", "c_fst ?x = ?x ==> ?x = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 0), template_var 0)],
       template_equation (template_var 0, template_hole 0))),
    ("CPair.c_snd_eq_arg", "c_snd ?x = ?x ==> ?x <= 1",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_var 0)],
       template_inequation (less_equals, template_var 0, template_hole 0))),
    ("CPair.c_sum_eq_arg", "c_sum ?x = ?x ==> ?x <= 1",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_var 0)],
       template_inequation (less_equals, template_var 0, template_hole 0))),
    ("CPair.sf_eq_arg", "sf ?x = ?x ==> ?x <= 1",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_var 0)],
       template_inequation (less_equals, template_var 0, template_hole 0))),
    ("CPair.sf_strict_mono", "?x < ?y ==> sf ?x < sf ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CPair.sf_mono", "?x <= ?y ==> sf ?x <= sf ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CPair.c_sum_eq_arg_2", "c_sum ?x = ?x ==> c_fst ?x = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_var 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("CPair.arg_less_sf_imp_c_sum_less_arg", "?u < sf ?x ==> c_sum ?u < ?x",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("CPair.sf_inj", "sf ?x = sf ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("CPair.sf_less_sfD", "sf ?x < sf ?y ==> ?x < ?y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("CPair.sf_le_sfD", "sf ?x <= sf ?y ==> ?x <= ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("CPair.sf_at_Suc", "sf (?x + 1) = sf ?x + ?x + 1",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)),
             template_var 0)),
         template_hole 0))),
    ("CPair.sf_aux4", "?s < ?t ==> sf ?s + ?s < sf ?t",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CPair.c_pair_strict_mono1",
     "?x1.0 < ?x2.0 ==> c_pair ?x1.0 ?y < c_pair ?x2.0 ?y",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CPair.c_pair_strict_mono2",
     "?y1.0 < ?y2.0 ==> c_pair ?x ?y1.0 < c_pair ?x ?y2.0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CPair.c_pair_mono1",
     "?x1.0 <= ?x2.0 ==> c_pair ?x1.0 ?y <= c_pair ?x2.0 ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CPair.c_pair_mono2",
     "?y1.0 <= ?y2.0 ==> c_pair ?x ?y1.0 <= c_pair ?x ?y2.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CPair.c_pair_inj1",
     "c_pair ?x1.0 ?y1.0 = c_pair ?x2.0 ?y2.0 ==> ?x1.0 = ?x2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("CPair.c_pair_inj2",
     "c_pair ?x1.0 ?y1.0 = c_pair ?x2.0 ?y2.0 ==> ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("CPair.sf_aux3", "sf ?z + ?m < sf (?z + 1) ==> ?m <= ?z",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_var 0),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 1)))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("CPair.sf_aux1", "?x + ?y < ?z ==> sf (?x + ?y) + ?x < sf ?z",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("CPair.c_pair_inj",
     "c_pair ?x1.0 ?y1.0 = c_pair ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0 & ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("CPair.c_pair_sum_inj",
     "c_pair ?x1.0 ?y1.0 = c_pair ?x2.0 ?y2.0 ==>
      ?x1.0 + ?y1.0 = ?x2.0 + ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CPair.c_pair_sum_mono",
     "?x1.0 + ?y1.0 < ?x2.0 + ?y2.0 ==>
      c_pair ?x1.0 ?y1.0 < c_pair ?x2.0 ?y2.0",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CPair.sf_aux2", "sf ?z <= sf (?x + ?y) + ?x ==> ?z <= ?x + ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0))),
            template_var 1))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CPair.proj_eq_imp_arg_eq",
     "[| c_fst ?u = c_fst ?v; c_snd ?u = c_snd ?v |] ==> ?u = ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0)),
        template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0)))]:
   (string * thm * template) list
### theory "Draft.CPairMoreTemplates"
### 0.289s elapsed time, 0.440s cpu time, 0.051s GC time
val it = (): unit
