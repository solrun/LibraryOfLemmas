Loading theory "Draft.CPair" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.PRecFinSet" via "Draft.PRecFun")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.150s elapsed time, 0.617s cpu time, 0.048s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.CPair"
### 0.150s elapsed time, 0.619s cpu time, 0.048s GC time
Loading theory "Draft.PRecFun" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.PRecFinSet")
consts
  PrimRecOp ::
    "(nat => nat) => (nat => nat => nat => nat) => nat => nat => nat"
Found termination order: "size_list size <*mlex*> {}"
consts
  PrimRecOp_last ::
    "(nat => nat) => (nat => nat => nat => nat) => nat => nat => nat"
consts
  PrimRecOp1 :: "nat => (nat => nat => nat) => nat => nat"
Proofs for inductive predicate(s) "PrimRec1p", "PrimRec2p", "PrimRec3p"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.300s elapsed time, 1.202s cpu time, 0.153s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.324s elapsed time, 1.296s cpu time, 0.153s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs")
### ML warning (line 31 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Value identifier (n) has not been referenced.
### ML warning (line 28 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Value identifier (t2) has not been referenced.
### ML warning (line 55 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Pattern is not exhaustive.
exception BadArgument
val extract_prop_arg = fn: term -> term
val extract_trueprop_arg = fn: term -> term
val extract_set_args = fn: term -> term * term
val get_num_by_set = fn: string -> int
val remove_abs = fn: term -> term
val extract_free_from_app = fn: term -> int -> string * typ * int
val extract_free_arg = fn: term -> string * typ * int
val get_comp_by_indexes = fn: int * int -> thm
val pr_comp_tac = fn: Proof.context -> int -> tactic
val prec0_tac = fn: Proof.context -> thm list -> int -> tactic
consts
  shift :: "'a list => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### ML warning (line 439 of "$AFP/Recursion-Theory-I/PRecFun.thy"):
### Pattern is not exhaustive.
val get_if_by_index = fn: int -> thm
val if_comp_tac = fn: Proof.context -> int -> tactic
val prec_tac = fn: Proof.context -> thm list -> int -> tactic
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Draft.PRecFun"
### 1.037s elapsed time, 3.933s cpu time, 0.932s GC time
Loading theory "Draft.PRecFinSet" (required by "Draft.PRecFinSetMoreTemplates")
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.996s elapsed time, 3.777s cpu time, 0.827s GC time
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.094s elapsed time, 4.082s cpu time, 0.962s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.PRecFinSet"
### 0.280s elapsed time, 0.895s cpu time, 0.135s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.963s elapsed time, 5.684s cpu time, 1.241s GC time
Loading theory "Draft.Templates" (required by "Draft.PRecFinSetMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PRecFinSetMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.469s elapsed time, 0.523s cpu time, 0.067s GC time
Loading theory "Draft.PRecFinSetMoreTemplates"
val templateLemmas =
   [("PRecFinSet.nat_to_set_is_finite", "finite (nat_to_set ?u)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PRecFinSet.finite_interval", "finite {i. i < ?m}",
     template_predicate
      (
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))
         )),
    ("PRecFinSet.x_lt_2_x", "?x < 2 ^ ?x",
     template_inequation
      (less_than, template_var 0,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("PRecFinSet.nat_to_set_upper_bound2", "nat_to_set ?u <= {i. i < ?u}",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("PRecFinSet.nat_to_set_srj",
     "finite ?D ==> nat_to_set (set_to_nat ?D) = ?D",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("PRecFinSet.empty_is_zero", "nat_to_set ?u = {} ==> ?u = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("PRecFinSet.nat_to_set_upper_bound1", "?x : nat_to_set ?u ==> ?x < ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("PRecFinSet.x_in_u_eq", "(?x : nat_to_set ?u) = (c_in ?x ?u = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("PRecFinSet.log2_gt", "?x < 2 ^ (log2 ?x + 1)",
     template_inequation
      (less_than, template_var 0,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("PRecFinSet.nat_to_set_srj1", "finite ?D ==> EX u. nat_to_set u = ?D",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("PRecFinSet.pos_imp_ne", "0 < ?u ==> nat_to_set ?u ~= {}",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("PRecFinSet.log2_lm5", "0 < ?u ==> log2 ?u : nat_to_set ?u",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("PRecFinSet.x_div_x", "0 < ?x ==> ?x div ?x = 1",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("PRecFinSet.nat_to_set_lub", "?x : nat_to_set ?u ==> ?x <= log2 ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("PRecFinSet.ne_imp_pos", "nat_to_set ?u ~= {} ==> 0 < ?u",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("PRecFinSet.nat_to_set_inj",
     "nat_to_set ?u = nat_to_set ?v ==> ?u = ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("PRecFinSet.log2_is_max", "0 < ?u ==> log2 ?u = Max (nat_to_set ?u)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PRecFinSet.log2_lm2", "0 < ?u ==> c_in (log2 ?u) ?u = 1",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_hole 0))),
    ("PRecFinSet.log2_lm3", "log2 ?u < ?x ==> c_in ?x ?u = 0",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("PRecFinSet.log2_lm4", "c_in ?x ?u = 1 ==> ?x <= log2 ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("PRecFinSet.sum_is_pr",
     "?g : PrimRec1 ==> (%u. sum ?g (nat_to_set u)) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 2)
           ))),
    ("PRecFinSet.div_lt", "?m < ?n * ?k ==> ?m div ?n < ?k",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("PRecFinSet.div_ge", "?k <= ?m div ?n ==> ?n * ?k <= ?m",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("PRecFinSet.log2_le", "0 < ?x ==> 2 ^ log2 ?x <= ?x",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("PRecFinSet.nat_to_set_upper_bound",
     "?x : nat_to_set ?u ==> 2 ^ ?x <= ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1),
         template_var 0))),
    ("PRecFinSet.set_to_nat_of_interval",
     "set_to_nat {i. i < ?m} = 2 ^ ?m - 1",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0)),
         template_hole 0))),
    ("PRecFinSet.c_in_upper_bound", "c_in ?x ?u = 1 ==> 2 ^ ?x <= ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 0),
          template_hole 5)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1),
         template_var 0))),
    ("PRecFinSet.set_to_nat_mono",
     "[| finite ?B; ?A <= ?B |] ==> set_to_nat ?A <= set_to_nat ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("PRecFinSet.log2_lm1", "0 < ?u ==> ?u div 2 ^ log2 ?u = 1",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("PRecFinSet.sum_of_pr_is_pr",
     "?g : PrimRec1 ==> (%n. sum ?g {i. i < n}) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 3)
           ))),
    ("PRecFinSet.sum_of_pr_is_pr2",
     "?p : PrimRec2 ==> (%n m. SUM x:{i. i < n}. ?p x m) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 3)
           ))),
    ("PRecFinSet.remove_lemma",
     "?x : nat_to_set ?u ==>
      set_to_nat (nat_to_set ?u - {?x}) = ?u - 2 ^ ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 10, template_var 0)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 5))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 1))))),
    ("PRecFinSet.two_power_sum",
     "sum ((^) 2) {i. i < Suc ?m} = 2 ^ Suc ?m - 1",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 5))),
             template_app (template_hole 2, template_var 0))),
         template_hole 0))),
    ("PRecFinSet.insert_lemma",
     "?x ~: nat_to_set ?u ==>
      set_to_nat (nat_to_set ?u Un {?x}) = ?u + 2 ^ ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_app (template_hole 10, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 10, template_var 0)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 5))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 1))))),
    ("PRecFinSet.add_power",
     "?u < 2 ^ ?x ==> nat_to_set (?u + 2 ^ ?x) = nat_to_set ?u Un {?x}",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6))),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_hole 6))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("PRecFinSet.div_mod_lm",
     "?y < ?x ==> (?u + 2 ^ ?x) div 2 ^ ?y mod 2 = ?u div 2 ^ ?y mod 2",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0))),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 2))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 2))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))))))]:
   (string * thm * template) list
### theory "Draft.PRecFinSetMoreTemplates"
### 0.264s elapsed time, 0.344s cpu time, 0.000s GC time
val it = (): unit
