Loading theory "Draft.CPair" (required by "Draft.PRecFun2MoreTemplates" via "Draft.PRecFun2" via "Draft.PRecFun")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.516s cpu time, 0.050s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.CPair"
### 0.160s elapsed time, 0.645s cpu time, 0.050s GC time
Loading theory "Draft.PRecFun" (required by "Draft.PRecFun2MoreTemplates" via "Draft.PRecFun2")
consts
  PrimRecOp ::
    "(nat => nat) => (nat => nat => nat => nat) => nat => nat => nat"
consts
  PrimRecOp_last ::
    "(nat => nat) => (nat => nat => nat => nat) => nat => nat => nat"
consts
  PrimRecOp1 :: "nat => (nat => nat => nat) => nat => nat"
### theory "HOL-Library.Set_Algebras"
### 0.236s elapsed time, 0.953s cpu time, 0.050s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "PrimRec1p", "PrimRec2p", "PrimRec3p"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.358s elapsed time, 1.423s cpu time, 0.145s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs")
### ML warning (line 31 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Value identifier (n) has not been referenced.
### ML warning (line 28 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Value identifier (t2) has not been referenced.
### ML warning (line 55 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Pattern is not exhaustive.
exception BadArgument
val extract_prop_arg = fn: term -> term
val extract_trueprop_arg = fn: term -> term
val extract_set_args = fn: term -> term * term
val get_num_by_set = fn: string -> int
val remove_abs = fn: term -> term
val extract_free_from_app = fn: term -> int -> string * typ * int
val extract_free_arg = fn: term -> string * typ * int
val get_comp_by_indexes = fn: int * int -> thm
val pr_comp_tac = fn: Proof.context -> int -> tactic
val prec0_tac = fn: Proof.context -> thm list -> int -> tactic
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### ML warning (line 439 of "$AFP/Recursion-Theory-I/PRecFun.thy"):
### Pattern is not exhaustive.
val get_if_by_index = fn: int -> thm
val if_comp_tac = fn: Proof.context -> int -> tactic
val prec_tac = fn: Proof.context -> thm list -> int -> tactic
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "Draft.PRecFun"
### 1.017s elapsed time, 3.859s cpu time, 0.862s GC time
Loading theory "Draft.PRecFun2" (required by "Draft.PRecFun2MoreTemplates")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.972s elapsed time, 3.684s cpu time, 0.862s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Proofs for inductive predicate(s) "PrimRec1'p"
  Proving monotonicity ...
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.073s elapsed time, 3.899s cpu time, 0.854s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sch_to_pr :: "PrimScheme => nat => nat"
### theory "HOL-Library.Tree"
### 1.978s elapsed time, 6.255s cpu time, 1.128s GC time
Loading theory "Draft.Templates" (required by "Draft.PRecFun2MoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.112s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PRecFun2MoreTemplates")
Found termination order: "size <*mlex*> {}"
consts
  sch_to_nat :: "PrimScheme => nat"
consts
  pr_index_enumerator :: "nat => nat => nat"
### theory "Draft.PRecFun2"
### 1.152s elapsed time, 2.691s cpu time, 0.324s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.538s elapsed time, 0.861s cpu time, 0.160s GC time
Loading theory "Draft.PRecFun2MoreTemplates"
val templateLemmas =
   [("PRecFun2.nat_to_pr_into_pr", "nat_to_pr ?n : PrimRec1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("PRecFun2.sch_to_pr_into_pr", "sch_to_pr ?sch : PrimRec1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("PRecFun2.nat_to_sch_srj", "nat_to_sch (sch_to_nat ?sch) = ?sch",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("PRecFun2.index_of_const_main",
     "nat_to_pr (index_of_const ?n) = (%x. ?n)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       t_empty)),
    ("PRecFun2.index_of_const_lm_1", "nat_to_pr (index_of_const ?n) 0 = ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("PRecFun2.pr_index_enumerator_main",
     "nat_to_pr ?n = nat_to_pr (pr_index_enumerator ?n ?m)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PRecFun2.index_of_c_pair_n_main",
     "nat_to_pr (index_of_c_pair_n ?n) = c_pair ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("PRecFun2.primrec'_into_primrec", "?f : PrimRec1' ==> ?f : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("PRecFun2.pr_index_enumerator_increase2",
     "pr_index_enumerator ?n ?m < pr_index_enumerator ?n (?m + 1)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("PRecFun2.pr_index_enumerator_increase1",
     "pr_index_enumerator ?n ?m < pr_index_enumerator (?n + 1) ?m",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("PRecFun2.c_fst_snd_lt", "c_fst (c_snd (Suc (Suc ?x))) < Suc (Suc ?x)",
     template_inequation
      (less_than,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 0, template_var 0)))),
       template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)))),
    ("PRecFun2.c_snd_snd_lt", "c_snd (c_snd (Suc (Suc ?x))) < Suc (Suc ?x)",
     template_inequation
      (less_than,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 0, template_var 0)))),
       template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)))),
    ("PRecFun2.pair_by_index_main",
     "nat_to_pr (pair_by_index ?n1.0 ?n2.0) =
      c_f_pair (nat_to_pr ?n1.0) (nat_to_pr ?n2.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PRecFun2.rec_by_index_main",
     "nat_to_pr (rec_by_index ?n1.0 ?n2.0) =
      UnaryRecOp (nat_to_pr ?n1.0) (nat_to_pr ?n2.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PRecFun2.nat_to_sch_of_pair_by_index",
     "nat_to_sch (pair_by_index ?n1.0 ?n2.0) =
      Pair_op (nat_to_sch ?n1.0) (nat_to_sch ?n2.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PRecFun2.index_of_pr_is_real",
     "?f : PrimRec1 ==> nat_to_pr (index_of_pr ?f) = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("PRecFun2.index_of_c_pair_n_inj",
     "index_of_c_pair_n ?x1.0 = index_of_c_pair_n ?x2.0 ==> ?x1.0 = ?x2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("PRecFun2.index_of_const_inj",
     "index_of_const ?n1.0 = index_of_const ?n2.0 ==> ?n1.0 = ?n2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("PRecFun2.comp_by_index_main",
     "nat_to_pr (comp_by_index ?n1.0 ?n2.0) =
      (%x. nat_to_pr ?n1.0 (nat_to_pr ?n2.0 x))",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       t_empty)),
    ("PRecFun2.s1_1_th",
     "(%y. nat_to_pr ?n (c_pair ?x y)) = nat_to_pr (s1_1 ?n ?x)",
     template_equation
      (t_empty,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PRecFun2.nat_to_pr_srj", "?f : PrimRec1 ==> EX n. ?f = nat_to_pr n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("PRecFun2.sch_to_pr_srj",
     "?f : PrimRec1 ==> EX sch. ?f = sch_to_pr sch",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("PRecFun2.pr_index_enumerator_mono2",
     "?m1.0 < ?m2.0 ==>
      pr_index_enumerator ?n ?m1.0 < pr_index_enumerator ?n ?m2.0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("PRecFun2.pr_index_enumerator_mono1",
     "?n1.0 < ?n2.0 ==>
      pr_index_enumerator ?n1.0 ?m < pr_index_enumerator ?n2.0 ?m",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PRecFun2.comp_by_index_inj1",
     "comp_by_index ?x1.0 ?y1.0 = comp_by_index ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("PRecFun2.comp_by_index_inj2",
     "comp_by_index ?x1.0 ?y1.0 = comp_by_index ?x2.0 ?y2.0 ==>
      ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("PRecFun2.pair_by_index_inj1",
     "pair_by_index ?x1.0 ?y1.0 = pair_by_index ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("PRecFun2.pair_by_index_inj2",
     "pair_by_index ?x1.0 ?y1.0 = pair_by_index ?x2.0 ?y2.0 ==>
      ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("PRecFun2.pr_index_enumerator_inj2",
     "pr_index_enumerator ?n ?m1.0 = pr_index_enumerator ?n ?m2.0 ==>
      ?m1.0 = ?m2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("PRecFun2.pr_index_enumerator_inj1",
     "pr_index_enumerator ?n1.0 ?m = pr_index_enumerator ?n2.0 ?m ==>
      ?n1.0 = ?n2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("PRecFun2.rec_by_index_inj1",
     "rec_by_index ?x1.0 ?y1.0 = rec_by_index ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("PRecFun2.rec_by_index_inj2",
     "rec_by_index ?x1.0 ?y1.0 = rec_by_index ?x2.0 ?y2.0 ==>
      ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("PRecFun2.s1_1_inj1",
     "s1_1 ?x1.0 ?y1.0 = s1_1 ?x2.0 ?y2.0 ==> ?x1.0 = ?x2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("PRecFun2.s1_1_inj2",
     "s1_1 ?x1.0 ?y1.0 = s1_1 ?x2.0 ?y2.0 ==> ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("PRecFun2.index_of_const_at_suc",
     "index_of_const (Suc ?u) = c_pair 4 (c_pair 2 (index_of_const ?u))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0)))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_app (template_hole 5, template_var 0))))),
    ("PRecFun2.loc_srj_3_1",
     "nat_to_sch (c_pair 4 (c_pair ?n1.0 ?n2.0)) =
      Comp_op (nat_to_sch ?n1.0) (nat_to_sch ?n2.0)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 5, template_var 0)))),
    ("PRecFun2.loc_srj_5_1",
     "nat_to_sch (c_pair 6 (c_pair ?n1.0 ?n2.0)) =
      Rec_op (nat_to_sch ?n1.0) (nat_to_sch ?n2.0)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 6, template_var 0)))),
    ("PRecFun2.loc_srj_4_1",
     "nat_to_sch (c_pair 5 (c_pair ?n1.0 ?n2.0)) =
      Pair_op (nat_to_sch ?n1.0) (nat_to_sch ?n2.0)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 6, template_var 0)))),
    ("PRecFun2.c_f_pair_to_pr",
     "[| ?f : PrimRec1; ?g : PrimRec1 |] ==> c_f_pair ?f ?g : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("PRecFun2.unary_rec_into_pr",
     "[| ?g : PrimRec1; ?h : PrimRec1 |] ==> UnaryRecOp ?g ?h : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("PRecFun2.comp_by_index_inj",
     "comp_by_index ?x1.0 ?y1.0 = comp_by_index ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0 & ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("PRecFun2.pair_by_index_inj",
     "pair_by_index ?x1.0 ?y1.0 = pair_by_index ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0 & ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("PRecFun2.rec_by_index_inj",
     "rec_by_index ?x1.0 ?y1.0 = rec_by_index ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0 & ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("PRecFun2.s1_1_inj",
     "s1_1 ?x1.0 ?y1.0 = s1_1 ?x2.0 ?y2.0 ==>
      ?x1.0 = ?x2.0 & ?y1.0 = ?y2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("PRecFun2.pr_comp1_2'",
     "[| ?f : PrimRec1'; pr_conv_2_to_1 ?g : PrimRec1' |]
      ==> pr_conv_2_to_1 (%x y. ?f (?g x y)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 0, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 0, t_empty)),
             template_hole 1)
           ))),
    ("PRecFun2.pr_comp1_3'",
     "[| ?f : PrimRec1'; pr_conv_3_to_1 ?g : PrimRec1' |]
      ==> pr_conv_3_to_1 (%x y z. ?f (?g x y z)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 0, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 0, t_empty)),
             template_hole 1)
           ))),
    ("PRecFun2.f_inc_mono",
     "ALL x. ?f x < ?f (x + 1) ==> ALL x y. x < y --> ?f x < ?f y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("PRecFun2.pr_comp2_1'",
     "[| pr_conv_2_to_1 ?f : PrimRec1'; ?g : PrimRec1'; ?h : PrimRec1' |]
      ==> (%x. ?f (?g x) (?h x)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("PRecFun2.lm'",
     "(?f1.0 : PrimRec1 --> ?f1.0 : PrimRec1') &
      (?g1.0 : PrimRec2 --> pr_conv_2_to_1 ?g1.0 : PrimRec1') &
      (?h1.0 : PrimRec3 --> pr_conv_3_to_1 ?h1.0 : PrimRec1')",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_hole 7)),
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_hole 6))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 3, template_var 1)),
                   template_hole 6))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 0, template_var 0)),
                 template_hole 6))))
         )),
    ("PRecFun2.f_mono_inj",
     "ALL x y. x < y --> ?f x < ?f y ==> ALL x y. ?f x = ?f y --> x = y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("PRecFun2.loc_srj_3",
     "[| nat_to_sch (sch_to_nat ?sch1.0) = ?sch1.0;
         nat_to_sch (sch_to_nat ?sch2.0) = ?sch2.0 |]
      ==> nat_to_sch
           (c_pair 4 (c_pair (sch_to_nat ?sch1.0) (sch_to_nat ?sch2.0))) =
          Comp_op ?sch1.0 ?sch2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1)),
          template_var 1),
        template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 5, template_var 1)),
               template_app (template_hole 5, template_var 0)))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PRecFun2.loc_srj_5",
     "[| nat_to_sch (sch_to_nat ?sch1.0) = ?sch1.0;
         nat_to_sch (sch_to_nat ?sch2.0) = ?sch2.0 |]
      ==> nat_to_sch
           (c_pair 6 (c_pair (sch_to_nat ?sch1.0) (sch_to_nat ?sch2.0))) =
          Rec_op ?sch1.0 ?sch2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)),
          template_var 1),
        template_equation
         (template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0)))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PRecFun2.loc_srj_4",
     "[| nat_to_sch (sch_to_nat ?sch1.0) = ?sch1.0;
         nat_to_sch (sch_to_nat ?sch2.0) = ?sch2.0 |]
      ==> nat_to_sch
           (c_pair 5 (c_pair (sch_to_nat ?sch1.0) (sch_to_nat ?sch2.0))) =
          Pair_op ?sch1.0 ?sch2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)),
          template_var 1),
        template_equation
         (template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0)))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PRecFun2.pr_comp2_2'",
     "[| pr_conv_2_to_1 ?f : PrimRec1'; pr_conv_2_to_1 ?g : PrimRec1';
         pr_conv_2_to_1 ?h : PrimRec1' |]
      ==> pr_conv_2_to_1 (%x y. ?f (?g x y) (?h x y)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_hole 0)
           ))),
    ("PRecFun2.pr_comp3_1'",
     "[| pr_conv_3_to_1 ?f : PrimRec1'; ?g : PrimRec1'; ?h : PrimRec1';
         ?k : PrimRec1' |]
      ==> (%x. ?f (?g x) (?h x) (?k x)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("PRecFun2.pr_comp2_3'",
     "[| pr_conv_2_to_1 ?f : PrimRec1'; pr_conv_3_to_1 ?g : PrimRec1';
         pr_conv_3_to_1 ?h : PrimRec1' |]
      ==> pr_conv_3_to_1 (%x y z. ?f (?g x y z) (?h x y z)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 0, template_var 1)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 0, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 0, t_empty)),
             template_hole 1)
           ))),
    ("PRecFun2.loc_srj_lm_2",
     "1 < ?x ==>
      nat_to_sch ?x =
      (let u = mod7 (c_fst ?x); v = c_snd ?x; v1 = c_fst v; v2 = c_snd v;
           sch1 = nat_to_sch v1
       in Let (nat_to_sch v2) (loc_f u sch1))",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 0)],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0))),
           t_empty)))),
    ("PRecFun2.loc_srj_lm_1",
     "nat_to_sch (Suc (Suc ?x)) =
      (let u = mod7 (c_fst (Suc (Suc ?x))); v = c_snd (Suc (Suc ?x));
           v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1
       in Let (nat_to_sch v2) (loc_f u sch1))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 6,
                 template_app (template_hole 6, template_var 0))))),
         t_empty))),
    ("PRecFun2.pr_comp3_2'",
     "[| pr_conv_3_to_1 ?f : PrimRec1'; pr_conv_2_to_1 ?g : PrimRec1';
         pr_conv_2_to_1 ?h : PrimRec1'; pr_conv_2_to_1 ?k : PrimRec1' |]
      ==> pr_conv_2_to_1 (%x y. ?f (?g x y) (?h x y) (?k x y)) : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 0, template_var 2)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 0, template_var 1)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 0, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 0, t_empty)),
             template_hole 1)
           ))),
    ("PRecFun2.pr_comp3_3'",
     "[| pr_conv_3_to_1 ?f : PrimRec1'; pr_conv_3_to_1 ?g : PrimRec1';
         pr_conv_3_to_1 ?h : PrimRec1'; pr_conv_3_to_1 ?k : PrimRec1' |]
      ==> pr_conv_3_to_1 (%x y z. ?f (?g x y z) (?h x y z) (?k x y z))
          : PrimRec1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_hole 0)
           )))]:
   (string * thm * template) list
### theory "Draft.PRecFun2MoreTemplates"
### 0.290s elapsed time, 0.391s cpu time, 0.000s GC time
val it = (): unit
