Loading theory "Draft.CPair" (required by "Draft.PRecFunMoreTemplates" via "Draft.PRecFun")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.143s elapsed time, 0.584s cpu time, 0.051s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.CPair"
### 0.174s elapsed time, 0.710s cpu time, 0.051s GC time
Loading theory "Draft.PRecFun" (required by "Draft.PRecFunMoreTemplates")
Found termination order: "size_list size <*mlex*> {}"
consts
  PrimRecOp ::
    "(nat => nat) => (nat => nat => nat => nat) => nat => nat => nat"
consts
  PrimRecOp_last ::
    "(nat => nat) => (nat => nat => nat => nat) => nat => nat => nat"
consts
  PrimRecOp1 :: "nat => (nat => nat => nat) => nat => nat"
### theory "HOL-Library.Set_Algebras"
### 0.245s elapsed time, 0.989s cpu time, 0.051s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "PrimRec1p", "PrimRec2p", "PrimRec3p"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.336s elapsed time, 1.341s cpu time, 0.167s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs")
### ML warning (line 31 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Value identifier (n) has not been referenced.
### ML warning (line 28 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Value identifier (t2) has not been referenced.
### ML warning (line 55 of "$AFP/Recursion-Theory-I/Utils.ML"):
### Pattern is not exhaustive.
exception BadArgument
val extract_prop_arg = fn: term -> term
val extract_trueprop_arg = fn: term -> term
val extract_set_args = fn: term -> term * term
val get_num_by_set = fn: string -> int
val remove_abs = fn: term -> term
val extract_free_from_app = fn: term -> int -> string * typ * int
val extract_free_arg = fn: term -> string * typ * int
val get_comp_by_indexes = fn: int * int -> thm
val pr_comp_tac = fn: Proof.context -> int -> tactic
val prec0_tac = fn: Proof.context -> thm list -> int -> tactic
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
### ML warning (line 439 of "$AFP/Recursion-Theory-I/PRecFun.thy"):
### Pattern is not exhaustive.
val get_if_by_index = fn: int -> thm
val if_comp_tac = fn: Proof.context -> int -> tactic
val prec_tac = fn: Proof.context -> thm list -> int -> tactic
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Draft.PRecFun"
### 1.037s elapsed time, 3.938s cpu time, 0.924s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.998s elapsed time, 3.764s cpu time, 0.924s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.091s elapsed time, 3.846s cpu time, 0.912s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.879s elapsed time, 5.268s cpu time, 1.092s GC time
Loading theory "Draft.Templates" (required by "Draft.PRecFunMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PRecFunMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.465s elapsed time, 0.506s cpu time, 0.050s GC time
Loading theory "Draft.PRecFunMoreTemplates"
val templateLemmas =
   [("PRecFun.const_is_pr", "(%x. ?n) : PrimRec1",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)
         )),
    ("PRecFun.b_least_le_arg", "b_least ?f ?x <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("PRecFun.const_is_pr_2", "(%x y. ?n) : PrimRec2",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)
         )),
    ("PRecFun.b_least2_at_zero", "b_least2 ?f ?x 0 = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("PRecFun.b_least2_le_arg", "b_least2 ?f ?x ?y <= ?y",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_var 0)),
    ("PRecFun.const_is_pr_3", "(%x y z. ?n) : PrimRec3",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)
         )),
    ("PRecFun.sgn1_zero_eq_arg_zero", "(sgn1 ?x = 0) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("PRecFun.sgn2_zero_eq_arg_zero", "(sgn2 ?x = 0) = (0 < ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("PRecFun.sgn1_nz_eq_arg_pos", "(sgn1 ?x ~= 0) = (0 < ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("PRecFun.sgn2_nz_eq_arg_pos", "(sgn2 ?x ~= 0) = (?x = 0)",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ),
       template_equation (template_var 0, template_hole 0))),
    ("PRecFun.abs_of_diff_eq", "(abs_of_diff ?x ?y = 0) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_var 0))),
    ("PRecFun.pr_conv_3_to_2_lm",
     "?f : PrimRec3 ==> pr_conv_3_to_2 ?f : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_conv_3_to_1_lm",
     "?f : PrimRec3 ==> pr_conv_3_to_1 ?f : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_conv_2_to_3_lm",
     "?f : PrimRec2 ==> pr_conv_2_to_3 ?f : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_b_least2", "?f : PrimRec2 ==> b_least2 ?f : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_hole 1)
           ))),
    ("PRecFun.pr_b_least", "?f : PrimRec2 ==> b_least ?f : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_conv_2_to_1_lm",
     "?f : PrimRec2 ==> pr_conv_2_to_1 ?f : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_conv_1_to_3_lm",
     "?f : PrimRec1 ==> pr_conv_1_to_3 ?f : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_conv_1_to_2_lm",
     "?f : PrimRec1 ==> pr_conv_1_to_2 ?f : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.sgn1_zero_impl_arg_zero", "sgn1 ?x = 0 ==> ?x = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("PRecFun.sgn2_zero_impl_arg_pos", "sgn2 ?x = 0 ==> 0 < ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_inequation (less_than, template_hole 1, template_var 0))),
    ("PRecFun.pr_rec1", "?h : PrimRec2 ==> PrimRecOp1 ?a ?h : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("PRecFun.sgn1_pos_eq_one", "0 < sgn1 ?x ==> sgn1 ?x = 1",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("PRecFun.sgn2_pos_eq_one", "0 < sgn2 ?x ==> sgn2 ?x = 1",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("PRecFun.sgn1_nz_impl_arg_pos", "sgn1 ?x ~= 0 ==> 0 < ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_inequation (less_than, template_hole 1, template_var 0))),
    ("PRecFun.sgn2_nz_impl_arg_zero", "sgn2 ?x ~= 0 ==> ?x = 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("PRecFun.pr_swap", "?f : PrimRec2 ==> (%x y. ?f y x) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.less_b_least_impl_zero",
     "?y < b_least ?f ?x ==> ?f ?x ?y = 0",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_var 1, template_var 0), template_var 2),
         template_hole 0))),
    ("PRecFun.pr_2_to_1",
     "?f : PrimRec2 ==> (%z. ?f (c_fst z) (c_snd z)) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0)
           ))),
    ("PRecFun.pr_1_to_2",
     "?f : PrimRec1 ==> (%x y. ?f (c_pair x y)) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("PRecFun.nz_impl_b_least_le", "?f ?x ?y ~= 0 ==> b_least ?f ?x <= ?y",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 2, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("PRecFun.less_b_least2_impl_zero",
     "?z < b_least2 ?f ?x ?y ==> ?f ?x ?z = 0",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_var 2, template_var 1), template_var 3),
         template_hole 0))),
    ("PRecFun.b_least2_mono",
     "?y1.0 <= ?y2.0 ==> b_least2 ?f ?x ?y1.0 <= b_least2 ?f ?x ?y2.0",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("PRecFun.nz_impl_b_least2_le",
     "?f ?x ?z ~= 0 ==> b_least2 ?f ?x ?y <= ?z",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 3, template_var 2),
                template_var 1),
              template_hole 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("PRecFun.b_least_less_impl_nz",
     "b_least ?f ?x < ?x ==> ?f ?x (b_least ?f ?x) ~= 0",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_var 1, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_rec",
     "[| ?g : PrimRec1; ?h : PrimRec3 |] ==> PrimRecOp ?g ?h : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_rec_last",
     "[| ?g : PrimRec1; ?h : PrimRec3 |]
      ==> PrimRecOp_last ?g ?h : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.pr_comp1_1",
     "[| ?f : PrimRec1; ?g : PrimRec1 |] ==> (%x. ?f (?g x)) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.b_least2_less_impl_nz",
     "b_least2 ?f ?x ?y < ?y ==> ?f ?x (b_least2 ?f ?x ?y) ~= 0",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0),
          template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_var 2, template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PRecFun.less_b_least_impl_zero2",
     "[| ?y < ?x; b_least ?f ?x = ?x |] ==> ?f ?x ?y = 0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_var 0, template_var 1), template_var 2),
         template_hole 0))),
    ("PRecFun.b_least2_aux2",
     "b_least2 ?f ?x ?y < ?y ==>
      b_least2 ?f ?x (Suc ?y) = b_least2 ?f ?x ?y",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("PRecFun.nz_impl_b_least_less",
     "[| ?y < ?x; ?f ?x ?y ~= 0 |] ==> b_least ?f ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 0, template_var 1),
                template_var 2),
              template_hole 1)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("PRecFun.less_b_least2_impl_zero2",
     "[| ?z < ?y; b_least2 ?f ?x ?y = ?y |] ==> ?f ?x ?z = 0",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0),
            template_var 2),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_var 1, template_var 0), template_var 3),
         template_hole 0))),
    ("PRecFun.pr_comp1_2",
     "[| ?f : PrimRec1; ?g : PrimRec2 |]
      ==> (%x y. ?f (?g x y)) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.b_least_less_impl_eq",
     "b_least ?f ?x < ?x ==> b_least ?f ?x = (LEAST y. ?f ?x y ~= 0)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app (template_hole 2, t_empty)))),
    ("PRecFun.nz_b_least2_impl_less",
     "[| ?z < ?y; ?f ?x ?z ~= 0 |] ==> b_least2 ?f ?x ?y < ?y",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 1, template_var 0),
                template_var 3),
              template_hole 1)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("PRecFun.b_least_aux1",
     "b_least ?f ?x = ?x | b_least ?f ?x < ?x & ?f ?x (b_least ?f ?x) ~= 0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0)),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_var 1, template_var 0),
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 0))),
                 template_hole 0))))
         )),
    ("PRecFun.pr_comp1_3",
     "[| ?f : PrimRec1; ?g : PrimRec3 |]
      ==> (%x y z. ?f (?g x y z)) : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.b_least2_less_impl_eq",
     "b_least2 ?f ?x ?y < ?y ==>
      b_least2 ?f ?x ?y = (LEAST z. ?f ?x z ~= 0)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1),
            template_var 0),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 2, t_empty)))),
    ("PRecFun.b_least2_aux1",
     "b_least2 ?f ?x ?y = ?y |
      b_least2 ?f ?x ?y < ?y & ?f ?x (b_least2 ?f ?x ?y) ~= 0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_var 2, template_var 1),
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_hole 0))))
         )),
    ("PRecFun.b_least2_aux4",
     "[| b_least2 ?f ?x ?y = ?y; ?f ?x ?y = 0 |]
      ==> b_least2 ?f ?x (Suc ?y) = Suc ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_var 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("PRecFun.b_least2_aux3",
     "[| b_least2 ?f ?x ?y = ?y; ?f ?x ?y ~= 0 |]
      ==> b_least2 ?f ?x (Suc ?y) = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("PRecFun.pr_comp2_1",
     "[| ?f : PrimRec2; ?g : PrimRec1; ?h : PrimRec1 |]
      ==> (%x. ?f (?g x) (?h x)) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.b_least_aux2",
     "[| ?y < ?x; ?f ?x ?y ~= 0 |]
      ==> b_least ?f ?x = (LEAST y. ?f ?x y ~= 0)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 0, template_var 1),
                template_var 2),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, t_empty)))),
    ("PRecFun.b_least2_less_impl_eq2",
     "[| ?z < ?y; ?f ?x ?z ~= 0 |]
      ==> b_least2 ?f ?x ?y = (LEAST z. ?f ?x z ~= 0)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 1, template_var 0),
                template_var 3),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_hole 0, t_empty)))),
    ("PRecFun.pr_comp2_2",
     "[| ?f : PrimRec2; ?g : PrimRec2; ?h : PrimRec2 |]
      ==> (%x y. ?f (?g x y) (?h x y)) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.pr_rec1_scheme",
     "[| ?h : PrimRec2; ?f 0 = ?a; ALL y. ?f (Suc y) = ?h y (?f y) |]
      ==> ?f : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_hole 6)
            ),
        template_equation
         (template_app (template_var 1, template_hole 4), template_var 0),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)
           ))),
    ("PRecFun.if_is_pr",
     "[| ?p : PrimRec1; ?q1.0 : PrimRec1; ?q2.0 : PrimRec1 |]
      ==> (%x. if ?p x = 0 then ?q1.0 x else ?q2.0 x) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 3)
           ))),
    ("PRecFun.pr_comp2_3",
     "[| ?f : PrimRec2; ?g : PrimRec3; ?h : PrimRec3 |]
      ==> (%x y z. ?f (?g x y z) (?h x y z)) : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.pr_comp3_1",
     "[| ?f : PrimRec3; ?g : PrimRec1; ?h : PrimRec1; ?k : PrimRec1 |]
      ==> (%x. ?f (?g x) (?h x) (?k x)) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.if_is_pr2",
     "[| ?p : PrimRec2; ?q1.0 : PrimRec2; ?q2.0 : PrimRec2 |]
      ==> (%x y. if ?p x y = 0 then ?q1.0 x y else ?q2.0 x y) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 3)
           ))),
    ("PRecFun.if_eq_is_pr",
     "[| ?p1.0 : PrimRec1; ?p2.0 : PrimRec1; ?q1.0 : PrimRec1;
         ?q2.0 : PrimRec1 |]
      ==> (%x. if ?p1.0 x = ?p2.0 x then ?q1.0 x else ?q2.0 x) : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 2)
           ))),
    ("PRecFun.pr_comp3_2",
     "[| ?f : PrimRec3; ?g : PrimRec2; ?h : PrimRec2; ?k : PrimRec2 |]
      ==> (%x y. ?f (?g x y) (?h x y) (?k x y)) : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.if_is_pr3",
     "[| ?p : PrimRec3; ?q1.0 : PrimRec3; ?q2.0 : PrimRec3 |]
      ==> (%x y z. if ?p x y z = 0 then ?q1.0 x y z else ?q2.0 x y z)
          : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 3)
           ))),
    ("PRecFun.pr_comp3_3",
     "[| ?f : PrimRec3; ?g : PrimRec3; ?h : PrimRec3; ?k : PrimRec3 |]
      ==> (%x y z. ?f (?g x y z) (?h x y z) (?k x y z)) : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("PRecFun.if_eq_is_pr2",
     "[| ?p1.0 : PrimRec2; ?p2.0 : PrimRec2; ?q1.0 : PrimRec2;
         ?q2.0 : PrimRec2 |]
      ==> (%x y. if ?p1.0 x y = ?p2.0 x y then ?q1.0 x y else ?q2.0 x y)
          : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 2)
           ))),
    ("PRecFun.pr_rec_last_scheme",
     "[| ?g : PrimRec1; ?h : PrimRec3; ALL x. ?f x 0 = ?g x;
         ALL x y. ?f x (Suc y) = ?h x (?f x y) y |]
      ==> ?f : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("PRecFun.pr_rec_scheme",
     "[| ?g : PrimRec1; ?h : PrimRec3; ALL x. ?f 0 x = ?g x;
         ALL x y. ?f (Suc y) x = ?h y (?f y x) x |]
      ==> ?f : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("PRecFun.if_eq_is_pr3",
     "[| ?p1.0 : PrimRec3; ?p2.0 : PrimRec3; ?q1.0 : PrimRec3;
         ?q2.0 : PrimRec3 |]
      ==> (%x y z.
              if ?p1.0 x y z = ?p2.0 x y z then ?q1.0 x y z
              else ?q2.0 x y z)
          : PrimRec3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 2)
           ))),
    ("PRecFun.b_least2_scheme",
     "[| ?f : PrimRec2; ?g : PrimRec1; ALL x. ?h x < ?g x;
         ALL x. ?f x (?h x) ~= 0; ALL z x. z < ?h x --> ?f x z = 0 |]
      ==> ?h : PrimRec1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6)
           ))),
    ("PRecFun.b_least2_scheme2",
     "[| ?f : PrimRec3; ?g : PrimRec2; ALL x y. ?h x y < ?g x y;
         ALL x y. ?f x y (?h x y) ~= 0;
         ALL z x y. z < ?h x y --> ?f x y z = 0 |]
      ==> ?h : PrimRec2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6)
           )))]:
   (string * thm * template) list
### theory "Draft.PRecFunMoreTemplates"
### 0.300s elapsed time, 0.452s cpu time, 0.067s GC time
val it = (): unit
