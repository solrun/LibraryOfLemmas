   [("PLTL.next_free_always",
     "next_free (G\<^sub>p ?\<phi>) = next_free ?\<phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PLTL.next_free_eventually",
     "next_free (F\<^sub>p ?\<phi>) = next_free ?\<phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PLTL.next_free_not",
     "next_free (not\<^sub>p ?\<phi>) = next_free ?\<phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PLTL.ltlc_next_free_iff",
     "next_free (ltlc_to_pltl ?\<phi>) = ltlc_next_free ?\<phi>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("PLTL.canonize_idempotent",
     "canonize ?A (canonize ?A ?s) = canonize ?A ?s",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("PLTL.next_free_and",
     "next_free (?\<phi> and\<^sub>p ?\<psi>) =
      (next_free ?\<phi> & next_free ?\<psi>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PLTL.next_free_or",
     "next_free (?\<phi> or\<^sub>p ?\<psi>) =
      (next_free ?\<phi> & next_free ?\<psi>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PLTL.next_free_release",
     "next_free (?\<phi> R\<^sub>p ?\<psi>) =
      (next_free ?\<phi> & next_free ?\<psi>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PLTL.next_free_strong_release",
     "next_free (?\<phi> M\<^sub>p ?\<psi>) =
      (next_free ?\<phi> & next_free ?\<psi>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PLTL.next_free_weak_until",
     "next_free (?\<phi> W\<^sub>p ?\<psi>) =
      (next_free ?\<phi> & next_free ?\<psi>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PLTL.pltl_stutter_invariant",
     "stutter_invariant ?\<phi> =
      (EX \<psi>.
          next_free \<psi> &
          atoms_pltl \<psi> <= atoms_pltl ?\<phi> &
          (ALL \<sigma>.
              \<sigma> \<Turnstile>\<^sub>p \<psi> =
              \<sigma> \<Turnstile>\<^sub>p ?\<phi>))",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty)))]
