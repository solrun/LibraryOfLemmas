Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.LaTeXsugar" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ProcessCalculi" via "Draft.Relations")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.LaTeXsugar"
### 0.066s elapsed time, 0.292s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.510s cpu time, 0.041s GC time
Loading theory "HOL-Library.OptionalSugar" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ProcessCalculi" via "Draft.Relations")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.270s elapsed time, 1.094s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.OptionalSugar"
### 0.249s elapsed time, 0.990s cpu time, 0.065s GC time
Loading theory "Draft.Relations" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ProcessCalculi")
### theory "HOL-Library.Nat_Bijection"
### 0.404s elapsed time, 1.622s cpu time, 0.107s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Relations"
### 0.159s elapsed time, 0.629s cpu time, 0.080s GC time
Loading theory "Draft.ProcessCalculi" (required by "Draft.ProcessCalculiMoreTemplates")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  nSteps :: "'proc => 'proc processCalculus => nat => 'proc => bool"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.957s elapsed time, 3.584s cpu time, 0.837s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.017s elapsed time, 3.658s cpu time, 0.828s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.ProcessCalculi"
### 1.032s elapsed time, 3.447s cpu time, 0.748s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.818s elapsed time, 5.657s cpu time, 0.982s GC time
Loading theory "Draft.Templates" (required by "Draft.ProcessCalculiMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.113s cpu time, 0.041s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ProcessCalculiMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.462s elapsed time, 0.467s cpu time, 0.000s GC time
Loading theory "Draft.ProcessCalculiMoreTemplates"
val templateLemmas =
   [("ProcessCalculi.steps_refl", "?P \<longmapsto>?Cal* ?P",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("ProcessCalculi.step_to_steps",
     "?P \<longmapsto>?Cal ?P' ==> ?P \<longmapsto>?Cal* ?P'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("ProcessCalculi.steps_add",
     "?P \<longmapsto>?Cal* ?Q & ?Q \<longmapsto>?Cal* ?R ==>
      ?P \<longmapsto>?Cal* ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("ProcessCalculi.nSteps_add",
     "ALL P Q R.
         P \<longmapsto>?Cal\<^bsup>?n1.0\<^esup> Q &
         Q \<longmapsto>?Cal\<^bsup>?n2.0\<^esup> R -->
         P \<longmapsto>?Cal\<^bsup>(?n1.0 + ?n2.0)\<^esup> R",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("ProcessCalculi.reflection_of_barbs_and_closures",
     "rel_reflects_binary_pred ?Rel (%b. hasBarb b ?CWB) ==>
      rel_reflects_binary_pred (?Rel^*) (%b. hasBarb b ?CWB)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("ProcessCalculi.reflection_of_barbs_and_closures",
     "rel_reflects_binary_pred ?Rel (%b. hasBarb b ?CWB) ==>
      rel_reflects_binary_pred (?Rel^+) (%b. hasBarb b ?CWB)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("ProcessCalculi.preservation_of_barbs_and_closures",
     "rel_preserves_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_preserves_binary_pred (?Rel^*) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("ProcessCalculi.preservation_of_barbs_and_closures",
     "rel_preserves_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_preserves_binary_pred (?Rel^+) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("ProcessCalculi.reflection_of_barbs_and_closures",
     "rel_reflects_binary_pred ?Rel (%b. hasBarb b ?CWB) ==>
      rel_reflects_binary_pred (?Rel^=) (%b. hasBarb b ?CWB)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("ProcessCalculi.preservation_of_barbs_and_closures",
     "rel_preserves_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_preserves_binary_pred (?Rel^=) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("ProcessCalculi.reflection_of_barbs_and_set_of_barbs",
     "rel_reflects_binary_pred ?Rel (%b. hasBarb b ?CWB) =
      (ALL Barbs. rel_reflects_barb_set ?Rel ?CWB Barbs)",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app (template_hole 1, t_empty))),
    ("ProcessCalculi.preservation_of_barbs_and_set_of_barbs",
     "rel_preserves_binary_pred ?Rel (%a. hasBarb a ?CWB) =
      (ALL Barbs. rel_preserves_barb_set ?Rel ?CWB Barbs)",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app (template_hole 1, t_empty))),
    ("ProcessCalculi.weak_reflection_of_barbs_and_closures",
     "rel_weakly_reflects_barbs ?Rel ?CWB ==>
      rel_weakly_reflects_barbs (?Rel^*) ?CWB",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("ProcessCalculi.weak_reflection_of_barbs_and_closures",
     "rel_weakly_reflects_barbs ?Rel ?CWB ==>
      rel_weakly_reflects_barbs (?Rel^+) ?CWB",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("ProcessCalculi.weak_preservation_of_barbs_and_closures",
     "rel_weakly_preserves_barbs ?Rel ?CWB ==>
      rel_weakly_preserves_barbs (?Rel^*) ?CWB",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("ProcessCalculi.weak_preservation_of_barbs_and_closures",
     "rel_weakly_preserves_barbs ?Rel ?CWB ==>
      rel_weakly_preserves_barbs (?Rel^+) ?CWB",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("ProcessCalculi.weak_reflection_of_barbs_and_closures",
     "rel_weakly_reflects_barbs ?Rel ?CWB ==>
      rel_weakly_reflects_barbs (?Rel^=) ?CWB",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("ProcessCalculi.weak_preservation_of_barbs_and_closures",
     "rel_weakly_preserves_barbs ?Rel ?CWB ==>
      rel_weakly_preserves_barbs (?Rel^=) ?CWB",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("ProcessCalculi.weak_reflection_of_barbs_and_set_of_barbs",
     "rel_weakly_reflects_barbs ?Rel ?CWB =
      (ALL Barbs. rel_weakly_reflects_barb_set ?Rel ?CWB Barbs)",
     template_equation
      (template_app (template_hole 11, t_empty),
       template_app (template_hole 1, t_empty))),
    ("ProcessCalculi.weak_preservation_of_barbs_and_set_of_barbs",
     "rel_weakly_preserves_barbs ?Rel ?CWB =
      (ALL Barbs. rel_weakly_preserves_barb_set ?Rel ?CWB Barbs)",
     template_equation
      (template_app (template_hole 11, t_empty),
       template_app (template_hole 1, t_empty))),
    ("ProcessCalculi.respection_of_barbs_and_closures",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_respects_binary_pred (symcl ?Rel) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("ProcessCalculi.respection_of_barbs_and_closures",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_respects_binary_pred (?Rel^*) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("ProcessCalculi.respection_of_barbs_and_closures",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_respects_binary_pred (?Rel^+) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("ProcessCalculi.respection_of_barbs_and_closures",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_respects_binary_pred (?Rel^=) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8, template_app (template_hole 7, t_empty)),
              template_app (template_hole 7, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 7, t_empty))
           ))),
    ("ProcessCalculi.respection_of_barbs_and_closures",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_respects_binary_pred (symcl (?Rel^=)) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9, template_app (template_hole 8, t_empty)),
              template_app (template_hole 8, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app (template_hole 8, t_empty))
           ))),
    ("ProcessCalculi.respection_of_barbs_and_closures",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) ==>
      rel_respects_binary_pred ((symcl (?Rel^=))^+) (%a. hasBarb a ?CWB)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10, template_app (template_hole 9, t_empty)),
              template_app (template_hole 9, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app (template_hole 9, t_empty))
           ))),
    ("ProcessCalculi.respection_of_barbs_and_set_of_barbs",
     "rel_respects_binary_pred ?Rel (%a. hasBarb a ?CWB) =
      (ALL Barbs. rel_respects_barb_set ?Rel ?CWB Barbs)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app (template_hole 7, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("ProcessCalculi.weak_respection_of_barbs_and_closures",
     "rel_weakly_respects_barbs ?Rel ?CWB ==>
      rel_weakly_respects_barbs (symcl ?Rel) ?CWB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10, template_app (template_hole 9, t_empty)),
              template_app (template_hole 9, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app (template_hole 9, t_empty))
           ))),
    ("ProcessCalculi.weak_respection_of_barbs_and_closures",
     "rel_weakly_respects_barbs ?Rel ?CWB ==>
      rel_weakly_respects_barbs (?Rel^*) ?CWB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10, template_app (template_hole 9, t_empty)),
              template_app (template_hole 9, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app (template_hole 9, t_empty))
           ))),
    ("ProcessCalculi.weak_respection_of_barbs_and_closures",
     "rel_weakly_respects_barbs ?Rel ?CWB ==>
      rel_weakly_respects_barbs (?Rel^+) ?CWB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10, template_app (template_hole 9, t_empty)),
              template_app (template_hole 9, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app (template_hole 9, t_empty))
           ))),
    ("ProcessCalculi.weak_respection_of_barbs_and_closures",
     "rel_weakly_respects_barbs ?Rel ?CWB ==>
      rel_weakly_respects_barbs (?Rel^=) ?CWB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11, template_app (template_hole 10, t_empty)),
              template_app (template_hole 10, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11, template_app (template_hole 10, t_empty)),
             template_app (template_hole 10, t_empty))
           ))),
    ("ProcessCalculi.weak_respection_of_barbs_and_closures",
     "rel_weakly_respects_barbs ?Rel ?CWB ==>
      rel_weakly_respects_barbs (symcl (?Rel^=)) ?CWB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12, template_app (template_hole 11, t_empty)),
              template_app (template_hole 11, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12, template_app (template_hole 11, t_empty)),
             template_app (template_hole 11, t_empty))
           ))),
    ("ProcessCalculi.weak_respection_of_barbs_and_closures",
     "rel_weakly_respects_barbs ?Rel ?CWB ==>
      rel_weakly_respects_barbs ((symcl (?Rel^=))^+) ?CWB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13, template_app (template_hole 12, t_empty)),
              template_app (template_hole 12, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13, template_app (template_hole 12, t_empty)),
             template_app (template_hole 12, t_empty))
           ))),
    ("ProcessCalculi.weak_respection_of_barbs_and_set_of_barbs",
     "rel_weakly_respects_barbs ?Rel ?CWB =
      (ALL Barbs. rel_weakly_respects_barb_set ?Rel ?CWB Barbs)",
     template_equation
      (template_app
        (template_app
          (template_hole 11, template_app (template_hole 10, t_empty)),
         template_app (template_hole 10, t_empty)),
       template_app (template_hole 1, t_empty)))]:
   (string * thm * template) list
### theory "Draft.ProcessCalculiMoreTemplates"
### 0.359s elapsed time, 0.489s cpu time, 0.051s GC time
val it = (): unit
