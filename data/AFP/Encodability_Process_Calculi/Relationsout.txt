Loading theory "HOL-Library.Function_Algebras" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.LaTeXsugar" (required by "Draft.RelationsMoreTemplates" via "Draft.Relations")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.LaTeXsugar"
### 0.070s elapsed time, 0.313s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.141s elapsed time, 0.585s cpu time, 0.040s GC time
Loading theory "HOL-Library.OptionalSugar" (required by "Draft.RelationsMoreTemplates" via "Draft.Relations")
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.855s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.350s elapsed time, 1.400s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.OptionalSugar"
### 0.256s elapsed time, 1.011s cpu time, 0.076s GC time
Loading theory "Draft.Relations" (required by "Draft.RelationsMoreTemplates")
### theory "Draft.Relations"
### 0.161s elapsed time, 0.631s cpu time, 0.073s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.735s elapsed time, 2.563s cpu time, 0.313s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.981s elapsed time, 2.985s cpu time, 0.784s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.918s elapsed time, 4.832s cpu time, 0.997s GC time
Loading theory "Draft.Templates" (required by "Draft.RelationsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.RelationsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.496s elapsed time, 0.554s cpu time, 0.070s GC time
Loading theory "Draft.RelationsMoreTemplates"
val templateLemmas =
   [("Equiv_Relations.equivp_evquivclp", "equivp (equivclp ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Equiv_Relations.reflp_equivclp", "reflp (equivclp ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Relations.sym_symcl", "sym (symcl ?Rel)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Equiv_Relations.symp_equivclp", "symp (equivclp ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Equiv_Relations.transp_equivclp", "transp (equivclp ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Equiv_Relations.equivclp_refl", "equivclp ?r ?x ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Equiv_Relations.equivp_rtranclp_symclp", "equivp (symclp ?r)^**",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Equiv_Relations.quotient_empty", "{} // ?r = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Equiv_Relations.rtranlcp_le_equivclp", "?r^** <= equivclp ?r",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.equivclp_conversep", "equivclp ?r^--1 = equivclp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Equiv_Relations.equivclp_symclp",
     "equivclp (symclp ?r) = equivclp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Equiv_Relations.rtranclp_equivclp", "(equivclp ?r)^** = equivclp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.symclp_equivclp",
     "symclp (equivclp ?r) = equivclp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.tranclp_equivclp", "(equivclp ?r)^++ = equivclp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.rtranclp_conversep_le_equivclp",
     "?r^--1^** <= equivclp ?r",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.symclp_rtranclp_le_equivclp",
     "symclp ?r^** <= equivclp ?r",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.equivp_implies_part_equivp",
     "equivp ?R ==> part_equivp ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Equiv_Relations.equivp_imp_transp", "equivp ?R ==> transp ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Equiv_Relations.equivp_reflp", "equivp ?R ==> ?R ?x ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_var 1, template_var 0), template_var 0)
           ))),
    ("Equiv_Relations.equivp_rtranclp", "symp ?r ==> equivp ?r^**",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Equiv_Relations.proj_image",
     "Equiv_Relations.proj ?r ` ?A = ?A // ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Equiv_Relations.equivclp_OO_equivclp_le_equivclp",
     "equivclp ?r OO equivclp ?r <= equivclp ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Relations.refl_trans_closure_subset_of_refl_symm_trans_closure",
     "?Rel^* <= (symcl (?Rel^=))^+",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Relations.symm_closure_of_symm_rel", "sym ?Rel ==> symcl ?Rel = ?Rel",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Relations.sym_reflcl_of_symm_rel", "sym ?Rel ==> sym (?Rel^=)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Relations.refl_symm_closure_is_symm_refl_closure",
     "symcl (?Rel^=) = (symcl ?Rel)^=",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Relations.refl_symm_trans_closure_is_symm_refl_trans_closure",
     "(symcl (?Rel^=))^+ = (symcl ?Rel)^*",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Equiv_Relations.quotient_is_empty2", "({} = ?A // ?r) = (?A = {})",
     template_bimplication
      (template_equation
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_equation (template_var 1, template_hole 0))),
    ("Equiv_Relations.quotient_is_empty", "(?A // ?r = {}) = (?A = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("Equiv_Relations.r_OO_conversep_into_equivclp",
     "?r^** OO ?r^--1^** <= equivclp ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Equiv_Relations.equivp_vimage2p",
     "equivp ?R ==> equivp (BNF_Def.vimage2p ?f ?f ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 0),
               template_var 1))
           ))),
    ("Relations.rtrancl_of_preorder",
     "Relations.preorder ?Rel ==> ?Rel^* = ?Rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Relations.refl_symcl_of_refl_rel",
     "refl_on ?A ?Rel ==> refl_on ?A (symcl ?Rel)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Equiv_Relations.r_into_equivclp", "?r ?x ?y ==> equivclp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Equiv_Relations.converse_r_into_equivclp",
     "?r ?y ?x ==> equivclp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Relations.reflcl_of_refl_rel", "refl ?Rel ==> ?Rel^= = ?Rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_var 0))),
    ("Equiv_Relations.equivclp_sym",
     "equivclp ?r ?x ?y ==> equivclp ?r ?y ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Equiv_Relations.rtranclp_into_equivclp",
     "?r^** ?x ?y ==> equivclp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Equiv_Relations.converse_rtranclp_into_equivclp",
     "?r^** ?y ?x ==> equivclp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Equiv_Relations.equivp_reflp_symp_transp",
     "equivp ?R = (reflp ?R & symp ?R & transp ?R)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("Equiv_Relations.Union_quotient",
     "equiv ?A ?r ==> \<Union> (?A // ?r) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Equiv_Relations.equiv_comp_eq", "equiv ?A ?r ==> ?r^-1 O ?r = ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0),
         template_var 0))),
    ("Equiv_Relations.equiv_type", "equiv ?A ?r ==> ?r <= ?A \<times> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Equiv_Relations.refl_on_comp_subset",
     "refl_on ?A ?r ==> ?r <= ?r^-1 O ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)))),
    ("Equiv_Relations.equivp_equiv",
     "equivalence ?A = equivp (%x y. (x, y) : ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Equiv_Relations.proj_preserves",
     "?x : ?A ==> Equiv_Relations.proj ?r ?x : ?A // ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Equiv_Relations.equivp_symp", "equivp ?R & ?R ?x ?y ==> ?R ?y ?x",
     template_implication
      ([template_predicate (template_app (template_hole 0, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 0), template_var 1)
           ))),
    ("Equiv_Relations.part_equivp_symp",
     "part_equivp ?R & ?R ?x ?y ==> ?R ?y ?x",
     template_implication
      ([template_predicate (template_app (template_hole 0, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 0), template_var 1)
           ))),
    ("Relations.symm_preorder_is_equivalence",
     "Relations.preorder ?Rel & sym ?Rel ==> equivalence ?Rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0)
           ))),
    ("Equiv_Relations.singleton_quotient", "{?x} // ?r = {?r `` {?x}}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_hole 0))),
    ("Relations.elem_of_symcl", "(?a, ?b) : ?Rel ==> (?a, ?b) : symcl ?Rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Relations.elem_of_symcl", "(?a, ?b) : ?Rel ==> (?b, ?a) : symcl ?Rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Equiv_Relations.part_equivp_refl_symp_transp",
     "part_equivp ?R = ((EX x. ?R x x) & symp ?R & transp ?R)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("Equiv_Relations.quotientI", "?x : ?A ==> ?r `` {?x} : ?A // ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Equiv_Relations.sym_trans_comp_subset",
     "sym ?r & trans ?r ==> ?r^-1 O ?r <= ?r",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0),
         template_var 0))),
    ("Equiv_Relations.equivpI",
     "reflp ?R & symp ?R & transp ?R ==> equivp ?R",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Equiv_Relations.in_quotient_imp_subset",
     "equiv ?A ?r & ?X : ?A // ?r ==> ?X <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("Equiv_Relations.proj_in_iff",
     "equiv ?A ?r ==> (Equiv_Relations.proj ?r ?x : ?A // ?r) = (?x : ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Equiv_Relations.finite_quotient",
     "finite ?A & ?r <= ?A \<times> ?A ==> finite (?A // ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 2, template_var 1), t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Equiv_Relations.in_quotient_imp_non_empty",
     "equiv ?A ?r & ?X : ?A // ?r ==> ?X ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Equiv_Relations.equivclp_trans",
     "equivclp ?r ?a ?b & equivclp ?r ?b ?c ==> equivclp ?r ?a ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Equiv_Relations.equivI",
     "refl_on ?A ?r & sym ?r & trans ?r ==> equiv ?A ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Equiv_Relations.congruentD",
     "?f respects ?r & (?y, ?z) : ?r ==> ?f ?y = ?f ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Equiv_Relations.equiv_class_self",
     "equiv ?A ?r & ?a : ?A ==> ?a : ?r `` {?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Equiv_Relations.comp_equivI",
     "?r^-1 O ?r = ?r & Domain ?r = ?A ==> equiv ?A ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_var 1),
          template_var 1),
        template_equation
         (template_app (template_hole 1, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Equiv_Relations.equivp_transp",
     "equivp ?R & ?R ?x ?y & ?R ?y ?z ==> ?R ?x ?z",
     template_implication
      ([template_predicate (template_app (template_hole 0, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 3, template_var 2), template_var 0)
           ))),
    ("Equiv_Relations.part_equivp_transp",
     "part_equivp ?R & ?R ?x ?y & ?R ?y ?z ==> ?R ?x ?z",
     template_implication
      ([template_predicate (template_app (template_hole 0, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 3, template_var 2), template_var 0)
           ))),
    ("Equiv_Relations.part_equivpI",
     "(EX x. ?R x x) & symp ?R & transp ?R ==> part_equivp ?R",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Equiv_Relations.equivclp_into_equivclp",
     "equivclp ?r ?a ?b & (?r ?b ?c | ?r ?c ?b) ==> equivclp ?r ?a ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_var 3, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_var 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Equiv_Relations.equivpE",
     "[| equivp ?R; reflp ?R & symp ?R & transp ?R ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_implication
         ([template_predicate
            (template_app (template_hole 2, template_var 1))],
          template_implication
           ([template_predicate
              (template_app (template_hole 1, template_var 1))],
            template_implication
             ([template_predicate
                (template_app (template_hole 0, template_var 1))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Equiv_Relations.congruent2_implies_congruent",
     "equiv ?A ?r1.0 & congruent2 ?r1.0 ?r2.0 ?f & ?a : ?A ==>
      ?f ?a respects ?r2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_var 1, template_var 0))
           ))),
    ("Equiv_Relations.part_equivp_typedef",
     "part_equivp ?R ==>
      EX d. d : _Collect c (EX x. ?R x x & c = Collect (?R x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Equiv_Relations.congruentI",
     "(!!y z. (y, z) : ?r ==> ?f y = ?f z) ==> ?f respects ?r",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Equiv_Relations.card_quotient_disjoint",
     "finite ?A & inj_on (%x. {x} // ?r) ?A ==> card (?A // ?r) = card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Equiv_Relations.finite_equiv_class",
     "finite ?A & ?r <= ?A \<times> ?A & ?X : ?A // ?r ==> finite ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 2), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate
        (template_app (template_hole 4, template_var 0)))),
    ("Equiv_Relations.equivE",
     "[| equiv ?A ?r; refl_on ?A ?r & sym ?r & trans ?r ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (template_app (template_hole 1, template_var 1))],
            template_implication
             ([template_predicate
                (template_app (template_hole 0, template_var 1))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Equiv_Relations.UN_constant_eq",
     "?a : ?A & (ALL y:?A. ?f y = ?c) ==> \<Union> (?f ` ?A) = ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_var 0))),
    ("Equiv_Relations.disjnt_equiv_class",
     "equiv ?A ?r ==> disjnt (?r `` {?a}) (?r `` {?b}) = ((?a, ?b) ~: ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("Equiv_Relations.part_equivpE",
     "[| part_equivp ?R; !!x. ?R x x & symp ?R & transp ?R ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Equiv_Relations.equiv_class_eq",
     "equiv ?A ?r & (?a, ?b) : ?r ==> ?r `` {?a} = ?r `` {?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Equiv_Relations.equiv_class_subset",
     "equiv ?A ?r & (?a, ?b) : ?r ==> ?r `` {?a} <= ?r `` {?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Equiv_Relations.equiv_class_nondisjoint",
     "equiv ?A ?r & ?x : ?r `` {?a} Int ?r `` {?b} ==> (?a, ?b) : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2))),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("Equiv_Relations.finite_refines_finite",
     "finite (?A // ?R) & ?R <= ?S & equiv ?A ?R & equiv ?A ?S ==>
      finite (?A // ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("Equiv_Relations.in_quotient_imp_in_rel",
     "equiv ?A ?r & ?X : ?A // ?r & {?x, ?y} <= ?X ==> (?x, ?y) : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("Equiv_Relations.proj_iff",
     "equiv ?A ?r & {?x, ?y} <= ?A ==>
      (Equiv_Relations.proj ?r ?x = Equiv_Relations.proj ?r ?y) =
      ((?x, ?y) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)),
          template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Equiv_Relations.quotientE",
     "[| ?X : ?A // ?r; !!x. ?X = ?r `` {x} & x : ?A ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Equiv_Relations.refines_equiv_image_eq",
     "?R <= ?S & equiv ?A ?R & equiv ?A ?S ==>
      (``) ?S ` ?A // ?R = ?A // ?S",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Equiv_Relations.congruent2D",
     "congruent2 ?r1.0 ?r2.0 ?f &
      (?y1.0, ?z1.0) : ?r1.0 & (?y2.0, ?z2.0) : ?r2.0 ==>
      ?f ?y1.0 ?y2.0 = ?f ?z1.0 ?z2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app (template_var 4, template_var 3), template_var 1),
         template_app
          (template_app (template_var 4, template_var 2),
           template_var 0)))),
    ("Equiv_Relations.in_quotient_imp_closed",
     "equiv ?A ?r & ?X : ?A // ?r & ?x : ?X & (?x, ?y) : ?r ==> ?y : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 2)
           ))),
    ("Equiv_Relations.equiv_imp_dvd_card",
     "[| finite ?A; equiv ?A ?r; !!X. X : ?A // ?r ==> ?k dvd card X |]
      ==> ?k dvd card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Equiv_Relations.UN_equiv_class",
     "equiv ?A ?r & ?f respects ?r & ?a : ?A ==>
      \<Union> (?f ` ?r `` {?a}) = ?f ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app (template_var 1, template_var 0)))),
    ("Equiv_Relations.quotient_disj",
     "equiv ?A ?r & ?X : ?A // ?r & ?Y : ?A // ?r ==>
      ?X = ?Y | ?X Int ?Y = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0))
           ))),
    ("Equiv_Relations.subset_equiv_class",
     "equiv ?A ?r & ?r `` {?b} <= ?r `` {?a} & ?b : ?A ==> (?a, ?b) : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 2)
           ))),
    ("Equiv_Relations.refines_equiv_class_eq",
     "?R <= ?S & equiv ?A ?R & equiv ?A ?S ==>
      ?R `` ?S `` {?a} = ?S `` {?a}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Equiv_Relations.refines_equiv_class_eq2",
     "?R <= ?S & equiv ?A ?R & equiv ?A ?S ==>
      ?S `` ?R `` {?a} = ?S `` {?a}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Equiv_Relations.eq_equiv_class",
     "?r `` {?a} = ?r `` {?b} & equiv ?A ?r & ?b : ?A ==> (?a, ?b) : ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)),
          template_app
           (template_app (template_hole 6, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 3)
           ))),
    ("Equiv_Relations.equiv_class_eq_iff",
     "equiv ?A ?r ==>
      ((?x, ?y) : ?r) = (?r `` {?x} = ?r `` {?y} & ?x : ?A & ?y : ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_var 2)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_hole 1))),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_hole 1)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)))
             )))),
    ("Equiv_Relations.finite_refines_card_le",
     "finite (?A // ?R) & ?R <= ?S & equiv ?A ?R & equiv ?A ?S ==>
      card (?A // ?S) <= card (?A // ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1))))),
    ("Equiv_Relations.quotient_diff1",
     "inj_on (%a. {a} // ?r) ?A & ?a : ?A ==>
      (?A - {?a}) // ?r = ?A // ?r - {?a} // ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)),
             template_var 2))))),
    ("Equiv_Relations.eq_equiv_class_iff",
     "equiv ?A ?r & ?x : ?A & ?y : ?A ==>
      (?r `` {?x} = ?r `` {?y}) = ((?x, ?y) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2))),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Equiv_Relations.eq_equiv_class_iff2",
     "equiv ?A ?r & ?x : ?A & ?y : ?A ==>
      ({?x} // ?r = {?y} // ?r) = ((?x, ?y) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Relations.reflection_and_closures",
     "rel_reflects_pred ?Rel ?Pred ==> rel_reflects_pred (?Rel^*) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Relations.reflection_and_closures",
     "rel_reflects_pred ?Rel ?Pred ==> rel_reflects_pred (?Rel^+) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Relations.preservation_and_closures",
     "rel_preserves_pred ?Rel ?Pred ==> rel_preserves_pred (?Rel^*) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Relations.preservation_and_closures",
     "rel_preserves_pred ?Rel ?Pred ==> rel_preserves_pred (?Rel^+) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Relations.reflection_and_closures",
     "rel_reflects_pred ?Rel ?Pred ==> rel_reflects_pred (?Rel^=) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Relations.preservation_and_closures",
     "rel_preserves_pred ?Rel ?Pred ==> rel_preserves_pred (?Rel^=) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Relations.symm_relation_impl_preservation_equals_reflection",
     "sym ?Rel ==>
      rel_preserves_pred ?Rel ?Pred = rel_reflects_pred ?Rel ?Pred",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Equiv_Relations.congruent2I'",
     "(!!y1 z1 y2 z2.
          (y1, z1) : ?r1.0 & (y2, z2) : ?r2.0 ==> ?f y1 y2 = ?f z1 z2) ==>
      congruent2 ?r1.0 ?r2.0 ?f",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Equiv_Relations.congruent2_implies_congruent_UN",
     "equiv ?A1.0 ?r1.0 &
      equiv ?A2.0 ?r2.0 & congruent2 ?r1.0 ?r2.0 ?f & ?a : ?A2.0 ==>
      (%x1. \<Union> (?f x1 ` ?r2.0 `` {?a})) respects ?r1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4), t_empty)
           ))),
    ("Equiv_Relations.UN_equiv_class_type",
     "[| equiv ?A ?r; ?f respects ?r; ?X : ?A // ?r;
         !!x. x : ?A ==> ?f x : ?B |]
      ==> \<Union> (?f ` ?X) : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 1))),
             template_var 0)
           ))),
    ("Equiv_Relations.quotient_eq_iff",
     "equiv ?A ?r & ?X : ?A // ?r & ?Y : ?A // ?r & ?x : ?X & ?y : ?Y ==>
      (?X = ?Y) = ((?x, ?y) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 4)))),
    ("Equiv_Relations.UN_UN_split_split_eq",
     "(UN (x1, x2):?X. UN (y1, y2):?Y. ?A x1 x2 y1 y2) =
      (UN x:?X.
          UN y:?Y.
             case x of (x1, x2) => case y of (y1, y2) => ?A x1 x2 y1 y2)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Equiv_Relations.equivclp_induct",
     "[| equivclp ?r ?a ?b; ?P ?a;
         !!y z. equivclp ?r ?a y & (?r y z | ?r z y) & ?P y ==> ?P z |]
      ==> ?P ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Equiv_Relations.converse_equivclp_induct",
     "[| equivclp ?r ?a ?b; ?P ?b;
         !!y z. (?r y z | ?r z y) & equivclp ?r z ?b & ?P z ==> ?P y |]
      ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("Equiv_Relations.quotient_eqI",
     "equiv ?A ?r &
      ?X : ?A // ?r & ?Y : ?A // ?r & ?x : ?X & ?y : ?Y & (?x, ?y) : ?r ==>
      ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 4)
            )],
       template_equation (template_var 3, template_var 2))),
    ("Equiv_Relations.sum_fun_comp",
     "finite ?S & finite ?R & ?g ` ?S <= ?R ==>
      (SUM x:?S. ?f (?g x)) =
      (SUM y:?R. card (_CollectIn x ?S (?g x = y)) * ?f y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 8, t_empty), template_var 3),
         template_app
          (template_app (template_hole 7, t_empty), template_var 2)))),
    ("Relations.reflection_of_binary_predicates_and_closures",
     "rel_reflects_binary_pred ?Rel ?Pred ==>
      rel_reflects_binary_pred (?Rel^*) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Relations.reflection_of_binary_predicates_and_closures",
     "rel_reflects_binary_pred ?Rel ?Pred ==>
      rel_reflects_binary_pred (?Rel^+) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Relations.preservation_of_binary_predicates_and_closures",
     "rel_preserves_binary_pred ?Rel ?Pred ==>
      rel_preserves_binary_pred (?Rel^*) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Relations.preservation_of_binary_predicates_and_closures",
     "rel_preserves_binary_pred ?Rel ?Pred ==>
      rel_preserves_binary_pred (?Rel^+) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Relations.reflection_of_binary_predicates_and_closures",
     "rel_reflects_binary_pred ?Rel ?Pred ==>
      rel_reflects_binary_pred (?Rel^=) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Relations.preservation_of_binary_predicates_and_closures",
     "rel_preserves_binary_pred ?Rel ?Pred ==>
      rel_preserves_binary_pred (?Rel^=) ?Pred",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Relations.symm_relation_impl_preservation_equals_reflection_of_binary_predicates",
     "sym ?Rel ==>
      rel_preserves_binary_pred ?Rel ?Pred =
      rel_reflects_binary_pred ?Rel ?Pred",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Equiv_Relations.UN_equiv_class2",
     "equiv ?A1.0 ?r1.0 &
      equiv ?A2.0 ?r2.0 &
      congruent2 ?r1.0 ?r2.0 ?f & ?a1.0 : ?A1.0 & ?a2.0 : ?A2.0 ==>
      (UN x1:?r1.0 `` {?a1.0}. \<Union> (?f x1 ` ?r2.0 `` {?a2.0})) =
      ?f ?a1.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_app
          (template_app (template_var 2, template_var 1),
           template_var 0)))),
    ("Relations.symm_relation_impl_preservation_equals_reflection",
     "sym ?Rel ==>
      rel_reflects_pred ?Rel ?Pred = rel_respects_pred ?Rel ?Pred",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty))))),
    ("Relations.symm_relation_impl_preservation_equals_reflection",
     "sym ?Rel ==>
      rel_preserves_pred ?Rel ?Pred = rel_respects_pred ?Rel ?Pred",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty))))),
    ("Equiv_Relations.congruent2_commuteI",
     "[| equiv ?A ?r; !!y z. y : ?A & z : ?A ==> ?f y z = ?f z y;
         !!y z w. w : ?A & (y, z) : ?r ==> ?f w y = ?f w z |]
      ==> ?f respects2 ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1),
             template_var 0)
           ))),
    ("Relations.symm_relation_impl_preservation_equals_reflection_of_binary_predicates",
     "sym ?Rel ==>
      rel_reflects_binary_pred ?Rel ?Pred =
      rel_respects_binary_pred ?Rel ?Pred",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 5, t_empty)),
           template_app (template_hole 5, t_empty))))),
    ("Relations.symm_relation_impl_preservation_equals_reflection_of_binary_predicates",
     "sym ?Rel ==>
      rel_preserves_binary_pred ?Rel ?Pred =
      rel_respects_binary_pred ?Rel ?Pred",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 5, t_empty)),
           template_app (template_hole 5, t_empty))))),
    ("Equiv_Relations.UN_equiv_class_type2",
     "[| equiv ?A1.0 ?r1.0; equiv ?A2.0 ?r2.0; congruent2 ?r1.0 ?r2.0 ?f;
         ?X1.0 : ?A1.0 // ?r1.0; ?X2.0 : ?A2.0 // ?r2.0;
         !!x1 x2. x1 : ?A1.0 & x2 : ?A2.0 ==> ?f x1 x2 : ?B |]
      ==> (UN x1:?X1.0. \<Union> (?f x1 ` ?X2.0)) : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_var 2))),
             template_var 0)
           ))),
    ("Relations.respection_and_closures",
     "rel_respects_pred ?Rel ?Pred ==>
      rel_respects_pred (symcl ?Rel) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Relations.respection_and_closures",
     "rel_respects_pred ?Rel ?Pred ==> rel_respects_pred (?Rel^*) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Relations.respection_and_closures",
     "rel_respects_pred ?Rel ?Pred ==> rel_respects_pred (?Rel^+) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Relations.respection_and_closures",
     "rel_respects_pred ?Rel ?Pred ==> rel_respects_pred (?Rel^=) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Equiv_Relations.congruent2I",
     "[| equiv ?A1.0 ?r1.0; equiv ?A2.0 ?r2.0;
         !!y z w. w : ?A2.0 & (y, z) : ?r1.0 ==> ?f y w = ?f z w;
         !!y z w. w : ?A1.0 & (y, z) : ?r2.0 ==> ?f w y = ?f w z |]
      ==> congruent2 ?r1.0 ?r2.0 ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Relations.respection_and_closures",
     "rel_respects_pred ?Rel ?Pred ==>
      rel_respects_pred (symcl (?Rel^=)) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("Equiv_Relations.UN_equiv_class_inject",
     "[| equiv ?A ?r; ?f respects ?r;
         \<Union> (?f ` ?X) = \<Union> (?f ` ?Y); ?X : ?A // ?r;
         ?Y : ?A // ?r;
         !!x y. x : ?A & y : ?A & ?f x = ?f y ==> (x, y) : ?r |]
      ==> ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, t_empty), template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Relations.respection_and_closures",
     "rel_respects_pred ?Rel ?Pred ==>
      rel_respects_pred ((symcl (?Rel^=))^+) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8, template_app (template_hole 7, t_empty)),
              template_app (template_hole 7, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 7, t_empty))
           ))),
    ("Relations.respection_of_binary_predicates_and_closures",
     "rel_respects_binary_pred ?Rel ?Pred ==>
      rel_respects_binary_pred (symcl ?Rel) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Relations.respection_of_binary_predicates_and_closures",
     "rel_respects_binary_pred ?Rel ?Pred ==>
      rel_respects_binary_pred (?Rel^*) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Relations.respection_of_binary_predicates_and_closures",
     "rel_respects_binary_pred ?Rel ?Pred ==>
      rel_respects_binary_pred (?Rel^+) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Relations.respection_of_binary_predicates_and_closures",
     "rel_respects_binary_pred ?Rel ?Pred ==>
      rel_respects_binary_pred (?Rel^=) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("Relations.respection_of_binary_predicates_and_closures",
     "rel_respects_binary_pred ?Rel ?Pred ==>
      rel_respects_binary_pred (symcl (?Rel^=)) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8, template_app (template_hole 7, t_empty)),
              template_app (template_hole 7, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 7, t_empty))
           ))),
    ("Relations.respection_of_binary_predicates_and_closures",
     "rel_respects_binary_pred ?Rel ?Pred ==>
      rel_respects_binary_pred ((symcl (?Rel^=))^+) ?Pred",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9, template_app (template_hole 8, t_empty)),
              template_app (template_hole 8, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app (template_hole 8, t_empty))
           ))),
    ("Relations.symm_closure_of_preorder_is_trans",
     "(ALL a b c.
          (a, b) : ?Rel & (c, b) : ?Rel & (a, c) ~: ?Rel -->
          (b, a) : ?Rel | (b, c) : ?Rel) &
      (ALL a b c.
          (a, b) : ?Rel & (a, c) : ?Rel & (b, c) ~: ?Rel -->
          (b, a) : ?Rel | (c, a) : ?Rel) &
      refl ?Rel & trans ?Rel ==>
      trans (symcl ?Rel)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.RelationsMoreTemplates"
### 0.417s elapsed time, 0.541s cpu time, 0.046s GC time
val it = (): unit
