   [("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_gauss_int_norm",
     "sum_of_2_squares_nat (gauss_int_norm ?z)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_altdef",
     "sum_of_2_squares_nat ?n = (?n : range gauss_int_norm)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_power",
     "sum_of_2_squares_nat ?m ==> sum_of_2_squares_nat (?m ^ ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_mult",
     "[| sum_of_2_squares_nat ?x; sum_of_2_squares_nat ?y |]
      ==> sum_of_2_squares_nat (?x * ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_prod_mset",
     "(!!x. x :# ?A ==> sum_of_2_squares_nat x) ==>
      sum_of_2_squares_nat (\<Prod>\<^sub># ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_prod",
     "(!!x. x : ?A ==> sum_of_2_squares_nat (?f x)) ==>
      sum_of_2_squares_nat (prod ?f ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))
           ))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_iff",
     "sum_of_2_squares_nat ?n =
      (?n = 0 |
       (\<forall>p:#prime_factorization ?n.
           [p = 3] (mod 4) --> even (multiplicity p ?n)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 0),
                 template_hole 11)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 0))),
               t_empty))
           ))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_necessary",
     "[| sum_of_2_squares_nat ?n; 0 < ?n; prime ?p; [?p = 3] (mod 4) |]
      ==> even (multiplicity ?p ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 2,
                  template_app (template_hole 2, template_hole 3))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app (template_hole 2, template_hole 3))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Gaussian_Integers_Sums_Of_Two_Squares.sum_of_2_squares_nat_sufficient",
     "[| 0 < ?n;
         !!p. [| p :# prime_factorization ?n; [p = 3] (mod 4) |]
              ==> even (multiplicity p ?n) |]
      ==> sum_of_2_squares_nat ?n",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 0),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0))))]
