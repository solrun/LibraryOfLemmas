   [("HeapImperative.heapify_heap_is_heap", "is_heap (heapify ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("HeapImperative.is_heap_of_list", "is_heap (id (hs_of_list ?i))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HeapImperative.of_list_inv", "is_heap (id (hs_of_list ?x))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HeapImperative.multiset", "multiset ?l = multiset (id ?l)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("HeapImperative.multiset_heapify",
     "multiset (heapify ?t) = multiset ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("HeapImperative.mset_list_tree",
     "multiset (of_list_tree ?l) = mset ?l",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("HeapImperative.siftDown_multiset",
     "multiset (siftDown ?t) = multiset ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("HeapImperative.as_tree_empty", "(id ?t = E) = hs_is_empty ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("HeapImperative.multiset_heapify_of_list_tree",
     "multiset (heapify (of_list_tree ?l)) = mset ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("HeapImperative.sorted_ssort", "sorted (ssort ?i)",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 0),
             template_var 0))
         )),
    ("HeapImperative.sorted", "sorted (ssort ?l)",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 0),
             template_var 0))
         )),
    ("HeapImperative.siftDown_in_tree_set",
     "in_tree ?v ?t = in_tree ?v (siftDown ?t)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HeapImperative.permutation", "mset (ssort ?l) = mset ?l",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_hole 0),
           template_var 0)),
       template_app (template_hole 4, template_var 0))),
    ("HeapImperative.ssort'_termination",
     "is_heap (id (fst ?p)) ==> ssort'_dom ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0)
           ))),
    ("HeapImperative.siftDown_in_tree",
     "?t ~= E ==> in_tree (val (siftDown ?t)) ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 0)
           ))),
    ("HeapImperative.removeLeaf_heap_is_heap",
     "[| is_heap ?t; ?t ~= E |] ==> is_heap (snd (removeLeaf ?t))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("HeapImperative.mset_ssort'",
     "is_heap (id ?l) ==> mset (ssort' ?l ?sl) = multiset ?l + mset ?sl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 5, template_var 0))))),
    ("HeapImperative.remove_max_val",
     "[| ~ hs_is_empty ?t; (?m, ?t') = hs_remove_max ?t |]
      ==> ?m = val (id ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("HeapImperative.siftDown_heap_is_heap",
     "[| is_heap ?l; is_heap ?r; ?t = T ?v ?l ?r |]
      ==> is_heap (siftDown ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1))
           ))),
    ("HeapImperative.remove_max_multiset'",
     "[| ~ hs_is_empty ?l; (?m, ?l') = hs_remove_max ?l |]
      ==> add_mset ?m (multiset ?l') = multiset ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("HeapImperative.removeLeaf_val_val",
     "[| snd (removeLeaf ?t) ~= E; ?t ~= E |]
      ==> val ?t = val (snd (removeLeaf ?t))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)))))),
    ("HeapImperative.remove_max_inv",
     "[| ~ hs_is_empty ?l; is_heap (id ?l); (?m, ?l') = hs_remove_max ?l |]
      ==> is_heap (id ?l')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_app (template_hole 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))
           ))),
    ("HeapImperative.hs_remove_max_multiset",
     "[| (?m, ?t') = hs_remove_max ?t; ?t ~= E |]
      ==> {#?m#} + multiset ?t' = multiset ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("HeapImperative.removeLeaf_multiset",
     "[| (?v', ?t') = removeLeaf ?t; ?t ~= E |]
      ==> {#?v'#} + multiset ?t' = multiset ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("HeapImperative.remove_max_max",
     "[| ~ hs_is_empty ?l; is_heap (id ?l); (?m, ?l') = hs_remove_max ?l |]
      ==> ?m = Max (HS.set ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2))))),
    ("HeapImperative.set_val_multiset",
     "?t ~= E ==>
      multiset (set_val ?t ?v') + {#val ?t#} = {#?v'#} + multiset ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app (template_hole 4, template_var 1)),
                 template_app (template_hole 3, template_var 1)))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0)),
           template_app (template_hole 6, template_var 1))))),
    ("HeapImperative.siftDown_Node",
     "?t = T ?v ?l ?r ==> EX l' v' r'. siftDown ?t = T v' l' r' & ?v <= v'",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("HeapImperative.remove_max_multiset",
     "[| ~ hs_is_empty ?l; is_heap (id ?l); (?m, ?l') = hs_remove_max ?l |]
      ==> add_mset ?m (multiset ?l') = multiset ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("HeapImperative.remove_max_multiset_size",
     "[| ~ hs_is_empty ?l; is_heap (id ?l); (?m, ?l') = hs_remove_max ?l |]
      ==> size_class.size (multiset ?l') < size_class.size (multiset ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("HeapImperative.remove_max_set",
     "[| ~ hs_is_empty ?l; is_heap (id ?l); (?m, ?l') = hs_remove_max ?l |]
      ==> HS.set ?l' Un {?m} = HS.set ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 0),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 2)))),
    ("HeapImperative.sorted_ssort'",
     "[| is_heap (id ?l);
         sorted ?sl & (ALL x:HS.set ?l. ALL y:set ?sl. x <= y) |]
      ==> sorted (ssort' ?l ?sl)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("HeapImperative.ssort'Induct",
     "[| is_heap (id ?l); ?P ?l ?sl;
         !!l sl m l'.
            [| ~ hs_is_empty l; is_heap (id l); (m, l') = hs_remove_max l;
               ?P l sl |]
            ==> ?P l' (m # sl) |]
      ==> ?P E (ssort' ?l ?sl)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 1, template_var 2), template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 1, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_hole 6),
                   template_hole 3),
                 template_var 2),
               template_var 0))
           )))]
