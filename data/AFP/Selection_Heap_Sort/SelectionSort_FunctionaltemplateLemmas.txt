   [("SelectionSort_Functional.multiset_of_list", "mset (id ?i) = mset ?i",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SelectionSort_Functional.is_empty_inj", "?e = [] ==> ?e = []",
     template_implication
      ([template_equation (template_var 0, template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("SelectionSort_Functional.is_empty_as_list",
     "?e = [] ==> mset ?e = {#}",
     template_implication
      ([template_equation (template_var 0, template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SelectionSort_Functional.remove_max_max_lemma",
     "fst (foldl f (?m, ?t) ?l) =
      Max (SelectionSort_Functional.set (?m # ?l))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("SelectionSort_Functional.max_Max_commute",
     "finite ?A ==>
      max (Max (insert ?m ?A)) ?x = max ?m (Max (insert ?x ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))))),
    ("SelectionSort_Functional.remove_max_max",
     "[| ?l ~= []; (?m, ?l') = remove_max ?l |]
      ==> ?m = Max (SelectionSort_Functional.set ?l)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2))))),
    ("SelectionSort_Functional.remove_max_mset",
     "[| ?l ~= []; (?m, ?l') = remove_max ?l |]
      ==> add_mset ?m (mset ?l') = mset ?l",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("SelectionSort_Functional.remove_max_mset_lemma",
     "(?m, ?l') = foldl f (?m', ?t') ?l ==>
      mset (?m # ?l') = mset (?m' # ?t' @ ?l)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 4), template_var 3),
          template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1)),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))))))]
