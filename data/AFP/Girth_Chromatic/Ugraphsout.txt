Loading theory "Draft.Girth_Chromatic_Misc" (required by "Draft.UgraphsTemplates" via "Draft.Ugraphs")
Loading theory "Draft.Templates" (required by "Draft.UgraphsTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.UgraphsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.233s cpu time, 0.000s GC time
### theory "Draft.Girth_Chromatic_Misc"
### 0.116s elapsed time, 0.328s cpu time, 0.000s GC time
Loading theory "Draft.Ugraphs" (required by "Draft.UgraphsTemplates")
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.361s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.UgraphsTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Ugraphs"
### 0.224s elapsed time, 0.470s cpu time, 0.058s GC time
### theory "HOL-Library.BigO"
### 0.638s elapsed time, 0.877s cpu time, 0.082s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.UgraphsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.496s elapsed time, 0.547s cpu time, 0.073s GC time
Loading theory "Draft.UgraphsTemplates"
val templateLemmas =
   [("Ugraphs.all_edges_subset_Pow", "all_edges ?A <= Pow ?A",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Ugraphs.uwalk_length_conv", "uwalk_length ?p = length ?p - 1",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Ugraphs.edges_Gu", "uedges (?G -- ?u) <= uedges ?G",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Ugraphs.\<alpha>_remove_le", "\<alpha> (?G -- ?u) <= \<alpha> ?G",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Ugraphs.distinct_edgesI", "distinct ?p ==> distinct (uwalk_edges ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Ugraphs.finite_ucycles", "finite (uverts ?G) ==> finite (ucycles ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Ugraphs.ucycles_distinct_edges",
     "?c : ucycles ?G ==> distinct (uwalk_edges ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))
           ))),
    ("Ugraphs.\<alpha>_fin",
     "finite (uverts ?G) ==> \<alpha> ?G ~= \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Ugraphs.all_edges_mono",
     "?vs <= ?ws ==> all_edges ?vs <= all_edges ?ws",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Ugraphs.verts_Gu", "uverts (?G -- ?u) = uverts ?G - {?u}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Ugraphs.zero_less_\<alpha>", "uverts ?G ~= {} ==> 0 < \<alpha> ?G",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Ugraphs.\<alpha>_le_card",
     "finite (uverts ?G) ==> \<alpha> ?G <= enat (card (uverts ?G))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 0)))))),
    ("Ugraphs.card_all_edges",
     "finite ?A ==> card (all_edges ?A) = card ?A choose 2",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Ugraphs.independent_sets_mono",
     "[| ?vs : independent_sets ?G; ?us <= ?vs |]
      ==> ?us : independent_sets ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Ugraphs.le_\<alpha>_iff",
     "0 < ?k ==>
      (enat ?k <= \<alpha> ?Gr) = (?k : card ` independent_sets ?Gr)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Ugraphs.in_mk_uedge_img",
     "(?a, ?b) : ?A | (?b, ?a) : ?A ==> {?a, ?b} : mk_uedge ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Ugraphs.chromatic_lb",
     "[| uwellformed ?G; finite (uverts ?G); uverts ?G ~= {} |]
      ==> ereal (real (card (uverts ?G))) / ereal_of_enat (\<alpha> ?G)
          <= ereal_of_enat (chromatic_number ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 11, template_var 0),
              template_hole 8)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 11, template_var 0))))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Ugraphs.card_left_less_pair",
     "finite ?A ==>
      card {(a, b). a : ?A & b : ?A & a < b} =
      card ?A * (card ?A - 1) div 2",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_equation
        (template_app
          (template_hole 13,
           template_app
            (template_hole 12, template_app (template_hole 11, t_empty))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 5, template_var 0)),
                 template_hole 3))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))))))]:
   (string * thm * template) list
### theory "Draft.UgraphsTemplates"
### 0.382s elapsed time, 0.495s cpu time, 0.000s GC time
val it = (): unit
