Loading theory "HOL-Data_Structures.Cmp" (required by "Draft.BTree_SetMoreTemplates" via "Draft.BTree_Set" via "Draft.BTree")
Loading theory "HOL-Data_Structures.Less_False" (required by "Draft.BTree_SetMoreTemplates" via "Draft.BTree_Set" via "Draft.BTree" via "HOL-Data_Structures.Sorted_Less")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "HOL-Data_Structures.Less_False"
### 0.039s elapsed time, 0.194s cpu time, 0.000s GC time
Loading theory "HOL-Data_Structures.Sorted_Less" (required by "Draft.BTree_SetMoreTemplates" via "Draft.BTree_Set" via "Draft.BTree")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Data_Structures.Sorted_Less"
### 0.068s elapsed time, 0.258s cpu time, 0.042s GC time
Loading theory "HOL-Data_Structures.List_Ins_Del" (required by "Draft.BTree_SetMoreTemplates" via "Draft.BTree_Set" via "HOL-Data_Structures.Set_Specs")
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.521s cpu time, 0.042s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Data_Structures.Cmp"
### 0.334s elapsed time, 1.345s cpu time, 0.130s GC time
Loading theory "Draft.BTree" (required by "Draft.BTree_SetMoreTemplates" via "Draft.BTree_Set")
### theory "HOL-Library.Nat_Bijection"
### 0.332s elapsed time, 1.346s cpu time, 0.130s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.211s elapsed time, 0.833s cpu time, 0.088s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Data_Structures.List_Ins_Del"
### 0.236s elapsed time, 0.929s cpu time, 0.088s GC time
Loading theory "HOL-Data_Structures.Set_Specs" (required by "Draft.BTree_SetMoreTemplates" via "Draft.BTree_Set")
locale Set
  fixes empty :: "'s"
    and insert :: "'a => 's => 's"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
  assumes "Set empty insert delete isin set invar"
locale Set_by_Ordered
  fixes empty :: "'t"
    and insert :: "'a => 't => 't"
    and delete :: "'a => 't => 't"
    and isin :: "'t => 'a => bool"
    and inorder :: "'t => 'a list"
    and inv :: "'t => bool"
  assumes "Set_by_Ordered empty insert delete isin inorder inv"
locale Set2
  fixes empty :: "'s"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
    and insert :: "'a => 's => 's"
    and union :: "'s => 's => 's"
    and inter :: "'s => 's => 's"
    and diff :: "'s => 's => 's"
  assumes "Set2 empty delete isin set invar insert union inter diff"
### theory "HOL-Data_Structures.Set_Specs"
### 0.101s elapsed time, 0.401s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  btree :: (type) height
  height_btree == height :: 'a btree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.105s elapsed time, 4.157s cpu time, 0.895s GC time
set_btree Leaf = {}
set_btree (Node ?x21.0 ?x22.0) =
(UN uu:set ?x21.0.
    \<Union> (set_btree ` Basic_BNFs.fsts uu) Un Basic_BNFs.snds uu) Un
set_btree ?x22.0
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.037s elapsed time, 3.888s cpu time, 0.857s GC time
inorder Leaf = []
inorder (Node ?ts ?t) = inorder_list ?ts @ inorder ?t
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
"[0, 1, 10, 12, 30, 100]"
  :: "nat list"
"{0, 1, 10, 12, 30, 100}"
  :: "nat set"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
"2"
  :: "nat"
Found termination order: "size <*mlex*> {}"
### theory "Draft.BTree"
### 1.439s elapsed time, 5.301s cpu time, 1.010s GC time
Loading theory "Draft.BTree_Set" (required by "Draft.BTree_SetMoreTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
locale split
  fixes
    split ::
      "('a btree * 'a) list
       => 'a => ('a btree * 'a) list * ('a btree * 'a) list"
  assumes "split split"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.058s elapsed time, 6.602s cpu time, 1.178s GC time
Loading theory "Draft.Templates" (required by "Draft.BTree_SetMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.051s elapsed time, 0.103s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.BTree_SetMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.545s elapsed time, 1.162s cpu time, 0.150s GC time
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### Missing patterns in function definition:
### !!a b v va d e. rebalance_middle_tree a b (Node v va) d e Leaf = undefined
### !!a b d e v va. rebalance_middle_tree a b Leaf d e (Node v va) = undefined
Found termination order: "{}"
Found termination order: "{}"
### Missing patterns in function definition:
### !!a. split_max a Leaf = undefined
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
NO_MATCH [] ?ys ==>
sorted_less (?xs @ ?y # ?ys) =
(sorted_less (?xs @ [?y]) & sorted_less (?y # ?ys))
sorted_less (?x # ?xs) = ((ALL y:set ?xs. ?x < y) & sorted_less ?xs)
sorted_less (?xs @ [?x]) = (sorted_less ?xs & (ALL y:set ?xs. y < ?x))
[| ?P Leaf;
   !!x1 x2.
      [| !!x1a x1aa.
            [| x1a : set x1; x1aa : Basic_BNFs.fsts x1a |] ==> ?P x1aa;
         ?P x2 |]
      ==> ?P (Node x1 x2) |]
==> ?P ?btree
[| !!k x. ?P k x Leaf;
   !!k x ts t.
      [| !!xa y. [| (xa, y) = split ts x; y = [] |] ==> ?P k x t;
         !!xa y x21 x22 xb ya.
            [| (xa, y) = split ts x; y = x21 # x22; (xb, ya) = x21;
               ya ~= x |]
            ==> ?P k x xb |]
      ==> ?P k x (Node ts t) |]
==> ?P ?a0.0 ?a1.0 ?a2.0
(?x21.0 # ?x22.0 = ?y21.0 # ?y22.0) = (?x21.0 = ?y21.0 & ?x22.0 = ?y22.0)
[] ~= ?x21.0 # ?x22.0
?x21.0 # ?x22.0 ~= []
(case [] of [] => ?f1.0 | x # xa => ?f2.0 x xa) = ?f1.0
(case ?x21.0 # ?x22.0 of [] => ?f1.0 | x # xa => ?f2.0 x xa) =
?f2.0 ?x21.0 ?x22.0
rec_list ?f1.0 ?f2.0 [] = ?f1.0
rec_list ?f1.0 ?f2.0 (?x21.0 # ?x22.0) =
?f2.0 ?x21.0 ?x22.0 (rec_list ?f1.0 ?f2.0 ?x22.0)
map ?f [] = []
map ?f (?x21.0 # ?x22.0) = ?f ?x21.0 # map ?f ?x22.0
list_all2 ?R [] []
list_all2 ?R (?x21.0 # ?x22.0) (?y21.0 # ?y22.0) =
(?R ?x21.0 ?y21.0 & list_all2 ?R ?x22.0 ?y22.0)
~ list_all2 ?R [] (?y21.0 # ?y22.0)
~ list_all2 ?R (?y21.0 # ?y22.0) []
set [] = {}
set (?x21.0 # ?x22.0) = Set.insert ?x21.0 (set ?x22.0)
*** Undefined fact: "R" (line 764 of "$AFP/BTree/BTree_Set.thy")2631R_O_IdfactRelation.R_O_IdRangeEfactRelation.RangeERangeIfactRelation.Range.RangeIRangePIfactRelation.RangePIRange_Collect_case_prodfactRelation.Range_Collect_case_prodRange_Diff_subsetfactRelation.Range_Diff_subsetRange_IdfactRelation.Range_IdRange_Id_onfactRelation.Range_Id_onRange_Int_subsetfactRelation.Range_Int_subsetRange_Un_eqfactRelation.Range_Un_eqRange_UnionfactRelation.Range_UnionRange_conversefactRelation.Range_converseRange_deffactRelation.Range_defRange_emptyfactRelation.Range_emptyRange_empty_ifffactRelation.Range_empty_iffRange_ifffactRelation.Range_iffRange_insertfactRelation.Range_insertRange_monofactRelation.Range_monoRange_rtranclfactTransitive_Closure.Range_rtranclRange_sndfactRelation.Range_sndRangepEfactRelation.RangepERangep_Range_eqfactRelation.Rangep_Range_eqRefl_Field_RestrfactBNF_Wellorder_Constructions.Refl_Field_RestrRefl_Field_Restr2factBNF_Wellorder_Constructions.Refl_Field_Restr2Refl_RestrfactBNF_Wellorder_Constructions.Refl_RestrRefl_antisym_eq_Image1_Image1_ifffactOrder_Relation.Refl_antisym_eq_Image1_Image1_iffRefl_dir_imagefactBNF_Wellorder_Constructions.Refl_dir_imageRefl_under_infactOrder_Relation.Refl_under_inRefl_under_underSfactOrder_Relation.Refl_under_underSRel_absfactTransfer.Rel_absRel_appfactTransfer.Rel_appRel_deffactTransfer.Rel_defRel_eq_reflfactTransfer.Rel_eq_reflRep_Integ_deffactInt.Rep_Integ_defRep_NatfactNat.nat.Rep_NatRep_Nat_casesfactNat.nat.Rep_Nat_casesRep_Nat_inductfactNat.nat.Rep_Nat_inductRep_Nat_injectfactNat.nat.Rep_Nat_injectRep_Nat_inversefactNat.nat.Rep_Nat_inverseRep_filterfactFilter.filter.Rep_filter
*** At command "thm" (line 764 of "$AFP/BTree/BTree_Set.thy")
sorted_less (?xs @ ?a # ?ys) ==>
del_list ?x (?xs @ ?a # ?ys) =
(if ?x < ?a then del_list ?x ?xs @ ?a # ?ys
 else ?xs @ del_list ?x (?a # ?ys))
?x ~: set ?xs ==> del_list ?x ?xs = ?xs
### theory "Draft.BTree_Set"
### 2.247s elapsed time, 3.805s cpu time, 0.461s GC time
Loading theory "Draft.BTree_SetMoreTemplates"
val templateLemmas =
   [("BTree_Set.drop_not_empty",
     "?xs ~= [] ==> drop (length ?xs div 2) ?xs ~= []",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))),
               template_var 0),
             template_hole 6)
           ))),
    ("BTree_Set.split_half_not_empty",
     "1 <= length ?xs ==>
      EX ls sub sep rs. split_half ?xs = (ls, (sub, sep) # rs)",
     template_implication
      ([template_inequation
         (less_equals, template_hole 9,
          template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty))))]:
   (string * thm * template) list
### theory "Draft.BTree_SetMoreTemplates"
### 0.320s elapsed time, 0.493s cpu time, 0.046s GC time
*** Undefined fact: "R" (line 764 of "$AFP/BTree/BTree_Set.thy")2631R_O_IdfactRelation.R_O_IdRangeEfactRelation.RangeERangeIfactRelation.Range.RangeIRangePIfactRelation.RangePIRange_Collect_case_prodfactRelation.Range_Collect_case_prodRange_Diff_subsetfactRelation.Range_Diff_subsetRange_IdfactRelation.Range_IdRange_Id_onfactRelation.Range_Id_onRange_Int_subsetfactRelation.Range_Int_subsetRange_Un_eqfactRelation.Range_Un_eqRange_UnionfactRelation.Range_UnionRange_conversefactRelation.Range_converseRange_deffactRelation.Range_defRange_emptyfactRelation.Range_emptyRange_empty_ifffactRelation.Range_empty_iffRange_ifffactRelation.Range_iffRange_insertfactRelation.Range_insertRange_monofactRelation.Range_monoRange_rtranclfactTransitive_Closure.Range_rtranclRange_sndfactRelation.Range_sndRangepEfactRelation.RangepERangep_Range_eqfactRelation.Rangep_Range_eqRefl_Field_RestrfactBNF_Wellorder_Constructions.Refl_Field_RestrRefl_Field_Restr2factBNF_Wellorder_Constructions.Refl_Field_Restr2Refl_RestrfactBNF_Wellorder_Constructions.Refl_RestrRefl_antisym_eq_Image1_Image1_ifffactOrder_Relation.Refl_antisym_eq_Image1_Image1_iffRefl_dir_imagefactBNF_Wellorder_Constructions.Refl_dir_imageRefl_under_infactOrder_Relation.Refl_under_inRefl_under_underSfactOrder_Relation.Refl_under_underSRel_absfactTransfer.Rel_absRel_appfactTransfer.Rel_appRel_deffactTransfer.Rel_defRel_eq_reflfactTransfer.Rel_eq_reflRep_Integ_deffactInt.Rep_Integ_defRep_NatfactNat.nat.Rep_NatRep_Nat_casesfactNat.nat.Rep_Nat_casesRep_Nat_inductfactNat.nat.Rep_Nat_inductRep_Nat_injectfactNat.nat.Rep_Nat_injectRep_Nat_inversefactNat.nat.Rep_Nat_inverseRep_filterfactFilter.filter.Rep_filter
*** At command "thm" (line 764 of "$AFP/BTree/BTree_Set.thy")
Exception- TOPLEVEL_ERROR raised
