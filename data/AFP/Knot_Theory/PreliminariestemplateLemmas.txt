   [("Preliminaries.abs_non_negative", "0 <= Preliminaries.abs ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.codomain_nonnegative", "0 <= codomain ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.codomain_block_nonnegative", "0 <= codomain_block ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.domain_nonnegative", "0 <= domain ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.domain_block_nonnegative", "0 <= domain_block ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.domain_block_non_negative", "0 <= domain_block ?xs",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.empty_concatenate", "?xs \<otimes> [] = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Preliminaries.codomain_wall_compose",
     "codomain_wall (?xs \<circ> ?ys) = codomain_wall ?ys",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Preliminaries.domain_wall_compose",
     "domain_wall (?xs \<circ> ?ys) = domain_wall ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Preliminaries.brickcount_zero_implies_brick_is_cup",
     "domain ?x = 0 ==> brick_is_cup ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Preliminaries.domain_zero_implies_is_cup",
     "domain_block ?x = 0 ==> is_cup ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Preliminaries.abs_zero", "Preliminaries.abs ?x = 0 ==> ?x = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Preliminaries.brickcount_zero_implies_cup",
     "domain ?x = 0 ==> ?x = cup",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("Preliminaries.codomain_additive",
     "codomain_block (?x \<otimes> ?y) =
      codomain_block ?x + codomain_block ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Preliminaries.domain_additive",
     "domain_block (?x \<otimes> ?y) = domain_block ?x + domain_block ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Preliminaries.right_associativity",
     "?x \<otimes> ?y \<otimes> ?z = ?x \<otimes> ?y \<otimes> ?z",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Preliminaries.left_associativity",
     "(?x \<otimes> ?y) \<otimes> ?z = ?x \<otimes> ?y \<otimes> ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Preliminaries.compose_rightassociativity",
     "?x \<circ> ?y \<circ> ?z = ?x \<circ> ?y \<circ> ?z",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Preliminaries.compose_leftassociativity",
     "(?x \<circ> ?y) \<circ> ?z = ?x \<circ> ?y \<circ> ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Preliminaries.abs_zero_equality",
     "Preliminaries.abs (?x - ?y) = 0 ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_hole 0)],
       template_equation (template_var 1, template_var 0))),
    ("Preliminaries.abs_non_negative_sum",
     "Preliminaries.abs ?x + Preliminaries.abs ?y = 0 ==>
      Preliminaries.abs ?x = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1)),
            template_app (template_hole 1, template_var 0)),
          template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Preliminaries.abs_non_negative_sum",
     "Preliminaries.abs ?x + Preliminaries.abs ?y = 0 ==>
      Preliminaries.abs ?y = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1)),
            template_app (template_hole 1, template_var 0)),
          template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Preliminaries.domain_zero_sum",
     "domain_block ?x + domain_block ?y = 0 ==> domain_block ?x = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1)),
            template_app (template_hole 1, template_var 0)),
          template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Preliminaries.domain_zero_sum",
     "domain_block ?x + domain_block ?y = 0 ==> domain_block ?y = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1)),
            template_app (template_hole 1, template_var 0)),
          template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Preliminaries.domain_positive",
     "0 < domain_block [?x] | 0 < domain_block ?y ==>
      0 < domain_block (?x # ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_hole 0)))),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app (template_hole 2, template_var 0)))
            )],
       template_inequation
        (less_than, template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Preliminaries.codomain_block_positive",
     "[| 0 < codomain_block ?y; ?or; 0 < codomain_block ?y |]
      ==> 0 < codomain_block (?x \<otimes> ?y)",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 2)),
        template_predicate (template_var 1),
        template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 2))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Preliminaries.domain_block_positive",
     "[| 0 < domain_block ?y; ?or; 0 < domain_block ?y |]
      ==> 0 < domain_block (?x \<otimes> ?y)",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 2)),
        template_predicate (template_var 1),
        template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 2))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)))))]
