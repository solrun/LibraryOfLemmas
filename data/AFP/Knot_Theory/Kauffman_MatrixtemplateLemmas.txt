   [("Kauffman_Matrix.blockmat_make_vert",
     "blockmat (make_vert_block ?n) = make_vert_equiv ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Kauffman_Matrix.eval_pCons", "poly (pCons (0::?'a) 1) ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Kauffman_Matrix.is_tangle_diagram_vert_block",
     "is_tangle_diagram
       (?b * basic (make_vert_block (nat (codomain_block ?b))))",
     template_predicate
      (
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0))))))
         )),
    ("Kauffman_Matrix.prop_make_vert_equiv",
     "rat_poly.row_length (make_vert_equiv ?n) = 2 ^ ?n",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Kauffman_Matrix.prop_make_vert_equiv",
     "length (make_vert_equiv ?n) = 2 ^ ?n",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Kauffman_Matrix.matrix_blockmat",
     "mat (rat_poly.row_length (blockmat ?ls)) (length (blockmat ?ls))
       (blockmat ?ls)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 1, template_var 0))
         )),
    ("Kauffman_Matrix.prop_make_vert_equiv",
     "mat (rat_poly.row_length (make_vert_equiv ?n))
       (length (make_vert_equiv ?n)) (make_vert_equiv ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 1, template_var 0))
         )),
    ("Kauffman_Matrix.link_diagram_matrix",
     "is_link_diagram ?ws ==> mat 1 1 (kauff_mat ?ws)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Kauffman_Matrix.kauff_mat_non_empty",
     "is_tangle_diagram ?ws ==> kauff_mat ?ws ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Kauffman_Matrix.row_length_domain_block",
     "rat_poly.row_length (blockmat ?ls) = 2 ^ nat (domain_block ?ls)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Kauffman_Matrix.length_codomain_block",
     "length (blockmat ?ls) = 2 ^ nat (codomain_block ?ls)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Kauffman_Matrix.make_vert_equiv_mat",
     "make_vert_equiv ?n = mat1 (2 ^ ?n)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Kauffman_Matrix.make_vert_block_map_blockmat",
     "blockmat (make_vert_block ?n) = mat1 (2 ^ ?n)",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Kauffman_Matrix.left_id_blockmat",
     "blockmat [] \<otimes> blockmat ?b = blockmat ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_hole 0)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Kauffman_Matrix.minus_left_distributivity",
     "rat_poly_times ?p (?q - ?r) =
      rat_poly_times ?p ?q - rat_poly_times ?p ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Kauffman_Matrix.minus_right_distributivity",
     "rat_poly_times (?p - ?q) ?r =
      rat_poly_times ?p ?r - rat_poly_times ?q ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Kauffman_Matrix.effective_matrix_kauff_mat",
     "is_tangle_diagram ?ws ==>
      mat (rat_poly.row_length (kauff_mat ?ws)) (length (kauff_mat ?ws))
       (kauff_mat ?ws)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0))),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Kauffman_Matrix.is_tangle_diagram_length_rowlength",
     "is_tangle_diagram (?w * ?ws) ==>
      length (blockmat ?w) = rat_poly.row_length (kauff_mat ?ws)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Kauffman_Matrix.blockmat_tensor_distrib",
     "blockmat (?a \<otimes> ?b) = blockmat ?a \<otimes> blockmat ?b",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Kauffman_Matrix.effective_matrix_kauff_mat",
     "is_tangle_diagram ?ws ==>
      rat_poly.row_length (kauff_mat ?ws) = 2 ^ nat (domain_wall ?ws)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Kauffman_Matrix.effective_matrix_kauff_mat",
     "is_tangle_diagram ?ws ==>
      length (kauff_mat ?ws) = 2 ^ nat (codomain_wall ?ws)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Kauffman_Matrix.mult_inv_non_zero",
     "[| ?p ~= 0; rat_poly_times ?p ?q = 1 |] ==> ?q ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_negation
        (template_equation (template_var 0, template_hole 2)))),
    ("Kauffman_Matrix.left_mat_compose",
     "[| is_tangle_diagram ?ws; codomain_wall ?ws = 0 |]
      ==> kauff_mat ?ws = kauff_mat (?ws \<circ> basic [])",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_hole 0)))))),
    ("Kauffman_Matrix.right_mat_compose",
     "[| is_tangle_diagram ?ws; domain_wall ?ws = 0 |]
      ==> kauff_mat ?ws = kauff_mat (basic [] \<circ> ?ws)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_var 0))))),
    ("Kauffman_Matrix.equal_div_mod2",
     "(?j div ?a = ?i div ?a & ?j mod ?a = ?i mod ?a) = (?j = ?i)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ),
       template_equation (template_var 2, template_var 0))),
    ("Kauffman_Matrix.is_tangle_diagram_weak_matrix_match",
     "[| is_tangle_diagram (?w1.0 * ?ws1.0); codomain_block ?w2.0 = 0 |]
      ==> weak_matrix_match (blockmat ?w1.0) (kauff_mat ?ws1.0)
           (blockmat ?w2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Kauffman_Matrix.is_tangle_diagram_weak_matrix_match2",
     "[| is_tangle_diagram (?w2.0 * ?ws2.0); codomain_block ?w1.0 = 0 |]
      ==> weak_matrix_match2 (blockmat ?w1.0) (blockmat ?w2.0)
           (kauff_mat ?ws2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Kauffman_Matrix.nat_sum",
     "[| 0 <= ?a; 0 <= ?b |] ==> nat (?a + ?b) = nat ?a + nat ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1),
        template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Kauffman_Matrix.is_tangle_diagram_matrix_match",
     "[| is_tangle_diagram (?w1.0 * ?ws1.0);
         is_tangle_diagram (?w2.0 * ?ws2.0) |]
      ==> rat_poly.matrix_match (blockmat ?w1.0) (kauff_mat ?ws1.0)
           (blockmat ?w2.0) (kauff_mat ?ws2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_app (template_hole 0, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Kauffman_Matrix.equal_div_mod",
     "[| ?j div ?a = ?i div ?a; ?j mod ?a = ?i mod ?a |] ==> ?j = ?i",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("Kauffman_Matrix.Tensor_Invariance",
     "is_tangle_diagram ?ws1.0 & is_tangle_diagram ?ws2.0 ==>
      kauff_mat (?ws1.0 \<otimes> ?ws2.0) =
      kauff_mat ?ws1.0 \<otimes> kauff_mat ?ws2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Kauffman_Matrix.mat_mult_equiv",
     "rat_poly.matrix_mult ?m1.0 ?m2.0 = rat_poly.matrix_mult ?m1.0 ?m2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3), t_empty),
               t_empty),
             template_app (template_hole 0, template_var 1)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 1)),
           template_var 1),
         template_var 0))),
    ("Kauffman_Matrix.mat1_vert_block",
     "rat_poly.matrix_mult (blockmat ?b)
       (blockmat (make_vert_block (nat (codomain_block ?b)))) =
      blockmat ?b",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_hole 7), t_empty),
               t_empty),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0))),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))),
       template_app (template_hole 3, template_var 0))),
    ("Kauffman_Matrix.mult_if_then",
     "?v = (if ?P then 1 else 0) & ?w = (if ?Q then 1 else 0) ==>
      rat_poly_times ?v ?w = (if ?P & ?Q then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 2),
                      template_hole 2),
                    template_hole 1))),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_hole 2),
           template_hole 1)))),
    ("Kauffman_Matrix.mat1_rt_mult",
     "mat ?nr ?nc ?m1.0 ==> rat_poly.matrix_mult ?m1.0 (mat1 ?nc) = ?m1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   t_empty),
                 t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 5),
               template_hole 0),
             template_var 1)),
         template_var 0))),
    ("Kauffman_Matrix.matrix_kauff_mat",
     "is_tangle_diagram ?ws ==>
      rat_poly.row_length (kauff_mat ?ws) = 2 ^ nat (domain_wall ?ws) &
      length (kauff_mat ?ws) = 2 ^ nat (codomain_wall ?ws) &
      mat (rat_poly.row_length (kauff_mat ?ws)) (length (kauff_mat ?ws))
       (kauff_mat ?ws)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0))))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 9, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_hole 5))),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 1, template_var 0))))),
               template_app
                (template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_var 0))),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 9, template_var 0))),
                 template_app (template_hole 9, template_var 0))))
           ))),
    ("Kauffman_Matrix.tangle_compose_matrix",
     "is_tangle_diagram ?ws1.0 &
      is_tangle_diagram ?ws2.0 &
      domain_wall ?ws2.0 = codomain_wall ?ws1.0 ==>
      kauff_mat (?ws1.0 \<circ> ?ws2.0) =
      rat_poly.matrix_mult (kauff_mat ?ws1.0) (kauff_mat ?ws2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 0)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 0)),
                  template_app (template_hole 8, template_var 1))))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   t_empty),
                 t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 1))),
             template_app (template_hole 6, template_var 1)),
           template_app (template_hole 6, template_var 0))))),
    ("Kauffman_Matrix.implic",
     "[| ALL i j. ?P i j --> ?Q i j; ALL i j. ?Q i j --> ?R i j |]
      ==> ALL i j. ?P i j --> ?R i j",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Kauffman_Matrix.impl_rule",
     "[| ALL i<?m. ALL j<?n. ?P i & ?Q j; ALL i j. ?P i & ?Q j --> ?R i j |]
      ==> ALL i<?m. ALL j<?n. ?R i j",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Kauffman_Matrix.weak_distributivity1",
     "weak_matrix_match ?A1.0 ?A2.0 ?B1.0 ==>
      rat_poly.matrix_mult ?A1.0 ?A2.0 \<otimes> ?B1.0 =
      rat_poly.matrix_mult (?A1.0 \<otimes> ?B1.0) ?A2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       t_empty),
                     t_empty),
                   template_app (template_hole 0, template_var 2)),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   t_empty),
                 t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 5, t_empty),
                     template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 5, t_empty), template_var 2),
               template_var 0)),
           template_var 1)))),
    ("Kauffman_Matrix.weak_distributivity2",
     "weak_matrix_match2 ?A1.0 ?B1.0 ?B2.0 ==>
      ?A1.0 \<otimes> rat_poly.matrix_mult ?B1.0 ?B2.0 =
      rat_poly.matrix_mult (?A1.0 \<otimes> ?B1.0) ?B2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     t_empty),
                   t_empty),
                 template_app (template_hole 0, template_var 1)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   t_empty),
                 t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 5, t_empty),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 5, t_empty), template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Kauffman_Matrix.associative_rat_poly_mat",
     "[| mat (rat_poly.row_length ?m1.0) (rat_poly.row_length ?m2.0) ?m1.0;
         mat (rat_poly.row_length ?m2.0) (rat_poly.row_length ?m3.0) ?m2.0;
         mat (rat_poly.row_length ?m3.0) ?nc ?m3.0 |]
      ==> rat_poly.matrix_mult ?m1.0 (rat_poly.matrix_mult ?m2.0 ?m3.0) =
          rat_poly.matrix_mult (rat_poly.matrix_mult ?m1.0 ?m2.0) ?m3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3)),
                template_app (template_hole 5, template_var 2)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 2)),
                template_app (template_hole 5, template_var 1)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   t_empty),
                 t_empty),
               template_app (template_hole 5, template_var 3)),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     t_empty),
                   t_empty),
                 template_app (template_hole 5, template_var 2)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   t_empty),
                 t_empty),
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           t_empty),
                         t_empty),
                       template_app (template_hole 5, template_var 3)),
                     template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       t_empty),
                     t_empty),
                   template_app (template_hole 5, template_var 3)),
                 template_var 3),
               template_var 2)),
           template_var 1))))]
