   [("Tangles.is_tangle_left_compose",
     "is_tangle_diagram (?x \<circ> ?y) ==> is_tangle_diagram ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Tangles.is_tangle_right_compose",
     "is_tangle_diagram (?x \<circ> ?y) ==> is_tangle_diagram ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Tangles.converse_composition_of_tangle_diagrams",
     "is_tangle_diagram (?x \<circ> ?y) ==>
      domain_wall ?y = codomain_wall ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Tangles.comp_of_tangle_dgms",
     "[| is_tangle_diagram ?y;
         is_tangle_diagram ?x & codomain_wall ?x = domain_wall ?y |]
      ==> is_tangle_diagram (?x \<circ> ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 5, template_var 0)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0)),
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Tangles.composition_of_tangle_diagrams",
     "[| is_tangle_diagram ?x; is_tangle_diagram ?y;
         domain_wall ?y = codomain_wall ?x |]
      ==> is_tangle_diagram (?x \<circ> ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           )))]
