   [("Linkrel_Kauffman.compress_inv",
     "compress ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.compress_bottom_inv",
     "compress_bottom ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.compress_top_inv",
     "compress_top ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.framed_linkrel_inv",
     "framed_linkrel ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.framed_uncross_inv",
     "framed_uncross ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.pull_inv",
     "pull ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.pull_negpos_inv",
     "pull_negpos ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.pull_posneg_inv",
     "pull_posneg ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.rotate_inv",
     "Tangle_Moves.rotate ?w1.0 ?w2.0 ==>
      kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.rotate_downneg_inv",
     "rotate_downneg ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.rotate_downpos_inv",
     "rotate_downpos ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.rotate_topneg_inv",
     "rotate_topneg ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.rotate_toppos_inv",
     "rotate_toppos ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.slide_inv",
     "slide ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.straighten_inv",
     "straighten ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.straighten_downtop_inv",
     "straighten_downtop ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.straighten_topdown_inv",
     "straighten_topdown ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.swing_inv",
     "swing ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.swing_neg_inv",
     "swing_neg ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.swing_pos_inv",
     "swing_pos ?w1.0 ?w2.0 ==> kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.uncross_negative_flip_inv",
     "uncross_negative_flip ?w1.0 ?w2.0 ==>
      kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.uncross_positive_flip_inv",
     "uncross_positive_flip ?w1.0 ?w2.0 ==>
      kauff_mat ?w1.0 = kauff_mat ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linkrel_Kauffman.domain_make_vert_int",
     "0 <= ?n ==> domain_block (make_vert_block (nat ?n)) = ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Linkrel_Kauffman.mat1_vert_wall_right",
     "is_tangle_diagram ?b ==>
      rat_poly.matrix_mult (kauff_mat ?b)
       (blockmat (make_vert_block (nat (codomain_wall ?b)))) =
      kauff_mat ?b",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 9, template_hole 8),
                   t_empty),
                 t_empty),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0))),
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))),
         template_app (template_hole 4, template_var 0)))),
    ("Linkrel_Kauffman.mat1_vert_wall_left",
     "is_tangle_diagram ?b ==>
      rat_poly.matrix_mult
       (blockmat (make_vert_block (nat (domain_wall ?b)))) (kauff_mat ?b) =
      kauff_mat ?b",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 9, template_hole 8),
                   t_empty),
                 t_empty),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0)))))),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))))),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0))))]
