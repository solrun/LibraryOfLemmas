   [("Fun_Def_Base.termination_simp", "?m < ?n ==> ?m <= ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Fun_Def_Base.termination_simp",
     "(?m = ?n) = (nat_of_natural ?m = nat_of_natural ?n)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Fun_Def_Base.termination_simp",
     "(?x < ?xa) = (nat_of_natural ?x < nat_of_natural ?xa)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Fun_Def_Base.termination_simp",
     "(?x <= ?xa) = (nat_of_natural ?x <= nat_of_natural ?xa)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Base.finite_pre", "inj ?f ==> finite (pre ?f ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Fun_Def_Base.termination_simp", "?m <= ?n ==> ?m < Suc ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Base.natset_finite_max", "finite ?A ==> Suc (Max ?A) ~: ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))),
                 template_var 0)
               )
           ))),
    ("Fun_Def_Base.termination_simp", "?i < ?j ==> ?i < ?j + ?m",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Fun_Def_Base.termination_simp", "?i < ?j ==> ?i < ?m + ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Fun_Def_Base.termination_simp", "?i <= ?j ==> ?i <= ?j + ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Fun_Def_Base.termination_simp", "?i <= ?j ==> ?i <= ?m + ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Base.LeastI_ex", "EX x. ?P x ==> ?P (LEAST x. ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, t_empty))
           ))),
    ("Base.preImageI", "?f ?x : ?A ==> ?x : preImage ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_var 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Base.preImageE", "?x : preImage ?f ?A ==> ?f ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 1, template_var 2)),
             template_var 0)
           ))),
    ("Base.preImage_insert",
     "preImage ?f (insert ?a ?A) = pre ?f ?a Un preImage ?f ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Fun_Def_Base.termination_simp",
     "?x : set ?xs ==> length (removeAll ?x ?xs) < length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Base.finite_preImage",
     "[| finite ?A; inj ?f |] ==> finite (preImage ?f ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Base.equalOnD", "equalOn ?A ?f ?g ==> ALL x:?A. ?f x = ?g x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Fun_Def_Base.termination_simp",
     "?n ~= 0 ==> nat_of_natural ?n - Suc 0 < nat_of_natural ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Base.equalOnI", "ALL x:?A. ?f x = ?g x ==> equalOn ?A ?f ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Fun_Def_Base.termination_simp",
     "size_prod ?f ?g ?p = ?f (fst ?p) + ?g (snd ?p) + Suc 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_var 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_var 1,
               template_app (template_hole 2, template_var 0)))),
         template_app (template_hole 1, template_hole 0)))),
    ("Base.equalOn_Un",
     "equalOn (?A Un ?B) ?f ?g = (equalOn ?A ?f ?g & equalOn ?B ?f ?g)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Base.equalOn_UnD",
     "equalOn (?A Un ?B) ?f ?g ==> equalOn ?A ?f ?g & equalOn ?B ?f ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Fun_Def_Base.termination_simp",
     "[| ?x : set ?xs; ?y < ?f ?x |] ==> ?y < size_list ?f ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_var 0, template_var 3))],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Fun_Def_Base.termination_simp",
     "[| ?x : set ?xs; ?y <= ?f ?x |] ==> ?y <= size_list ?f ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 3))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Base.inj_inv_singleton",
     "[| inj ?f; ?f ?z = ?y |] ==> {x. ?f x = ?y} = {?z}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 0)],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Fun_Def_Base.termination_simp",
     "(!!x. x : set ?xs ==> ?f x <= ?g x) ==>
      size_list ?f ?xs <= size_list ?g ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2))))]
