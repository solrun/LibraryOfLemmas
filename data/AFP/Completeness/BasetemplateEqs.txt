   [("Fun_Def_Base.termination_simp",
     "(?m = ?n) = (nat_of_natural ?m = nat_of_natural ?n)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Fun_Def_Base.termination_simp",
     "(?x < ?xa) = (nat_of_natural ?x < nat_of_natural ?xa)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Fun_Def_Base.termination_simp",
     "(?x <= ?xa) = (nat_of_natural ?x <= nat_of_natural ?xa)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Base.preImage_insert",
     "preImage ?f (insert ?a ?A) = pre ?f ?a Un preImage ?f ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Fun_Def_Base.termination_simp",
     "size_prod ?f ?g ?p = ?f (fst ?p) + ?g (snd ?p) + Suc 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_var 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_var 1,
               template_app (template_hole 2, template_var 0)))),
         template_app (template_hole 1, template_hole 0)))),
    ("Base.equalOn_Un",
     "equalOn (?A Un ?B) ?f ?g = (equalOn ?A ?f ?g & equalOn ?B ?f ?g)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0))))]
