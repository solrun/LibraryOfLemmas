   [("PermutationLemmas.rem", "?x ~: set (rem ?x ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))
             )
         )),
    ("PermutationLemmas.length_rem", "length (rem ?x ?xs) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PermutationLemmas.count_eq",
     "PermutationLemmas.count ?x ?xs = multiset.count (mset ?xs) ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("PermutationLemmas.count_0",
     "(ALL x. PermutationLemmas.count x ?B = 0) = (?B = [])",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("PermutationLemmas.rem_notin", "?x ~: set ?xs ==> rem ?x ?xs = ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("PermutationLemmas.count_Suc",
     "PermutationLemmas.count ?a ?B = Suc ?m ==> ?a : set ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("PermutationLemmas.count_append",
     "PermutationLemmas.count ?a (?xs @ ?ys) =
      PermutationLemmas.count ?a ?xs + PermutationLemmas.count ?a ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("PermutationLemmas.perm_count_conv",
     "(mset ?A = mset ?B) =
      (ALL x. PermutationLemmas.count x ?A = PermutationLemmas.count x ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("PermutationLemmas.remdups_append",
     "?y : set ?ys --> remdups (?ws @ ?y # ?ys) = remdups (?ws @ ?ys)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app (template_hole 4, template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1))))
         )),
    ("PermutationLemmas.perm_count",
     "mset ?A = mset ?B ==>
      ALL x. PermutationLemmas.count x ?A = PermutationLemmas.count x ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("PermutationLemmas.count_perm",
     "ALL x. PermutationLemmas.count x ?A = PermutationLemmas.count x ?B ==>
      mset ?A = mset ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PermutationLemmas.perm_weak_filter",
     "[| ALL xs ys. mset xs = mset ys --> ?P xs = ?P ys;
         ALL x xs. ?P xs --> ?P (x # xs); ?P (filter ?Q ?xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("PermutationLemmas.perm_contr",
     "[| ALL xs ys. mset xs = mset ys --> ?P xs = ?P ys;
         ALL x xs. ?P (x # x # xs) = ?P (x # xs) |]
      ==> ?P ?xs = ?P (remdups ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("PermutationLemmas.perm_weak_filter'",
     "[| ALL xs ys. mset xs = mset ys --> ?P xs = ?P ys;
         ALL x xs. ?P xs --> ?P (x # xs) |]
      ==> ALL ys. ?P (ys @ filter ?Q ?xs) --> ?P (ys @ ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("PermutationLemmas.perm_contr'",
     "[| ALL xs ys. mset xs = mset ys --> ?P xs = ?P ys;
         ALL x xs. ?P (x # x # xs) = ?P (x # xs) |]
      ==> ALL xs. length xs = ?n --> ?P xs = ?P (remdups xs)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("PermutationLemmas.perm_weak_contr_mono",
     "[| ALL xs ys. mset xs = mset ys --> ?P xs = ?P ys;
         ALL x xs. ?P (x # x # xs) --> ?P (x # xs);
         ALL x xs. ?P xs --> ?P (x # xs); set ?x <= set ?y; ?P ?x |]
      ==> ?P ?y",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0)),
        template_predicate (template_app (template_var 2, template_var 1))],
       template_predicate
        (template_app (template_var 2, template_var 0))))]
