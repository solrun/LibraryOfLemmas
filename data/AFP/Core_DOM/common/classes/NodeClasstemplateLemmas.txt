   [("NodeClass.cast\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t\<^sub>2\<^sub>N\<^sub>o\<^sub>d\<^sub>e_inv",
     "cast (cast ?node) = Some ?node",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("NodeClass.type_wf\<^sub>N\<^sub>o\<^sub>d\<^sub>e",
     "NodeClass.type_wf ?h ==> NodeClass.type_wf ?h",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NodeClass.type_wf\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t",
     "NodeClass.type_wf ?h ==> ObjectClass.type_wf ?h",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NodeClass.node_empty",
     "(| RObject.nothing = (), RNode.nothing = (),
         ... = RNode.more ?node |) =
      ?node",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("NodeClass.cast\<^sub>N\<^sub>o\<^sub>d\<^sub>e\<^sub>2\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_inject",
     "(cast ?x = cast ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("NodeClass.get_node_ptr_simp1",
     "get ?node_ptr (put ?node_ptr ?node ?h) = Some ?node",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("NodeClass.node_ptr_kinds_commutes",
     "(cast ?node_ptr |\<in>| object_ptr_kinds ?h) =
      (?node_ptr |\<in>| node_ptr_kinds ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NodeClass.cast\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t\<^sub>2\<^sub>N\<^sub>o\<^sub>d\<^sub>e_some",
     "(cast ?obj = Some ?node) = (cast ?node = ?obj)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("NodeClass.cast\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t\<^sub>2\<^sub>N\<^sub>o\<^sub>d\<^sub>e_none",
     "(cast ?obj = None) = (\<nexists>node. cast node = ?obj)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("NodeClass.known_ptrs_preserved",
     "object_ptr_kinds ?h = object_ptr_kinds ?h' ==>
      NodeClass.known_ptrs ?h = NodeClass.known_ptrs ?h'",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NodeClass.put\<^sub>N\<^sub>o\<^sub>d\<^sub>e_ptr_in_heap",
     "put ?node_ptr ?node ?h = ?h' ==>
      ?node_ptr |\<in>| node_ptr_kinds ?h'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 0))
           ))),
    ("NodeClass.known_ptrs_known_ptr",
     "[| NodeClass.known_ptrs ?h; ?ptr |\<in>| object_ptr_kinds ?h |]
      ==> NodeClass.known_ptr ?ptr",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NodeClass.known_ptrs_subset",
     "[| object_ptr_kinds ?h' |\<subseteq>| object_ptr_kinds ?h;
         NodeClass.known_ptrs ?h |]
      ==> NodeClass.known_ptrs ?h'",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("NodeClass.node_ptr_kinds_simp",
     "node_ptr_kinds (Heap (fmupd (cast ?node_ptr) ?node (the_heap ?h))) =
      {|?node_ptr|} |\<union>| node_ptr_kinds ?h",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_var 1),
             template_app (template_hole 3, template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app (template_hole 7, template_var 0)))),
    ("NodeClass.get\<^sub>N\<^sub>o\<^sub>d\<^sub>e_type_wf",
     "NodeClass.type_wf ?h ==>
      (?node_ptr |\<in>| node_ptr_kinds ?h) = (get ?node_ptr ?h ~= None)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 1))
              )],
         template_negation
          (
             template_equation
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1),
               template_hole 0)
             )))),
    ("NodeClass.get\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_type_wf",
     "NodeClass.type_wf ?h ==>
      (?object_ptr |\<in>| object_ptr_kinds ?h) =
      (get ?object_ptr ?h ~= None)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 1))
              )],
         template_negation
          (
             template_equation
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1),
               template_hole 0)
             )))),
    ("NodeClass.get_node_ptr_simp2",
     "?node_ptr ~= ?node_ptr' ==>
      get ?node_ptr (put ?node_ptr' ?node ?h) = get ?node_ptr ?h",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0)))),
    ("NodeClass.put\<^sub>N\<^sub>o\<^sub>d\<^sub>e_put_ptrs",
     "put ?node_ptr ?node ?h = ?h' ==>
      object_ptr_kinds ?h' =
      object_ptr_kinds ?h |\<union>| {|cast ?node_ptr|}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3)),
             template_hole 0))))),
    ("NodeClass.known_ptrs_new_ptr",
     "[| object_ptr_kinds ?h' = object_ptr_kinds ?h |\<union>| {|?new_ptr|};
         NodeClass.known_ptr ?new_ptr; NodeClass.known_ptrs ?h |]
      ==> NodeClass.known_ptrs ?h'",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3))),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 2))))]
