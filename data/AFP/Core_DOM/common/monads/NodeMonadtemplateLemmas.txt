   [("NodeMonad.ptr_kinds_M_ok", "?h \<turnstile> ok node_ptr_kinds_M",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("NodeMonad.ptr_kinds_M_pure", "pure node_ptr_kinds_M ?h",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("NodeMonad.get_M_pure", "pure (get_M ?ptr ?getter) ?h",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)
         )),
    ("NodeMonad.ptr_kinds_M_ptr_kinds",
     "?h \<turnstile> node_ptr_kinds_M \<rightarrow>\<^sub>r ?xa =
      (?xa = sorted_list_of_set (fset (node_ptr_kinds ?h)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("NodeMonad.get_M_ptr_in_heap",
     "?h \<turnstile> ok get_M ?ptr ?getter ==>
      ?ptr |\<in>| node_ptr_kinds ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("NodeMonad.get_M\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_ptr_in_heap",
     "?h \<turnstile> ok get_M ?ptr ?getter ==>
      ?ptr |\<in>| object_ptr_kinds ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("NodeMonad.ptr_kinds_ptr_kinds_M",
     "(?ptr : set |?h \<turnstile> node_ptr_kinds_M|\<^sub>r) =
      (?ptr |\<in>| node_ptr_kinds ?h)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NodeMonad.put_M_ptr_in_heap",
     "?h \<turnstile> ok put_M ?ptr ?setter ?v ==>
      ?ptr |\<in>| node_ptr_kinds ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 3))
           ))),
    ("NodeMonad.put_M\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_ptr_in_heap",
     "?h \<turnstile> ok put_M ?ptr ?setter ?v ==>
      ?ptr |\<in>| object_ptr_kinds ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 3))
           ))),
    ("NodeMonad.node_ptr_kinds_M_reads",
     "reads (UN object_ptr. {preserved (get_M object_ptr RObject.nothing)})
       node_ptr_kinds_M ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_hole 1))),
               template_hole 0),
             template_var 1),
           template_var 0)
         )),
    ("NodeMonad.ptr_kinds_M_ptr_kinds_returns_heap",
     "?h \<turnstile> node_ptr_kinds_M >>= ?f \<rightarrow>\<^sub>h ?h' =
      ?h \<turnstile> ?f (sorted_list_of_set (fset (node_ptr_kinds ?h)))
      \<rightarrow>\<^sub>h ?h'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_var 1,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))))),
         template_var 0))),
    ("NodeMonad.ptr_kinds_M_ptr_kinds_returns_result",
     "?h \<turnstile> node_ptr_kinds_M >>= ?f \<rightarrow>\<^sub>r ?x =
      ?h \<turnstile> ?f (sorted_list_of_set (fset (node_ptr_kinds ?h)))
      \<rightarrow>\<^sub>r ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_var 1,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))))),
         template_var 0))),
    ("NodeMonad.node_ptr_kinds_small",
     "(!!object_ptr.
          preserved (get_M object_ptr RObject.nothing) ?h ?h') ==>
      node_ptr_kinds ?h = node_ptr_kinds ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NodeMonad.get_M_ok",
     "[| NodeClass.type_wf ?h; ?ptr |\<in>| node_ptr_kinds ?h |]
      ==> ?h \<turnstile> ok get_M ?ptr ?getter",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NodeMonad.get_M\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_ok",
     "[| NodeClass.type_wf ?h; ?ptr |\<in>| object_ptr_kinds ?h |]
      ==> ?h \<turnstile> ok get_M ?ptr ?getter",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NodeMonad.put_M_ok",
     "[| NodeClass.type_wf ?h; ?ptr |\<in>| node_ptr_kinds ?h |]
      ==> ?h \<turnstile> ok put_M ?ptr ?setter ?v",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("NodeMonad.put_M\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_ok",
     "[| NodeClass.type_wf ?h; ?ptr |\<in>| object_ptr_kinds ?h |]
      ==> ?h \<turnstile> ok put_M ?ptr ?setter ?v",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("NodeMonad.type_wf_put_ptr_not_in_heap_E",
     "[| NodeClass.type_wf (put ?ptr ?obj ?h);
         ?ptr |\<notin>| object_ptr_kinds ?h |]
      ==> NodeClass.type_wf ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 0, template_var 0))
                )
            )],
       template_predicate
        (template_app (template_hole 4, template_var 0)))),
    ("NodeMonad.get_node_ptr_simp",
     "get ?node_ptr (put ?ptr ?obj ?h) =
      (if ?ptr = cast ?node_ptr then cast ?obj else get ?node_ptr ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app (template_hole 1, template_var 3))),
               template_app (template_hole 0, template_var 1)),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 0))
           ))),
    ("NodeMonad.node_ptr_kinds_simp",
     "node_ptr_kinds (put ?ptr ?obj ?h) =
      node_ptr_kinds ?h |\<union>|
      (if is_node_ptr_kind ?ptr then {|the (cast ?ptr)|} else {||})",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2))),
               template_hole 0)),
           template_hole 0)))),
    ("NodeMonad.node_ptr_kinds_M_eq",
     "|?h \<turnstile> object_ptr_kinds_M|\<^sub>r =
      |?h' \<turnstile> object_ptr_kinds_M|\<^sub>r ==>
      |?h \<turnstile> node_ptr_kinds_M|\<^sub>r =
      |?h' \<turnstile> node_ptr_kinds_M|\<^sub>r",
     template_implication
      ([template_equation
         (template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7)))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("NodeMonad.get_M_Object_preserved2",
     "[| cast ?node_ptr ~= ?object_ptr;
         ?h \<turnstile> put_M ?node_ptr ?setter ?v
         \<rightarrow>\<^sub>h ?h' |]
      ==> preserved (get_M ?object_ptr ?getter) ?h ?h'",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 6),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0)),
               template_var 4),
             template_var 1)
           ))),
    ("NodeMonad.get_M_Object_preserved4",
     "[| cast ?node_ptr ~= ?object_ptr;
         ?h \<turnstile> put_M ?object_ptr ?setter ?v
         \<rightarrow>\<^sub>h ?h' |]
      ==> preserved (get_M ?node_ptr ?getter) ?h ?h'",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0)),
               template_var 4),
             template_var 1)
           ))),
    ("NodeMonad.type_wf_put_I",
     "[| NodeClass.type_wf ?h; ObjectClass.type_wf (put ?ptr ?obj ?h);
         is_node_ptr_kind ?ptr ==> is_node_kind ?obj |]
      ==> NodeClass.type_wf (put ?ptr ?obj ?h)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0),
                template_var 2))
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 1))],
          template_predicate
           (template_app (template_hole 0, template_var 0)))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("NodeMonad.type_wf_preserved_small",
     "[| !!object_ptr. preserved (get_M object_ptr RObject.nothing) ?h ?h';
         !!node_ptr. preserved (get_M node_ptr RNode.nothing) ?h ?h' |]
      ==> NodeClass.type_wf ?h = NodeClass.type_wf ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NodeMonad.get_M_Object_preserved3",
     "[| ?h \<turnstile> put_M ?node_ptr ?setter ?v
         \<rightarrow>\<^sub>h ?h';
         !!x. ?getter (cast (?setter (%_. ?v) x)) = ?getter (cast x) |]
      ==> preserved (get_M ?object_ptr ?getter) ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 6),
             template_var 2)
           ))),
    ("NodeMonad.get_M_Object_preserved1",
     "[| !!x. ?getter (cast (?setter (%_. ?v) x)) = ?getter (cast x);
         ?h \<turnstile> put_M ?node_ptr ?setter ?v
         \<rightarrow>\<^sub>h ?h' |]
      ==> preserved (get_M ?object_ptr ?getter) ?h ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 5),
                  template_var 4)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 6)),
               template_var 3),
             template_var 1)
           ))),
    ("NodeMonad.type_wf_put_ptr_in_heap_E",
     "[| NodeClass.type_wf (put ?ptr ?obj ?h);
         ?ptr |\<in>| object_ptr_kinds ?h; ObjectClass.type_wf ?h;
         is_node_ptr_kind ?ptr ==> is_node_kind (the (get ?ptr ?h)) |]
      ==> NodeClass.type_wf ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 0))
            ),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 2))],
          template_predicate
           (
              template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 0)))
              ))],
       template_predicate
        (template_app (template_hole 8, template_var 0)))),
    ("NodeMonad.node_ptr_kinds_preserved",
     "[| writes ?SW ?setter ?h ?h';
         ?h \<turnstile> ?setter \<rightarrow>\<^sub>h ?h';
         !!h h'.
            ALL w:?SW.
               h \<turnstile> w \<rightarrow>\<^sub>h h' -->
               (ALL object_ptr.
                   preserved (get_M object_ptr RObject.nothing) h h') |]
      ==> node_ptr_kinds ?h = node_ptr_kinds ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NodeMonad.type_wf_preserved",
     "[| writes ?SW ?setter ?h ?h';
         ?h \<turnstile> ?setter \<rightarrow>\<^sub>h ?h';
         !!h h' w.
            [| w : ?SW; h \<turnstile> w \<rightarrow>\<^sub>h h' |]
            ==> ALL object_ptr.
                   preserved (get_M object_ptr RObject.nothing) h h';
         !!h h' w.
            [| w : ?SW; h \<turnstile> w \<rightarrow>\<^sub>h h' |]
            ==> ALL node_ptr.
                   preserved (get_M node_ptr RNode.nothing) h h' |]
      ==> NodeClass.type_wf ?h = NodeClass.type_wf ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0))))]
