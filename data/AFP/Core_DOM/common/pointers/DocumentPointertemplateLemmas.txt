   [("DocumentPointer.is_document_ptr_ref",
     "is_document_ptr (document_ptr.Ref ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("DocumentPointer.document_ptr_document_ptr_cast",
     "is_document_ptr_kind (cast ?document_ptr)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("DocumentPointer.document_ptr_no_node_ptr_cast",
     "~ is_document_ptr_kind (cast ?node_ptr)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("DocumentPointer.node_ptr_no_document_ptr_cast",
     "~ is_node_ptr_kind (cast ?document_ptr)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("DocumentPointer.cast_document_ptr_not_node_ptr",
     "cast ?document_ptr ~= cast ?node_ptr",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("DocumentPointer.cast_document_ptr_not_node_ptr",
     "cast ?node_ptr ~= cast ?document_ptr",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("DocumentPointer.document_ptr_casts_commute2",
     "cast (cast ?document_ptr) = Some ?document_ptr",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("DocumentPointer.cast\<^sub>o\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t\<^sub>_\<^sub>p\<^sub>t\<^sub>r\<^sub>2\<^sub>d\<^sub>o\<^sub>c\<^sub>u\<^sub>m\<^sub>e\<^sub>n\<^sub>t\<^sub>_\<^sub>p\<^sub>t\<^sub>r_ext_none",
     "cast (object_ptr.Ext (Inr (Inr (Inr ?object_ext_ptr)))) = None",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))))),
       template_hole 0)),
    ("DocumentPointer.cast\<^sub>d\<^sub>o\<^sub>c\<^sub>u\<^sub>m\<^sub>e\<^sub>n\<^sub>t\<^sub>_\<^sub>p\<^sub>t\<^sub>r\<^sub>2\<^sub>o\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t\<^sub>_\<^sub>p\<^sub>t\<^sub>r_inject",
     "(cast ?x = cast ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("DocumentPointer.is_document_ptr_kind_none",
     "~ is_document_ptr_kind ?ptr ==> cast ?ptr = None",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("DocumentPointer.document_ptr_casts_commute",
     "(cast ?ptr = Some ?document_ptr) = (cast ?document_ptr = ?ptr)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("DocumentPointer.document_ptr_casts_commute3",
     "is_document_ptr_kind ?ptr ==> cast (the (cast ?ptr)) = ?ptr",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("DocumentPointer.is_document_ptr_kind_not_element_ptr_kind",
     "is_document_ptr_kind ?ptr ==>
      ~ (case cast ?ptr of None => False
         | Some node_ptr => is_element_ptr_kind node_ptr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   t_empty),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("DocumentPointer.is_document_ptr_kind_obtains",
     "[| is_document_ptr_kind ?ptr;
         !!document_ptr. ?ptr = cast document_ptr ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]
