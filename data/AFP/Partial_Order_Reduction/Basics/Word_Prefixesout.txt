Loading theory "Draft.List_Extensions" (required by "Draft.Word_PrefixesTemplates" via "Draft.Word_Prefixes")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Word_PrefixesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Word_PrefixesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.List_Prefixes" (required by "Draft.Word_PrefixesTemplates" via "Draft.Word_Prefixes")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
### theory "Draft.List_Prefixes"
### 0.050s elapsed time, 0.227s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Word_PrefixesTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "Draft.List_Extensions"
### 0.068s elapsed time, 0.296s cpu time, 0.000s GC time
Loading theory "Draft.Word_Prefixes" (required by "Draft.Word_PrefixesTemplates")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.171s elapsed time, 0.675s cpu time, 0.056s GC time
### theory "HOL-Library.Set_Algebras"
### 0.247s elapsed time, 0.903s cpu time, 0.056s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Word_PrefixesTemplates" via "Draft.ExtrEqs")
### theory "Draft.Word_Prefixes"
### 0.385s elapsed time, 1.224s cpu time, 0.137s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.670s elapsed time, 1.584s cpu time, 0.224s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.697s elapsed time, 3.450s cpu time, 0.769s GC time
Loading theory "Draft.Templates" (required by "Draft.Word_PrefixesTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.079s elapsed time, 0.132s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Word_PrefixesTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.461s elapsed time, 0.468s cpu time, 0.000s GC time
Loading theory "Draft.Word_PrefixesTemplates"
val templateLemmas =
   [("Word_Prefixes.prefix_fininfI_empty", "[] \<le>\<^sub>F\<^sub>I ?w",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Word_Prefixes.prefix_fininf_conc",
     "?u \<le>\<^sub>F\<^sub>I ?u @- ?v",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Word_Prefixes.prefix_fininf_prefix",
     "stake ?k ?w \<le>\<^sub>F\<^sub>I ?w",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Word_Prefixes.chainD_mono", "chain ?w ==> incseq ?w",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Word_Prefixes.chain_prefix_limit",
     "chain ?w ==> ?w ?k \<le>\<^sub>F\<^sub>I limit ?w",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Word_Prefixes.prefix_fininf_set_range",
     "?u \<le>\<^sub>F\<^sub>I ?v ==> set ?u <= sset ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Word_Prefixes.prefix_fininfI",
     "?u @- ?w = ?v ==> ?u \<le>\<^sub>F\<^sub>I ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Word_Prefixes.prefix_fininf_list",
     "(?w @ ?u \<le>\<^sub>F\<^sub>I ?w @- ?v) =
      (?u \<le>\<^sub>F\<^sub>I ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Word_Prefixes.prefix_fininf_item",
     "(?a # ?u \<le>\<^sub>F\<^sub>I ?a ## ?v) =
      (?u \<le>\<^sub>F\<^sub>I ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Word_Prefixes.prefix_fin_prefix_fininf_trans",
     "[| ?u <= ?v; ?v \<le>\<^sub>F\<^sub>I ?w |]
      ==> ?u \<le>\<^sub>F\<^sub>I ?w",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Word_Prefixes.chainI",
     "[| incseq ?w; !!k. EX l. k < length (?w l) |] ==> chain ?w",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Word_Prefixes.chainE_length",
     "[| chain ?w; !!l. ?k < length (?w l) ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Word_Prefixes.prefix_fininfI_item",
     "[| ?a = ?b; ?u \<le>\<^sub>F\<^sub>I ?v |]
      ==> ?a # ?u \<le>\<^sub>F\<^sub>I ?b ## ?v",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Word_Prefixes.prefix_fininf_absorb",
     "[| ?u \<le>\<^sub>F\<^sub>I ?v @- ?w; length ?u <= length ?v |]
      ==> ?u <= ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Word_Prefixes.prefix_fininf_extend",
     "[| ?u \<le>\<^sub>F\<^sub>I ?v @- ?w; length ?v <= length ?u |]
      ==> ?v <= ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 2))],
       template_inequation (less_equals, template_var 1, template_var 2))),
    ("Word_Prefixes.prefix_finE_nth",
     "[| ?u <= ?v; ?i < length ?u |] ==> ?u ! ?i = ?v ! ?i",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Word_Prefixes.prefix_fininfE",
     "[| ?u \<le>\<^sub>F\<^sub>I ?v; !!w. ?v = ?u @- w ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Word_Prefixes.prefix_fininfI_nth",
     "(!!i. i < length ?u ==> ?u ! i = ?w !! i) ==>
      ?u \<le>\<^sub>F\<^sub>I ?w",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Word_Prefixes.prefix_fininf_length",
     "[| ?u \<le>\<^sub>F\<^sub>I ?w; ?v \<le>\<^sub>F\<^sub>I ?w;
         length ?u <= length ?v |]
      ==> ?u <= ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Word_Prefixes.prefix_fininfE_item",
     "[| ?a # ?u \<le>\<^sub>F\<^sub>I ?b ## ?v;
         [| ?a = ?b; ?u \<le>\<^sub>F\<^sub>I ?v |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Word_Prefixes.prefix_fininf_append",
     "[| ?u \<le>\<^sub>F\<^sub>I ?v @- ?w; ?u <= ?v ==> ?thesis;
         !!z. [| ?u = ?v @ z; z \<le>\<^sub>F\<^sub>I ?w |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_inequation
            (less_equals, template_var 3, template_var 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Word_Prefixes.chain_construct_1",
     "[| ?P 0 ?x\<^sub>0;
         !!k x. ?P k x ==> EX x'. ?P (Suc k) x' & ?f x <= ?f x';
         !!k x. ?P k x ==> k <= length (?f x);
         !!Q. [| !!k. ?P k (Q k); chain (?f o Q) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_hole 11),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Word_Prefixes.chain_construct_2",
     "[| ?P 0 ?x\<^sub>0;
         !!k x.
            ?P k x ==> EX x'. ?P (Suc k) x' & ?f x <= ?f x' & ?g x <= ?g x';
         !!k x. ?P k x ==> k <= length (?f x);
         !!k x. ?P k x ==> k <= length (?g x);
         !!Q. [| !!k. ?P k (Q k); chain (?f o Q); chain (?g o Q) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_hole 15),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Word_Prefixes.chain_construct_2'",
     "[| ?P 0 ?u\<^sub>0 ?v\<^sub>0;
         !!k u v.
            ?P k u v ==> EX u' v'. ?P (Suc k) u' v' & u <= u' & v <= v';
         !!k u v. ?P k u v ==> k <= length u;
         !!k u v. ?P k u v ==> k <= length v;
         !!u v. [| !!k. ?P k (u k) (v k); chain u; chain v |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 3, template_hole 16),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Word_PrefixesTemplates"
### 0.367s elapsed time, 0.512s cpu time, 0.074s GC time
val it = (): unit
