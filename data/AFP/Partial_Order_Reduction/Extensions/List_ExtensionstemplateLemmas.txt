   [("List_Extensions.singleton_hd_last",
     "length ?xs = 1 ==> hd ?xs = last ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("List_Extensions.map_plus",
     "map ((+) ?n) [?i..<?j] = [?i + ?n..<?j + ?n]",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("List_Extensions.hd_drop",
     "?n < length ?xs ==> hd (drop ?n ?xs) = ?xs ! ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List_Extensions.nth_append_simps",
     "?i < length ?xs ==> (?xs @ ?ys) ! ?i = ?xs ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("List_Extensions.last_take",
     "?n < length ?xs ==> last (take (Suc ?n) ?xs) = ?xs ! ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List_Extensions.nth_append_simps",
     "length ?xs <= ?i ==> (?xs @ ?ys) ! ?i = ?ys ! (?i - length ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 4, template_var 2)))))),
    ("List_Extensions.set_subsetI",
     "(!!i. i < length ?xs ==> ?xs ! i : ?S) ==> set ?xs <= ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("List_Extensions.hd_take",
     "[| ?n ~= 0; ?xs ~= [] |] ==> hd (take ?n ?xs) = hd ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("List_Extensions.singleton_list_lengthE",
     "[| length ?xs = 1; !!x. ?xs = [x] ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("List_Extensions.split_list_first_unique",
     "[| ?u\<^sub>1 @ [?a] @ ?u\<^sub>2 = ?v\<^sub>1 @ [?a] @ ?v\<^sub>2;
         ?a ~: set ?u\<^sub>1; ?a ~: set ?v\<^sub>1 |]
      ==> ?u\<^sub>1 = ?v\<^sub>1",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)),
              template_var 2)),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)),
              template_var 0))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app (template_hole 0, template_var 4))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_equation (template_var 4, template_var 1)))]
