   [("Social_Choice_Functions.eval_set_filter", "Set.filter ?P {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Social_Choice_Functions.weighted_majority_refl",
     "weighted_majority ?R ?x ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("Social_Choice_Functions.Fishburn_liftable",
     "?alts' <= ?alts ==> liftable_set_extension ?alts' ?alts Fishb",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Social_Choice_Functions.Kelly_liftable",
     "?alts' <= ?alts ==> liftable_set_extension ?alts' ?alts Kelly",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Social_Choice_Functions.weighted_majority_swap",
     "weighted_majority ?R ?x ?y = - weighted_majority ?R ?y ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Social_Choice_Functions.supporters_auxdef",
     "supporters ?R ?x ?y = {i. ?R i ?y ?x}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Social_Choice_Functions.Kelly_eval",
     "Kelly ?R ?B ?A = (ALL a:?A. ALL b:?B. ?R b a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Social_Choice_Functions.eval_set_filter",
     "~ ?P ?x ==> Set.filter ?P (insert ?x ?A) = Set.filter ?P ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Social_Choice_Functions.eval_set_filter",
     "?P ?x ==>
      Set.filter ?P (insert ?x ?A) = insert ?x (Set.filter ?P ?A)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Social_Choice_Functions.lift_prefs_wf",
     "[| total_preorder_on ?alts ?R; ?alts <= ?alts' |]
      ==> total_preorder_on ?alts' (lift_prefs ?alts ?alts' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Social_Choice_Functions.lift_pref_profile_conv_vector",
     "[| ?i : ?agents; ?i : ?agents' |]
      ==> lift_pref_profile ?agents ?alts ?agents' ?alts' ?R ?i =
          lift_prefs ?alts ?alts' (?R ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_var 0, template_var 5))))),
    ("Social_Choice_Functions.Kelly_strict_iff",
     "?B \<prec>[Kelly ?R] ?A =
      ((ALL a:?A. ALL b:?B. ?R b a) & ~ (ALL a:?B. ALL b:?A. ?R b a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty))))),
    ("Social_Choice_Functions.lift_pref_profile_permute_agents",
     "[| ?\<pi> permutes ?agents; ?agents <= ?agents' |]
      ==> lift_pref_profile ?agents ?alts ?agents' ?alts' (?R o ?\<pi>) =
          lift_pref_profile ?agents ?alts ?agents' ?alts' ?R o ?\<pi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 5)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 5)))),
    ("Social_Choice_Functions.lift_pref_profile_permute_alts",
     "[| ?\<sigma> permutes ?alts; ?alts <= ?alts' |]
      ==> lift_pref_profile ?agents ?alts ?agents' ?alts'
           (permute_profile ?\<sigma> ?R) =
          permute_profile ?\<sigma>
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 4),
               template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 5),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_var 1),
               template_var 3),
             template_var 0))))),
    ("Social_Choice_Functions.Fishb_eval",
     "Fishb ?R ?B ?A =
      ((ALL a:?A. ALL b:?B - ?A. ?R b a) &
       (ALL a:?A - ?B. ALL b:?B. ?R b a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           t_empty)))),
    ("Social_Choice_Functions.lift_pref_profile_wf",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; finite ?alts' |]
      ==> pref_profile_wf ?agents' ?alts'
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Social_Choice_Functions.pareto_losers_lift_pref_profile",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> pareto_losers
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R) =
          pareto_losers ?R Un (?alts' - ?alts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_negation
         (template_equation (template_var 3, template_hole 7)),
        template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("Social_Choice_Functions.liftable_set_extensionI_weak",
     "(!!R A B.
          [| total_preorder_on ?alts' R; A ~= {}; B ~= {}; A <= ?alts';
             B <= ?alts' |]
          ==> ?set_ext R A B = ?set_ext (lift_prefs ?alts' ?alts R) A B) ==>
      liftable_set_extension ?alts' ?alts ?set_ext",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Social_Choice_Functions.Fishb_strict_iff",
     "?B \<prec>[Fishb ?R] ?A =
      (((ALL a:?A. ALL b:?B - ?A. ?R b a) &
        (ALL a:?A - ?B. ALL b:?B. ?R b a)) &
       ~ ((ALL a:?B. ALL b:?A - ?B. ?R b a) &
          (ALL a:?B - ?A. ALL b:?A. ?R b a)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0), t_empty)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               t_empty))),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2), t_empty)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               t_empty)))))),
    ("Social_Choice_Functions.lift_pref_profile_Pareto_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> Pareto (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R) ?x
           ?y =
          (?x : ?alts' & ?y : ?alts' & (?x ~: ?alts | Pareto ?R ?x ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 9)),
        template_negation
         (template_equation (template_var 6, template_hole 7)),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 5))),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 1),
                 template_var 0))))))),
    ("Social_Choice_Functions.lift_pref_profile_strict_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> ?x \<prec>[lift_pref_profile ?agents ?alts ?agents' ?alts' ?R
                      ?i] ?y =
          (?i : ?agents &
           (?y : ?alts & ?x : ?alts' - ?alts | ?x \<prec>[?R ?i] ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 7, template_var 4),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 11)),
        template_negation
         (template_equation (template_var 7, template_hole 9)),
        template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 4),
                   template_var 3),
                 template_var 5),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 7)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 6)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 6)))),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 2),
                 template_app (template_var 5, template_var 1)),
               template_var 0)))))),
    ("Social_Choice_Functions.lift_pref_profile_Pareto_strict_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> ?x \<prec>[Pareto
                      (lift_pref_profile ?agents ?alts ?agents' ?alts'
                        ?R)] ?y =
          (?x : ?alts' &
           ?y : ?alts' &
           (?x ~: ?alts & ?y : ?alts | ?x \<prec>[Pareto ?R] ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 10)),
        template_negation
         (template_equation (template_var 6, template_hole 8)),
        template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 5))),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 5))),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 4, template_var 4)),
                 template_var 0))))))),
    ("Social_Choice_Functions.preferred_alts_lift_pref_profile",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?i : ?agents'; ?x : ?alts' |]
      ==> preferred_alts
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R ?i) ?x =
          (if ?i : ?agents & ?x : ?alts then preferred_alts (?R ?i) ?x
           else ?alts')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 9)),
        template_negation
         (template_equation (template_var 6, template_hole 7)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 6)),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 5))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 4, template_var 1)),
               template_var 0)),
           template_var 2))))]
