   [("Multiplicative_Characters.inv_character_inv_character",
     "inv_character (inv_character ?\<chi>) = ?\<chi>",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Multiplicative_Characters.one_Characters",
     "\<one>\<^bsub>Characters ?G\<^esub> = principal_char ?G",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiplicative_Characters.inv_character_principal",
     "inv_character (principal_char ?G) = principal_char ?G",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiplicative_Characters.carrier_Characters",
     "carrier (Characters ?G) = characters ?G",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiplicative_Characters.eval_inv_character",
     "inv_character ?\<chi> ?j = cnj (?\<chi> ?j)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Multiplicative_Characters.character_inv_character_iff",
     "character ?G (inv_character ?\<chi>) = character ?G ?\<chi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Multiplicative_Characters.mult_Characters",
     "?\<chi>\<^sub>1 \<otimes>\<^bsub>Characters ?G\<^esub>
      ?\<chi>\<^sub>2 =
      (%a. ?\<chi>\<^sub>1 a * ?\<chi>\<^sub>2 a)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       t_empty)),
    ("Multiplicative_Characters.inv_Characters'",
     "?\<chi> : characters ?G ==>
      inv\<^bsub>Characters ?G\<^esub> ?\<chi> = inv_character ?\<chi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Multiplicative_Characters.character_mult",
     "[| character ?G ?\<chi>; character ?G ?\<chi>' |]
      ==> character ?G (%x. ?\<chi> x * ?\<chi>' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Multiplicative_Characters.character_ext",
     "[| character ?G ?\<chi>; character ?G ?\<chi>';
         !!x. x : carrier ?G ==> ?\<chi> x = ?\<chi>' x |]
      ==> ?\<chi> = ?\<chi>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Multiplicative_Characters.DirProds_subchar",
     "[| finite_comm_group (DirProds ?Gs ?I);
         ?x : carrier (Characters (DirProds ?Gs ?I)); ?i : ?I; finite ?I |]
      ==> character (?Gs ?i)
           ((\<lambda>i\<in>?I.
                %a. ?x ((\<lambda>i\<in>?I. \<one>\<^bsub>?Gs i\<^esub>)
                        (i := a)))
             ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_var 3, template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 3, t_empty), template_var 2),
               template_var 0))
           ))),
    ("Multiplicative_Characters.Characters_DirProds_single_prod",
     "[| finite_comm_group (DirProds ?Gs ?I);
         ?x : carrier (Characters (DirProds ?Gs ?I)); finite ?I |]
      ==> (%e. if e : carrier (DirProds ?Gs ?I)
               then PROD i:?I.
                        (\<lambda>i\<in>?I.
                            %a. ?x ((\<lambda>i\<in>?I.
  \<one>\<^bsub>?Gs i\<^esub>)
                                    (i := a)))
                         i (e i)
               else 0) =
          ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 14, template_var 2),
                    template_var 1))))
            ),
        template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation (t_empty, template_var 0)))]
