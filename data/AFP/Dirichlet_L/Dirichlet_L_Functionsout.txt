Loading theory "Pure-ex.Guess" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function")
Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "HOL-Eisbach.Eisbach_Tools")
Loading theory "HOL-Combinatorics.Stirling" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
### ML warning (line 99 of "~~/src/Pure/ex/Guess.thy"):
### Pattern is not exhaustive.
### ML warning (line 150 of "~~/src/Pure/ex/Guess.thy"):
### Matches are not exhaustive.
### ML warning (line 157 of "~~/src/Pure/ex/Guess.thy"):
### Pattern is not exhaustive.
signature GUESS =
  sig
    val guess:
       (binding * typ option * mixfix) list ->
         bool -> Proof.state -> Proof.state
    val guess_cmd:
       (binding * string option * mixfix) list ->
         bool -> Proof.state -> Proof.state
  end
structure Guess: GUESS
### theory "Pure-ex.Guess"
### 0.077s elapsed time, 0.293s cpu time, 0.011s GC time
Loading theory "HOL-Computational_Algebra.Fraction_Field" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
structure Eisbach_Rule_Insts: sig end
### theory "HOL-Combinatorics.Transposition"
### 0.127s elapsed time, 0.499s cpu time, 0.011s GC time
Loading theory "HOL-Computational_Algebra.Group_Closure" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
class ab_group_add = cancel_comm_monoid_add + group_add +
  assumes "ab_left_minus": "!!a. - a + a = (0::'a)"
  assumes "ab_diff_conv_add_uminus": "!!a b. a - b = a + - b"
Proofs for inductive predicate(s) "group_closurep"
  Proving monotonicity ...
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
consts
  stirling_row_aux :: "'a => 'a => 'a list => 'a list"
### theory "HOL-Combinatorics.Stirling"
### 0.304s elapsed time, 1.170s cpu time, 0.097s GC time
Loading theory "HOL-Library.BNF_Corec" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "HOL-Real_Asymp.Real_Asymp" via "HOL-Real_Asymp.Multiseries_Expansion_Bounds" via "HOL-Real_Asymp.Multiseries_Expansion")
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Eisbach.Eisbach"
### 0.369s elapsed time, 1.438s cpu time, 0.097s GC time
Loading theory "HOL-Eisbach.Eisbach_Tools" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval")
locale cong
  fixes rel :: "('a => 'a => bool) => 'b => 'b => bool"
    and eval :: "'b => 'a"
    and retr :: "('a => 'a => bool) => 'a => 'a => bool"
  assumes "cong rel eval retr"
val try_map = fn: 'a Seq.seq -> 'a Seq.seq -> 'a Seq.seq
val uncurry_rule = fn: thm -> thm
val curry_rule = fn: thm -> thm
### theory "HOL-Eisbach.Eisbach_Tools"
### 0.142s elapsed time, 0.443s cpu time, 0.295s GC time
Loading theory "HOL-Library.Cancellation" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary" via "HOL-Algebra.IntRing" via "HOL-Computational_Algebra.Primes" via "HOL-Computational_Algebra.Euclidean_Algorithm" via "HOL-Computational_Algebra.Factorial_Ring" via "HOL-Library.Multiset")
instantiation
  fract :: (idom) comm_ring_1
  uminus_fract == uminus :: 'a fract => 'a fract
  one_fract == one_class.one :: 'a fract
  times_fract == times :: 'a fract => 'a fract => 'a fract
  zero_fract == zero_class.zero :: 'a fract
  minus_fract == minus :: 'a fract => 'a fract => 'a fract
  plus_fract == plus :: 'a fract => 'a fract => 'a fract
### theory "HOL-Computational_Algebra.Group_Closure"
### 0.651s elapsed time, 2.476s cpu time, 0.446s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.Group" via "HOL-Algebra.Complete_Lattice" via "HOL-Algebra.Lattice" via "HOL-Algebra.Order" via "HOL-Algebra.Congruence")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature BNF_GFP_GREC_TACTICS =
  sig
    val mk_Lam_Inl_Inr_tac: Proof.context -> thm -> thm -> tactic
    val mk_Retr_coinduct_tac: Proof.context -> thm -> thm -> tactic
    val mk_algLam_algLam_tac:
       Proof.context ->
         thm -> thm -> thm -> thm -> thm -> thm -> thm -> thm -> tactic
    val mk_algLam_algrho_tac: Proof.context -> thm -> thm -> tactic
    val mk_algLam_base_tac:
       Proof.context ->
         term ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm ->
                       thm ->
                         thm list ->
                           thm ->
                             thm list -> thm list -> thm -> thm -> tactic
    val mk_algLam_step_tac: Proof.context -> thm -> thm -> thm -> tactic
    val mk_cong_locale_tac:
       Proof.context ->
         thm -> thm list -> thm -> thm -> thm list -> thm -> thm -> tactic
    val mk_corecUU_Inl_tac:
       Proof.context ->
         term ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm list ->
                     thm -> thm list -> thm -> thm -> thm -> thm -> tactic
    val mk_corecUU_pointfree_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm -> thm -> thm -> thm -> thm -> thm -> thm -> tactic
    val mk_corecUU_unique_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm -> thm -> thm -> thm -> thm -> thm -> thm -> tactic
    val mk_corecU_pointfree_tac:
       Proof.context ->
         thm ->
           thm ->
             thm list ->
               thm ->
                 thm list -> thm -> thm list -> thm -> thm -> thm -> tactic
    val mk_dtor_algLam_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm list ->
                       thm ->
                         thm ->
                           thm list -> thm -> thm -> thm -> thm -> tactic
    val mk_dtor_algrho_tac:
       Proof.context -> thm -> thm -> thm -> thm -> tactic
    val mk_dtor_transfer_tac: Proof.context -> thm -> tactic
    val mk_equivp_Retr_tac:
       Proof.context -> thm -> thm -> thm -> thm -> tactic
    val mk_eval_Oper_tac:
       Proof.context ->
         int ->
           thm ->
             thm -> thm -> thm -> thm -> thm list -> thm -> thm -> tactic
    val mk_eval_V_or_CLeaf_tac:
       Proof.context ->
         thm -> thm -> thm -> thm -> thm -> thm list -> thm -> tactic
    val mk_eval_core_embL_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm ->
                       thm ->
                         thm ->
                           thm ->
                             thm list ->
                               thm list -> thm list -> thm -> tactic
    val mk_eval_core_flat_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm ->
                       thm list ->
                         thm ->
                           thm list ->
                             thm -> thm -> thm -> thm list -> tactic
    val mk_eval_core_k_as_ssig_tac:
       Proof.context ->
         thm ->
           thm -> thm -> thm list -> thm -> thm -> thm -> thm list -> tactic
    val mk_eval_embL_tac:
       Proof.context -> thm -> thm -> thm -> thm -> thm -> thm -> tactic
    val mk_eval_flat_tac:
       Proof.context ->
         thm -> thm -> thm -> thm -> thm -> thm -> thm -> thm -> tactic
    val mk_eval_sctr_tac:
       Proof.context -> thm -> thm -> thm -> thm -> tactic
    val mk_extdd_mor_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm -> thm -> thm -> thm -> thm -> thm -> thm -> tactic
    val mk_extdd_o_VLeaf_tac:
       Proof.context ->
         thm ->
           thm -> thm -> thm list -> thm list -> thm -> thm -> thm -> tactic
    val mk_flat_VLeaf_or_flat_tac:
       Proof.context -> thm -> thm -> thm list -> tactic
    val mk_flat_embL_tac:
       Proof.context ->
         thm ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm list -> thm list -> thm list -> thm list -> tactic
    val mk_mor_cutSsig_flat_tac:
       Proof.context ->
         term ->
           thm ->
             thm ->
               thm ->
                 thm ->
                   thm ->
                     thm ->
                       thm list ->
                         thm ->
                           thm ->
                             thm ->
                               thm ->
                                 thm -> thm -> thm -> thm -> thm -> tactic
    val mk_natural_by_unfolding_tac: Proof.context -> thm list -> tactic
    val mk_natural_from_transfer_tac:
       Proof.context ->
         int ->
           bool list -> thm -> thm list -> thm list -> thm list -> tactic
    val mk_sig_transfer_tac:
       Proof.context -> thm -> thm list -> thm -> tactic
    val mk_transfer_by_transfer_prover_tac:
       Proof.context -> thm list -> thm list -> thm list -> tactic
    val transfer_prover_add_tac:
       Proof.context -> thm list -> thm list -> int -> tactic
    val transfer_prover_eq_tac: Proof.context -> int -> tactic
  end
structure BNF_GFP_Grec_Tactics: BNF_GFP_GREC_TACTICS
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
instantiation
  fract :: (idom) field
  inverse_fract == inverse :: 'a fract => 'a fract
  divide_fract == divide :: 'a fract => 'a fract => 'a fract
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.429s elapsed time, 1.703s cpu time, 0.138s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary" via "HOL-Algebra.IntRing" via "HOL-Computational_Algebra.Primes" via "HOL-Computational_Algebra.Euclidean_Algorithm" via "HOL-Computational_Algebra.Factorial_Ring")
instantiation
  fract :: (linordered_idom) linorder
  less_eq_fract == less_eq :: 'a fract => 'a fract => bool
  less_fract == less :: 'a fract => 'a fract => bool
instantiation
  fract :: (linordered_idom) linordered_field
  sgn_fract == sgn :: 'a fract => 'a fract
  abs_fract == abs :: 'a fract => 'a fract
instantiation
  fract :: (linordered_idom) distrib_lattice
  inf_fract == inf :: 'a fract => 'a fract => 'a fract
  sup_fract == sup :: 'a fract => 'a fract => 'a fract
### theory "HOL-Computational_Algebra.Fraction_Field"
### 0.994s elapsed time, 3.780s cpu time, 0.629s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.109s elapsed time, 0.437s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.Elementary_Groups")
### theory "HOL-Library.FuncSet"
### 0.466s elapsed time, 1.784s cpu time, 0.307s GC time
Loading theory "HOL-Algebra.Congruence" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.Group" via "HOL-Algebra.Complete_Lattice" via "HOL-Algebra.Lattice" via "HOL-Algebra.Order")
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Library.Infinite_Set"
### 0.471s elapsed time, 1.714s cpu time, 0.649s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
locale equivalence
  fixes S :: "('a, 'b) eq_object_scheme"  (structure)
  assumes "equivalence S"
locale partition
  fixes A :: "'a set"
    and B :: "'a set set"
  assumes "Congruence.partition A B"
### theory "HOL-Library.Disjoint_Sets"
### 0.303s elapsed time, 1.192s cpu time, 0.136s GC time
Loading theory "HOL-Library.More_List" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series" via "HOL-Computational_Algebra.Polynomial_FPS" via "HOL-Computational_Algebra.Polynomial")
### theory "HOL-Algebra.Congruence"
### 0.919s elapsed time, 3.489s cpu time, 0.872s GC time
Loading theory "HOL-Algebra.Order" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.Group" via "HOL-Algebra.Complete_Lattice" via "HOL-Algebra.Lattice")
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
### theory "HOL-Library.More_List"
### 0.188s elapsed time, 0.742s cpu time, 0.086s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size_list size <*mlex*> {}"
locale weak_partial_order
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_partial_order L"
locale weak_partial_order
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_partial_order L"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### theory "HOL-Library.Nat_Bijection"
### 0.338s elapsed time, 1.337s cpu time, 0.157s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs")
consts
  mset :: "'a list => 'a multiset"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale weak_partial_order
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_partial_order L"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
locale partial_order
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "partial_order L"
consts
  shift :: "'a list => 'a stream => 'a stream"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
locale weak_partial_order_bottom
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_partial_order_bottom L"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale weak_partial_order_top
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_partial_order_top L"
locale weak_total_order
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_total_order L"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
locale total_order
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "total_order L"
consts
  snth :: "'a stream => nat => 'a"
### theory "HOL-Algebra.Order"
### 1.219s elapsed time, 4.616s cpu time, 1.322s GC time
Loading theory "HOL-Algebra.Lattice" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.Group" via "HOL-Algebra.Complete_Lattice")
consts
  stake :: "nat => 'a stream => 'a list"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
locale weak_upper_semilattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_upper_semilattice L"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
locale weak_lower_semilattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_lower_semilattice L"
locale weak_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_lattice L"
consts
  flat :: "'a list stream => 'a stream"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.260s elapsed time, 4.766s cpu time, 1.433s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
locale weak_bounded_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_bounded_lattice L"
locale upper_semilattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "upper_semilattice L"
locale lower_semilattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "lower_semilattice L"
locale Lattice.lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "lattice L"
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.455s elapsed time, 1.781s cpu time, 0.223s GC time
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type" via "HOL-Library.Cardinality")
locale Lattice.bounded_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "bounded_lattice L"
locale Lattice.bounded_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "bounded_lattice L"
### theory "HOL-Algebra.Lattice"
### 0.906s elapsed time, 3.549s cpu time, 0.490s GC time
Loading theory "HOL-Algebra.Complete_Lattice" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.Group")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale weak_complete_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_complete_lattice L"
locale weak_complete_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_complete_lattice L"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
locale weak_complete_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_complete_lattice L"
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
### ML warning (line 261 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 290 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 456 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 512 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 563 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 603 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 900 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 1233 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 1268 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 1294 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 1621 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 1670 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 1808 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 1809 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2059 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2064 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2133 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2149 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2150 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2151 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2152 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2154 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2155 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2157 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2158 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2183 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2370 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2371 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2400 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2401 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2402 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2404 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2408 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2412 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2436 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2477 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2267 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 2594 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2599 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2711 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2712 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2713 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2752 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2753 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2754 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2756 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2758 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2765 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2792 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 2569 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 2914 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 3014 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
### ML warning (line 3064 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 3072 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 3078 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 3085 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Value identifier (fp_alives) has not been referenced.
### ML warning (line 3093 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 3149 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Pattern is not exhaustive.
### ML warning (line 3212 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec.ML"):
### Matches are not exhaustive.
signature BNF_GFP_GREC =
  sig
    val Tsubst: typ -> typ -> typ -> typ
    val bnf_kill_all_but:
       int -> BNF_Def.bnf -> local_theory -> BNF_Def.bnf * local_theory
    type buffer =
       {CLeaf: term,
        Oper: term,
        VLeaf: term, ctr_wrapper: term, friends: (typ * term) Symtab.table}
    type corec_info =
       {Lam: term,
        Lam_pointful_natural: thm,
        Lam_transfer: thm,
        Retr: term,
        Retr_coinduct: thm,
        Y: typ,
        Z: typ,
        algLam: term,
        algLam_thm: thm,
        all_algLam_algs: thm list,
        all_dead_k_bnfs: BNF_Def.bnf list,
        buffer: buffer,
        corecUU: term,
        corecUU_thm: thm,
        corecUU_transfer: thm,
        corecUU_unique: thm,
        dtor_algLam: thm, dtor_coinduct_info: dtor_coinduct_info, ...}
    val corec_info_of: typ -> local_theory -> corec_info * local_theory
    val corec_infos_of: Proof.context -> string -> corec_info list
    val corec_infos_of_generic:
       Context.generic -> Symtab.key -> corec_info list
    val define_const:
       bool ->
         binding ->
           int ->
             string -> term -> local_theory -> (term * thm) * local_theory
    type dtor_coinduct_info =
       {cong_alg_intros: thm list,
        cong_base: thm,
        cong_def: thm,
        cong_locale: thm,
        cong_refl: thm, cong_sym: thm, cong_trans: thm, dtor_coinduct: thm}
    val dummify_atomic_types: term -> term
    val freeze_types:
       Proof.context -> (indexname * sort) list -> typ list -> typ list
    type friend_info = {algLam_algrho: thm, algrho: term, dtor_algrho: thm}
    val has_no_corec_info: Proof.context -> string -> bool
    val map_buffer: (term -> term) -> buffer -> buffer
    val maybe_corec_info_of: Proof.context -> typ -> corec_info option
    val mk_fp_binding: binding -> string -> binding
    val not_codatatype: Proof.context -> typ -> 'a
    val prepare_friend_corec:
       string ->
         typ ->
           local_theory ->
             (corec_info * binding * int * typ * typ * typ * typ * typ *
              BNF_Def.bnf * BNF_Def.bnf * BNF_FP_Def_Sugar.fp_sugar *
              BNF_FP_Def_Sugar.fp_sugar * buffer)
             *
             local_theory
    val print_corec_infos: Proof.context -> unit
    val register_friend_corec:
       string ->
         binding ->
           int ->
             typ ->
               typ ->
                 typ ->
                   BNF_Def.bnf ->
                     BNF_FP_Def_Sugar.fp_sugar ->
                       BNF_FP_Def_Sugar.fp_sugar ->
                         term ->
                           term ->
                             thm ->
                               corec_info ->
                                 local_theory -> friend_info * local_theory
    val specialize_buffer_types: buffer -> buffer
    val substT: typ -> typ -> term -> term
  end
structure BNF_GFP_Grec: BNF_GFP_GREC
locale Complete_Lattice.complete_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "complete_lattice L"
### theory "HOL-Library.Phantom_Type"
### 1.012s elapsed time, 3.753s cpu time, 1.664s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type")
locale Complete_Lattice.complete_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "complete_lattice L"
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar_util.ML"):
### Pattern is not exhaustive.
### ML warning (line 163 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar_util.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar_util.ML"):
### Pattern is not exhaustive.
### ML warning (line 188 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar_util.ML"):
### Pattern is not exhaustive.
### ML warning (line 329 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar_util.ML"):
### Matches are not exhaustive.
signature BNF_GFP_GREC_SUGAR_UTIL =
  sig
    exception UNNATURAL of unit
    val corec_parse_info_of:
       Proof.context ->
         typ list -> typ -> BNF_GFP_Grec.buffer -> s_parse_info
    val friend_parse_info_of:
       Proof.context ->
         typ list ->
           typ -> BNF_GFP_Grec.buffer -> s_parse_info * rho_parse_info
    val generalize_types: int -> typ -> typ -> typ
    val mk_abs_transfer: Proof.context -> string -> thm
    val mk_const_transfer_goal: Proof.context -> string * typ -> term
    val mk_curry_uncurryN_balanced: Proof.context -> int -> thm
    val mk_pointful_natural_from_transfer: Proof.context -> thm -> thm
    val mk_rep_transfer: Proof.context -> string -> thm
    type rho_parse_info =
       {discs: term Symtab.table,
        it: term,
        mk_case: typ -> term,
        pattern_ctrs: (term * term list) Symtab.table,
        sels: term Symtab.table}
    type s_parse_info =
       {ctr_guards: term Symtab.table,
        inner_buffer: BNF_GFP_Grec.buffer,
        outer_buffer: BNF_GFP_Grec.buffer}
  end
structure BNF_GFP_Grec_Sugar_Util: BNF_GFP_GREC_SUGAR_UTIL
locale weak_complete_lattice
  fixes L :: "('a, 'b) gorder_scheme"  (structure)
  assumes "weak_complete_lattice L"
### Additional type variable(s) in locale specification "CARD_1": 'a
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
signature BNF_GFP_GREC_SUGAR_TACTICS =
  sig
    val mk_case_dtor_tac:
       Proof.context ->
         term -> thm -> thm -> thm list -> thm -> thm list -> tactic
    val mk_code_tac:
       Proof.context ->
         int ->
           term list ->
             term ->
               term ->
                 thm ->
                   thm ->
                     thm list ->
                       thm list ->
                         thm list ->
                           thm list ->
                             thm ->
                               thm ->
                                 thm list ->
                                   thm list ->
                                     thm ->
                                       thm list ->
   thm list -> thm list -> thm list -> ...
    val mk_cong_intro_ctr_or_friend_tac:
       Proof.context -> thm -> thm list -> thm -> tactic
    val mk_eq_algrho_tac:
       Proof.context ->
         term list ->
           term ->
             term ->
               term ->
                 term ->
                   term ->
                     thm ->
                       thm ->
                         thm list ->
                           thm list ->
                             thm list ->
                               thm list ->
                                 thm ->
                                   thm ->
                                     thm ->
                                       thm list ->
   thm list -> thm list -> thm -> ...
    val mk_eq_corecUU_tac:
       Proof.context ->
         int ->
           term list ->
             term ->
               term ->
                 thm ->
                   thm ->
                     thm list ->
                       thm list ->
                         thm list ->
                           thm list ->
                             thm ->
                               thm ->
                                 thm list ->
                                   thm list ->
                                     thm list ->
                                       thm list ->
   thm list -> thm list -> thm list -> ...
    val mk_last_disc_tac: Proof.context -> term -> thm -> thm list -> tactic
    val mk_rho_transfer_tac:
       Proof.context -> bool -> thm -> thm list -> tactic
    val mk_unique_tac:
       Proof.context ->
         int ->
           term list ->
             term ->
               term ->
                 thm ->
                   thm ->
                     thm list ->
                       thm list ->
                         thm list ->
                           thm list ->
                             thm ->
                               thm ->
                                 thm list ->
                                   thm list ->
                                     thm list ->
                                       thm list ->
   thm list -> thm list -> thm list -> ...
    val rho_transfer_simps: thm list
  end
structure BNF_GFP_Grec_Sugar_Tactics: BNF_GFP_GREC_SUGAR_TACTICS
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
### theory "HOL-Algebra.Complete_Lattice"
### 1.161s elapsed time, 4.331s cpu time, 1.739s GC time
Loading theory "HOL-Algebra.Group" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group")
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
### Additional type variable(s) in locale specification "card2": 'a
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
### theory "HOL-Library.Multiset"
### 4.772s elapsed time, 18.196s cpu time, 4.831s GC time
Loading theory "HOL-Computational_Algebra.Factorial_Ring" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary" via "HOL-Algebra.IntRing" via "HOL-Computational_Algebra.Primes" via "HOL-Computational_Algebra.Euclidean_Algorithm")
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
locale Group.monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.monoid G"
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
locale Group.group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.group G"
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
### theory "HOL-Library.Cardinality"
### 0.786s elapsed time, 3.109s cpu time, 0.364s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants")
overloading
  nat_pow \<equiv> pow :: ('a, 'b) monoid_scheme => 'a => nat => 'a
overloading
  int_pow \<equiv> pow :: ('a, 'b) monoid_scheme => 'a => int => 'a
locale submonoid
  fixes H :: "'a set"
    and G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "submonoid H G"
locale subgroup
  fixes H :: "'a set"
    and G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "subgroup H G"
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
### ML warning (line 62 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Value identifier (ctrN) has not been referenced.
### ML warning (line 63 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Value identifier (discN) has not been referenced.
### ML warning (line 64 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Value identifier (disc_iffN) has not been referenced.
### ML warning (line 72 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Value identifier (selN) has not been referenced.
### ML warning (line 78 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Value identifier (simp_attrs) has not been referenced.
### ML warning (line 218 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 223 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 254 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 256 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 316 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 319 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 321 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 360 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 362 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 417 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 439 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 442 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 445 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 541 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 542 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 561 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 562 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 595 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 597 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 621 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 623 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 626 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 643 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 660 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 652 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 713 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 785 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 786 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 799 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1091 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1092 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1150 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1151 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1187 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1219 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1214 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1243 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1316 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1368 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1399 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1658 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1692 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1737 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1806 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1807 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1817 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1853 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1862 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1825 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1875 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1878 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1880 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1938 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 1918 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1955 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 1970 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Value identifier (transfer) has not been referenced.
### ML warning (line 1971 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2029 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2031 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2032 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2033 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2037 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 2050 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 2120 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2204 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2214 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 2229 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2248 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2288 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2320 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Matches are not exhaustive.
### ML warning (line 2330 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
### ML warning (line 2338 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_sugar.ML"):
### Pattern is not exhaustive.
signature BNF_GFP_GREC_SUGAR =
  sig
    val build_corecUU_arg_and_goals:
       bool ->
         term ->
           term list * term ->
             local_theory ->
               (((thm list * thm list * thm list) * term list) * term) *
               local_theory
    val coinduction_upto_cmd:
       string * string -> local_theory -> local_theory
    val corec_cmd:
       bool ->
         corec_option list ->
           (binding * string option * mixfix) list * string ->
             local_theory -> local_theory
    datatype corec_option
    =
         Friend_Option
       | Plugins_Option of Proof.context -> Plugin_Name.filter
       | Transfer_Option
    val corecursive_cmd:
       bool ->
         corec_option list ->
           (binding * string option * mixfix) list * string ->
             local_theory -> Proof.state
    val derive_eq_corecUU:
       Proof.context ->
         BNF_GFP_Grec.corec_info -> term -> term -> thm -> thm
    val derive_unique:
       Proof.context ->
         morphism -> term -> BNF_GFP_Grec.corec_info -> string -> thm -> thm
    val explore_corec_equation:
       Proof.context ->
         bool ->
           bool ->
             string ->
               term ->
                 BNF_GFP_Grec_Sugar_Util.s_parse_info ->
                   typ -> term list * term -> term list * term
    val friend_of_corec_cmd:
       (string * string option) * string -> local_theory -> Proof.state
    val parse_corec_equation:
       Proof.context -> term list -> term -> term list * term
  end
structure BNF_GFP_Grec_Sugar: BNF_GFP_GREC_SUGAR
### ML warning (line 58 of "~~/src/HOL/Tools/BNF/bnf_gfp_grec_unique_sugar.ML"):
### Pattern is not exhaustive.
signature BNF_GFP_GREC_UNIQUE_SUGAR =
  sig val corec_unique_tac: Proof.context -> int -> tactic end
structure BNF_GFP_Grec_Unique_Sugar: BNF_GFP_GREC_UNIQUE_SUGAR
### theory "HOL-Library.BNF_Corec"
### 6.406s elapsed time, 24.549s cpu time, 5.670s GC time
Loading theory "HOL-Library.Numeral_Type" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
locale group_hom
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
    and H :: "('c, 'd) monoid_scheme"  (structure)
    and h :: "'a => 'c"
  assumes "group_hom G H h"
instantiation
  num1 :: CARD_1
instantiation
  num1 :: {comm_monoid_mult,numeral,comm_ring}
  uminus_num1 == uminus :: num1 => num1
  zero_num1 == zero_class.zero :: num1
  minus_num1 == minus :: num1 => num1 => num1
  plus_num1 == plus :: num1 => num1 => num1
  one_num1 == one_class.one :: num1
  times_num1 == times :: num1 => num1 => num1
class normalization_semidom = algebraic_semidom +
  semidom_divide_unit_factor +
  fixes normalize :: "'a => 'a"
  assumes
    "unit_factor_mult_normalize": "!!a. unit_factor a * normalize a = a"
    and "normalize_0": "normalize (0::'a) = (0::'a)"
instantiation
  num1 :: linorder
  less_eq_num1 == less_eq :: num1 => num1 => bool
  less_num1 == less :: num1 => num1 => bool
locale mod_type
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_type n Rep Abs"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
locale mod_ring
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_ring n Rep Abs"
instantiation
  bit0 :: (finite) {minus,one,plus,times,uminus,zero}
  bit1 :: (finite) {minus,one,plus,times,uminus,zero}
  zero_bit0 == zero_class.zero :: 'a bit0
  uminus_bit0 == uminus :: 'a bit0 => 'a bit0
  times_bit0 == times :: 'a bit0 => 'a bit0 => 'a bit0
  plus_bit0 == plus :: 'a bit0 => 'a bit0 => 'a bit0
  one_bit0 == one_class.one :: 'a bit0
  minus_bit0 == minus :: 'a bit0 => 'a bit0 => 'a bit0
  zero_bit1 == zero_class.zero :: 'a bit1
  uminus_bit1 == uminus :: 'a bit1 => 'a bit1
  times_bit1 == times :: 'a bit1 => 'a bit1 => 'a bit1
  plus_bit1 == plus :: 'a bit1 => 'a bit1 => 'a bit1
  one_bit1 == one_class.one :: 'a bit1
  minus_bit1 == minus :: 'a bit1 => 'a bit1 => 'a bit1
locale comm_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "comm_group G"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
instantiation
  bit0 :: (finite) linorder
  bit1 :: (finite) linorder
  less_eq_bit0 == less_eq :: 'a bit0 => 'a bit0 => bool
  less_bit0 == less :: 'a bit0 => 'a bit0 => bool
  less_eq_bit1 == less_eq :: 'a bit1 => 'a bit1 => bool
  less_bit1 == less :: 'a bit1 => 'a bit1 => bool
### theory "HOL-Combinatorics.Permutations"
### 1.059s elapsed time, 4.171s cpu time, 0.551s GC time
Loading theory "HOL-Library.Power_By_Squaring" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory" via "HOL-Number_Theory.Mod_Exp")
instantiation
  num0 :: equal
  equal_num0 == equal_class.equal :: num0 => num0 => bool
### theory "HOL-Algebra.Group"
### 1.757s elapsed time, 6.932s cpu time, 0.932s GC time
Loading theory "HOL-Algebra.Coset" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group")
instantiation
  num1 :: equal
  equal_num1 == equal_class.equal :: num1 => num1 => bool
instantiation
  num1 :: enum
  enum_num1 == enum_class.enum :: num1 list
  enum_all_num1 == enum_class.enum_all :: (num1 => bool) => bool
  enum_ex_num1 == enum_class.enum_ex :: (num1 => bool) => bool
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
instantiation
  num0 :: card_UNIV
  num1 :: card_UNIV
  card_UNIV_num0 == card_UNIV_class.card_UNIV :: (num0, nat) phantom
  finite_UNIV_num0 == finite_UNIV :: (num0, bool) phantom
  card_UNIV_num1 == card_UNIV_class.card_UNIV :: (num1, nat) phantom
  finite_UNIV_num1 == finite_UNIV :: (num1, bool) phantom
locale normal
  fixes H :: "'a set"
    and G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "normal H G"
class monoid_mult = semigroup_mult + power +
  assumes "mult_1_left": "!!a. (1::'a) * a = a"
    and "mult_1_right": "!!a. a * (1::'a) = a"
### theory "HOL-Library.Power_By_Squaring"
### 0.230s elapsed time, 0.905s cpu time, 0.093s GC time
Loading theory "HOL-Algebra.FiniteProduct" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.UnivPoly" via "HOL-Algebra.Module" via "HOL-Algebra.Ring")
instantiation
  bit0 :: (finite) equal
  bit1 :: (finite) equal
  equal_bit0 == equal_class.equal :: 'a bit0 => 'a bit0 => bool
  equal_bit1 == equal_class.equal :: 'a bit1 => 'a bit1 => bool
instantiation
  bit0 :: (finite) enum
  enum_bit0 == enum_class.enum :: 'a bit0 list
  enum_all_bit0 == enum_class.enum_all :: ('a bit0 => bool) => bool
  enum_ex_bit0 == enum_class.enum_ex :: ('a bit0 => bool) => bool
Proofs for inductive predicate(s) "foldSetDp"
instantiation
  bit1 :: (finite) enum
  enum_bit1 == enum_class.enum :: 'a bit1 list
  enum_all_bit1 == enum_class.enum_all :: ('a bit1 => bool) => bool
  enum_ex_bit1 == enum_class.enum_ex :: ('a bit1 => bool) => bool
  Proving monotonicity ...
instantiation
  bit0 :: (finite) finite_UNIV
  bit1 :: (finite) finite_UNIV
  finite_UNIV_bit0 == finite_UNIV :: ('a bit0, bool) phantom
  finite_UNIV_bit1 == finite_UNIV :: ('a bit1, bool) phantom
instantiation
  bit0 :: ({card_UNIV,finite}) card_UNIV
  bit1 :: ({card_UNIV,finite}) card_UNIV
  card_UNIV_bit0 == card_UNIV_class.card_UNIV :: ('a bit0, nat) phantom
  card_UNIV_bit1 == card_UNIV_class.card_UNIV :: ('a bit1, nat) phantom
### theory "HOL-Library.Numeral_Type"
### 0.813s elapsed time, 3.200s cpu time, 0.435s GC time
Loading theory "HOL-Library.Product_Plus" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space" via "HOL-Analysis.Product_Vector")
instantiation
  prod :: (zero, zero) zero
  zero_prod == zero_class.zero :: 'a * 'b
instantiation
  prod :: (plus, plus) plus
  plus_prod == plus :: 'a * 'b => 'a * 'b => 'a * 'b
locale LCD
  fixes B :: "'b set"
    and D :: "'a set"
    and f :: "'b => 'a => 'a"  (infixl \<open>\<cdot>\<close> 70)
  assumes "LCD B D (\<cdot>)"
instantiation
  prod :: (minus, minus) minus
  minus_prod == minus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (uminus, uminus) uminus
  uminus_prod == uminus :: 'a * 'b => 'a * 'b
### theory "HOL-Library.Product_Plus"
### 0.101s elapsed time, 0.411s cpu time, 0.000s GC time
Loading theory "HOL-Library.Product_Order" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Borel_Space" via "HOL-Analysis.Ordered_Euclidean_Space")
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
locale ACeD
  fixes D :: "'a set"
    and f :: "'a => 'a => 'a"  (infixl \<open>\<cdot>\<close> 70)
    and e :: "'a"
  assumes "ACeD D (\<cdot>) e"
instantiation
  prod :: (inf, inf) inf
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (sup, sup) sup
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
instantiation
  prod :: (Inf, Inf) Inf
  Inf_prod == Inf :: ('a * 'b) set => 'a * 'b
instantiation
  prod :: (Sup, Sup) Sup
  Sup_prod == Sup :: ('a * 'b) set => 'a * 'b
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
### Ambiguous input (line 611 of "~~/src/HOL/Algebra/Coset.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>r_congruent_indexed" ("_index" ("_position" G))
###       ("_position" H))
###     ("_Coll" ("_pattern" ("_position" x) ("_position" y))
###       ("\<^const>HOL.conj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" carrier) ("_position" G)))
###         ("\<^const>HOL.conj"
###           ("\<^const>Set.member" ("_position" y)
###             ("_applC" ("_position" carrier) ("_position" G)))
###           ("\<^const>Set.member"
###             ("\<^const>Group.monoid.mult_indexed"
###               ("\<^const>Group.m_inv_indexed" ("_index" ("_position" G))
###                 ("_position" x))
###               ("_index" ("_position" G)) ("_position" y))
###             ("_position" H)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>r_congruent_indexed" ("_index" ("_position" G))
###     ("\<^const>HOL.eq" ("_position" H)
###       ("_Coll" ("_pattern" ("_position" x) ("_position" y))
###         ("\<^const>HOL.conj"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" carrier) ("_position" G)))
###           ("\<^const>HOL.conj"
###             ("\<^const>Set.member" ("_position" y)
###               ("_applC" ("_position" carrier) ("_position" G)))
###             ("\<^const>Set.member"
###               ("\<^const>Group.monoid.mult_indexed"
###                 ("\<^const>Group.m_inv_indexed" ("_index" ("_position" G))
###                   ("_position" x))
###                 ("_index" ("_position" G)) ("_position" y))
###               ("_position" H))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "HOL-Library.Product_Order"
### 0.227s elapsed time, 0.888s cpu time, 0.089s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Algebra.FiniteProduct"
### 0.526s elapsed time, 2.064s cpu time, 0.272s GC time
Loading theory "HOL-Algebra.Ring" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.UnivPoly" via "HOL-Algebra.Module")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
### theory "HOL-Library.Set_Algebras"
### 0.285s elapsed time, 1.114s cpu time, 0.204s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
locale abelian_monoid
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_monoid G"
locale abelian_group
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_group G"
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
### Cannot skip proof of schematic goal statement
locale abelian_monoid
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_monoid G"
### Cannot skip proof of schematic goal statement
locale abelian_monoid
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_monoid G"
### Cannot skip proof of schematic goal statement
locale abelian_group
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_group G"
### Cannot skip proof of schematic goal statement
### theory "HOL-Algebra.Coset"
### 1.320s elapsed time, 5.212s cpu time, 0.534s GC time
Loading theory "HOL-Algebra.Generated_Groups" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group")
Proofs for inductive predicate(s) "generatep"
  Proving monotonicity ...
locale Ring.semiring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "semiring R"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
locale Ring.ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "ring R"
Found termination order: "size <*mlex*> {}"
locale cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "cring R"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "domain R"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale Ring.field
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "field R"
Found termination order: "size <*mlex*> {}"
locale Ring.ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "ring R"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale Ring.ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "ring R"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Algebra.Generated_Groups"
### 0.717s elapsed time, 2.825s cpu time, 0.290s GC time
Loading theory "HOL-Algebra.Elementary_Groups" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group")
### ML warning (line 44 of "~~/src/HOL/Algebra/ringsimp.ML"):
### Value identifier (s) has not been referenced.
### ML warning (line 47 of "~~/src/HOL/Algebra/ringsimp.ML"):
### Matches are not exhaustive.
signature RINGSIMP =
  sig
    val add_struct: string * term list -> attribute
    val algebra_tac: Proof.context -> int -> tactic
    val del_struct: string * term list -> attribute
    val print_structures: Proof.context -> unit
  end
structure Ringsimp: RINGSIMP
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale group_disjoint_sum
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
    and A :: "'a set"
    and B :: "'a set"
  assumes "group_disjoint_sum G A B"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale Ring.semiring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "semiring R"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "domain R"
### theory "HOL-Algebra.Elementary_Groups"
### 0.576s elapsed time, 2.262s cpu time, 0.274s GC time
Loading theory "HOL-Real_Asymp.Inst_Existentials" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "HOL-Real_Asymp.Real_Asymp" via "HOL-Real_Asymp.Multiseries_Expansion_Bounds" via "HOL-Real_Asymp.Multiseries_Expansion")
signature INST_EXISTENTIALS =
  sig val tac: Proof.context -> term list -> int -> tactic end
structure Inst_Existentials: INST_EXISTENTIALS
### theory "HOL-Real_Asymp.Inst_Existentials"
### 0.039s elapsed time, 0.158s cpu time, 0.000s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Countable_Set")
Found termination order: "size <*mlex*> {}"
class factorial_semiring_gcd = factorial_semiring + Gcd +
  assumes "gcd_eq_gcd_factorial": "!!a b. gcd a b = gcd_factorial a b"
    and "lcm_eq_lcm_factorial": "!!a b. lcm a b = lcm_factorial a b"
    and "Gcd_eq_Gcd_factorial": "!!A. Gcd A = Gcd_factorial A"
    and "Lcm_eq_Lcm_factorial": "!!A. Lcm A = Lcm_factorial A"
### theory "HOL-Library.Tree"
### 2.098s elapsed time, 8.258s cpu time, 0.831s GC time
Loading theory "Draft.Templates" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs")
locale ring_hom_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and S :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
  assumes "ring_hom_cring R S h"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.256s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Metric_Arith" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
### theory "HOL-Algebra.Ring"
### 2.890s elapsed time, 11.391s cpu time, 1.106s GC time
Loading theory "HOL-Algebra.AbelCoset" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.UnivPoly" via "HOL-Algebra.RingHom" via "HOL-Algebra.Ideal")
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
signature METRIC_ARITH =
  sig
    val argo_timeout: real Config.T
    val metric_arith_tac: Proof.context -> int -> tactic
    val trace: bool Config.T
  end
structure Metric_Arith: METRIC_ARITH
### theory "HOL-Analysis.Metric_Arith"
### 0.609s elapsed time, 2.400s cpu time, 0.170s GC time
Loading theory "HOL-Algebra.Module" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.UnivPoly")
### theory "HOL-Library.Countable"
### 1.149s elapsed time, 4.518s cpu time, 0.381s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
locale abelian_group_hom
  fixes G :: "('a, 'b) ring_scheme"  (structure)
    and H :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
  assumes "abelian_group_hom G H h"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
locale module
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and M :: "('a, 'c, 'd) module_scheme"  (structure)
  assumes "module R M"
### Cannot skip proof of schematic goal statement
locale abelian_group
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_group G"
### theory "HOL-Library.Countable_Set"
### 0.463s elapsed time, 1.823s cpu time, 0.168s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
locale algebra
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and M :: "('a, 'c, 'd) module_scheme"  (structure)
  assumes "algebra R M"
locale additive_subgroup
  fixes H :: "'a set"
    and G :: "('a, 'b) ring_scheme"  (structure)
  assumes "additive_subgroup H G"
locale abelian_subgroup
  fixes H :: "'a set"
    and G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_subgroup H G"
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
locale submodule
  fixes H :: "'c set"
    and R :: "('a, 'b) ring_scheme"
    and M :: "('a, 'c, 'd) module_scheme"  (structure)
  assumes "submodule H R M"
### theory "HOL-Algebra.Module"
### 1.483s elapsed time, 5.816s cpu time, 0.493s GC time
Loading theory "HOL-Library.Set_Idioms" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
### theory "HOL-Library.Set_Idioms"
### 0.225s elapsed time, 0.876s cpu time, 0.081s GC time
Loading theory "Bernoulli.Bernoulli" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Periodic_Bernpoly")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Computational_Algebra.Factorial_Ring"
### 7.116s elapsed time, 28.010s cpu time, 2.860s GC time
Loading theory "HOL-Computational_Algebra.Euclidean_Algorithm" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary" via "HOL-Algebra.IntRing" via "HOL-Computational_Algebra.Primes")
### theory "Bernoulli.Bernoulli"
### 0.235s elapsed time, 0.910s cpu time, 0.103s GC time
Loading theory "HOL-Analysis.Abstract_Topology" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
### theory "HOL-Algebra.AbelCoset"
### 2.744s elapsed time, 10.761s cpu time, 0.952s GC time
Loading theory "HOL-Algebra.Ideal" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.UnivPoly" via "HOL-Algebra.RingHom")
locale ideal
  fixes I :: "'a set"
    and R :: "('a, 'b) ring_scheme"  (structure)
  assumes "ideal I R"
### theory "HOL-Library.Countable_Complete_Lattices"
### 2.180s elapsed time, 8.539s cpu time, 0.781s GC time
Loading theory "HOL-Analysis.Continuum_Not_Denumerable" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Homeomorphism" via "HOL-Analysis.Homotopy")
locale principalideal
  fixes I :: "'a set"
    and R :: "('a, 'b) ring_scheme"  (structure)
  assumes "principalideal I R"
### theory "HOL-Analysis.Continuum_Not_Denumerable"
### 0.315s elapsed time, 1.234s cpu time, 0.142s GC time
Loading theory "HOL-Analysis.Inner_Product" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
locale maximalideal
  fixes I :: "'a set"
    and R :: "('a, 'b) ring_scheme"  (structure)
  assumes "maximalideal I R"
locale primeideal
  fixes I :: "'a set"
    and R :: "('a, 'b) ring_scheme"  (structure)
  assumes "primeideal I R"
class real_inner = dist_norm + real_vector + sgn_div_norm +
  uniformity_dist + open_uniformity +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. inner x y = inner y x"
    and "inner_add_left": "!!x y z. inner (x + y) z = inner x z + inner y z"
    and
    "inner_scaleR_left": "!!r x y. inner (r *\<^sub>R x) y = r * inner x y"
    and "inner_ge_zero": "!!x. 0 <= inner x x"
    and "inner_eq_zero_iff": "!!x. (inner x x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (inner x x)"
instantiation
  real :: real_inner
  inner_real == inner :: real => real => real
instantiation
  complex :: real_inner
  inner_complex == inner :: complex => complex => real
bundle inner_syntax
bundle no_inner_syntax
### theory "HOL-Analysis.Inner_Product"
### 1.125s elapsed time, 4.380s cpu time, 0.573s GC time
Loading theory "HOL-Analysis.L2_Norm" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
class euclidean_semiring_gcd = normalization_euclidean_semiring + Gcd +
  assumes "gcd_eucl": "normalization_euclidean_semiring_class.gcd = gcd"
    and "lcm_eucl": "normalization_euclidean_semiring_class.lcm = lcm"
  assumes "Gcd_eucl": "normalization_euclidean_semiring_class.Gcd = Gcd"
    and "Lcm_eucl": "normalization_euclidean_semiring_class.Lcm = Lcm"
### theory "HOL-Analysis.L2_Norm"
### 0.113s elapsed time, 0.434s cpu time, 0.082s GC time
Loading theory "HOL-Analysis.Operator_Norm" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
Proofs for inductive predicate(s) "generate_topology_on"
  Proving monotonicity ...
### theory "HOL-Analysis.Operator_Norm"
### 0.115s elapsed time, 0.452s cpu time, 0.059s GC time
Loading theory "HOL-Analysis.Poly_Roots" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Poly_Roots"
### 0.129s elapsed time, 0.492s cpu time, 0.098s GC time
Loading theory "HOL-Analysis.Product_Vector" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
### theory "HOL-Analysis.Abstract_Topology"
### 2.724s elapsed time, 10.602s cpu time, 1.341s GC time
Loading theory "HOL-Analysis.Abstract_Limits" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Algebra.Ideal"
### 2.182s elapsed time, 8.469s cpu time, 1.149s GC time
Loading theory "HOL-Algebra.RingHom" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group" via "HOL-Algebra.UnivPoly")
locale module_prod
  fixes s1 :: "'a => 'b => 'b"
    and s2 :: "'a => 'c => 'c"
  assumes "module_prod s1 s2"
### theory "HOL-Analysis.Abstract_Limits"
### 0.240s elapsed time, 0.934s cpu time, 0.108s GC time
Loading theory "HOL-Computational_Algebra.Polynomial" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series" via "HOL-Computational_Algebra.Polynomial_FPS")
locale vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
  assumes "vector_space_prod (*a) (*b)"
locale ring_hom_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and S :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
  assumes "ring_hom_ring R S h"
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (real_vector, real_vector) real_vector
  scaleR_prod == scaleR :: real => 'a * 'b => 'a * 'b
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (metric_space, metric_space) dist
  dist_prod == dist :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (uniformity, uniformity) uniformity
  uniformity_prod == uniformity :: (('a * 'b) * 'a * 'b) filter
instantiation
  prod :: (uniform_space, uniform_space) uniform_space
instantiation
  prod :: (metric_space, metric_space) uniformity_dist
instantiation
  prod :: (metric_space, metric_space) metric_space
instantiation
  prod :: (real_normed_vector, real_normed_vector) real_normed_vector
  sgn_prod == sgn :: 'a * 'b => 'a * 'b
  norm_prod == norm :: 'a * 'b => real
locale finite_dimensional_vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and B1 :: "'b set"
    and B2 :: "'c set"
  assumes "finite_dimensional_vector_space_prod (*a) (*b) B1 B2"
### theory "HOL-Analysis.Product_Vector"
### 1.881s elapsed time, 7.108s cpu time, 3.676s GC time
Loading theory "HOL-Analysis.Elementary_Topology" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Algebra.RingHom"
### 1.818s elapsed time, 6.871s cpu time, 3.627s GC time
Loading theory "HOL-Algebra.QuotRing" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary" via "HOL-Algebra.IntRing")
instantiation
  poly :: (zero) zero
  zero_poly == zero_class.zero :: 'a poly
consts
  Poly :: "'a list => 'a poly"
instantiation
  poly :: ({zero,equal}) equal
  equal_poly == equal_class.equal :: 'a poly => 'a poly => bool
class topological_space = open +
  assumes "open_UNIV": "open UNIV"
  assumes "open_Int": "!!S T. [| open S; open T |] ==> open (S Int T)"
  assumes "open_Union": "!!K. Ball K open ==> open (\<Union> K)"
instantiation
  poly :: (comm_monoid_add) comm_monoid_add
  plus_poly == plus :: 'a poly => 'a poly => 'a poly
locale countable_basis
  fixes p :: "'a set => bool"
    and B :: "'a set set"
  assumes "countable_basis p B"
instantiation
  poly :: (cancel_comm_monoid_add) cancel_comm_monoid_add
  minus_poly == minus :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (ab_group_add) ab_group_add
  uminus_poly == uminus :: 'a poly => 'a poly
class second_countable_topology = topological_space +
  assumes
    "ex_countable_subbasis":
      "EX B. countable B & open = generate_topology B"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  poly :: (comm_semiring_0) comm_semiring_0
  times_poly == times :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (comm_semiring_1) comm_semiring_1
  one_poly == one_class.one :: 'a poly
instantiation
  poly :: (linordered_idom) linordered_idom
  sgn_poly == sgn :: 'a poly => 'a poly
  abs_poly == abs :: 'a poly => 'a poly
  less_eq_poly == less_eq :: 'a poly => 'a poly => bool
  less_poly == less :: 'a poly => 'a poly => bool
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "algebraic_int"
### theory "HOL-Analysis.Elementary_Topology"
### 2.086s elapsed time, 8.117s cpu time, 1.058s GC time
Loading theory "HOL-Algebra.UnivPoly" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication" via "HOL-Algebra.Multiplicative_Group")
  Proving monotonicity ...
instantiation
  poly :: (idom_divide) idom_divide
  divide_poly == divide :: 'a poly => 'a poly => 'a poly
locale bound
  fixes z :: "'a"
    and n :: "nat"
    and f :: "nat => 'a"
  assumes "bound z n f"
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
### theory "HOL-Algebra.QuotRing"
### 3.362s elapsed time, 12.823s cpu time, 4.830s GC time
Loading theory "HOL-Analysis.Euclidean_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
locale Ring.ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "ring R"
locale UP
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  defines "P == UP R"
instantiation
  poly :: ({idom_divide,semidom_divide_unit_factor}) normalization_semidom
  normalize_poly == normalize :: 'a poly => 'a poly
  unit_factor_poly == unit_factor :: 'a poly => 'a poly
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
locale UP_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_cring R"
  defines "P == UP R"
locale UP_domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_domain R"
  defines "P == UP R"
locale UP
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  defines "P == UP R"
class euclidean_space = real_inner +
  fixes Basis :: "'a set"
  assumes "nonempty_Basis": "Basis ~= {}"
  assumes "finite_Basis": "finite Basis"
  assumes
    "inner_Basis":
      "!!u v.
          [| u : Basis; v : Basis |]
          ==> inner u v = (if u = v then 1 else 0)"
  assumes
    "euclidean_all_zero_iff":
      "!!x. (ALL u:Basis. inner x u = 0) = (x = (0::'a))"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
locale UP_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_cring R"
  defines "P == UP R"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
class field_unit_factor = field + unit_factor +
  assumes "unit_factor_field": "unit_factor = id"
instantiation
  real :: euclidean_space
  Basis_real == Basis :: real set
Proofs for inductive predicate(s) "eucl_rel_poly"
instantiation
  complex :: euclidean_space
  Basis_complex == Basis :: complex set
  Proving monotonicity ...
instantiation
  prod :: (real_inner, real_inner) real_inner
  inner_prod == inner :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (euclidean_space, euclidean_space) euclidean_space
  Basis_prod == Basis :: ('a * 'b) set
instantiation
  poly :: (field) semidom_modulo
  modulo_poly == modulo :: 'a poly => 'a poly => 'a poly
### Cannot skip proof of schematic goal statement
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Euclidean_Space"
### 1.806s elapsed time, 7.063s cpu time, 0.737s GC time
Loading theory "HOL-Analysis.Finite_Cartesian_Product" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
bundle vec_syntax
bundle no_vec_syntax
instantiation
  vec :: (zero, finite) zero
  zero_vec == zero_class.zero :: ('a, 'b) vec
instantiation
  vec :: (plus, finite) plus
  plus_vec == plus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (minus, finite) minus
  minus_vec == minus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
locale UP_domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_domain R"
  defines "P == UP R"
instantiation
  vec :: (uminus, finite) uminus
  uminus_vec == uminus :: ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (times, finite) times
  times_vec == times :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (one, finite) one
  one_vec == one_class.one :: ('a, 'b) vec
instantiation
  vec :: (ord, finite) ord
  less_eq_vec == less_eq :: ('a, 'b) vec => ('a, 'b) vec => bool
  less_vec == less :: ('a, 'b) vec => ('a, 'b) vec => bool
instantiation
  vec :: (real_vector, finite) real_vector
  scaleR_vec == scaleR :: real => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (topological_space, finite) topological_space
  open_vec == open :: ('a, 'b) vec set => bool
instantiation
  vec :: (metric_space, finite) dist
  dist_vec == dist :: ('a, 'b) vec => ('a, 'b) vec => real
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
instantiation
  vec :: (metric_space, finite) uniformity_dist
  uniformity_vec == uniformity :: (('a, 'b) vec * ('a, 'b) vec) filter
instantiation
  vec :: (metric_space, finite) metric_space
instantiation
  vec :: (real_normed_vector, finite) real_normed_vector
  sgn_vec == sgn :: ('a, 'b) vec => ('a, 'b) vec
  norm_vec == norm :: ('a, 'b) vec => real
instantiation
  vec :: (real_inner, finite) real_inner
  inner_vec == inner :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (euclidean_space, finite) euclidean_space
  Basis_vec == Basis :: ('a, 'b) vec set
### theory "HOL-Computational_Algebra.Polynomial"
### 8.318s elapsed time, 31.910s cpu time, 9.832s GC time
Loading theory "HOL-Analysis.Linear_Algebra" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine")
locale UP_domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_domain R"
  defines "P == UP R"
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
### theory "HOL-Analysis.Finite_Cartesian_Product"
### 1.809s elapsed time, 7.011s cpu time, 0.922s GC time
Loading theory "HOL-Computational_Algebra.Fundamental_Theorem_Algebra" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
class real_inner = real_normed_vector +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. x \<bullet> y = y \<bullet> x"
    and
    "inner_add_left":
      "!!x y z. (x + y) \<bullet> z = x \<bullet> z + y \<bullet> z"
    and
    "inner_scaleR_left":
      "!!r x y. r *\<^sub>R x \<bullet> y = r * (x \<bullet> y)"
    and "inner_ge_zero": "!!x. 0 <= x \<bullet> x"
    and "inner_eq_zero_iff": "!!x. (x \<bullet> x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (x \<bullet> x)"
### theory "HOL-Computational_Algebra.Euclidean_Algorithm"
### 11.935s elapsed time, 45.961s cpu time, 11.737s GC time
Loading theory "HOL-Computational_Algebra.Normalized_Fraction" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
locale UP_domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_domain R"
  defines "P == UP R"
### theory "HOL-Computational_Algebra.Fundamental_Theorem_Algebra"
### 13.119s elapsed time, 43.217s cpu time, 42.116s GC time
Loading theory "HOL-Computational_Algebra.Primes" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary" via "HOL-Algebra.IntRing")
locale Ring.ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "ring R"
locale UP
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  defines "P == UP R"
locale fract_as_normalized_quot
### theory "HOL-Computational_Algebra.Primes"
### 0.362s elapsed time, 1.415s cpu time, 0.228s GC time
Loading theory "HOL-Computational_Algebra.Nth_Powers" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
### theory "HOL-Computational_Algebra.Normalized_Fraction"
### 13.339s elapsed time, 44.107s cpu time, 42.149s GC time
Loading theory "HOL-Computational_Algebra.Squarefree" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
### theory "HOL-Analysis.Linear_Algebra"
### 13.916s elapsed time, 46.338s cpu time, 42.461s GC time
Loading theory "HOL-Number_Theory.Cong" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "HOL-Number_Theory.Residues")
### theory "HOL-Computational_Algebra.Nth_Powers"
### 0.239s elapsed time, 0.943s cpu time, 0.182s GC time
Loading theory "HOL-Algebra.IntRing" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.General_Auxiliary")
### theory "HOL-Computational_Algebra.Squarefree"
### 0.202s elapsed time, 0.795s cpu time, 0.182s GC time
Loading theory "HOL-Number_Theory.Eratosthenes" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
class unique_euclidean_semiring = euclidean_semiring_cancel +
  fixes division_segment :: "'a => 'a"
  assumes
    "euclidean_size_mult":
      "!!a b. euclidean_size (a * b) = euclidean_size a * euclidean_size b"
  assumes "is_unit_division_segment": "!!a. is_unit (division_segment a)"
    and
    "division_segment_mult":
      "!!a b.
          [| a ~= (0::'a); b ~= (0::'a) |]
          ==> division_segment (a * b) =
              division_segment a * division_segment b"
    and
    "division_segment_mod":
      "!!b a.
          [| b ~= (0::'a); ~ b dvd a |]
          ==> division_segment (a mod b) = division_segment b"
  assumes
    "div_bounded":
      "!!b r q.
          [| b ~= (0::'a); division_segment r = division_segment b;
             euclidean_size r < euclidean_size b |]
          ==> (q * b + r) div b = q"
locale UP_pre_univ_prop
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and S :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_pre_univ_prop R S h"
  defines "P == UP R"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Number_Theory.Eratosthenes"
### 0.247s elapsed time, 0.969s cpu time, 0.091s GC time
Loading theory "HOL-Analysis.Affine" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex")
locale UP_univ_prop
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and S :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
    and P :: "('a, nat => 'a) up_ring"  (structure)
    and s :: "'c"
    and Eval :: "(nat => 'a) => 'c"
  assumes "UP_univ_prop R S h s"
  defines "P == UP R"
    and "Eval == eval R S h s"
### theory "HOL-Analysis.Affine"
### 0.528s elapsed time, 2.073s cpu time, 0.363s GC time
Loading theory "HOL-Analysis.Convex" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Number_Theory.Cong"
### 0.997s elapsed time, 3.922s cpu time, 0.637s GC time
Loading theory "HOL-Number_Theory.Mod_Exp" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
### Cannot skip proof of schematic goal statement
locale UP_pre_univ_prop
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and S :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_pre_univ_prop R S h"
  defines "P == UP R"
### theory "HOL-Algebra.IntRing"
### 1.257s elapsed time, 4.955s cpu time, 0.686s GC time
Loading theory "Finitely_Generated_Abelian_Groups.General_Auxiliary" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds")
class euclidean_semiring_cancel = euclidean_semiring +
  assumes
    "div_mult_self1":
      "!!b a c. b ~= (0::'a) ==> (a + c * b) div b = c + a div b"
    and
    "div_mult_mult1":
      "!!c a b. c ~= (0::'a) ==> c * a div (c * b) = a div b"
### theory "HOL-Number_Theory.Mod_Exp"
### 0.545s elapsed time, 2.143s cpu time, 0.358s GC time
Loading theory "HOL-Analysis.Cartesian_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants")
### theory "Finitely_Generated_Abelian_Groups.General_Auxiliary"
### 0.647s elapsed time, 2.551s cpu time, 0.453s GC time
Loading theory "HOL-Computational_Algebra.Field_as_Ring" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem" via "Sturm_Tarski.Sturm_Tarski")
### theory "HOL-Analysis.Convex"
### 1.066s elapsed time, 4.205s cpu time, 0.685s GC time
Loading theory "HOL-Computational_Algebra.Formal_Power_Series" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.FPS_Convergence")
instantiation
  fps :: (zero) zero
  zero_fps == zero_class.zero :: 'a fps
instantiation
  fps :: ({one,zero}) one
  one_fps == one_class.one :: 'a fps
instantiation
  fps :: (plus) plus
  plus_fps == plus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (minus) minus
  minus_fps == minus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (uminus) uminus
  uminus_fps == uminus :: 'a fps => 'a fps
instantiation
  fps :: ({comm_monoid_add,times}) times
  times_fps == times :: 'a fps => 'a fps => 'a fps
class field = division_ring + idom_divide +
  assumes "field_inverse": "!!a. a ~= (0::'a) ==> inverse a * a = (1::'a)"
  assumes "field_divide_inverse": "!!a b. a / b = a * inverse b"
  assumes "field_inverse_zero": "inverse (0::'a) = (0::'a)"
locale linear_first_finite_dimensional_vector_space
  fixes scaleB :: "'a => 'b => 'b"  (infixr \<open>*b\<close> 75)
    and scaleC :: "'a => 'c => 'c"  (infixr \<open>*c\<close> 75)
    and BasisB :: "'b set"
    and f :: "'b => 'c"
  assumes "linear_first_finite_dimensional_vector_space (*b) (*c) BasisB f"
instantiation
  real ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_real == division_segment :: real => real
  normalize_real == normalize :: real => real
  unit_factor_real == unit_factor :: real => real
  euclidean_size_real == euclidean_size :: real => nat
  modulo_real == modulo :: real => real => real
instantiation
  real :: euclidean_ring_gcd
  Gcd_real == Gcd :: real set => real
  Lcm_real == Lcm :: real set => real
  gcd_real == gcd :: real => real => real
  lcm_real == lcm :: real => real => real
locale UP_pre_univ_prop
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and S :: "('c, 'd) ring_scheme"  (structure)
    and h :: "'a => 'c"
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_pre_univ_prop R S h"
  defines "P == UP R"
instantiation
  rat ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_rat == division_segment :: rat => rat
  normalize_rat == normalize :: rat => rat
  unit_factor_rat == unit_factor :: rat => rat
  euclidean_size_rat == euclidean_size :: rat => nat
  modulo_rat == modulo :: rat => rat => rat
locale Group.monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.monoid G"
instantiation
  fps :: (zero) unit_factor
  unit_factor_fps == unit_factor :: 'a fps => 'a fps
instantiation
  rat :: euclidean_ring_gcd
  Gcd_rat == Gcd :: rat set => rat
  Lcm_rat == Lcm :: rat set => rat
  gcd_rat == gcd :: rat => rat => rat
  lcm_rat == lcm :: rat => rat => rat
instantiation
  fps :: ({minus,zero}) dist
  dist_fps == dist :: 'a fps => 'a fps => real
instantiation
  complex ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_complex == division_segment :: complex => complex
  normalize_complex == normalize :: complex => complex
  unit_factor_complex == unit_factor :: complex => complex
  euclidean_size_complex == euclidean_size :: complex => nat
  modulo_complex == modulo :: complex => complex => complex
instantiation
  fps :: (group_add) metric_space
  uniformity_fps == uniformity :: ('a fps * 'a fps) filter
  open_fps == open :: 'a fps set => bool
instantiation
  complex :: euclidean_ring_gcd
  Gcd_complex == Gcd :: complex set => complex
  Lcm_complex == Lcm :: complex set => complex
  gcd_complex == gcd :: complex => complex => complex
  lcm_complex == lcm :: complex => complex => complex
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
### theory "HOL-Computational_Algebra.Field_as_Ring"
### 1.266s elapsed time, 4.983s cpu time, 0.727s GC time
Loading theory "HOL-Computational_Algebra.Polynomial_Factorial" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
### theory "HOL-Analysis.Cartesian_Space"
### 1.752s elapsed time, 6.902s cpu time, 1.054s GC time
Loading theory "HOL-Analysis.Determinants" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  fps :: ({inverse,comm_monoid_add,times,uminus}) inverse
  inverse_fps == inverse :: 'a fps => 'a fps
  divide_fps == divide :: 'a fps => 'a fps => 'a fps
locale UP_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_cring R"
  defines "P == UP R"
locale UP_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_cring R"
  defines "P == UP R"
### Cannot skip proof of schematic goal statement
instantiation
  fps :: ({inverse,uminus,comm_semiring_1}) modulo
  modulo_fps == modulo :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (field) normalization_semidom_multiplicative
  normalize_fps == normalize :: 'a fps => 'a fps
instantiation
  fps :: (field) euclidean_ring_cancel
  euclidean_size_fps == euclidean_size :: 'a fps => nat
instantiation
  fps :: (field) euclidean_ring_gcd
  Gcd_fps == Gcd :: 'a fps set => 'a fps
  Lcm_fps == Lcm :: 'a fps set => 'a fps
  gcd_fps == gcd :: 'a fps => 'a fps => 'a fps
  lcm_fps == lcm :: 'a fps => 'a fps => 'a fps
instantiation
  poly :: ({factorial_ring_gcd,semiring_gcd_mult_normalize})
    factorial_ring_gcd
  Gcd_poly == Gcd :: 'a poly set => 'a poly
  Lcm_poly == Lcm :: 'a poly set => 'a poly
  gcd_poly == gcd :: 'a poly => 'a poly => 'a poly
  lcm_poly == lcm :: 'a poly => 'a poly => 'a poly
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  poly :: ({factorial_ring_gcd,field,semiring_gcd_mult_normalize})
    {normalization_euclidean_semiring,unique_euclidean_ring}
  division_segment_poly == division_segment :: 'a poly => 'a poly
  euclidean_size_poly == euclidean_size :: 'a poly => nat
### theory "HOL-Analysis.Determinants"
### 2.258s elapsed time, 8.560s cpu time, 5.139s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Computational_Algebra.Polynomial_Factorial"
### 2.477s elapsed time, 9.425s cpu time, 5.236s GC time
Loading theory "Sturm_Tarski.PolyMisc" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem" via "Sturm_Tarski.Sturm_Tarski")
### theory "Sturm_Tarski.PolyMisc"
### 0.079s elapsed time, 0.317s cpu time, 0.000s GC time
Loading theory "HOL-Library.Complex_Order" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Infinite_Sum")
instantiation
  complex :: order
  less_eq_complex == less_eq :: complex => complex => bool
  less_complex == less :: complex => complex => bool
### theory "HOL-Library.Complex_Order"
### 0.091s elapsed time, 0.344s cpu time, 0.110s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Discrete"
### 0.185s elapsed time, 0.735s cpu time, 0.105s GC time
Loading theory "HOL-Library.Going_To_Filter" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis")
### theory "HOL-Algebra.UnivPoly"
### 24.758s elapsed time, 88.230s cpu time, 55.251s GC time
Loading theory "HOL-Algebra.Multiplicative_Group" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" via "Finitely_Generated_Abelian_Groups.Set_Multiplication")
### theory "HOL-Library.Going_To_Filter"
### 0.102s elapsed time, 0.415s cpu time, 0.000s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.874s elapsed time, 3.447s cpu time, 0.454s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "HOL-Library.Indicator_Function"
### 0.442s elapsed time, 1.744s cpu time, 0.248s GC time
Loading theory "HOL-Analysis.Abstract_Topology_2" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected")
locale UP_ring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_ring R"
  defines "P == UP R"
bundle fps_notation
### theory "HOL-Computational_Algebra.Formal_Power_Series"
### 5.124s elapsed time, 19.849s cpu time, 6.752s GC time
Loading theory "HOL-Computational_Algebra.Polynomial_FPS" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.734s elapsed time, 2.897s cpu time, 0.433s GC time
Loading theory "HOL-Library.Landau_Symbols" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions")
locale UP_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_cring R"
  defines "P == UP R"
locale Group.group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.group G"
locale landau_symbol
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
  assumes "landau_symbol L L' Lr"
signature POLY_FPS =
  sig
    val eq_conv: conv
    val eq_simproc: cterm -> thm option
    val reify_conv: conv
  end
structure Poly_Fps:
  sig
    val const_binop_conv: string -> conv -> cterm -> thm
    val eq_conv: cterm -> thm
    val eq_simproc: cterm -> thm option
    val reify_conv: conv
  end
consts
  prefix_length_aux :: "('a => bool) => nat => 'a list => nat"
locale landau_pair
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and l :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and l' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
    and lr :: "'a filter => ('a => real) => ('a => real) set"
    and R :: "real => real => bool"
  assumes "landau_pair L l L' l' Lr lr R"
### theory "HOL-Computational_Algebra.Polynomial_FPS"
### 0.629s elapsed time, 2.459s cpu time, 0.345s GC time
Loading theory "HOL-Computational_Algebra.Formal_Laurent_Series" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS" via "HOL-Computational_Algebra.Computational_Algebra")
locale landau_pair
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and l :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and l' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
    and lr :: "'a filter => ('a => real) => ('a => real) set"
    and R :: "real => real => bool"
  assumes "landau_pair L l L' l' Lr lr R"
locale landau_pair
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and l :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and l' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
    and lr :: "'a filter => ('a => real) => ('a => real) set"
    and R :: "real => real => bool"
  assumes "landau_pair L l L' l' Lr lr R"
instantiation
  fls :: (zero) zero
  zero_fls == zero_class.zero :: 'a fls
instantiation
  fls :: ({one,zero}) one
  one_fls == one_class.one :: 'a fls
### theory "HOL-Analysis.Abstract_Topology_2"
### 1.435s elapsed time, 5.618s cpu time, 0.900s GC time
Loading theory "HOL-Analysis.Connected" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
locale Ring.field
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "field R"
locale landau_symbol
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
  assumes "landau_symbol L L' Lr"
### theory "HOL-Analysis.Connected"
### 0.354s elapsed time, 1.380s cpu time, 0.273s GC time
Loading theory "HOL-Analysis.Function_Topology" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
instantiation
  fls :: (monoid_add) plus
  plus_fls == plus :: 'a fls => 'a fls => 'a fls
locale UP_cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_cring R"
  defines "P == UP R"
instantiation
  fls :: (group_add) minus
  minus_fls == minus :: 'a fls => 'a fls => 'a fls
locale landau_symbol
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
  assumes "landau_symbol L L' Lr"
instantiation
  fls :: (group_add) uminus
  uminus_fls == uminus :: 'a fls => 'a fls
instantiation
  fls :: ({comm_monoid_add,times}) times
  times_fls == times :: 'a fls => 'a fls => 'a fls
locale UP_domain
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and P :: "('a, nat => 'a) up_ring"  (structure)
  assumes "UP_domain R"
  defines "P == UP R"
bundle asymp_equiv_notation
instantiation
  fun :: (type, topological_space) topological_space
  open_fun == open :: ('a => 'b) set => bool
locale Ring.field
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "field R"
### theory "HOL-Algebra.Multiplicative_Group"
### 2.977s elapsed time, 11.666s cpu time, 1.888s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Set_Multiplication" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" via "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups")
instantiation
  fls :: ({inverse,comm_monoid_add,times,uminus}) inverse
  inverse_fls == inverse :: 'a fls => 'a fls
  divide_fls == divide :: 'a fls => 'a fls => 'a fls
### theory "HOL-Library.Landau_Symbols"
### 2.004s elapsed time, 7.804s cpu time, 1.425s GC time
Loading theory "HOL-Analysis.Elementary_Metric_Spaces" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Elementary_Normed_Spaces")
### theory "HOL-Analysis.Function_Topology"
### 0.808s elapsed time, 3.144s cpu time, 0.610s GC time
Loading theory "HOL-Analysis.Product_Topology" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected" via "HOL-Analysis.T1_Spaces")
### theory "Finitely_Generated_Abelian_Groups.Set_Multiplication"
### 0.228s elapsed time, 0.880s cpu time, 0.233s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Group_Hom" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds")
### theory "HOL-Analysis.Product_Topology"
### 1.772s elapsed time, 6.655s cpu time, 5.572s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds" via "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend")
### theory "Finitely_Generated_Abelian_Groups.Group_Hom"
### 1.837s elapsed time, 6.906s cpu time, 5.656s GC time
Loading theory "HOL-Analysis.T1_Spaces" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected")
### theory "Finitely_Generated_Abelian_Groups.Miscellaneous_Groups"
### 0.376s elapsed time, 1.468s cpu time, 0.284s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" via "Finitely_Generated_Abelian_Groups.IDirProds")
### theory "HOL-Analysis.T1_Spaces"
### 0.315s elapsed time, 1.239s cpu time, 0.200s GC time
Loading theory "HOL-Analysis.Lindelof_Spaces" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
instantiation
  fls :: (group_add) metric_space
  dist_fls == dist :: 'a fls => 'a fls => real
  uniformity_fls == uniformity :: ('a fls * 'a fls) filter
  open_fls == open :: 'a fls set => bool
### theory "HOL-Analysis.Lindelof_Spaces"
### 0.134s elapsed time, 0.526s cpu time, 0.119s GC time
Loading theory "HOL-Library.Liminf_Limsup" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
class heine_borel = metric_space +
  assumes
    "bounded_imp_convergent_subsequence":
      "!!f. bounded (range f) ==>
            EX l r. strict_mono r & (f o r) \<longlonglongrightarrow> l"
bundle fls_notation
### theory "HOL-Computational_Algebra.Formal_Laurent_Series"
### 3.892s elapsed time, 14.926s cpu time, 7.114s GC time
Loading theory "HOL-Computational_Algebra.Computational_Algebra" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "Bernoulli.Bernoulli_FPS")
### theory "Finitely_Generated_Abelian_Groups.Generated_Groups_Extend"
### 0.317s elapsed time, 1.249s cpu time, 0.174s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Finite_And_Cyclic_Groups" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds")
### theory "HOL-Library.Liminf_Limsup"
### 0.532s elapsed time, 2.096s cpu time, 0.241s GC time
Loading theory "Finitely_Generated_Abelian_Groups.IDirProds" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds" via "Finitely_Generated_Abelian_Groups.Finite_Product_Extend")
locale finite_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "finite_group G"
locale finite_comm_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "finite_comm_group G"
locale cyclic_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
    and gen :: "'a"
  assumes "Finite_And_Cyclic_Groups.cyclic_group G gen"
### theory "HOL-Analysis.Elementary_Metric_Spaces"
### 3.430s elapsed time, 13.169s cpu time, 6.516s GC time
Loading theory "HOL-Analysis.Elementary_Normed_Spaces" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
locale finite_cyclic_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
    and gen :: "'a"
  assumes "finite_cyclic_group G gen"
### theory "Finitely_Generated_Abelian_Groups.Finite_And_Cyclic_Groups"
### 1.449s elapsed time, 5.702s cpu time, 0.739s GC time
Loading theory "HOL-Analysis.Function_Metric" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Computational_Algebra.Computational_Algebra"
### 1.482s elapsed time, 5.833s cpu time, 0.739s GC time
Loading theory "HOL-Library.Nonpos_Ints" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental" via "HOL-Analysis.Complex_Analysis_Basics")
### theory "Finitely_Generated_Abelian_Groups.IDirProds"
### 1.152s elapsed time, 4.534s cpu time, 0.618s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Finite_Product_Extend" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" via "Finitely_Generated_Abelian_Groups.DirProds")
### theory "HOL-Library.Nonpos_Ints"
### 0.193s elapsed time, 0.756s cpu time, 0.154s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat")
instantiation
  fun :: (countable, metric_space) metric_space
  dist_fun == dist :: ('a => 'b) => ('a => 'b) => real
  uniformity_fun == uniformity :: (('a => 'b) * ('a => 'b)) filter
### theory "HOL-Analysis.Function_Metric"
### 0.381s elapsed time, 1.491s cpu time, 0.224s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Periodic_Fun"
### 0.199s elapsed time, 0.771s cpu time, 0.158s GC time
Loading theory "Bernoulli.Periodic_Bernpoly" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin")
### theory "Finitely_Generated_Abelian_Groups.Finite_Product_Extend"
### 0.546s elapsed time, 2.141s cpu time, 0.316s GC time
Loading theory "Finitely_Generated_Abelian_Groups.DirProds" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups")
### theory "Bernoulli.Periodic_Bernpoly"
### 0.285s elapsed time, 1.110s cpu time, 0.184s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Group_Relations" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters" via "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups")
### theory "HOL-Library.Order_Continuity"
### 0.671s elapsed time, 2.624s cpu time, 0.411s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
### theory "HOL-Analysis.Elementary_Normed_Spaces"
### 1.416s elapsed time, 5.549s cpu time, 0.819s GC time
Loading theory "HOL-Library.Sum_of_Squares" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Norm_Arith")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### theory "Finitely_Generated_Abelian_Groups.Group_Relations"
### 0.377s elapsed time, 1.456s cpu time, 0.268s GC time
Loading theory "HOL-Number_Theory.Fib" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
Found termination order: "size <*mlex*> {}"
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
### theory "Finitely_Generated_Abelian_Groups.DirProds"
### 0.935s elapsed time, 3.601s cpu time, 0.773s GC time
Loading theory "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Draft.Multiplicative_Characters")
### theory "HOL-Number_Theory.Fib"
### 0.350s elapsed time, 1.339s cpu time, 0.321s GC time
Loading theory "HOL-Number_Theory.Prime_Powers" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.871s elapsed time, 3.340s cpu time, 0.693s GC time
Loading theory "HOL-Library.Extended_Real" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
locale fin_gen_comm_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
    and gen :: "'a set"
  assumes "fin_gen_comm_group G gen"
### ML warning (line 261 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_abs) has not been referenced.
### ML warning (line 265 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_max) has not been referenced.
### ML warning (line 269 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_min) has not been referenced.
### ML warning (line 379 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Pattern is not exhaustive.
signature FUNC =
  sig
    exception DUP of key
    exception SAME
    exception UNDEF of key
    val apply: 'a table -> key -> 'a
    val applyd: 'a table -> (key -> 'a) -> key -> 'a
    val build: ('a table -> 'a table) -> 'a table
    val choose: 'a table -> key * 'a
    val combine:
       ('a -> 'a -> 'a) -> ('a -> bool) -> 'a table -> 'a table -> 'a table
    val cons_list: key * 'a -> 'a list table -> 'a list table
    val default: key * 'a -> 'a table -> 'a table
    val defined: 'a table -> key -> bool
    val delete: key -> 'a table -> 'a table
    val delete_safe: key -> 'a table -> 'a table
    val dest: 'a table -> (key * 'a) list
    val dest_list: 'a list table -> (key * 'a) list
    val dom: 'a table -> key list
    val empty: 'a table
    val exists: (key * 'a -> bool) -> 'a table -> bool
    val fold: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val fold_rev: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val forall: (key * 'a -> bool) -> 'a table -> bool
    val get_first: (key * 'a -> 'b option) -> 'a table -> 'b option
    val insert: ('a * 'a -> bool) -> key * 'a -> 'a table -> 'a table
    val insert_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val insert_set: key -> set -> set
    val is_empty: 'a table -> bool
    val is_single: 'a table -> bool
    val join: (key -> 'a * 'a -> 'a) -> 'a table * 'a table -> 'a table
    type key
    val keys: 'a table -> key list
    val lookup: 'a table -> key -> 'a option
    val lookup_key: 'a table -> key -> (key * 'a) option
    val lookup_list: 'a list table -> key -> 'a list
    val make: (key * 'a) list -> 'a table
    val make_list: (key * 'a) list -> 'a list table
    val make_set: key list -> set
    val map: (key -> 'a -> 'b) -> 'a table -> 'b table
    val map_default: key * 'a -> ('a -> 'a) -> 'a table -> 'a table
    val map_entry: key -> ('a -> 'a) -> 'a table -> 'a table
    val max: 'a table -> (key * 'a) option
    val member: ('a * 'b -> bool) -> 'b table -> key * 'a -> bool
    val merge: ('a * 'a -> bool) -> 'a table * 'a table -> 'a table
    val merge_list:
       ('a * 'a -> bool) -> 'a list table * 'a list table -> 'a list table
    val min: 'a table -> (key * 'a) option
    val onefunc: key * 'a -> 'a table
    val remove: ('a * 'b -> bool) -> key * 'a -> 'b table -> 'b table
    val remove_list:
       ('a * 'b -> bool) -> key * 'a -> 'b list table -> 'b list table
    val remove_set: key -> set -> set
    type set = unit table
    type 'a table
    val tryapplyd: 'a table -> key -> 'a -> 'a
    val update: key * 'a -> 'a table -> 'a table
    val update_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val update_new: key * 'a -> 'a table -> 'a table
    val updatep: (key * 'a -> bool) -> key * 'a -> 'a table -> 'a table
  end
functor FuncFun (Key: KEY): FUNC
signature REAL_ARITH =
  sig
    type cert_conv = cterm -> thm * pss_tree
    val cterm_of_rat: Rat.rat -> cterm
    val dest_ratconst: cterm -> Rat.rat
    val gen_gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * conv * conv * prover
           -> cert_conv
    val gen_prover_real_arith: Proof.context -> prover -> cert_conv
    val gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * prover
           -> cert_conv
    val is_ratconst: cterm -> bool
    datatype positivstellensatz
    =
         Axiom_eq of int
       | Axiom_le of int
       | Axiom_lt of int
       | Eqmul of FuncUtil.poly * positivstellensatz
       | Product of positivstellensatz * positivstellensatz
       | Rational_eq of Rat.rat
       | Rational_le of Rat.rat
       | Rational_lt of Rat.rat
       | Square of FuncUtil.poly
       | Sum of positivstellensatz * positivstellensatz
    type prover =
       tree_choice list ->
         (thm list * thm list * thm list -> positivstellensatz -> thm) ->
           thm list * thm list * thm list -> thm * pss_tree
    datatype pss_tree
    = Branch of pss_tree * pss_tree | Cert of positivstellensatz | Trivial
    val real_linear_prover:
       (thm list * thm list * thm list -> positivstellensatz -> thm) ->
         thm list * thm list * thm list -> thm * pss_tree
    datatype tree_choice = Left | Right
  end
structure FuncUtil:
  sig
    structure Ctermfunc: FUNC
    structure Intfunc: FUNC
    structure Intpairfunc: FUNC
    structure Monomialfunc: FUNC
    structure Ratfunc: FUNC
    structure Symfunc: FUNC
    structure Termfunc: FUNC
    val dest_monomial: 'a Ctermfunc.table -> (cterm * 'a) list
    type monomial = int Ctermfunc.table
    val monomial_ord: int Ctermfunc.table * int Ctermfunc.table -> order
    val monomial_order: int Ctermfunc.table * int Ctermfunc.table -> order
    type poly = Rat.rat Monomialfunc.table
  end
structure RealArith: REAL_ARITH
signature POSITIVSTELLENSATZ_TOOLS =
  sig
    val print_cert: RealArith.pss_tree -> string
    val read_cert: Proof.context -> string -> RealArith.pss_tree
  end
structure Positivstellensatz_Tools: POSITIVSTELLENSATZ_TOOLS
instantiation
  enat :: linorder_topology
  open_enat == open :: enat set => bool
signature SUM_OF_SQUARES =
  sig
    exception Failure of string
    val debug: bool Config.T
    val debug_message: Proof.context -> (unit -> string) -> unit
    datatype proof_method
    = Certificate of RealArith.pss_tree | Prover of string -> string
    val sos_tac:
       (RealArith.pss_tree -> unit) ->
         proof_method -> Proof.context -> int -> tactic
    val trace: bool Config.T
    val trace_message: Proof.context -> (unit -> string) -> unit
  end
structure Sum_of_Squares: SUM_OF_SQUARES
### theory "Finitely_Generated_Abelian_Groups.Finitely_Generated_Abelian_Groups"
### 0.956s elapsed time, 3.632s cpu time, 0.809s GC time
Loading theory "Draft.Multiplicative_Characters" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters")
signature SOS_WRAPPER =
  sig val sos_tac: Proof.context -> string option -> int -> tactic end
structure SOS_Wrapper: SOS_WRAPPER
### theory "HOL-Library.Sum_of_Squares"
### 1.672s elapsed time, 6.371s cpu time, 1.441s GC time
Loading theory "HOL-Analysis.Norm_Arith" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Number_Theory.Prime_Powers"
### 1.058s elapsed time, 3.998s cpu time, 0.928s GC time
Loading theory "HOL-Number_Theory.Totient" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "HOL-Number_Theory.Residues")
bundle character_syntax
instantiation
  ereal :: uminus
  uminus_ereal == uminus :: ereal => ereal
locale character
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
    and \<chi> :: "'a => complex"
  assumes "character G \<chi>"
Found termination order: "{}"
instantiation
  ereal :: infinity
  infinity_ereal == infinity :: ereal
locale finite_comm_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "finite_comm_group G"
### ML warning (line 103 of "~~/src/HOL/Analysis/normarith.ML"):
### Matches are not exhaustive.
signature NORM_ARITH =
  sig
    val norm_arith: Proof.context -> conv
    val norm_arith_tac: Proof.context -> int -> tactic
  end
structure NormArith: NORM_ARITH
instantiation
  ereal :: abs
  abs_ereal == abs :: ereal => ereal
### theory "HOL-Analysis.Norm_Arith"
### 0.387s elapsed time, 1.449s cpu time, 0.366s GC time
Loading theory "HOL-Analysis.Topology_Euclidean_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex_Euclidean_Space")
instantiation
  ereal :: {comm_monoid_add,zero_neq_one}
  one_ereal == one_class.one :: ereal
  zero_ereal == zero_class.zero :: ereal
  plus_ereal == plus :: ereal => ereal => ereal
instantiation
  ereal :: linorder
  less_eq_ereal == less_eq :: ereal => ereal => bool
  less_ereal == less :: ereal => ereal => bool
consts
  totient_naive :: "nat => nat => nat => nat"
### theory "HOL-Number_Theory.Totient"
### 2.474s elapsed time, 9.303s cpu time, 7.210s GC time
Loading theory "HOL-Number_Theory.Residues" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters")
instantiation
  ereal :: {comm_monoid_mult,sgn}
  sgn_ereal == sgn :: ereal => ereal
  times_ereal == times :: ereal => ereal => ereal
locale finite_comm_group
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "finite_comm_group G"
instantiation
  ereal :: minus
  minus_ereal == minus :: ereal => ereal => ereal
locale residues
  fixes m :: "int"
    and R :: "int ring"  (structure)
  assumes "residues m"
  defines "R == residue_ring m"
instantiation
  ereal :: inverse
  inverse_ereal == inverse :: ereal => ereal
  divide_ereal == divide :: ereal => ereal => ereal
### theory "Draft.Multiplicative_Characters"
### 3.177s elapsed time, 12.025s cpu time, 7.704s GC time
Loading theory "HOL-Real_Asymp.Eventuallize" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "HOL-Real_Asymp.Real_Asymp" via "HOL-Real_Asymp.Multiseries_Expansion_Bounds" via "HOL-Real_Asymp.Multiseries_Expansion")
signature EVENTUALLIZE =
  sig val eventuallize: Proof.context -> thm -> int option -> thm end
structure Eventuallize: EVENTUALLIZE
### theory "HOL-Real_Asymp.Eventuallize"
### 0.063s elapsed time, 0.246s cpu time, 0.000s GC time
Loading theory "HOL-Real_Asymp.Lazy_Eval" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "HOL-Real_Asymp.Real_Asymp" via "HOL-Real_Asymp.Multiseries_Expansion_Bounds" via "HOL-Real_Asymp.Multiseries_Expansion")
instantiation
  ereal :: lattice
  inf_ereal == inf :: ereal => ereal => ereal
  sup_ereal == sup :: ereal => ereal => ereal
instantiation
  ereal :: complete_lattice
  Inf_ereal == Inf :: ereal set => ereal
  Sup_ereal == Sup :: ereal set => ereal
  bot_ereal == bot :: ereal
  top_ereal == top :: ereal
locale residues
  fixes m :: "int"
    and R :: "int ring"  (structure)
  assumes "residues m"
  defines "R == residue_ring m"
instantiation
  ereal :: linear_continuum_topology
  open_ereal == open :: ereal set => bool
locale residues_prime
  fixes p :: "nat"
    and R :: "int ring"  (structure)
  assumes "residues_prime p"
  defines "R == residue_ring (int p)"
consts
  CMP_BRANCH :: "cmp_result => 'a => 'a => 'a => 'a"
### ML warning (line 177 of "~~/src/HOL/Real_Asymp/lazy_eval.ML"):
### Value identifier (instantiate) has not been referenced.
### ML warning (line 180 of "~~/src/HOL/Real_Asymp/lazy_eval.ML"):
### Value identifier (rhs) has not been referenced.
signature LAZY_EVAL =
  sig
    val add_facts: thm list -> eval_ctxt -> eval_ctxt
    val add_hook: eval_hook -> eval_ctxt -> eval_ctxt
    type constructor = string * int
    val constructor_arity: constructor list -> string -> int option
    type equation = {function: term, pats: pat list, rhs: term, thm: thm}
    type eval_ctxt = {ctxt: eval_ctxt', hooks: eval_hook list}
    type eval_ctxt' =
       {constructors: constructor list,
        equations: equation list,
        facts: thm Net.net, pctxt: Proof.context, verbose: bool}
    type eval_hook = eval_ctxt' -> term -> (term * conv) option
    val get_constructors: eval_ctxt -> constructor list
    val get_ctxt: eval_ctxt -> Proof.context
    val get_facts: eval_ctxt -> thm list
    val get_verbose: eval_ctxt -> bool
    val is_constructor_name: constructor list -> string -> bool
    val match:
       eval_ctxt ->
         pat ->
           term ->
             (indexname * term) list option ->
               (indexname * term) list option * term * conv
    val match_all:
       eval_ctxt ->
         pat list ->
           term list ->
             (indexname * term) list option ->
               (indexname * term) list option * term list * conv
    val mk_eval_ctxt:
       Proof.context -> constructor list -> thm list -> eval_ctxt
    datatype pat = AnyPat of indexname | ConsPat of string * pat list
    val set_constructors: constructor list -> eval_ctxt -> eval_ctxt
    val set_verbose: bool -> eval_ctxt -> eval_ctxt
    val whnf: eval_ctxt -> term -> term * conv
  end
structure Lazy_Eval: LAZY_EVAL
### theory "HOL-Real_Asymp.Lazy_Eval"
### 0.551s elapsed time, 2.152s cpu time, 0.299s GC time
Loading theory "HOL-Real_Asymp.Multiseries_Expansion" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "HOL-Real_Asymp.Real_Asymp" via "HOL-Real_Asymp.Multiseries_Expansion_Bounds")
locale residues_prime
  fixes p :: "nat"
    and R :: "int ring"  (structure)
  assumes "residues_prime p"
  defines "R == residue_ring (int p)"
### theory "HOL-Library.Extended_Real"
### 5.051s elapsed time, 19.257s cpu time, 8.955s GC time
Loading theory "HOL-Library.Extended_Nonnegative_Real" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Analysis.Extended_Real_Limits")
### theory "HOL-Number_Theory.Residues"
### 1.909s elapsed time, 7.449s cpu time, 1.118s GC time
Loading theory "HOL-Number_Theory.Euler_Criterion" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory" via "HOL-Number_Theory.Quadratic_Reciprocity" via "HOL-Number_Theory.Gauss")
### theory "HOL-Analysis.Topology_Euclidean_Space"
### 2.355s elapsed time, 9.200s cpu time, 1.344s GC time
Loading theory "HOL-Analysis.Convex_Euclidean_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Number_Theory.Euler_Criterion"
### 0.159s elapsed time, 0.620s cpu time, 0.106s GC time
Loading theory "HOL-Analysis.Line_Segment" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
instantiation
  ennreal :: complete_linorder
  Inf_ennreal == Inf :: ennreal set => ennreal
  Sup_ennreal == Sup :: ennreal set => ennreal
  bot_ennreal == bot :: ennreal
  sup_ennreal == sup :: ennreal => ennreal => ennreal
  top_ennreal == top :: ennreal
  inf_ennreal == inf :: ennreal => ennreal => ennreal
  less_eq_ennreal == less_eq :: ennreal => ennreal => bool
  less_ennreal == less :: ennreal => ennreal => bool
instantiation
  ennreal :: infinity
  infinity_ennreal == infinity :: ennreal
instantiation
  ennreal :: {comm_semiring_1,semiring_1_no_zero_divisors}
  zero_ennreal == zero_class.zero :: ennreal
  plus_ennreal == plus :: ennreal => ennreal => ennreal
  one_ennreal == one_class.one :: ennreal
  times_ennreal == times :: ennreal => ennreal => ennreal
instantiation
  ennreal :: minus
  minus_ennreal == minus :: ennreal => ennreal => ennreal
instantiation
  ennreal :: inverse
  inverse_ennreal == inverse :: ennreal => ennreal
  divide_ennreal == divide :: ennreal => ennreal => ennreal
structure Cancel_Ennreal_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
consts
  mssnth :: "'a msstream => nat => 'a"
instantiation
  ennreal :: linear_continuum_topology
  open_ennreal == open :: ennreal set => bool
### theory "HOL-Analysis.Line_Segment"
### 1.066s elapsed time, 4.144s cpu time, 0.746s GC time
Loading theory "HOL-Analysis.Tagged_Division" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Henstock_Kurzweil_Integration")
### theory "HOL-Analysis.Convex_Euclidean_Space"
### 1.199s elapsed time, 4.650s cpu time, 0.889s GC time
Loading theory "HOL-Analysis.Ordered_Euclidean_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Borel_Space")
### theory "HOL-Library.Extended_Nonnegative_Real"
### 1.838s elapsed time, 7.128s cpu time, 1.304s GC time
Loading theory "HOL-Analysis.Infinite_Sum" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  msllist_of_msstream :: "'a msstream => 'a msllist"
consts
  mssalternate :: "'a => 'a => 'a msstream"
consts
  exp_series_stream_aux :: "real => real => real msstream"
consts
  ln_series_stream_aux :: "bool => real => real msstream"
consts
  gbinomial_series_aux :: "bool => real => real => real => real msllist"
consts
  sin_series_stream_aux :: "bool => real => real => real msstream"
locale operative
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
    and g :: "'b set => 'a"
  assumes "operative (\<^bold>*) \<^bold>1 g"
consts
  arctan_series_stream_aux :: "bool => real => real msstream"
locale operative_real
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
    and g :: "real set => 'a"
  assumes "operative_real (\<^bold>*) \<^bold>1 g"
### theory "HOL-Analysis.Tagged_Division"
### 1.160s elapsed time, 4.415s cpu time, 0.886s GC time
Loading theory "HOL-Analysis.Sigma_Algebra" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Measure_Space" via "HOL-Analysis.Measurable")
locale subset_class
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "subset_class \<Omega> M"
locale semiring_of_sets
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "semiring_of_sets \<Omega> M"
locale ring_of_sets
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "ring_of_sets \<Omega> M"
locale algebra
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "algebra \<Omega> M"
locale sigma_algebra
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "sigma_algebra \<Omega> M"
class ordered_euclidean_space = Inf + Sup + euclidean_space + abs + inf +
  sup + ord +
  assumes
    "eucl_le":
      "!!x y. (x <= y) = (ALL i:Basis. x \<bullet> i <= y \<bullet> i)"
  assumes "eucl_less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
  assumes
    "eucl_inf":
      "!!x y.
          inf x y =
          (SUM i:Basis. inf (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_sup":
      "!!x y.
          sup x y =
          (SUM i:Basis. sup (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Inf":
      "!!X. Inf X = (SUM i:Basis. (INF x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Sup":
      "!!X. Sup X = (SUM i:Basis. (SUP x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_abs":
      "!!x. \<bar>x\<bar> =
            (SUM i:Basis. \<bar>x \<bullet> i\<bar> *\<^sub>R i)"
Proofs for inductive predicate(s) "sigma_setsp"
  Proving monotonicity ...
class multiseries = inverse + minus + plus + times + uminus +
  fixes is_expansion :: "'a => (real => real) list => bool"
    and expansion_level :: "'a itself => nat"
    and eval :: "'a => real => real"
    and zero_expansion :: "'a"
    and const_expansion :: "real => 'a"
    and powr_expansion :: "bool => 'a => real => 'a"
    and power_expansion :: "bool => 'a => nat => 'a"
    and trimmed :: "'a => bool"
    and dominant_term :: "'a => real * real list"
  assumes
    "is_expansion_length":
      "!!F basis.
          is_expansion F basis ==> length basis = expansion_level TYPE('a)"
  assumes
    "is_expansion_zero":
      "!!basis.
          [| basis_wf basis; length basis = expansion_level TYPE('a) |]
          ==> is_expansion zero_expansion basis"
  assumes
    "is_expansion_const":
      "!!basis c.
          [| basis_wf basis; length basis = expansion_level TYPE('a) |]
          ==> is_expansion (const_expansion c) basis"
  assumes
    "is_expansion_uminus":
      "!!basis F.
          [| basis_wf basis; is_expansion F basis |]
          ==> is_expansion (- F) basis"
  assumes
    "is_expansion_add":
      "!!basis F G.
          [| basis_wf basis; is_expansion F basis; is_expansion G basis |]
          ==> is_expansion (F + G) basis"
  assumes
    "is_expansion_minus":
      "!!basis F G.
          [| basis_wf basis; is_expansion F basis; is_expansion G basis |]
          ==> is_expansion (F - G) basis"
  assumes
    "is_expansion_mult":
      "!!basis F G.
          [| basis_wf basis; is_expansion F basis; is_expansion G basis |]
          ==> is_expansion (F * G) basis"
  assumes
    "is_expansion_inverse":
      "!!basis F.
          [| basis_wf basis; trimmed F; is_expansion F basis |]
          ==> is_expansion (inverse F) basis"
  assumes
    "is_expansion_divide":
      "!!basis G F.
          [| basis_wf basis; trimmed G; is_expansion F basis;
             is_expansion G basis |]
          ==> is_expansion (F / G) basis"
  assumes
    "is_expansion_powr":
      "!!basis F abort p.
          [| basis_wf basis; trimmed F; 0 < fst (dominant_term F);
             is_expansion F basis |]
          ==> is_expansion (powr_expansion abort F p) basis"
  assumes
    "is_expansion_power":
      "!!basis F abort n.
          [| basis_wf basis; trimmed F; is_expansion F basis |]
          ==> is_expansion (power_expansion abort F n) basis"
  assumes
    "is_expansion_imp_smallo":
      "!!basis F b e.
          [| basis_wf basis; is_expansion F basis;
             filterlim b at_top at_top;
             ALL g:set basis. (%x. ln (g x)) : o(%x. ln (b x)); 0 < e |]
          ==> eval F : o(%x. b x powr e)"
  assumes
    "is_expansion_imp_smallomega":
      "!!basis F b e.
          [| basis_wf basis; is_expansion F basis;
             filterlim b at_top at_top; trimmed F;
             ALL g:set basis. (%x. ln (g x)) : o(%x. ln (b x)); e < 0 |]
          ==> eval F : \<omega>(%x. b x powr e)"
  assumes
    "trimmed_imp_eventually_sgn":
      "!!basis F.
          [| basis_wf basis; is_expansion F basis; trimmed F |]
          ==> \<forall>\<^sub>F x in at_top.
                 sgn (eval F x) = sgn (fst (dominant_term F))"
  assumes
    "trimmed_imp_eventually_nz":
      "!!basis F.
          [| basis_wf basis; is_expansion F basis; trimmed F |]
          ==> \<forall>\<^sub>F x in at_top. eval F x ~= 0"
  assumes
    "trimmed_imp_dominant_term_nz":
      "!!F. trimmed F ==> fst (dominant_term F) ~= 0"
  assumes
    "dominant_term":
      "!!basis F.
          [| basis_wf basis; is_expansion F basis; trimmed F |]
          ==> eval F \<sim>[at_top] eval_monom (dominant_term F) basis"
  assumes
    "dominant_term_bigo":
      "!!basis F.
          [| basis_wf basis; is_expansion F basis |]
          ==> eval F : O(eval_monom (1, snd (dominant_term F)) basis)"
  assumes
    "length_dominant_term":
      "!!F. length (snd (dominant_term F)) = expansion_level TYPE('a)"
  assumes
    "fst_dominant_term_uminus":
      "!!F. fst (dominant_term (- F)) = - fst (dominant_term F)"
  assumes "trimmed_uminus_iff": "!!F. trimmed (- F) = trimmed F"
  assumes "add_zero_expansion_left": "!!F. zero_expansion + F = F"
  assumes "add_zero_expansion_right": "!!F. F + zero_expansion = F"
  assumes "eval_zero": "!!x. eval zero_expansion x = 0"
  assumes "eval_const": "!!c x. eval (const_expansion c) x = c"
  assumes "eval_uminus": "!!F. eval (- F) = (%x. - eval F x)"
  assumes "eval_plus": "!!F G. eval (F + G) = (%x. eval F x + eval G x)"
  assumes "eval_minus": "!!F G. eval (F - G) = (%x. eval F x - eval G x)"
  assumes "eval_times": "!!F G. eval (F * G) = (%x. eval F x * eval G x)"
  assumes "eval_inverse": "!!F. eval (inverse F) = (%x. inverse (eval F x))"
  assumes "eval_divide": "!!F G. eval (F / G) = (%x. eval F x / eval G x)"
  assumes
    "eval_powr":
      "!!abort F p. eval (powr_expansion abort F p) = (%x. eval F x powr p)"
  assumes
    "eval_power":
      "!!abort F n. eval (power_expansion abort F n) = (%x. eval F x ^ n)"
  assumes "minus_eq_plus_uminus": "!!F G. F - G = F + - G"
  assumes "times_const_expansion_1": "!!F. const_expansion 1 * F = F"
  assumes
    "trimmed_const_expansion": "!!c. trimmed (const_expansion c) = (c ~= 0)"
instantiation
  real :: multiseries
  is_expansion_real == is_expansion :: real => (real => real) list => bool
  expansion_level_real == expansion_level :: real itself => nat
  eval_real == eval :: real => real => real
  zero_expansion_real == zero_expansion :: real
  const_expansion_real == const_expansion :: real => real
  powr_expansion_real == powr_expansion :: bool => real => real => real
  power_expansion_real == power_expansion :: bool => real => nat => real
  trimmed_real == trimmed :: real => bool
  dominant_term_real == dominant_term :: real => real * real list
Proofs for inductive predicate(s) "is_expansion_real"
  Proving monotonicity ...
consts
  ms_exp_gt :: "real => real option => bool"
Proofs for coinductive predicate(s) "is_expansion_aux"
  Proving monotonicity ...
Proofs for inductive predicate(s) "smallest_ccdi_setsp"
  Proving monotonicity ...
### theory "HOL-Analysis.Infinite_Sum"
### 4.043s elapsed time, 15.157s cpu time, 9.641s GC time
Loading theory "HOL-Analysis.Extended_Real_Limits" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
locale Dynkin_system
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "Dynkin_system \<Omega> M"
### theory "HOL-Analysis.Sigma_Algebra"
### 4.114s elapsed time, 15.531s cpu time, 9.488s GC time
Loading theory "HOL-Analysis.Measurable" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Measure_Space")
signature MEASURABLE =
  sig
    val add_del_cong_thm: bool -> thm -> Context.generic -> Context.generic
    val add_local_cong: thm -> Proof.context -> Proof.context
    val add_preprocessor:
       string -> preprocessor -> Context.generic -> Context.generic
    val cong_thm_attr: attribute context_parser
    val del_preprocessor: string -> Context.generic -> Context.generic
    val dest_thm_attr: attribute context_parser
    val get_all: Context.generic -> thm list
    val get_cong: Context.generic -> thm list
    val get_dest: Context.generic -> thm list
    datatype level = Concrete | Generic
    val measurable_tac: Proof.context -> thm list -> tactic
    val measurable_thm_attr: bool * (bool * level) -> attribute
    val prepare_facts: Proof.context -> thm list -> thm list * Proof.context
    type preprocessor = thm -> Proof.context -> thm list * Proof.context
    val simproc: Proof.context -> cterm -> thm option
  end
structure Measurable: MEASURABLE
### theory "HOL-Analysis.Extended_Real_Limits"
### 1.123s elapsed time, 4.402s cpu time, 0.625s GC time
Loading theory "HOL-Analysis.Summation_Tests" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit")
### theory "HOL-Analysis.Measurable"
### 0.602s elapsed time, 2.338s cpu time, 0.439s GC time
Loading theory "HOL-Analysis.Measure_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration")
instantiation
  prod :: (abs, abs) abs
  abs_prod == abs :: 'a * 'b => 'a * 'b
instantiation
  vec :: (ordered_euclidean_space, finite) ordered_euclidean_space
  abs_vec == abs :: ('a, 'b) vec => ('a, 'b) vec
  inf_vec == inf :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  sup_vec == sup :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  Inf_vec == Inf :: ('a, 'b) vec set => ('a, 'b) vec
  Sup_vec == Sup :: ('a, 'b) vec set => ('a, 'b) vec
### theory "HOL-Analysis.Ordered_Euclidean_Space"
### 6.385s elapsed time, 24.267s cpu time, 11.229s GC time
Loading theory "HOL-Analysis.Starlike" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected")
### theory "HOL-Analysis.Summation_Tests"
### 1.027s elapsed time, 3.975s cpu time, 0.861s GC time
Loading theory "HOL-Analysis.Uniform_Limit" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
locale sigma_finite_measure
  fixes M :: "'a measure"
  assumes "sigma_finite_measure M"
locale finite_measure
  fixes M :: "'a measure"
  assumes "finite_measure M"
### theory "HOL-Analysis.Uniform_Limit"
### 34.237s elapsed time, 117.040s cpu time, 114.764s GC time
Loading theory "HOL-Analysis.Bounded_Continuous_Function" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
instantiation
  bcontfun :: (topological_space, metric_space) metric_space
  dist_bcontfun == dist ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b => real
  uniformity_bcontfun == uniformity ::
    ('a \<Rightarrow>\<^sub>C 'b * 'a \<Rightarrow>\<^sub>C 'b) filter
  open_bcontfun == open :: ('a \<Rightarrow>\<^sub>C 'b) set => bool
instantiation
  measure :: (type) order_bot
  bot_measure == bot :: 'a measure
  less_eq_measure == less_eq :: 'a measure => 'a measure => bool
  less_measure == less :: 'a measure => 'a measure => bool
Proofs for inductive predicate(s) "less_eq_measure"
  Proving monotonicity ...
instantiation
  bcontfun :: (topological_space, real_normed_vector) real_vector
  uminus_bcontfun == uminus ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  zero_bcontfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>C 'b
  minus_bcontfun == minus ::
    'a \<Rightarrow>\<^sub>C 'b
    => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  plus_bcontfun == plus ::
    'a \<Rightarrow>\<^sub>C 'b
    => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  scaleR_bcontfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
instantiation
  measure :: (type) semilattice_sup
  sup_measure == sup :: 'a measure => 'a measure => 'a measure
instantiation
  bcontfun :: (topological_space, real_normed_vector) real_normed_vector
  sgn_bcontfun == sgn ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  norm_bcontfun == norm :: 'a \<Rightarrow>\<^sub>C 'b => real
instantiation
  measure :: (type) complete_lattice
  Inf_measure == Inf :: 'a measure set => 'a measure
  Sup_measure == Sup :: 'a measure set => 'a measure
  top_measure == top :: 'a measure
  inf_measure == inf :: 'a measure => 'a measure => 'a measure
### theory "HOL-Analysis.Bounded_Continuous_Function"
### 0.495s elapsed time, 1.962s cpu time, 0.120s GC time
Loading theory "HOL-Analysis.Bounded_Linear_Function" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative")
### theory "HOL-Analysis.Measure_Space"
### 35.687s elapsed time, 122.712s cpu time, 115.661s GC time
Loading theory "HOL-Analysis.Caratheodory" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.Starlike"
### 35.477s elapsed time, 121.938s cpu time, 115.428s GC time
Loading theory "HOL-Analysis.Continuous_Extension" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Equivalence_Measurable_On_Borel")
### theory "HOL-Analysis.Caratheodory"
### 0.371s elapsed time, 1.471s cpu time, 0.240s GC time
Loading theory "HOL-Analysis.Path_Connected" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems")
consts
  plus_ms_aux ::
    "('a * real) msllist => ('a * real) msllist => ('a * real) msllist"
### theory "HOL-Analysis.Continuous_Extension"
### 0.157s elapsed time, 0.623s cpu time, 0.000s GC time
Loading theory "HOL-Number_Theory.Gauss" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory" via "HOL-Number_Theory.Quadratic_Reciprocity")
locale GAUSS
  fixes p :: "nat"
    and a :: "int"
  assumes "GAUSS p a"
### theory "HOL-Number_Theory.Gauss"
### 0.241s elapsed time, 0.947s cpu time, 0.216s GC time
Loading theory "HOL-Number_Theory.Quadratic_Reciprocity" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
locale QR
  fixes p :: "nat"
    and q :: "nat"
  assumes "QR p q"
instantiation
  blinfun :: (real_normed_vector, real_normed_vector) real_normed_vector
  uminus_blinfun == uminus ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  zero_blinfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>L 'b
  minus_blinfun == minus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  plus_blinfun == plus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  sgn_blinfun == sgn ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  norm_blinfun == norm :: 'a \<Rightarrow>\<^sub>L 'b => real
  scaleR_blinfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  dist_blinfun == dist ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b => real
  uniformity_blinfun == uniformity ::
    ('a \<Rightarrow>\<^sub>L 'b * 'a \<Rightarrow>\<^sub>L 'b) filter
  open_blinfun == open :: ('a \<Rightarrow>\<^sub>L 'b) set => bool
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
### theory "HOL-Number_Theory.Quadratic_Reciprocity"
### 0.379s elapsed time, 1.496s cpu time, 0.163s GC time
Loading theory "HOL-Number_Theory.Pocklington" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
### theory "HOL-Number_Theory.Pocklington"
### 0.366s elapsed time, 1.439s cpu time, 0.239s GC time
Loading theory "HOL-Number_Theory.Residue_Primitive_Roots" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function" via "HOL-Number_Theory.Number_Theory")
Proofs for inductive predicate(s) "residue_primroot"
  Proving monotonicity ...
### theory "HOL-Analysis.Bounded_Linear_Function"
### 1.886s elapsed time, 7.482s cpu time, 0.858s GC time
Loading theory "HOL-Analysis.Derivative" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Number_Theory.Residue_Primitive_Roots"
### 0.366s elapsed time, 1.441s cpu time, 0.293s GC time
Loading theory "HOL-Number_Theory.Number_Theory" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function")
### theory "HOL-Analysis.Path_Connected"
### 1.902s elapsed time, 7.531s cpu time, 1.138s GC time
Loading theory "HOL-Analysis.Arcwise_Connected" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve")
### theory "HOL-Number_Theory.Number_Theory"
### 1.618s elapsed time, 6.420s cpu time, 0.748s GC time
Loading theory "HOL-Analysis.Homotopy" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Homeomorphism")
### theory "HOL-Analysis.Derivative"
### 2.032s elapsed time, 8.057s cpu time, 0.905s GC time
Loading theory "HOL-Analysis.Borel_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration")
### theory "HOL-Analysis.Arcwise_Connected"
### 1.702s elapsed time, 6.737s cpu time, 0.931s GC time
Loading theory "HOL-Analysis.Cartesian_Euclidean_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Cartesian_Euclidean_Space"
### 0.345s elapsed time, 1.365s cpu time, 0.147s GC time
Loading theory "HOL-Analysis.Cross3" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
locale Retracts
  fixes s :: "'a set"
    and h :: "'a => 'b"
    and t :: "'b set"
    and k :: "'b => 'a"
  assumes "Retracts s h t k"
bundle cross3_syntax
### theory "HOL-Analysis.Homotopy"
### 2.379s elapsed time, 9.375s cpu time, 1.493s GC time
Loading theory "HOL-Analysis.Complex_Analysis_Basics" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental")
bundle no_cross3_syntax
### theory "HOL-Analysis.Borel_Space"
### 2.321s elapsed time, 9.128s cpu time, 1.469s GC time
Loading theory "HOL-Analysis.Nonnegative_Lebesgue_Integration" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure")
consts
  times_ms_aux ::
    "('a * real) msllist => ('a * real) msllist => ('a * real) msllist"
### theory "HOL-Analysis.Complex_Analysis_Basics"
### 1.128s elapsed time, 4.435s cpu time, 0.645s GC time
Loading theory "HOL-Analysis.Regularity" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.Cross3"
### 2.733s elapsed time, 10.744s cpu time, 1.580s GC time
Loading theory "HOL-Analysis.Complex_Transcendental" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers")
consts
  powser_ms_aux ::
    "real msllist => ('a * real) msllist => ('a * real) msllist"
### Missing patterns in function definition:
### inverse_ms_aux MSLNil = undefined
Found termination order: "{}"
### Missing patterns in function definition:
### !!a c. powr_ms_aux a MSLNil c = undefined
Found termination order: "{}"
### Missing patterns in function definition:
### !!a c. power_ms_aux a MSLNil c = undefined
Found termination order: "{}"
Proofs for inductive predicate(s) "ms_closure"
  Proving monotonicity ...
### theory "HOL-Analysis.Regularity"
### 0.778s elapsed time, 3.067s cpu time, 0.506s GC time
Loading theory "HOL-Analysis.Lipschitz" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Multivariate_Analysis")
bundle lipschitz_syntax
bundle no_lipschitz_syntax
instantiation
  complex :: ln
  ln_complex == ln :: complex => complex
### theory "HOL-Analysis.Nonnegative_Lebesgue_Integration"
### 1.939s elapsed time, 7.599s cpu time, 1.320s GC time
Loading theory "HOL-Analysis.Binary_Product_Measure" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure")
locale pair_sigma_finite
  fixes M1 :: "'a measure"
    and M2 :: "'b measure"
  assumes "pair_sigma_finite M1 M2"
### theory "HOL-Analysis.Lipschitz"
### 0.656s elapsed time, 2.551s cpu time, 0.609s GC time
Loading theory "HOL-Analysis.Multivariate_Analysis" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Binary_Product_Measure"
### 0.644s elapsed time, 2.512s cpu time, 0.523s GC time
Loading theory "HOL-Analysis.Embed_Measure" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
instantiation
  ms :: (uminus) uminus
  uminus_ms == uminus :: 'a ms => 'a ms
consts
  uminus_ms :: "'a ms => 'a ms"
instantiation
  ms :: (plus) plus
  plus_ms == plus :: 'a ms => 'a ms => 'a ms
Found termination order: "{}"
instantiation
  ms :: ({plus,uminus}) minus
  minus_ms == minus :: 'a ms => 'a ms => 'a ms
instantiation
  ms :: ({plus,times}) times
  times_ms == times :: 'a ms => 'a ms => 'a ms
Found termination order: "{}"
instantiation
  ms :: (multiseries) inverse
  inverse_ms == inverse :: 'a ms => 'a ms
  divide_ms == divide :: 'a ms => 'a ms => 'a ms
### theory "HOL-Analysis.Embed_Measure"
### 0.252s elapsed time, 0.983s cpu time, 0.197s GC time
Loading theory "HOL-Analysis.Finite_Product_Measure" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
Found termination order: "{}"
Found termination order: "{}"
instantiation
  ms :: (multiseries) multiseries
  is_expansion_ms == is_expansion :: 'a ms => (real => real) list => bool
  expansion_level_ms == expansion_level :: 'a ms itself => nat
  eval_ms == eval :: 'a ms => real => real
  zero_expansion_ms == zero_expansion :: 'a ms
  const_expansion_ms == const_expansion :: real => 'a ms
  powr_expansion_ms == powr_expansion :: bool => 'a ms => real => 'a ms
  power_expansion_ms == power_expansion :: bool => 'a ms => nat => 'a ms
  trimmed_ms == trimmed :: 'a ms => bool
  dominant_term_ms == dominant_term :: 'a ms => real * real list
### theory "HOL-Analysis.Complex_Transcendental"
### 2.038s elapsed time, 7.979s cpu time, 1.496s GC time
Loading theory "HOL-Analysis.Generalised_Binomial_Theorem" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
consts
  is_expansion_ms :: "'a ms => (real => real) list => bool"
consts
  eval_ms :: "'a ms => real => real"
consts
  powr_expansion_ms :: "bool => 'a ms => real => 'a ms"
consts
  power_expansion_ms :: "bool => 'a ms => nat => 'a ms"
consts
  trimmed_ms :: "'a ms => bool"
consts
  dominant_term_ms :: "'a ms => real * real list"
### theory "HOL-Analysis.Generalised_Binomial_Theorem"
### 0.123s elapsed time, 0.484s cpu time, 0.062s GC time
Loading theory "HOL-Analysis.FPS_Convergence" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
Proofs for inductive predicate(s) "expands_to"
  Proving monotonicity ...
locale product_sigma_finite
  fixes M :: "'i => 'a measure"
  assumes "product_sigma_finite M"
locale finite_product_sigma_finite
  fixes M :: "'i => 'a measure"
    and I :: "'i set"
  assumes "finite_product_sigma_finite M I"
### theory "HOL-Analysis.Multivariate_Analysis"
### 1.450s elapsed time, 5.651s cpu time, 1.000s GC time
Loading theory "HOL-Analysis.Harmonic_Numbers" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function")
### theory "HOL-Analysis.Finite_Product_Measure"
### 1.048s elapsed time, 4.064s cpu time, 0.724s GC time
Loading theory "HOL-Analysis.Bochner_Integration" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Complete_Measure")
Proofs for coinductive predicate(s) "asymp_powser"
  Proving monotonicity ...
### theory "HOL-Analysis.Harmonic_Numbers"
### 0.269s elapsed time, 1.035s cpu time, 0.242s GC time
Loading theory "HOL-Analysis.Infinite_Products" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
Proofs for inductive predicate(s) "simple_bochner_integrable"
  Proving monotonicity ...
Proofs for inductive predicate(s) "has_bochner_integral"
  Proving monotonicity ...
consts
  flip_cmp_result :: "cmp_result => cmp_result"
Proofs for inductive predicate(s) "integrable"
  Proving monotonicity ...
### theory "HOL-Analysis.FPS_Convergence"
### 1.306s elapsed time, 5.025s cpu time, 1.090s GC time
Loading theory "Winding_Number_Eval.Missing_Topology" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem" via "Winding_Number_Eval.Missing_Transcendental")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  compare_list_0 :: "real list => cmp_result"
### theory "HOL-Analysis.Infinite_Products"
### 0.749s elapsed time, 2.829s cpu time, 0.792s GC time
Loading theory "HOL-Analysis.Homeomorphism" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "Winding_Number_Eval.Missing_Topology"
### 3.084s elapsed time, 11.717s cpu time, 10.407s GC time
Loading theory "HOL-Analysis.Locally" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Abstract_Euclidean_Space")
### theory "HOL-Analysis.Locally"
### 0.259s elapsed time, 1.011s cpu time, 0.204s GC time
Loading theory "HOL-Analysis.Abstract_Euclidean_Space" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Homeomorphism"
### 0.653s elapsed time, 2.563s cpu time, 0.370s GC time
Loading theory "HOL-Analysis.Brouwer_Fixpoint" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Fashoda_Theorem")
### theory "HOL-Analysis.Abstract_Euclidean_Space"
### 0.393s elapsed time, 1.552s cpu time, 0.250s GC time
Loading theory "HOL-Analysis.Polytope" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Bochner_Integration"
### 4.428s elapsed time, 16.941s cpu time, 11.395s GC time
Loading theory "HOL-Analysis.Complete_Measure" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
locale complete_measure
  fixes M :: "'a measure"
  assumes "complete_measure M"
locale semifinite_measure
  fixes M :: "'a measure"
  assumes "semifinite_measure M"
locale locally_determined_measure
  fixes M :: "'a measure"
  assumes "locally_determined_measure M"
locale cld_measure
  fixes M :: "'a measure"
  assumes "cld_measure M"
signature ASYMPTOTIC_BASIS =
  sig
    exception BASIS of string * basis
    datatype basis = SEmpty | SNE of basis'
    datatype basis'
    = SCons of basis_info * basis_ln_info * basis' | SSng of basis_info
    val basis_eq: basis -> basis -> bool
    val basis_eq': basis' -> basis' -> bool
    type basis_info = {head: term, wf_thm: thm}
    type basis_ln_info = {ln_thm: thm, trimmed_thm: thm}
    val basis_size: basis -> int
    val basis_size': basis' -> int
    val check_basis: basis -> basis
    val check_basis': basis' -> basis'
    val combine_lifts: lifting -> lifting -> lifting
    val default_basis: basis
    val extract_basis_list: thm -> term list
    val get_basis_head: basis -> term
    val get_basis_head': basis' -> term
    val get_basis_list: basis -> term list
    val get_basis_list': basis' -> term list
    val get_basis_term: basis -> term
    val get_basis_wf_thm: basis -> thm
    val get_basis_wf_thm': basis' -> thm
    val get_ln_info: basis -> basis_ln_info option
    val insert_ln: basis -> basis
    val insert_ln': basis' -> basis'
    val lift: basis -> thm -> thm
    val lift_expands_to_thm: lifting -> thm -> thm
    val lift_modification: basis -> basis -> basis
    val lift_modification': basis' -> basis' -> basis'
    val lift_trimmed_pos_thm: lifting -> thm -> thm
    val lift_trimmed_thm: lifting -> thm -> thm
    type lifting
    val mk_expansion_level_eq_thm: basis -> thm
    val mk_expansion_level_eq_thm': basis' -> thm
    val mk_lifting: term list -> basis -> lifting
    val split_basis:
       basis -> (basis_info * basis_ln_info option * basis) option
    val split_basis': basis' -> basis_info * basis_ln_info option * basis
    val tl_basis: basis -> basis
    val tl_basis': basis' -> basis
  end
structure Asymptotic_Basis: ASYMPTOTIC_BASIS
### theory "HOL-Analysis.Complete_Measure"
### 0.589s elapsed time, 2.310s cpu time, 0.394s GC time
Loading theory "HOL-Analysis.Radon_Nikodym" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Set_Integral")
locale kuhn_simplex
  fixes p :: "nat"
    and n :: "nat"
    and base :: "nat => nat"
    and upd :: "nat => nat"
    and s :: "(nat => nat) set"
  assumes "kuhn_simplex p n base upd s"
locale kuhn_simplex_pair
  fixes p :: "nat"
    and n :: "nat"
    and b_s :: "nat => nat"
    and u_s :: "nat => nat"
    and s :: "(nat => nat) set"
    and b_t :: "nat => nat"
    and u_t :: "nat => nat"
    and t :: "(nat => nat) set"
  assumes "kuhn_simplex_pair p n b_s u_s s b_t u_t t"
Proofs for inductive predicate(s) "ksimplex"
  Proving monotonicity ...
### ML warning (line 518 of "~~/src/HOL/Real_Asymp/exp_log_expression.ML"):
### Matches are not exhaustive.
### ML warning (line 551 of "~~/src/HOL/Real_Asymp/exp_log_expression.ML"):
### Matches are not exhaustive.
### ML warning (line 583 of "~~/src/HOL/Real_Asymp/exp_log_expression.ML"):
### Matches are not exhaustive.
### ML warning (line 615 of "~~/src/HOL/Real_Asymp/exp_log_expression.ML"):
### Matches are not exhaustive.
### ML warning (line 646 of "~~/src/HOL/Real_Asymp/exp_log_expression.ML"):
### Matches are not exhaustive.
signature EXP_LOG_EXPRESSION =
  sig
    exception DUP
    type custom_handler =
       Lazy_Eval.eval_ctxt ->
         term ->
           thm list * Asymptotic_Basis.basis -> thm * Asymptotic_Basis.basis
    val expand_custom: Proof.context -> string -> custom_handler option
    datatype expr
    =
         Absolute of expr
       | Add of expr * expr
       | ArcTan of expr
       | Ceiling of expr
       | ConstExpr of term
       | Cos of expr
       | Custom of string * term * expr list
       | Div of expr * expr
       | Exp of expr
       | ExpLn of expr
       | Floor of expr
       | Frac of expr
       | Inverse of expr
       | Ln of expr
       | LnPowr of expr * expr
       | Max of expr * expr
       | Min of expr * expr
       | Minus of expr * expr
       | Mult of ...
       | ...
    val expr_to_term: expr -> term
    val limit_maple: string -> string
    val limit_mathematica: string -> string
    val limit_maxima: string -> string
    val limit_sage: string -> string
    val limit_sympy: string -> string
    val preproc_term_conv: Proof.context -> conv
    val register_custom:
       binding -> term -> custom_handler -> local_theory -> local_theory
    val register_custom_from_thm:
       binding -> thm -> custom_handler -> local_theory -> local_theory
    val reify: Proof.context -> term -> expr * thm
    val reify_maple: Proof.context -> term -> string
    val reify_mathematica: Proof.context -> term -> string
    val reify_maxima: Proof.context -> term -> string
    val reify_sage: Proof.context -> term -> string
    val reify_simple: Proof.context -> term -> expr * thm
    val reify_sympy: Proof.context -> term -> string
    val to_maple: expr -> string
    val to_mathematica: expr -> string
    val to_maxima: expr -> string
    val to_sage: expr -> string
    val to_sympy: expr -> string
  end
structure Exp_Log_Expression: EXP_LOG_EXPRESSION
signature EXPANSION_INTERFACE =
  sig
    type T
    val expand_term:
       Lazy_Eval.eval_ctxt ->
         term -> Asymptotic_Basis.basis -> T * Asymptotic_Basis.basis
    val expand_terms:
       Lazy_Eval.eval_ctxt ->
         term list ->
           Asymptotic_Basis.basis -> T list * Asymptotic_Basis.basis
    val prove_asymp_equiv:
       Lazy_Eval.eval_ctxt -> T * T * Asymptotic_Basis.basis -> thm
    val prove_at_0: Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_at_bot:
       Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_at_infinity:
       Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_at_left_0:
       Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_at_right_0:
       Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_at_top:
       Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_bigo:
       Lazy_Eval.eval_ctxt -> T * T * Asymptotic_Basis.basis -> thm
    val prove_bigtheta:
       Lazy_Eval.eval_ctxt -> T * T * Asymptotic_Basis.basis -> thm
    val prove_eventually_greater:
       Lazy_Eval.eval_ctxt -> T * T * Asymptotic_Basis.basis -> thm
    val prove_eventually_less:
       Lazy_Eval.eval_ctxt -> T * T * Asymptotic_Basis.basis -> thm
    val prove_eventually_nonzero:
       Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_nhds: Lazy_Eval.eval_ctxt -> T * Asymptotic_Basis.basis -> thm
    val prove_smallo:
       Lazy_Eval.eval_ctxt -> T * T * Asymptotic_Basis.basis -> thm
  end
### theory "HOL-Analysis.Radon_Nikodym"
### 0.408s elapsed time, 1.589s cpu time, 0.304s GC time
Loading theory "HOL-Analysis.Set_Integral" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Brouwer_Fixpoint"
### 1.525s elapsed time, 5.956s cpu time, 1.114s GC time
Loading theory "HOL-Analysis.Lebesgue_Measure" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Polytope"
### 1.755s elapsed time, 6.847s cpu time, 1.328s GC time
Loading theory "HOL-Analysis.Fashoda_Theorem" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Set_Integral"
### 0.678s elapsed time, 2.632s cpu time, 0.565s GC time
Loading theory "HOL-Analysis.Infinite_Set_Sum" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Fashoda_Theorem"
### 0.505s elapsed time, 1.978s cpu time, 0.186s GC time
Loading theory "HOL-Analysis.Retracts" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Further_Topology")
### theory "HOL-Analysis.Infinite_Set_Sum"
### 1.081s elapsed time, 4.204s cpu time, 0.605s GC time
Loading theory "HOL-Analysis.Weierstrass_Theorems" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
Proofs for inductive predicate(s) "fsigma"
  Proving monotonicity ...
Proofs for inductive predicate(s) "gdelta"
  Proving monotonicity ...
### theory "HOL-Analysis.Lebesgue_Measure"
### 1.897s elapsed time, 7.342s cpu time, 1.409s GC time
Loading theory "HOL-Analysis.Henstock_Kurzweil_Integration" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Retracts"
### 1.308s elapsed time, 5.011s cpu time, 1.179s GC time
Loading theory "HOL-Analysis.Smooth_Paths" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Smooth_Paths"
### 0.227s elapsed time, 0.858s cpu time, 0.264s GC time
Loading theory "Bernoulli.Bernoulli_FPS" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin")
locale function_ring_on
  fixes R :: "('a => real) set"
    and S :: "'a set"
  assumes "function_ring_on R S"
Proofs for inductive predicate(s) "real_polynomial_function"
  Proving monotonicity ...
### Cannot skip proof of schematic goal statement
### ML warning (line 575 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Value identifier (ectxt) has not been referenced.
### ML warning (line 1174 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1175 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1255 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1246 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1379 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1404 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1399 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Matches are not exhaustive.
### ML warning (line 1501 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 1490 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2010 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2033 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2068 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Matches are not exhaustive.
### ML warning (line 2077 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2129 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2144 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2176 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
### ML warning (line 2191 of "~~/src/HOL/Real_Asymp/multiseries_expansion.ML"):
### Pattern is not exhaustive.
signature MULTISERIES_EXPANSION =
  sig
    val arctan_expansion:
       Lazy_Eval.eval_ctxt -> basis -> expansion_thm -> expansion_thm
    type basis
    val check_expansion: expr -> expansion_thm -> expansion_thm
    val compare_expansions:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis ->
           order * thm * expansion_thm * expansion_thm
    val compare_expansions':
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> comparison_result
    datatype comparison_result
    =
         Cmp_Asymp_Equiv of thm * thm
       | Cmp_Dominated of
           order * thm list * zeroness * trimmed_thm * expansion_thm *
           expansion_thm
    val compute_limit: Lazy_Eval.eval_ctxt -> term -> limit * thm
    val const_expansion:
       Lazy_Eval.eval_ctxt -> basis -> term -> expansion_thm
    val ev_zeroness_oracle: Lazy_Eval.eval_ctxt -> term -> thm option
    val exp_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm -> basis -> expansion_thm * basis
    val expand:
       Lazy_Eval.eval_ctxt -> expr -> basis -> expansion_thm * basis
    val expand_term:
       Lazy_Eval.eval_ctxt -> term -> basis -> expansion_thm * basis
    val expand_terms:
       Lazy_Eval.eval_ctxt ->
         term list -> basis -> expansion_thm list * basis
    val expands_to_hd: thm -> thm
    type expansion_thm
    eqtype expr
    val extract_terms:
       int * bool ->
         Lazy_Eval.eval_ctxt -> basis -> term -> term * term option
    val get_coeff: term -> term
    val get_eval: term -> term
    val get_expanded_fun: thm -> term
    val get_expansion: thm -> term
    val get_exponent: term -> term
    val get_intyness: Proof.context -> cterm -> intyness
    val get_parity: cterm -> parity
    val get_sign_oracles:
       Context.generic -> (string * (Proof.context -> int -> tactic)) list
    datatype intyness = Nat of thm | Neg_Nat of thm | No_Nat
    datatype limit
    =
         Finite_Limit of term
       | Infinite_Limit of bool option
       | Zero_Limit of bool option
    val limit_of_expansion:
       bool * bool -> Lazy_Eval.eval_ctxt -> thm * basis -> limit * thm
    val ln_expansion:
       Lazy_Eval.eval_ctxt ->
         trimmed_thm -> expansion_thm -> basis -> expansion_thm * basis
    val max_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm
    val min_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm
    val mk_eval_ctxt: Proof.context -> Lazy_Eval.eval_ctxt
    datatype parity = Even of thm | Odd of thm | Unknown_Parity
    val power_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * term * basis -> expansion_thm
    val powr_const_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * term * basis -> expansion_thm
    val powr_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm * basis
    val powr_nat_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm * basis
    val prove_asymp_equiv: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_asymptotic_relation:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> order * thm
    val prove_at_0: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_bot: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_infinity: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_left_0: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_right_0: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_top: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_bigo: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_bigtheta: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_compare_expansions: order -> thm list -> thm
    val prove_eventually_greater:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_eventually_less:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_eventually_nonzero: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_nhds: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_smallo: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val register_sign_oracle:
       binding * (Proof.context -> int -> tactic) ->
         Context.generic -> Context.generic
    val retrim_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * basis -> expansion_thm * thm
    val retrim_pos_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * basis * trimmed_thm ->
           expansion_thm * thm * trimmed_thm
    val root_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * term * basis -> expansion_thm
    val sgn_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * basis -> expansion_thm
    val simplify_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm -> expansion_thm
    val simplify_term: Lazy_Eval.eval_ctxt -> term -> term
    val simplify_trimmed_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * trimmed_thm -> expansion_thm * trimmed_thm
    val solve_eval_eq: thm -> thm
    val trim_expansion:
       bool ->
         trim_mode option ->
           Lazy_Eval.eval_ctxt ->
             expansion_thm * basis ->
               expansion_thm * zeroness * trimmed_thm option
    val trim_expansion_while_greater:
       bool ->
         term list option ->
           bool ->
             trim_mode option ->
               Lazy_Eval.eval_ctxt ->
                 thm * basis -> thm * trim_result * (zeroness * thm) list
    datatype trim_mode = Neg_Trim | Pos_Trim | Sgn_Trim | Simple_Trim
    datatype trim_result
    = Aborted of order | Trimmed of zeroness * trimmed_thm option
    type trimmed_thm
    val try_drop_leading_term_ex:
       bool -> Lazy_Eval.eval_ctxt -> expansion_thm -> expansion_thm option
    val try_prove_ev_eq: Lazy_Eval.eval_ctxt -> term * term -> thm option
    val try_prove_real_eq:
       bool -> Lazy_Eval.eval_ctxt -> term * term -> thm option
    val whnf_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm -> term option * expansion_thm * thm
    val zero_expansion: basis -> expansion_thm
    datatype zeroness = IsNeg | IsNonZero | IsPos | IsZero
    val zeroness_oracle:
       bool ->
         trim_mode option ->
           Lazy_Eval.eval_ctxt -> term -> zeroness * thm option
  end
structure Multiseries_Expansion: MULTISERIES_EXPANSION
structure Multiseries_Expansion_Basic: EXPANSION_INTERFACE
### theory "HOL-Analysis.Weierstrass_Theorems"
### 1.328s elapsed time, 4.991s cpu time, 1.414s GC time
Loading theory "Dirichlet_Series.Dirichlet_Misc" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters" via "Dirichlet_Series.Multiplicative_Function")
### ML warning (line 45 of "~~/src/HOL/Real_Asymp/real_asymp.ML"):
### Pattern is not exhaustive.
### ML warning (line 58 of "~~/src/HOL/Real_Asymp/real_asymp.ML"):
### Pattern is not exhaustive.
signature REAL_ASYMP =
  sig val tac: bool -> Proof.context -> int -> tactic end
structure Real_Asymp_Basic: REAL_ASYMP
functor Real_Asymp (Exp: EXPANSION_INTERFACE): REAL_ASYMP
### theory "HOL-Real_Asymp.Multiseries_Expansion"
### 62.524s elapsed time, 226.532s cpu time, 149.208s GC time
Loading theory "HOL-Real_Asymp.Multiseries_Expansion_Bounds" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "HOL-Real_Asymp.Real_Asymp")
### theory "Dirichlet_Series.Dirichlet_Misc"
### 0.139s elapsed time, 0.521s cpu time, 0.138s GC time
Loading theory "Dirichlet_Series.Multiplicative_Function" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Draft.Dirichlet_Characters")
locale multiplicative_function
  fixes f :: "nat => 'a"
  assumes "multiplicative_function f"
locale multiplicative_function'
  fixes f :: "nat => 'a"
    and f_prime_power :: "nat => nat => 'a"
    and f_prime :: "nat => 'a"
  assumes "multiplicative_function' f f_prime_power f_prime"
locale completely_multiplicative_function
  fixes f :: "nat => 'a"
  assumes "completely_multiplicative_function f"
locale completely_multiplicative_function'
  fixes f :: "nat => 'a"
    and f_prime :: "nat => 'a"
  assumes "completely_multiplicative_function' f f_prime"
### theory "Dirichlet_Series.Multiplicative_Function"
### 0.309s elapsed time, 1.136s cpu time, 0.346s GC time
Loading theory "Dirichlet_Series.Dirichlet_Product" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "Dirichlet_Series.Dirichlet_Series")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
locale multiplicative_dirichlet_prod
  fixes f :: "nat => 'a"
    and g :: "nat => 'a"
  assumes "multiplicative_dirichlet_prod f g"
locale multiplicative_dirichlet_prod'
  fixes f :: "nat => 'a"
    and g :: "nat => 'a"
    and f_prime_power :: "nat => nat => 'a"
    and g_prime_power :: "nat => nat => 'a"
    and f_prime :: "nat => 'a"
    and g_prime :: "nat => 'a"
  assumes
    "multiplicative_dirichlet_prod' f g f_prime_power g_prime_power f_prime
      g_prime"
### theory "Dirichlet_Series.Dirichlet_Product"
### 3.563s elapsed time, 13.545s cpu time, 12.081s GC time
Loading theory "Dirichlet_Series.Dirichlet_Series" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis")
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
bundle fds_syntax
instantiation
  fds :: (zero) zero
  zero_fds == zero_class.zero :: 'a fds
instantiation
  fds :: ({one,zero}) one
  one_fds == one_class.one :: 'a fds
instantiation
  fds :: ({plus,zero}) plus
  plus_fds == plus :: 'a fds => 'a fds => 'a fds
instantiation
  fds :: (semiring_0) times
  times_fds == times :: 'a fds => 'a fds => 'a fds
instantiation
  fds :: ({uminus,zero}) uminus
  uminus_fds == uminus :: 'a fds => 'a fds
instantiation
  fds :: ({minus,zero}) minus
  minus_fds == minus :: 'a fds => 'a fds => 'a fds
instantiation
  fds :: (real_vector) real_vector
  scaleR_fds == scaleR :: real => 'a fds => 'a fds
instantiation
  fds :: ({inverse,comm_ring_1}) inverse
  inverse_fds == inverse :: 'a fds => 'a fds
  divide_fds == divide :: 'a fds => 'a fds => 'a fds
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
### ML warning (line 365 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Matches are not exhaustive.
### ML warning (line 365 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Value identifier (convert_bounds') has not been referenced.
### ML warning (line 396 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Matches are not exhaustive.
### ML warning (line 481 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 451 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 510 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 589 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 632 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 709 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 826 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 957 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 944 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 1003 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 1043 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Value identifier (nonneg_power_expansion_bounds) has not been referenced.
### ML warning (line 1211 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 1217 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
### ML warning (line 1223 of "~~/src/HOL/Real_Asymp/multiseries_expansion_bounds.ML"):
### Pattern is not exhaustive.
signature MULTISERIES_EXPANSION =
  sig
    val arctan_expansion:
       Lazy_Eval.eval_ctxt -> basis -> expansion_thm -> expansion_thm
    type basis
    datatype bounds
    =
         Bounds of lower_bound option * upper_bound option
       | Exact of expansion_thm
    val check_expansion: expr -> expansion_thm -> expansion_thm
    val compare_expansions:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis ->
           order * thm * expansion_thm * expansion_thm
    val compare_expansions':
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> comparison_result
    datatype comparison_result
    =
         Cmp_Asymp_Equiv of thm * thm
       | Cmp_Dominated of
           order * thm list * zeroness * trimmed_thm * expansion_thm *
           expansion_thm
    val compute_limit: Lazy_Eval.eval_ctxt -> term -> limit * thm
    val const_expansion:
       Lazy_Eval.eval_ctxt -> basis -> term -> expansion_thm
    val ev_zeroness_oracle: Lazy_Eval.eval_ctxt -> term -> thm option
    val exp_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm -> basis -> expansion_thm * basis
    val expand:
       Lazy_Eval.eval_ctxt -> expr -> basis -> expansion_thm * basis
    val expand_term:
       Lazy_Eval.eval_ctxt -> term -> basis -> expansion_thm * basis
    val expand_term_bounds:
       Lazy_Eval.eval_ctxt -> term -> basis -> bounds * basis
    val expand_terms:
       Lazy_Eval.eval_ctxt ->
         term list -> basis -> expansion_thm list * basis
    val expand_terms_bounds:
       Lazy_Eval.eval_ctxt -> term list -> basis -> bounds list * basis
    val expands_to_hd: thm -> thm
    type expansion_thm
    eqtype expr
    val extract_terms:
       int * bool ->
         Lazy_Eval.eval_ctxt -> basis -> term -> term * term option
    val find_greater_expansion:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm * thm * thm
    val find_smaller_expansion:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm * thm * thm
    val get_coeff: term -> term
    val get_eval: term -> term
    val get_expanded_fun: thm -> term
    val get_expanded_fun_bounds: bounds -> term
    val get_expansion: thm -> term
    val get_exponent: term -> term
    val get_intyness: Proof.context -> cterm -> intyness
    val get_parity: cterm -> parity
    val get_sign_oracles:
       Context.generic -> (string * (Proof.context -> int -> tactic)) list
    datatype intyness = Nat of thm | Neg_Nat of thm | No_Nat
    val is_vacuous: bounds -> bool
    val lift_bounds: basis -> bounds -> bounds
    datatype limit
    =
         Finite_Limit of term
       | Infinite_Limit of bool option
       | Zero_Limit of bool option
    val limit_of_expansion:
       bool * bool -> Lazy_Eval.eval_ctxt -> thm * basis -> limit * thm
    val limit_of_expansion_bounds:
       Lazy_Eval.eval_ctxt -> bounds * basis -> limit_result
    datatype limit_result
    = Exact_Limit of term | Limit_Bounds of term option * term option
    val ln_expansion:
       Lazy_Eval.eval_ctxt ->
         trimmed_thm -> expansion_thm -> basis -> expansion_thm * basis
    type lower_bound = expansion_thm * lower_bound_thm
    type lower_bound_thm
    val max_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm
    val min_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm
    val mk_eval_ctxt: Proof.context -> Lazy_Eval.eval_ctxt
    val mult_expansion_bounds:
       Lazy_Eval.eval_ctxt -> basis -> bounds -> bounds -> bounds
    datatype parity = Even of thm | Odd of thm | Unknown_Parity
    val power_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * term * basis -> expansion_thm
    val power_expansion_bounds:
       Lazy_Eval.eval_ctxt -> bounds * term * basis -> bounds
    val powr_const_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * term * basis -> expansion_thm
    val powr_const_expansion_bounds:
       Lazy_Eval.eval_ctxt -> bounds * term * basis -> bounds
    val powr_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm * basis
    val powr_expansion_bounds:
       Lazy_Eval.eval_ctxt -> basis -> bounds -> bounds -> bounds * basis
    val powr_nat_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * expansion_thm * basis -> expansion_thm * basis
    val powr_nat_expansion_bounds:
       Lazy_Eval.eval_ctxt -> basis -> bounds -> bounds -> bounds * basis
    val prove_asymp_equiv: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_asymp_equiv_bounds:
       Lazy_Eval.eval_ctxt -> bounds * bounds * basis -> thm
    val prove_asymptotic_relation:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> order * thm
    val prove_at_0: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_0_bounds: Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_at_bot: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_bot_bounds: Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_at_infinity: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_infinity_bounds:
       Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_at_left_0: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_left_0_bounds: Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_at_right_0: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_right_0_bounds:
       Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_at_top: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_at_top_bounds: Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_bigo: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_bigo_bounds:
       Lazy_Eval.eval_ctxt -> bounds * bounds * basis -> thm
    val prove_bigtheta: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_bigtheta_bounds:
       Lazy_Eval.eval_ctxt -> bounds * bounds * basis -> thm
    val prove_compare_expansions: order -> thm list -> thm
    val prove_eventually_greater:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_eventually_greater_bounds:
       Lazy_Eval.eval_ctxt -> bounds * bounds * basis -> thm
    val prove_eventually_less:
       Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_eventually_less_bounds:
       Lazy_Eval.eval_ctxt -> bounds * bounds * basis -> thm
    val prove_eventually_nonzero: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_eventually_nonzero_bounds:
       Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_nhds: Lazy_Eval.eval_ctxt -> thm * basis -> thm
    val prove_nhds_bounds: Lazy_Eval.eval_ctxt -> bounds * basis -> thm
    val prove_smallo: Lazy_Eval.eval_ctxt -> thm * thm * basis -> thm
    val prove_smallo_bounds:
       Lazy_Eval.eval_ctxt -> bounds * bounds * basis -> thm
    val register_sign_oracle:
       binding * (Proof.context -> int -> tactic) ->
         Context.generic -> Context.generic
    val retrim_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * basis -> expansion_thm * thm
    val retrim_pos_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * basis * trimmed_thm ->
           expansion_thm * thm * trimmed_thm
    val root_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * term * basis -> expansion_thm
    val sgn_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm * basis -> expansion_thm
    val sgn_expansion_bounds:
       Lazy_Eval.eval_ctxt -> bounds * basis -> bounds
    val simplify_expansion:
       Lazy_Eval.eval_ctxt -> expansion_thm -> expansion_thm
    val simplify_term: Lazy_Eval.eval_ctxt -> term -> term
    val simplify_trimmed_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm * trimmed_thm -> expansion_thm * trimmed_thm
    val solve_eval_eq: thm -> thm
    val trim_expansion:
       bool ->
         trim_mode option ->
           Lazy_Eval.eval_ctxt ->
             expansion_thm * basis ->
               expansion_thm * zeroness * trimmed_thm option
    val trim_expansion_while_greater:
       bool ->
         term list option ->
           bool ->
             trim_mode option ->
               Lazy_Eval.eval_ctxt ->
                 thm * basis -> thm * trim_result * (zeroness * thm) list
    datatype trim_mode = Neg_Trim | Pos_Trim | Sgn_Trim | Simple_Trim
    datatype trim_result
    = Aborted of order | Trimmed of zeroness * trimmed_thm option
    type trimmed_thm
    val try_drop_leading_term_ex:
       bool -> Lazy_Eval.eval_ctxt -> expansion_thm -> expansion_thm option
    val try_prove_ev_eq: Lazy_Eval.eval_ctxt -> term * term -> thm option
    val try_prove_real_eq:
       bool -> Lazy_Eval.eval_ctxt -> term * term -> thm option
    type upper_bound = expansion_thm * upper_bound_thm
    type upper_bound_thm
    val whnf_expansion:
       Lazy_Eval.eval_ctxt ->
         expansion_thm -> term option * expansion_thm * thm
    val zero_expansion: basis -> expansion_thm
    datatype zeroness = IsNeg | IsNonZero | IsPos | IsZero
    val zeroness_oracle:
       bool ->
         trim_mode option ->
           Lazy_Eval.eval_ctxt -> term -> zeroness * thm option
  end
structure Multiseries_Expansion: MULTISERIES_EXPANSION
structure Multiseries_Expansion_Bounds: EXPANSION_INTERFACE
structure Real_Asymp_Bounds: REAL_ASYMP
### theory "HOL-Real_Asymp.Multiseries_Expansion_Bounds"
### 5.400s elapsed time, 20.637s cpu time, 13.286s GC time
Loading theory "Draft.Dirichlet_Characters" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions")
class nat_power = semiring_1 +
  fixes nat_power :: "nat => 'a => 'a"
  assumes
    "nat_power_0_left": "!!x. x ~= (0::'a) ==> nat_power 0 x = (0::'a)"
  assumes
    "nat_power_0_right": "!!n. 0 < n ==> nat_power n (0::'a) = (1::'a)"
  assumes "nat_power_1_left": "!!x. nat_power (Suc 0) x = (1::'a)"
  assumes "nat_power_1_right": "!!n. nat_power n (1::'a) = of_nat n"
  assumes
    "nat_power_add":
      "!!n a b.
          0 < n ==> nat_power n (a + b) = nat_power n a * nat_power n b"
  assumes
    "nat_power_mult_distrib":
      "!!m n a.
          [| 0 < m; 0 < n |]
          ==> nat_power (m * n) a = nat_power m a * nat_power n a"
  assumes
    "nat_power_power":
      "!!n a m. 0 < n ==> nat_power n (a * of_nat m) = nat_power n a ^ m"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Analysis.Henstock_Kurzweil_Integration"
### 6.518s elapsed time, 24.869s cpu time, 14.323s GC time
Loading theory "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function")
### theory "Bernoulli.Bernoulli_FPS"
### 6.250s elapsed time, 23.856s cpu time, 14.123s GC time
Loading theory "HOL-Analysis.Integral_Test" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
locale antimono_fun_sum_integral_diff
  fixes f :: "real => real"
  assumes "antimono_fun_sum_integral_diff f"
### theory "HOL-Analysis.Integral_Test"
### 0.079s elapsed time, 0.319s cpu time, 0.000s GC time
Loading theory "HOL-Real_Asymp.Real_Asymp" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis")
bundle dcharacter_syntax
locale residues_nat
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
  assumes "residues_nat n"
  defines "G == residue_mult_group n"
signature REAL_ASYMP_DIAG =
  sig
    val expansion:
       Proof.context ->
         thm list ->
           bool * int -> term -> term -> term * Asymptotic_Basis.basis
    val expansion_cmd:
       Proof.context ->
         (Facts.ref * Token.src list) list list ->
           bool * int -> string -> string option -> unit
    val limit:
       Proof.context ->
         thm list -> term -> term -> Multiseries_Expansion.limit_result
    val limit_cmd:
       Proof.context ->
         (Facts.ref * Token.src list) list list ->
           string -> string option -> unit
    val pretty_limit: Proof.context -> term -> Pretty.T
  end
structure Real_Asymp_Diag: REAL_ASYMP_DIAG
### theory "HOL-Real_Asymp.Real_Asymp"
### 0.241s elapsed time, 0.961s cpu time, 0.076s GC time
Loading theory "Sturm_Tarski.Sturm_Tarski" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem")
locale dcharacter
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
    and \<chi> :: "nat => complex"
  assumes "dcharacter n \<chi>"
  defines "G == residue_mult_group n"
locale residues_nat
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
  assumes "residues_nat n"
  defines "G == residue_mult_group n"
class nat_power_field = nat_power + field +
  assumes "nat_power_nonzero": "!!n z. 0 < n ==> nat_power n z ~= (0::'a)"
instantiation
  nat :: nat_power
  nat_power_nat == nat_power :: nat => nat => nat
### theory "Draft.Dirichlet_Characters"
### 1.097s elapsed time, 4.325s cpu time, 0.444s GC time
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
carrier (| carrier = ?carrier, ... = ?more |) = ?carrier
partial_object.more (| carrier = ?carrier, ... = ?more |) = ?more
carrier_update ?carrier' (| carrier = ?carrier, ... = ?more |) =
(| carrier = ?carrier' ?carrier, ... = ?more |)
partial_object.more_update ?more' (| carrier = ?carrier, ... = ?more |) =
(| carrier = ?carrier, ... = ?more' ?more |)
(\<otimes>\<^bsub>(| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more |)\<^esub>) =
?mult
\<one>\<^bsub>(| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more |)\<^esub> =
?one
monoid.more
 (| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more |) =
?more
mult_update ?mult'
 (| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more |) =
(| carrier = ?carrier, mult = ?mult' ?mult, one = ?one, ... = ?more |)
one_update ?one'
 (| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more |) =
(| carrier = ?carrier, mult = ?mult, one = ?one' ?one, ... = ?more |)
monoid.more_update ?more'
 (| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more |) =
(| carrier = ?carrier, mult = ?mult, one = ?one, ... = ?more' ?more |)
[| ?M <= carrier G; ?g : carrier G; ?h : carrier G |]
==> ?M #>\<^bsub>add_monoid G\<^esub> ?g #>\<^bsub>add_monoid G\<^esub> ?h =
    ?M #>\<^bsub>add_monoid G\<^esub> ?g \<oplus> ?h
[| abelian_group ?G; ?M <= carrier ?G; ?g : carrier ?G; ?h : carrier ?G |]
==> ?M +>\<^bsub>?G\<^esub> ?g +>\<^bsub>?G\<^esub> ?h =
    ?M +>\<^bsub>?G\<^esub> ?g \<oplus>\<^bsub>?G\<^esub> ?h
instantiation
  real :: nat_power_field
  nat_power_real == nat_power :: nat => real => real
"- \<infinity>"
  :: "ereal"
"\<infinity>"
  :: "ereal"
Found termination order: "length <*mlex*> {}"
"ereal (13 / 4)"
  :: "ereal"
"True"
  :: "bool"
"True"
  :: "bool"
inj_on ?h ?A ==> (?g summable_on ?h ` ?A) = (?g o ?h summable_on ?A)
uniformity =
filtermap (%((x1, x2), y1, y2). ((x1, y1), x2, y2))
 (uniformity \<times>\<^sub>F uniformity)
?a : affine hull ?S ==> aff_dim ?S = int (dim ((+) (- ?a) ` ?S))
sigma_finite_measure (count_space ?A)
### theory "Sturm_Tarski.Sturm_Tarski"
### 1.184s elapsed time, 4.693s cpu time, 0.634s GC time
Loading theory "Budan_Fourier.BF_Misc" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem" via "Winding_Number_Eval.Missing_Transcendental" via "Winding_Number_Eval.Missing_Algebraic")
### theory "Dirichlet_Series.Dirichlet_Series"
### 3.441s elapsed time, 13.524s cpu time, 1.897s GC time
Loading theory "Dirichlet_Series.Moebius_Mu" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis")
### theory "Dirichlet_Series.Moebius_Mu"
### 0.248s elapsed time, 0.978s cpu time, 0.121s GC time
Loading theory "Dirichlet_Series.More_Totient" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "Dirichlet_Series.Partial_Summation" via "Dirichlet_Series.Arithmetic_Summatory")
Loading theory "Dirichlet_Series.Liouville_Lambda" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "Dirichlet_Series.Partial_Summation" via "Dirichlet_Series.Arithmetic_Summatory")
### theory "Dirichlet_Series.More_Totient"
### 0.135s elapsed time, 0.629s cpu time, 0.115s GC time
Loading theory "Dirichlet_Series.Divisor_Count" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "Dirichlet_Series.Partial_Summation" via "Dirichlet_Series.Arithmetic_Summatory")
### theory "Dirichlet_Series.Liouville_Lambda"
### 0.243s elapsed time, 1.116s cpu time, 0.215s GC time
### theory "Dirichlet_Series.Divisor_Count"
### 0.258s elapsed time, 1.079s cpu time, 0.207s GC time
Loading theory "Dirichlet_Series.Arithmetic_Summatory" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis" via "Dirichlet_Series.Partial_Summation")
### theory "Budan_Fourier.BF_Misc"
### 0.972s elapsed time, 3.978s cpu time, 0.731s GC time
### theory "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration"
### 2.637s elapsed time, 10.494s cpu time, 1.441s GC time
Loading theory "HOL-Analysis.Further_Topology" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve")
Loading theory "HOL-Analysis.Gamma_Function" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume")
Loading theory "HOL-Analysis.Improper_Integral" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "Dirichlet_Series.Arithmetic_Summatory"
### 0.388s elapsed time, 1.408s cpu time, 0.320s GC time
Loading theory "HOL-Analysis.Interval_Integral" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Lebesgue_Integral_Substitution")
### theory "HOL-Analysis.Improper_Integral"
### 0.536s elapsed time, 2.100s cpu time, 0.436s GC time
Loading theory "HOL-Analysis.Equivalence_Measurable_On_Borel" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Interval_Integral"
### 0.633s elapsed time, 2.463s cpu time, 0.525s GC time
Loading theory "HOL-Analysis.Lebesgue_Integral_Substitution" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume")
### theory "HOL-Analysis.Lebesgue_Integral_Substitution"
### 0.133s elapsed time, 0.518s cpu time, 0.072s GC time
Loading theory "HOL-Analysis.Vitali_Covering_Theorem" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis" via "HOL-Analysis.Change_Of_Vars")
### theory "HOL-Analysis.Equivalence_Measurable_On_Borel"
### 0.829s elapsed time, 3.210s cpu time, 0.623s GC time
?z ~: \<int>\<^sub>\<le>\<^sub>0 ==>
(Polygamma ?n has_field_derivative Polygamma (Suc ?n) ?z) (at ?z within ?A)
### theory "HOL-Analysis.Vitali_Covering_Theorem"
### 1.422s elapsed time, 5.455s cpu time, 1.252s GC time
Loading theory "HOL-Analysis.Change_Of_Vars" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
class Gamma = complete_space + real_normed_field +
  fixes rGamma :: "'a => 'a"
  assumes
    "rGamma_eq_zero_iff_aux":
      "!!z. (rGamma z = (0::'a)) = (EX n. z = - of_nat n)"
  assumes
    "differentiable_rGamma_aux1":
      "!!z. (!!n. z ~= - of_nat n) ==>
            let d = (THE d.
                        (%n. SUM k<n.
                             inverse (of_nat (Suc k)) -
                             inverse (z + of_nat k))
                        \<longlonglongrightarrow> d) -
                    euler_mascheroni *\<^sub>R (1::'a)
            in ((%y. (rGamma y - rGamma z +
                      rGamma z * d * (y - z)) /\<^sub>R
                     norm (y - z)) \<longlongrightarrow>
                (0::'a))
                (at z)"
  assumes
    "differentiable_rGamma_aux2":
      "!!n. let z = - of_nat n
            in ((%y. (rGamma y - rGamma z -
                      (- (1::'a)) ^ n * prod of_nat {1..n} *
                      (y - z)) /\<^sub>R
                     norm (y - z)) \<longlongrightarrow>
                (0::'a))
                (at z)"
  assumes
    "rGamma_series_aux":
      "!!z. (!!n. z ~= - of_nat n) ==>
            let fact' = %n. prod of_nat {1..n};
                exp =
                  %x. THE e.
                         (%n. SUM k<n. x ^ k /\<^sub>R fact k)
                         \<longlonglongrightarrow> e;
                pochhammer' = %a n. PROD n = 0..n. a + of_nat n
            in (%n. pochhammer' z n /
                    (fact' n * exp (z * ln (real n) *\<^sub>R (1::'a))))
               \<longlonglongrightarrow> rGamma z"
instantiation
  complex :: Gamma
  rGamma_complex == rGamma :: complex => complex
instantiation
  real :: Gamma
  rGamma_real == rGamma :: real => real
### theory "HOL-Analysis.Further_Topology"
### 7.262s elapsed time, 26.946s cpu time, 17.222s GC time
Loading theory "HOL-Analysis.Jordan_Curve" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Change_Of_Vars"
### 5.097s elapsed time, 18.488s cpu time, 15.370s GC time
Loading theory "HOL-Analysis.Simplex_Content" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Gamma_Function"
### 7.488s elapsed time, 27.658s cpu time, 17.365s GC time
Loading theory "HOL-Analysis.Ball_Volume" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Simplex_Content"
### 0.099s elapsed time, 0.299s cpu time, 0.000s GC time
### theory "HOL-Analysis.Ball_Volume"
### 0.473s elapsed time, 1.060s cpu time, 0.140s GC time
### theory "HOL-Analysis.Jordan_Curve"
### 0.790s elapsed time, 1.889s cpu time, 0.381s GC time
Loading theory "HOL-Analysis.Analysis" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem")
### theory "HOL-Analysis.Analysis"
### 3.795s elapsed time, 3.900s cpu time, 0.140s GC time
Loading theory "HOL-Complex_Analysis.Contour_Integration" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers" via "HOL-Complex_Analysis.Cauchy_Integral_Theorem")
Loading theory "Dirichlet_Series.Euler_Products" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis")
Loading theory "Dirichlet_Series.Partial_Summation" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Dirichlet_Series.Dirichlet_Series_Analysis")
### theory "Dirichlet_Series.Euler_Products"
### 0.622s elapsed time, 1.912s cpu time, 0.263s GC time
### theory "HOL-Complex_Analysis.Contour_Integration"
### 0.626s elapsed time, 1.902s cpu time, 0.263s GC time
Loading theory "HOL-Complex_Analysis.Cauchy_Integral_Theorem" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula" via "HOL-Complex_Analysis.Winding_Numbers")
locale Chain
  fixes x0 :: "'a"
    and At :: "'a => nat => bool"
    and Follows :: "'a => 'a => bool"
  assumes "Chain x0 At Follows"
consts
  f :: "nat => 'a"
### theory "Dirichlet_Series.Partial_Summation"
### 0.885s elapsed time, 2.478s cpu time, 0.347s GC time
### theory "HOL-Complex_Analysis.Cauchy_Integral_Theorem"
### 0.388s elapsed time, 0.708s cpu time, 0.162s GC time
Loading theory "HOL-Complex_Analysis.Winding_Numbers" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings" via "HOL-Complex_Analysis.Cauchy_Integral_Formula")
[| ((%x. \<i> * e) has_integral \<i> * e) {0::?'a1..1::?'a1};
   (?g has_integral ?j) {0::?'a1..1::?'a1};
   !!x. (0::?'a1) <= x & x <= (1::?'a1) ==> Re e <= Im (?g x) |]
==> Re e <= Im ?j
### theory "HOL-Complex_Analysis.Winding_Numbers"
### 0.461s elapsed time, 0.595s cpu time, 0.180s GC time
Loading theory "HOL-Complex_Analysis.Cauchy_Integral_Formula" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities" via "HOL-Complex_Analysis.Conformal_Mappings")
### theory "HOL-Complex_Analysis.Cauchy_Integral_Formula"
### 0.649s elapsed time, 0.845s cpu time, 0.271s GC time
Loading theory "HOL-Complex_Analysis.Conformal_Mappings" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues" via "HOL-Complex_Analysis.Complex_Singularities")
### theory "HOL-Complex_Analysis.Conformal_Mappings"
### 0.372s elapsed time, 0.499s cpu time, 0.175s GC time
Loading theory "HOL-Complex_Analysis.Complex_Singularities" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem" via "HOL-Complex_Analysis.Complex_Residues")
Loading theory "HOL-Complex_Analysis.Great_Picard" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Riemann_Mapping")
### theory "HOL-Complex_Analysis.Great_Picard"
### 0.330s elapsed time, 0.739s cpu time, 0.176s GC time
Loading theory "HOL-Complex_Analysis.Riemann_Mapping" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis")
locale SC_Chain
  fixes S :: "complex set"
  assumes "SC_Chain S"
locale SC_Chain
  fixes S :: "complex set"
  assumes "SC_Chain S"
locale SC_Chain
  fixes S :: "complex set"
  assumes "SC_Chain S"
### theory "HOL-Complex_Analysis.Complex_Singularities"
### 0.655s elapsed time, 1.504s cpu time, 0.449s GC time
Loading theory "HOL-Complex_Analysis.Complex_Residues" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis" via "HOL-Complex_Analysis.Residue_Theorem")
### theory "HOL-Complex_Analysis.Riemann_Mapping"
### 0.364s elapsed time, 0.843s cpu time, 0.273s GC time
### theory "HOL-Complex_Analysis.Complex_Residues"
### 0.164s elapsed time, 0.269s cpu time, 0.067s GC time
Loading theory "HOL-Complex_Analysis.Residue_Theorem" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin" via "HOL-Complex_Analysis.Complex_Analysis")
### theory "HOL-Complex_Analysis.Residue_Theorem"
### 0.598s elapsed time, 0.727s cpu time, 0.185s GC time
Loading theory "HOL-Complex_Analysis.Complex_Analysis" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Euler_MacLaurin.Euler_MacLaurin")
### theory "HOL-Complex_Analysis.Complex_Analysis"
### 0.219s elapsed time, 0.220s cpu time, 0.000s GC time
Loading theory "Winding_Number_Eval.Missing_Analysis" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem")
Loading theory "Bernoulli.Bernoulli_Zeta" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function")
Loading theory "Euler_MacLaurin.Euler_MacLaurin" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function")
Loading theory "Dirichlet_Series.Dirichlet_Series_Analysis" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function")
### theory "Winding_Number_Eval.Missing_Analysis"
### 0.113s elapsed time, 0.428s cpu time, 0.104s GC time
Loading theory "Winding_Number_Eval.Missing_Algebraic" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem" via "Winding_Number_Eval.Missing_Transcendental")
### theory "Bernoulli.Bernoulli_Zeta"
### 0.968s elapsed time, 3.729s cpu time, 0.539s GC time
### theory "Winding_Number_Eval.Missing_Algebraic"
### 1.168s elapsed time, 4.258s cpu time, 0.670s GC time
Loading theory "Winding_Number_Eval.Missing_Transcendental" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval" via "Winding_Number_Eval.Cauchy_Index_Theorem")
### theory "Winding_Number_Eval.Missing_Transcendental"
### 4.469s elapsed time, 16.720s cpu time, 16.100s GC time
Loading theory "Winding_Number_Eval.Cauchy_Index_Theorem" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function" via "Winding_Number_Eval.Winding_Number_Eval")
locale euler_maclaurin_int
  fixes F :: "real => 'a"
    and f :: "real => 'a"
    and fs :: "nat => real => 'a"
    and a :: "int"
    and N :: "nat"
    and C :: "'a"
    and Y :: "real set"
  assumes "euler_maclaurin_int F f fs a N C Y"
locale euler_maclaurin_int'
  fixes F :: "real => 'a"
    and f :: "real => 'a"
    and fs :: "nat => real => 'a"
    and a :: "int"
    and N :: "nat"
    and C :: "'a"
    and Y :: "real set"
  assumes "euler_maclaurin_int' F f fs a N C Y"
locale euler_maclaurin_nat
  fixes F :: "real => 'a"
    and f :: "real => 'a"
    and fs :: "nat => real => 'a"
    and a :: "nat"
    and N :: "nat"
    and C :: "'a"
    and Y :: "real set"
  assumes "euler_maclaurin_nat F f fs a N C Y"
locale euler_maclaurin_nat'
  fixes F :: "real => 'a"
    and f :: "real => 'a"
    and fs :: "nat => real => 'a"
    and a :: "nat"
    and N :: "nat"
    and C :: "'a"
    and Y :: "real set"
  assumes "euler_maclaurin_nat' F f fs a N C Y"
### theory "Euler_MacLaurin.Euler_MacLaurin"
### 6.310s elapsed time, 23.107s cpu time, 17.097s GC time
Proofs for inductive predicate(s) "finite_Psegments"
  Proving monotonicity ...
### theory "Winding_Number_Eval.Cauchy_Index_Theorem"
### 1.806s elapsed time, 4.460s cpu time, 0.807s GC time
Loading theory "Winding_Number_Eval.Winding_Number_Eval" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function")
class nat_power_normed_field = nat_power_field + real_inner +
  real_normed_field +
  fixes real_power :: "real => 'a => 'a"
  assumes
    "real_power_nat_power":
      "!!n c. 0 < n ==> real_power (real n) c = nat_power n c"
  assumes
    "real_power_1_right_aux":
      "!!d. 0 < d ==> real_power d (1::'a) = d *\<^sub>R (1::'a)"
  assumes
    "real_power_add":
      "!!d a b.
          0 < d ==> real_power d (a + b) = real_power d a * real_power d b"
  assumes "real_power_nonzero": "!!d a. 0 < d ==> real_power d a ~= (0::'a)"
  assumes
    "norm_real_power":
      "!!x c.
          0 < x ==> norm (real_power x c) = x powr (c \<bullet> (1::'a))"
  assumes
    "nat_power_of_real_aux":
      "!!n x.
          nat_power n (x *\<^sub>R (1::'a)) =
          real n powr x *\<^sub>R (1::'a)"
  assumes
    "has_field_derivative_nat_power_aux":
      "!!n x.
          0 < n ==>
          LIM y inf (Inf (principal ` {S. open S & x : S}))
                 (principal (UNIV - {x})).
             (nat_power n y - nat_power n x -
              ln (real n) *\<^sub>R nat_power n x * (y - x)) /\<^sub>R
             norm (y - x) :> Inf (principal ` {S. open S & (0::'a) : S})"
  assumes
    "has_vector_derivative_real_power_aux":
      "!!x c.
          0 < x ==>
          LIM y at x.
             (real_power y c - real_power x c -
              (y - x) *\<^sub>R (c * real_power x (c - (1::'a)))) /\<^sub>R
             norm (y - x) :> Inf (principal ` {S. open S & (0::'a) : S})"
  assumes
    "norm_nat_power":
      "!!n y.
          0 < n ==>
          norm (nat_power n y) = real n powr (y \<bullet> (1::'a))"
instantiation
  real :: nat_power_normed_field
  real_power_real == real_power :: real => real => real
instantiation
  complex :: nat_power_normed_field
  real_power_complex == real_power :: real => complex => complex
  nat_power_complex == nat_power :: nat => complex => complex
### theory "Winding_Number_Eval.Winding_Number_Eval"
### 1.123s elapsed time, 2.489s cpu time, 0.533s GC time
class dirichlet_series = nat_power_normed_field + euclidean_space +
  assumes "one_in_Basis": "(1::'a) : Basis"
locale nonneg_dirichlet_series
  fixes f :: "'a fds"
  assumes "nonneg_dirichlet_series f"
locale nonneg_dirichlet_series
  fixes f :: "'a fds"
  assumes "nonneg_dirichlet_series f"
locale nonneg_dirichlet_series
  fixes f :: "'a fds"
  assumes "nonneg_dirichlet_series f"
### theory "Dirichlet_Series.Dirichlet_Series_Analysis"
### 9.849s elapsed time, 29.796s cpu time, 18.464s GC time
Loading theory "Zeta_Function.Zeta_Library" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions" via "Zeta_Function.Zeta_Function")
### theory "Zeta_Function.Zeta_Library"
### 0.247s elapsed time, 0.331s cpu time, 0.114s GC time
Loading theory "Zeta_Function.Zeta_Function" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates" via "Draft.Dirichlet_L_Functions")
### theory "Zeta_Function.Zeta_Function"
### 3.200s elapsed time, 3.592s cpu time, 0.549s GC time
Loading theory "Draft.Dirichlet_L_Functions" (required by "Draft.Dirichlet_L_FunctionsMoreTemplates")
bundle vec_lambda_notation
bundle no_vec_lambda_notation
locale dcharacter
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
    and \<chi> :: "nat => complex"
  assumes "dcharacter n \<chi>"
  defines "G == residue_mult_group n"
locale residues_nat
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
  assumes "residues_nat n"
  defines "G == residue_mult_group n"
locale dcharacter
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
    and \<chi> :: "nat => complex"
  assumes "dcharacter n \<chi>"
  defines "G == residue_mult_group n"
locale residues_nat
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
  assumes "residues_nat n"
  defines "G == residue_mult_group n"
locale dcharacter
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
    and \<chi> :: "nat => complex"
  assumes "dcharacter n \<chi>"
  defines "G == residue_mult_group n"
locale real_dcharacter
  fixes n :: "nat"  (structure)
    and G :: "nat monoid"
    and \<chi> :: "nat => complex"
  assumes "real_dcharacter n \<chi>"
  defines "G == residue_mult_group n"
### theory "Draft.Dirichlet_L_Functions"
### 4.760s elapsed time, 5.653s cpu time, 1.285s GC time
Loading theory "Draft.Dirichlet_L_FunctionsMoreTemplates"
val templateLemmas =
   [("Dirichlet_L_Functions.holomorphic_Dirichlet_L_weak",
     "[| 0 < ?m; 1 ~: ?A |] ==> Dirichlet_L ?m ?\<chi> holomorphic_on ?A",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Dirichlet_L_Functions.coprime_prime_exists",
     "[| 0 < ?n; !!p. [| prime p; coprime p ?n |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Dirichlet_L_Functions.holomorphic_Dirichlet_L",
     "[| 1 < ?n;
         ?\<chi> ~= principal_dchar ?n & dcharacter ?n ?\<chi> |
         ?\<chi> = principal_dchar ?n & 1 ~: ?A |]
      ==> Dirichlet_L ?n ?\<chi> holomorphic_on ?A",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 1),
                        template_app (template_hole 5, template_var 2)))),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app (template_hole 5, template_var 2))),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Dirichlet_L_Functions.continuous_on_Dirichlet_L",
     "[| 1 < ?n;
         ?\<chi> ~= principal_dchar ?n & dcharacter ?n ?\<chi> |
         ?\<chi> = principal_dchar ?n & 1 ~: ?A |]
      ==> continuous_on ?A (Dirichlet_L ?n ?\<chi>)",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 1),
                        template_app (template_hole 5, template_var 2)))),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app (template_hole 5, template_var 2))),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Dirichlet_L_Functions.Dirichlet_L_conv_hurwitz_zeta_nonprincipal",
     "?s ~= 1 ==>
      Dirichlet_L ?n ?\<chi> ?s =
      of_nat ?n powr - ?s *
      (SUM k = 1..?n. ?\<chi> k * hurwitz_zeta (real k / real ?n) ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 11))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app (template_hole 6, template_var 2))),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)))))),
    ("Dirichlet_L_Functions.continuous_Dirichlet_L",
     "[| 1 < ?n;
         ?\<chi> ~= principal_dchar ?n & dcharacter ?n ?\<chi> |
         ?\<chi> = principal_dchar ?n & ?s ~= 1 |]
      ==> continuous (at ?s within ?A) (Dirichlet_L ?n ?\<chi>)",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_app (template_hole 6, template_var 3)))),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app (template_hole 6, template_var 3))),
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Dirichlet_L_Functions.holomorphic_Dirichlet_L'",
     "[| 1 < ?n; ?f holomorphic_on ?A;
         ?\<chi> ~= principal_dchar ?n & dcharacter ?n ?\<chi> |
         ?\<chi> = principal_dchar ?n & (ALL x:?A. ?f x ~= 1) |]
      ==> (%s. Dirichlet_L ?n ?\<chi> (?f s)) holomorphic_on ?A",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 0),
                        template_app (template_hole 5, template_var 3)))),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_app (template_hole 5, template_var 3))),
                template_app
                 (template_app (template_hole 3, template_var 1), t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, t_empty), template_var 1)
           ))),
    ("Dirichlet_L_Functions.continuous_on_Dirichlet_L'",
     "[| continuous_on ?A ?f; 1 < ?n;
         ?\<chi> ~= principal_dchar ?n & dcharacter ?n ?\<chi> |
         ?\<chi> = principal_dchar ?n & (ALL x:?A. ?f x ~= 1) |]
      ==> continuous_on ?A (%x. Dirichlet_L ?n ?\<chi> (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 10, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 0),
                        template_app (template_hole 5, template_var 1)))),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_app (template_hole 5, template_var 1))),
                template_app
                 (template_app (template_hole 3, template_var 3), t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 3), t_empty)
           ))),
    ("Dirichlet_L_Functions.continuous_Dirichlet_L'",
     "[| 1 < ?n; continuous (at ?s within ?A) ?f;
         ?\<chi> ~= principal_dchar ?n & dcharacter ?n ?\<chi> |
         ?\<chi> = principal_dchar ?n & ?f ?s ~= 1 |]
      ==> continuous (at ?s within ?A) (%x. Dirichlet_L ?n ?\<chi> (?f x))",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 0),
                        template_app (template_hole 4, template_var 4)))),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 5, template_var 0),
                    template_app (template_hole 4, template_var 4))),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_var 1, template_var 3)),
                    template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_var 2)),
             t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.Dirichlet_L_FunctionsMoreTemplates"
### 83.862s elapsed time, 291.567s cpu time, 288.530s GC time
val it = (): unit
