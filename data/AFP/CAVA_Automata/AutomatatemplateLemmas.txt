   [("Automata.F_to_idx_refine",
     "ALL A:?F. finite A ==> F_to_idx_impl ?F <= \<Down> Id (F_to_idx ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0), t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Automata.gba_rename_correct",
     "[| gba ?G; inj_on ?f (g_V ?G) |] ==> gba (gba_rename ?f ?G)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, t_empty),
                         template_var 0)),
                     template_var 0)),
                 template_var 0),
               template_var 1))
           ))),
    ("Automata.gba_rename_correct",
     "[| gba ?G; inj_on ?f (g_V ?G) |]
      ==> gba.accept (gba_rename ?f ?G) = gba.accept ?G",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_var 0)),
                   template_var 0)),
               template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("Automata.gba_rename_correct",
     "[| gba ?G; inj_on ?f (g_V ?G) |]
      ==> gba.lang (gba_rename ?f ?G) = gba.lang ?G",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_var 0)),
                   template_var 0)),
               template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("Automata.gba_rename_correct",
     "[| gba ?G; inj_on ?f (g_V ?G); finite (g_V ?G) |]
      ==> finite (g_V (gba_rename ?f ?G))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 7, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_var 0)),
                       template_var 0)),
                   template_var 0),
                 template_var 1)))
           ))),
    ("Automata.mk_acc_impl_correct",
     "[| (?Flist', ?Flist) : Id; ALL A:set ?Flist. finite A |]
      ==> mk_acc_impl ?Flist'
          <= \<Down> Id
              (RETURN (%v. {i. i < length ?Flist & v : ?Flist ! i}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 9, template_var 1),
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app (template_hole 6, t_empty))))),
    ("Automata.F_to_idx_correct",
     "F_to_idx ?F
      <= SPEC
          (%(num_acc, acc).
              ?F = {{q. i : acc q} |i. i < num_acc} &
              \<Union> (range acc) <= {0..<num_acc})",
     template_inequation
      (less_equals, template_app (template_hole 17, template_var 0),
       template_app
        (template_hole 16,
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty)))))]
