Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Automata_ImplTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Automata_ImplTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Digraph_Basic" (required by "Draft.Automata_ImplTemplates" via "Draft.Automata_Impl" via "Draft.Digraph_Impl" via "Draft.Digraph")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Automata_ImplTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.587s cpu time, 0.053s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Automata_ImplTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.260s elapsed time, 1.066s cpu time, 0.053s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Automata_ImplTemplates" via "Draft.ExtrEqs")
locale digraph
  fixes E :: "('v * 'v) set"
Proofs for inductive predicate(s) "path"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Digraph_Basic"
### 0.667s elapsed time, 2.612s cpu time, 0.310s GC time
Loading theory "Draft.Digraph" (required by "Draft.Automata_ImplTemplates" via "Draft.Automata_Impl" via "Draft.Digraph_Impl")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Stream"
### 0.974s elapsed time, 3.814s cpu time, 0.401s GC time
[| path ?E ?x1.0 ?x2.0 ?x3.0; !!u. ?P u [] u;
   !!u v l w.
      [| (u, v) : ?E; path ?E v l w; ?P v l w |] ==> ?P u (u # l) w |]
==> ?P ?x1.0 ?x2.0 ?x3.0
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.085s elapsed time, 3.927s cpu time, 1.027s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale graph_defs
  fixes G :: "('v, 'more) graph_rec_scheme"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale graph
  fixes G :: "('v, 'more) graph_rec_scheme"
  assumes "graph G"
locale fb_graph
  fixes G :: "('v, 'more) graph_rec_scheme"
  assumes "fb_graph G"
locale g_rename_precond
  fixes G :: "('u, 'more) graph_rec_scheme"
    and f :: "'u => 'v"
    and ecnv :: "('u, 'more) graph_rec_scheme => 'more'"
  assumes "g_rename_precond G f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Digraph"
### 1.241s elapsed time, 3.572s cpu time, 0.916s GC time
Loading theory "Draft.Automata" (required by "Draft.Automata_ImplTemplates" via "Draft.Automata_Impl")
Loading theory "Draft.Digraph_Impl" (required by "Draft.Automata_ImplTemplates" via "Draft.Automata_Impl")
### Cannot skip proof of schematic goal statement
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.161s elapsed time, 6.791s cpu time, 1.317s GC time
Loading theory "Draft.Templates" (required by "Draft.Automata_ImplTemplates" via "Draft.ExtrEqs")
locale gb_graph
  fixes G :: "('Q, 'more) gb_graph_rec_scheme"
  assumes "gb_graph G"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.061s elapsed time, 0.198s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Automata_ImplTemplates")
locale gb_rename_precond
  fixes G :: "('u, 'more) gb_graph_rec_scheme"
    and f :: "'u => 'v"
    and ecnv :: "('u, 'more) gb_graph_rec_scheme => 'a"
  assumes "gb_rename_precond G f"
locale gba
  fixes G :: "('Q, 'L, 'more) gba_rec_scheme"
  assumes "gba G"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.642s elapsed time, 1.933s cpu time, 0.233s GC time
locale gba_rename_precond
  fixes G :: "('u, 'L, 'more) gba_rec_scheme"
    and f :: "'u => 'v"
    and ecnv :: "('u, 'L, 'more) gba_rec_scheme => 'a"
  assumes "gba_rename_precond G f"
### Cannot skip proof of schematic goal statement
Phase "id_op"
0.000s elapsed time, 0.000s cpu time, 0.000s GC time
locale b_graph
  fixes G :: "('Q, 'more) b_graph_rec_scheme"
  assumes "b_graph G"
Phase "id_op"
0.005s elapsed time, 0.012s cpu time, 0.000s GC time
Success (Phase "id_op")
Phase "rel_inf"
0.009s elapsed time, 0.017s cpu time, 0.000s GC time
Success (Phase "rel_inf")
Phase "fix_rel"
0.005s elapsed time, 0.013s cpu time, 0.000s GC time
Success (Phase "fix_rel")
Phase "trans"
0.005s elapsed time, 0.009s cpu time, 0.000s GC time
Success (Phase "trans")
locale ba
  fixes G :: "('Q, 'L, 'more) ba_rec_scheme"
  assumes "ba G"
### Cannot skip proof of schematic goal statement
Phase "id_op"
0.000s elapsed time, 0.000s cpu time, 0.000s GC time
locale igb_graph
  fixes G :: "('Q, 'more) igb_graph_rec_scheme"
  assumes "igb_graph G"
Phase "id_op"
0.006s elapsed time, 0.013s cpu time, 0.000s GC time
Success (Phase "id_op")
Phase "rel_inf"
0.009s elapsed time, 0.018s cpu time, 0.000s GC time
Success (Phase "rel_inf")
Phase "fix_rel"
0.005s elapsed time, 0.009s cpu time, 0.000s GC time
Success (Phase "fix_rel")
Phase "trans"
0.005s elapsed time, 0.013s cpu time, 0.000s GC time
Success (Phase "trans")
### Cannot skip proof of schematic goal statement
locale igba
  fixes G :: "('Q, 'L, 'more) igba_rec_scheme"
  assumes "igba G"
locale igb_graph
  fixes G :: "('Q, 'more) igb_graph_rec_scheme"
  assumes "igb_graph G"
### Cannot skip proof of schematic goal statement
locale sa
  fixes G :: "('Q, 'L, 'more) sa_rec_scheme"
  assumes "sa G"
Phase "id_op"
0.000s elapsed time, 0.000s cpu time, 0.000s GC time
locale igba_sys_prod_precond
  fixes G :: "('q, 'l, 'moreG) igba_rec_scheme"
    and S :: "('s, 'l, 'moreS) sa_rec_scheme"
  assumes "igba_sys_prod_precond G S"
### theory "Draft.Automata"
### 4.345s elapsed time, 10.411s cpu time, 1.957s GC time
Phase "id_op"
0.004s elapsed time, 0.004s cpu time, 0.000s GC time
Success (Phase "id_op")
Phase "rel_inf"
0.008s elapsed time, 0.008s cpu time, 0.000s GC time
Success (Phase "rel_inf")
Phase "fix_rel"
0.004s elapsed time, 0.004s cpu time, 0.000s GC time
Success (Phase "fix_rel")
Phase "trans"
0.005s elapsed time, 0.005s cpu time, 0.000s GC time
Success (Phase "trans")
### Adding overloaded interface type to constant:
###   (:) ::\<^sub>i
###   \<langle>i_of_rel R,
###   i_of_rel R\<rangle>\<^sub>ii_prod \<rightarrow>\<^sub>i
###   \<langle>\<langle>i_of_rel R,
###   i_of_rel
###    R\<rangle>\<^sub>ii_prod\<rangle>\<^sub>ii_of_rel
###        Rs \<rightarrow>\<^sub>i
###   i_bool
### Cannot skip proof of schematic goal statement
Phase "id_op"
0.000s elapsed time, 0.000s cpu time, 0.000s GC time
Phase "id_op"
0.007s elapsed time, 0.007s cpu time, 0.000s GC time
Success (Phase "id_op")
Phase "rel_inf"
0.013s elapsed time, 0.013s cpu time, 0.000s GC time
Success (Phase "rel_inf")
Phase "fix_rel"
0.006s elapsed time, 0.006s cpu time, 0.000s GC time
Success (Phase "fix_rel")
Phase "trans"
0.007s elapsed time, 0.007s cpu time, 0.000s GC time
Success (Phase "trans")
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### theory "Draft.Digraph_Impl"
### 9.169s elapsed time, 15.533s cpu time, 2.402s GC time
*** Failed to load theory "Draft.Automata_Impl" (unresolved "Draft.Digraph_Impl")
*** Failed to load theory "Draft.Automata_ImplTemplates" (unresolved "Draft.Automata_Impl")
*** exception Protocol_Message
***   [("function", "invoke_scala"), ("name", "make_directory"), ("id", "184")] raised (line 124 of "General/output.ML")
*** At command "export_code" (line 381 of "$AFP/CAVA_Automata/Digraph_Impl.thy")
Exception- TOPLEVEL_ERROR raised
