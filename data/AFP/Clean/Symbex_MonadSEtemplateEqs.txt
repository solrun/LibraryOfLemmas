   [("Symbex_MonadSE.exec_fail_SE",
     "(?\<sigma> \<Turnstile> fail\<^sub>S\<^sub>E) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Symbex_MonadSE.exec_unit_SE",
     "(?\<sigma> \<Turnstile> unit\<^sub>S\<^sub>E ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Symbex_MonadSE.assert_simp",
     "(?\<sigma> \<Turnstile> assert\<^sub>S\<^sub>E ?P) = ?P ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 0, template_var 1))),
    ("Symbex_MonadSE.exec_skip",
     "(?\<sigma> \<Turnstile> skip\<^sub>S\<^sub>E ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Symbex_MonadSE.exec_unit_SE'",
     "(?\<sigma>\<^sub>0 \<Turnstile>
       (%\<sigma>. Some (?f \<sigma>, \<sigma>))) =
      ?f ?\<sigma>\<^sub>0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app (template_var 0, template_var 1))),
    ("Symbex_MonadSE.valid_mbind_mt",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          [] ?f)
        (unit\<^sub>S\<^sub>E (?P s))) =
      ?P []",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           t_empty)),
       template_app (template_var 0, template_hole 0))),
    ("Symbex_MonadSE.valid_mbind'_mt",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          [] ?f)
        (unit\<^sub>S\<^sub>E (?P s))) =
      ?P []",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           t_empty)),
       template_app (template_var 0, template_hole 0))),
    ("Symbex_MonadSE.valid_mbind''_mt",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
          [] ?f)
        (unit\<^sub>S\<^sub>E (?P s))) =
      ?P []",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           t_empty)),
       template_app (template_var 0, template_hole 0))),
    ("Symbex_MonadSE.assert_bind_simp",
     "(?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (assert\<^sub>S\<^sub>E ?P) ?M) =
      (?P ?\<sigma> & (?\<sigma> \<Turnstile> ?M True))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("Symbex_MonadSE.if_SE_split",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2) =
      ((?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>1)) &
       (~ ?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>2)))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 3))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0))))),
    ("Symbex_MonadSE.if_SE_split_asm",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2) =
      (?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>1) |
       ~ ?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>2))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 3))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0))))),
    ("Symbex_MonadSE.exec_while",
     "(?\<sigma> \<Turnstile> _while_SE ?b ?c ;- ?M) =
      (?\<sigma> \<Turnstile>
       _if_SE ?b (?c ;- _while_SE ?b ?c) (unit\<^sub>S\<^sub>E ()) ;- ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1))),
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Symbex_MonadSE.mbind'_concat",
     "bind\<^sub>S\<^sub>E
       (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
         (?S @ ?T) ?f)
       ?P =
      _bind_SE os
       (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
         ?S ?f)
       (_bind_SE os'
         (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
           ?T ?f)
         (?P (os @ os')))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         t_empty))),
    ("Symbex_MonadSE.if_SE_split'",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      ((?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M)) &
       (~ ?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>2 ;- ?M)))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 4)),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 4))),
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))))),
    ("Symbex_MonadSE.if_SE_split_asm'",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      (?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M) |
       ~ ?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>2 ;- ?M))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 4)),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 4))),
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))))),
    ("Symbex_MonadSE.mbindFSave_vs_mbindFStop",
     "(?\<sigma> \<Turnstile>
       _bind_SE os
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          ?\<iota>s ?ioprog)
        (unit\<^sub>S\<^sub>E
          (length ?\<iota>s = length os & ?P ?\<iota>s os))) =
      (?\<sigma> \<Turnstile>
       _bind_SE os
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          ?\<iota>s ?ioprog)
        (unit\<^sub>S\<^sub>E (?P ?\<iota>s os)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           t_empty)))),
    ("Symbex_MonadSE.exec_mbindFSave",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          (?a # ?S) ?ioprog)
        (?return (?P s))) =
      (case ?ioprog ?a ?\<sigma> of
       None => ?\<sigma> \<Turnstile> ?return (?P [])
       | Some (b, \<sigma>') =>
           \<sigma>' \<Turnstile>
           _bind_SE s
            (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
              ?S ?ioprog)
            (?return (?P (b # s))))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 5),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 3)),
               template_var 2)),
           t_empty)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_var 1,
                 template_app (template_var 0, template_hole 2)))),
           t_empty),
         template_app
          (template_app (template_var 2, template_var 4),
           template_var 5))))]
