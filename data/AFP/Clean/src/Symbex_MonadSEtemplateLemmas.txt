   [("Symbex_MonadSE.exec_fail_SE'",
     "~ (?\<sigma>\<^sub>0 \<Turnstile> Map.empty)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0), t_empty)
             )
         )),
    ("Symbex_MonadSE.exec_fail_SE",
     "(?\<sigma> \<Turnstile> fail\<^sub>S\<^sub>E) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Symbex_MonadSE.exec_unit_SE",
     "(?\<sigma> \<Turnstile> unit\<^sub>S\<^sub>E ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Symbex_MonadSE.assert_simp",
     "(?\<sigma> \<Turnstile> assert\<^sub>S\<^sub>E ?P) = ?P ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 0, template_var 1))),
    ("Symbex_MonadSE.assert_disch4",
     "?P ?\<sigma> ==> ?\<sigma> \<Turnstile> assert\<^sub>S\<^sub>E ?P",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Symbex_MonadSE.assert_D",
     "?\<sigma> \<Turnstile> assert\<^sub>S\<^sub>E ?P ==> ?P ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Symbex_MonadSE.exec_skip",
     "(?\<sigma> \<Turnstile> skip\<^sub>S\<^sub>E ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Symbex_MonadSE.assert_disch3",
     "~ ?P ?\<sigma> ==>
      ~ (?\<sigma> \<Turnstile> assert\<^sub>S\<^sub>E ?P)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Symbex_MonadSE.exec_skipD",
     "?\<sigma> \<Turnstile> skip\<^sub>S\<^sub>E ;- ?M ==>
      ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Symbex_MonadSE.exec_unit_SE'",
     "(?\<sigma>\<^sub>0 \<Turnstile>
       (%\<sigma>. Some (?f \<sigma>, \<sigma>))) =
      ?f ?\<sigma>\<^sub>0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app (template_var 0, template_var 1))),
    ("Symbex_MonadSE.exec_bind_SE_failure2",
     "?A ?\<sigma> = None ==> ~ (?\<sigma> \<Turnstile> ?A ;- ?M)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))
               )
           ))),
    ("Symbex_MonadSE.valid_mbind_mt",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          [] ?f)
        (unit\<^sub>S\<^sub>E (?P s))) =
      ?P []",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           t_empty)),
       template_app (template_var 0, template_hole 0))),
    ("Symbex_MonadSE.valid_mbind'_mt",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          [] ?f)
        (unit\<^sub>S\<^sub>E (?P s))) =
      ?P []",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           t_empty)),
       template_app (template_var 0, template_hole 0))),
    ("Symbex_MonadSE.valid_mbind''_mt",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
          [] ?f)
        (unit\<^sub>S\<^sub>E (?P s))) =
      ?P []",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           t_empty)),
       template_app (template_var 0, template_hole 0))),
    ("Symbex_MonadSE.if_SE_D1",
     "?P ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2) =
      (?\<sigma> \<Turnstile> ?B\<^sub>1)",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Symbex_MonadSE.assert_disch2",
     "~ ?P ?\<sigma> ==>
      ~ (?\<sigma> \<Turnstile>
         _bind_SE x (assert\<^sub>S\<^sub>E ?P) (?M ?s))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 3, template_var 2))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   t_empty))
               )
           ))),
    ("Symbex_MonadSE.exec_bind_SE_failure",
     "?A ?\<sigma> = None ==>
      ~ (?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?A ?M)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2), t_empty))
               )
           ))),
    ("Symbex_MonadSE.if_SE_D2",
     "~ ?P ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2) =
      (?\<sigma> \<Turnstile> ?B\<^sub>2)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Symbex_MonadSE.assert_bind_simp",
     "(?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (assert\<^sub>S\<^sub>E ?P) ?M) =
      (?P ?\<sigma> & (?\<sigma> \<Turnstile> ?M True))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("Symbex_MonadSE.exec_bind_SE_success'",
     "?M ?\<sigma> = Some (?f ?\<sigma>, ?\<sigma>) ==>
      (?\<sigma> \<Turnstile> ?M) = ?f ?\<sigma>",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app (template_var 0, template_var 1)),
              template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app (template_var 0, template_var 1)))),
    ("Symbex_MonadSE.assert_disch1",
     "?P ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (assert\<^sub>S\<^sub>E ?P) ?M) =
      (?\<sigma> \<Turnstile> ?M True)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_var 0, template_hole 0))))),
    ("Symbex_MonadSE.assume_D",
     "?\<sigma> \<Turnstile> _bind_SE _ (assume\<^sub>S\<^sub>E ?P) ?M ==>
      EX \<sigma>. ?P \<sigma> & (\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                t_empty))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Symbex_MonadSE.assert_bindD",
     "?\<sigma> \<Turnstile>
      bind\<^sub>S\<^sub>E (assert\<^sub>S\<^sub>E ?P) ?M ==>
      ?P ?\<sigma> & (?\<sigma> \<Turnstile> ?M True)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 2)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_var 0, template_hole 0)))
           ))),
    ("Symbex_MonadSE.if_SE_D1'",
     "?P ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      (?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M)",
     template_implication
      ([template_predicate (template_app (template_var 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Symbex_MonadSE.valid_bind'_cong",
     "?f ?\<sigma> = ?g ?\<sigma> ==>
      (?\<sigma> \<Turnstile> ?f ;- ?M) =
      (?\<sigma> \<Turnstile> ?g ;- ?M)",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Symbex_MonadSE.exec_bind_SE_success2",
     "?A ?\<sigma> = Some (?b, ?\<sigma>') ==>
      (?\<sigma> \<Turnstile> ?A ;- ?M) = (?\<sigma>' \<Turnstile> ?M)",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Symbex_MonadSE.if_SE_D2'",
     "~ ?P ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      (?\<sigma> \<Turnstile> ?B\<^sub>2 ;- ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Symbex_MonadSE.exec_mbindFStop_failure",
     "?ioprog ?a ?\<sigma> = None ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          (?a # ?S) ?ioprog)
        ?M) =
      False",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 4, template_var 3), template_var 2),
          template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_var 4)),
             t_empty)),
         template_hole 0))),
    ("Symbex_MonadSE.valid_mbind_mtE",
     "[| ?\<sigma> \<Turnstile>
         _bind_SE s
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
            [] ?f)
          (unit\<^sub>S\<^sub>E (?P s));
         ?P [] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 2)),
                t_empty))
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.valid_mbind'_mtE",
     "[| ?\<sigma> \<Turnstile>
         _bind_SE s
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
            [] ?f)
          (unit\<^sub>S\<^sub>E (?P s));
         ?P [] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 2)),
                t_empty))
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.valid_mbind''_mtE",
     "[| ?\<sigma> \<Turnstile>
         _bind_SE s
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
            [] ?f)
          (unit\<^sub>S\<^sub>E (?P s));
         ?P [] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 2)),
                t_empty))
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.if_SE_split",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2) =
      ((?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>1)) &
       (~ ?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>2)))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 3))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0))))),
    ("Symbex_MonadSE.if_SE_split_asm",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2) =
      (?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>1) |
       ~ ?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>2))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 3))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0))))),
    ("Symbex_MonadSE.exec_while",
     "(?\<sigma> \<Turnstile> _while_SE ?b ?c ;- ?M) =
      (?\<sigma> \<Turnstile>
       _if_SE ?b (?c ;- _while_SE ?b ?c) (unit\<^sub>S\<^sub>E ()) ;- ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1))),
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Symbex_MonadSE.exec_bind_SE_success",
     "?A ?\<sigma> = Some (?b, ?\<sigma>') ==>
      (?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?A ?M) =
      (?\<sigma>' \<Turnstile> ?M ?b)",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 4), t_empty)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_var 0, template_var 2))))),
    ("Symbex_MonadSE.valid_bind_cong",
     "?f ?\<sigma> = ?g ?\<sigma> ==>
      (?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?f ?M) =
      (?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?g ?M)",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty))))),
    ("Symbex_MonadSE.exec_whileD",
     "?\<sigma> \<Turnstile> _while_SE ?b ?c ;- ?M ==>
      ?\<sigma> \<Turnstile>
      _if_SE ?b (?c ;- _while_SE ?b ?c) (unit\<^sub>S\<^sub>E ()) ;- ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_var 1))),
                   template_app (template_hole 1, template_hole 0))),
               template_var 0))
           ))),
    ("Symbex_MonadSE.exec_mbindFSave_failure",
     "?ioprog ?a ?\<sigma> = None ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          (?a # ?S) ?ioprog)
        ?M) =
      (?\<sigma> \<Turnstile> ?M [])",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 4, template_var 3), template_var 2),
          template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_var 4)),
             t_empty)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("Symbex_MonadSE.exec_bind_SE_success'''",
     "?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?A ?M ==>
      EX a. ?A ?\<sigma> = Some a & (snd a \<Turnstile> ?M (fst a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Symbex_MonadSE.assume_E'",
     "[| ?\<sigma> \<Turnstile> assume\<^sub>S\<^sub>E ?P ;- ?M;
         !!\<sigma>. [| ?P \<sigma>; \<sigma> \<Turnstile> ?M |] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.mbind'_concat",
     "bind\<^sub>S\<^sub>E
       (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
         (?S @ ?T) ?f)
       ?P =
      _bind_SE os
       (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
         ?S ?f)
       (_bind_SE os'
         (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
           ?T ?f)
         (?P (os @ os')))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         t_empty))),
    ("Symbex_MonadSE.assume_E",
     "[| ?\<sigma> \<Turnstile> _bind_SE _ (assume\<^sub>S\<^sub>E ?P) ?M;
         !!\<sigma>. [| ?P \<sigma>; \<sigma> \<Turnstile> ?M |] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                t_empty))
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.exec_bind_SE_success''''",
     "?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?A ?M ==>
      EX v \<sigma>'.
         ?A ?\<sigma> = Some (v, \<sigma>') &
         (\<sigma>' \<Turnstile> ?M v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Symbex_MonadSE.exec_bind_SE_success''",
     "?\<sigma> \<Turnstile> bind\<^sub>S\<^sub>E ?A ?M ==>
      EX v \<sigma>'.
         the (?A ?\<sigma>) = (v, \<sigma>') &
         (\<sigma>' \<Turnstile> ?M v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Symbex_MonadSE.if_SE_split'",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      ((?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M)) &
       (~ ?P ?\<sigma> --> (?\<sigma> \<Turnstile> ?B\<^sub>2 ;- ?M)))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 4)),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 4))),
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))))),
    ("Symbex_MonadSE.if_SE_split_asm'",
     "(?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      (?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M) |
       ~ ?P ?\<sigma> & (?\<sigma> \<Turnstile> ?B\<^sub>2 ;- ?M))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 4)),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 4))),
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))))),
    ("Symbex_MonadSE.exec_mbindFPurge_failure",
     "?ioprog ?a ?\<sigma> = None ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
          (?a # ?S) ?ioprog)
        ?M) =
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
          ?S ?ioprog)
        ?M)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 4, template_var 3), template_var 2),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_var 4)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4)),
             t_empty))))),
    ("Symbex_MonadSE.mbindFSave_vs_mbindFStop",
     "(?\<sigma> \<Turnstile>
       _bind_SE os
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          ?\<iota>s ?ioprog)
        (unit\<^sub>S\<^sub>E
          (length ?\<iota>s = length os & ?P ?\<iota>s os))) =
      (?\<sigma> \<Turnstile>
       _bind_SE os
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          ?\<iota>s ?ioprog)
        (unit\<^sub>S\<^sub>E (?P ?\<iota>s os)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           t_empty)))),
    ("Symbex_MonadSE.mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e_vs_mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p",
     "ALL \<iota> \<sigma>. ?ioprog \<iota> \<sigma> ~= None ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          ?\<iota>s ?ioprog)
        ?P) =
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          ?\<iota>s ?ioprog)
        ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             t_empty))))),
    ("Symbex_MonadSE.exec_mbindFSave_success",
     "?ioprog ?a ?\<sigma> = Some (?b, ?\<sigma>') ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          (?a # ?S) ?ioprog)
        ?M) =
      (?\<sigma>' \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          ?S ?ioprog)
        (?M (?b # s)))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 6, template_var 5), template_var 4),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 1)),
                 template_var 6)),
             t_empty)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 6)),
             t_empty))))),
    ("Symbex_MonadSE.exec_mbindFStop_success",
     "?ioprog ?a ?\<sigma> = Some (?b, ?\<sigma>') ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          (?a # ?S) ?ioprog)
        ?M) =
      (?\<sigma>' \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
          ?S ?ioprog)
        (?M (?b # s)))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 6, template_var 5), template_var 4),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 1)),
                 template_var 6)),
             t_empty)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 6)),
             t_empty))))),
    ("Symbex_MonadSE.exec_mbindFPurge_success",
     "?ioprog ?a ?\<sigma> = Some (?b, ?\<sigma>') ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
          (?a # ?S) ?ioprog)
        ?M) =
      (?\<sigma>' \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
          ?S ?ioprog)
        (?M (?b # s)))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 6, template_var 5), template_var 4),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 1)),
                 template_var 6)),
             t_empty)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 6)),
             t_empty))))),
    ("Symbex_MonadSE.if_SE_execE",
     "[| ?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2;
         [| ?P ?\<sigma>; ?\<sigma> \<Turnstile> ?B\<^sub>1 |] ==> ?Q;
         [| ~ ?P ?\<sigma>; ?\<sigma> \<Turnstile> ?B\<^sub>2 |] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 3, template_var 4))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 2)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (template_app (template_var 3, template_var 4))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.mbind_eq_sexec'",
     "(!!b \<sigma>'.
          ?f ?a ?\<sigma> = Some (b, \<sigma>') ==>
          ?P b \<sigma>' = ?P' b \<sigma>') ==>
      bind\<^sub>S\<^sub>E (?f ?a) ?P ?\<sigma> =
      bind\<^sub>S\<^sub>E (?f ?a) ?P' ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_var 4, template_var 3)),
             t_empty),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_var 4, template_var 3)),
             t_empty),
           template_var 2)))),
    ("Symbex_MonadSE.exec_mbindFSave",
     "(?\<sigma> \<Turnstile>
       _bind_SE s
        (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
          (?a # ?S) ?ioprog)
        (?return (?P s))) =
      (case ?ioprog ?a ?\<sigma> of
       None => ?\<sigma> \<Turnstile> ?return (?P [])
       | Some (b, \<sigma>') =>
           \<sigma>' \<Turnstile>
           _bind_SE s
            (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
              ?S ?ioprog)
            (?return (?P (b # s))))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 5),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 3)),
               template_var 2)),
           t_empty)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_var 1,
                 template_app (template_var 0, template_hole 2)))),
           t_empty),
         template_app
          (template_app (template_var 2, template_var 4),
           template_var 5)))),
    ("Symbex_MonadSE.assert_suffix_inv",
     "[| ?\<sigma> \<Turnstile>
         _bind_SE _
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
            ?xs ?istep)
          (assert\<^sub>S\<^sub>E ?P);
         ALL \<sigma>.
            ?P \<sigma> -->
            (\<sigma> \<Turnstile>
             _bind_SE _ (?istep ?x) (assert\<^sub>S\<^sub>E ?P)) |]
      ==> ?\<sigma> \<Turnstile>
          _bind_SE _
           (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
             (?xs @ [?x]) ?istep)
           (assert\<^sub>S\<^sub>E ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2)),
                t_empty))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 4),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_hole 0))),
                   template_var 2)),
               t_empty))
           ))),
    ("Symbex_MonadSE.if_SE_execE''_pos",
     "[| ?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M;
         [| ?P ?\<sigma>; ?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M |] ==> ?Q;
         opaque
          (?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) ==>
         ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 4, template_var 5))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1))
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 3),
                         template_var 2)),
                     template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.if_SE_execE'",
     "[| ?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M;
         [| ?P ?\<sigma>; ?\<sigma> \<Turnstile> ?B\<^sub>1 ;- ?M |] ==> ?Q;
         [| ~ ?P ?\<sigma>; ?\<sigma> \<Turnstile> ?B\<^sub>2 ;- ?M |]
         ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 4, template_var 5))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1))
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (template_app (template_var 4, template_var 5))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.exec_mbindFStop_E",
     "[| ?\<sigma> \<Turnstile>
         bind\<^sub>S\<^sub>E
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
            (?a # ?S) ?ioprog)
          ?P;
         !!b \<sigma>'.
            [| ?ioprog ?a ?\<sigma> = Some (b, \<sigma>');
               \<sigma>' \<Turnstile>
               _bind_SE s
                (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
                  ?S ?ioprog)
                (?P (b # s)) |]
            ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 3)),
                    template_var 2)),
                t_empty))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.exec_mbindFSave_E",
     "[| ?\<sigma> \<Turnstile>
         bind\<^sub>S\<^sub>E
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
            (?a # ?S) ?ioprog)
          ?P;
         [| ?ioprog ?a ?\<sigma> = None; ?\<sigma> \<Turnstile> ?P [] |]
         ==> ?Q;
         !!b \<sigma>'.
            [| ?ioprog ?a ?\<sigma> = Some (b, \<sigma>');
               \<sigma>' \<Turnstile>
               _bind_SE s
                (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>a\<^sub>v\<^sub>e
                  ?S ?ioprog)
                (?P (b # s)) |]
            ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, template_var 4),
                        template_var 3)),
                    template_var 2)),
                t_empty))
            ),
        template_implication
         ([template_equation
            (template_app
              (template_app (template_var 2, template_var 4),
               template_var 5),
             template_hole 6)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 11, template_var 5),
                   template_app (template_var 1, template_hole 5))
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Symbex_MonadSE.mbind_eq_sexec",
     "(!!b \<sigma>'.
          ?f ?a ?\<sigma> = Some (b, \<sigma>') ==>
          _bind_SE os
           (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
             ?S ?f)
           (?P (b # os)) =
          _bind_SE os
           (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
             ?S ?f)
           (?P' (b # os))) ==>
      (_bind_SE a (?f ?a)
        (_bind_SE x
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
            ?S ?f)
          (?P (a # x))))
       ?\<sigma> =
      (_bind_SE a (?f ?a)
        (_bind_SE x
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>S\<^sub>t\<^sub>o\<^sub>p
            ?S ?f)
          (?P' (a # x))))
       ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_var 5, template_var 4)),
             t_empty),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_var 5, template_var 4)),
             t_empty),
           template_var 3)))),
    ("Symbex_MonadSE.exec_mbindFPurge_E",
     "[| ?\<sigma> \<Turnstile>
         bind\<^sub>S\<^sub>E
          (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
            (?a # ?S) ?ioprog)
          ?P;
         [| ?ioprog ?a ?\<sigma> = None;
            ?\<sigma> \<Turnstile>
            bind\<^sub>S\<^sub>E
             (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
               ?S ?ioprog)
             ?P |]
         ==> ?Q;
         !!b \<sigma>'.
            [| ?ioprog ?a ?\<sigma> = Some (b, \<sigma>');
               \<sigma>' \<Turnstile>
               _bind_SE s
                (mbind\<^sub>F\<^sub>a\<^sub>i\<^sub>l\<^sub>P\<^sub>u\<^sub>r\<^sub>g\<^sub>e
                  ?S ?ioprog)
                (?P (b # s)) |]
            ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 4),
                        template_var 3)),
                    template_var 2)),
                t_empty))
            ),
        template_implication
         ([template_equation
            (template_app
              (template_app (template_var 2, template_var 4),
               template_var 5),
             template_hole 5)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 10, template_var 5),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 3),
                         template_var 2)),
                     t_empty))
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]
