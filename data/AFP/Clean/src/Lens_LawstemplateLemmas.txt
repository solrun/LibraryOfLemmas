   [("Lens_Laws.bij_lens_vwb", "bij_lens ?x ==> vwb_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Laws.bij_lens_weak", "bij_lens ?x ==> weak_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Laws.mwb_lens_weak", "mwb_lens ?x ==> weak_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Laws.vwb_lens_mwb", "vwb_lens ?x ==> mwb_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Laws.vwb_lens_wb", "vwb_lens ?x ==> wb_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Laws.wb_lens_weak", "wb_lens ?x ==> weak_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Laws.lens_indep_sym'", "(?x \<bowtie> ?y) = (?y \<bowtie> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Lens_Laws.lens_indep_sym", "?x \<bowtie> ?y ==> ?y \<bowtie> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lens_Laws.lens_indep_get",
     "?x \<bowtie> ?y ==>
      get\<^bsub>?x\<^esub> (put\<^bsub>?y\<^esub> ?\<sigma> ?v) =
      get\<^bsub>?x\<^esub> ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 1)))),
    ("Lens_Laws.lens_indep_comm",
     "?x \<bowtie> ?y ==>
      put\<^bsub>?x\<^esub> (put\<^bsub>?y\<^esub> ?\<sigma> ?v) ?u =
      put\<^bsub>?y\<^esub> (put\<^bsub>?x\<^esub> ?\<sigma> ?u) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 0)),
           template_var 1)))),
    ("Lens_Laws.lens_indepI",
     "[| !!u v \<sigma>.
            put\<^bsub>?x\<^esub> (put\<^bsub>?y\<^esub> \<sigma> v) u =
            put\<^bsub>?y\<^esub> (put\<^bsub>?x\<^esub> \<sigma> u) v;
         !!v \<sigma>.
            get\<^bsub>?x\<^esub> (put\<^bsub>?y\<^esub> \<sigma> v) =
            get\<^bsub>?x\<^esub> \<sigma>;
         !!u \<sigma>.
            get\<^bsub>?y\<^esub> (put\<^bsub>?x\<^esub> \<sigma> u) =
            get\<^bsub>?y\<^esub> \<sigma> |]
      ==> ?x \<bowtie> ?y",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
