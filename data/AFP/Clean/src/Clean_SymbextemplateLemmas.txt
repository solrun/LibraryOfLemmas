   [("Clean_Symbex.while_k_SE", "while_C = while_k ?k",
     template_equation
      (template_hole 1, template_app (template_hole 0, template_var 0))),
    ("Clean_Symbex.while\<^sub>C_skip",
     "_while_C (%x. False) ?c = skip\<^sub>S\<^sub>E",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Clean_Symbex.break_assign_skip", "(break ;- assign ?f) = break",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Clean_Symbex.break_while_skip", "(break ;- _while_C ?b ?c) = break",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_hole 1)),
    ("Clean_Symbex.break_if_skip",
     "(break ;- _if_SECLEAN ?b ?c ?d) = break",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 1)),
    ("Clean_Symbex.unset_break_idem",
     "(unset_break_status ;- unset_break_status ;- ?M) =
      (unset_break_status ;- ?M)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Clean_Symbex.exec_call_0'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> call_0\<^sub>C ?M ;- ?M') =
      (?\<sigma> \<Turnstile> ?M')",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Clean_Symbex.exec_assign'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> assign ?f ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Clean_Symbex.return_cancel1_idem",
     "(return\<^bsub>?X\<^esub> ?E ;- ?X :==\<^sub>G ?E' ;- ?M) =
      (return\<^bsub>?X\<^esub> ?E ;- ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_var 0))),
    ("Clean_Symbex.return_cancel2_idem",
     "(return\<^bsub>?X\<^esub> ?E ;- ?X :==\<^sub>L ?E' ;- ?M) =
      (return\<^bsub>?X\<^esub> ?E ;- ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_var 0))),
    ("Clean_Symbex.exec_call_0",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (call_0\<^sub>C ?M) ?M') =
      (?\<sigma> \<Turnstile> ?M')",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Clean_Symbex.exec_assign",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (assign ?f) ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Clean_Symbex.exec_call'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> call\<^sub>C ?M ?A\<^sub>1 ;- ?M') =
      (?\<sigma> \<Turnstile> ?M')",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_call_1'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> call_1\<^sub>C ?M ?A\<^sub>1 ;- ?M') =
      (?\<sigma> \<Turnstile> ?M')",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_assign_global'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> ?upd :==\<^sub>G ?rhs ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_assign_local'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> ?upd :==\<^sub>L ?rhs ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_While\<^sub>C'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _while_C ?P ?B\<^sub>1 ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_assignD'",
     "[| exec_stop ?\<sigma>; ?\<sigma> \<Turnstile> assign ?f ;- ?M |]
      ==> ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Clean_Symbex.exec_assign_global",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (?upd :==\<^sub>G ?rhs) ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_assign_local",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (?upd :==\<^sub>L ?rhs) ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Clean_Symbex.exec_call_2'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       call_2\<^sub>C ?M ?A\<^sub>1 ?A\<^sub>2 ;- ?M') =
      (?\<sigma> \<Turnstile> ?M')",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_var 0)))),
    ("Clean_Symbex.exec_If\<^sub>C'",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _if_SECLEAN ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      (?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_var 0)))),
    ("Clean_Symbex.non_exec_assign'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> assign ?f ;- ?M) =
      (?f ?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 1, template_var 2)),
           template_var 0)))),
    ("Clean_Symbex.exec_If\<^sub>C_If\<^sub>S\<^sub>E",
     "\<triangleright> ?\<sigma> ==>
      (_if_SECLEAN ?P ?B\<^sub>1 ?B\<^sub>2) ?\<sigma> =
      (_if_SE ?P ?B\<^sub>1 ?B\<^sub>2) ?\<sigma>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3)))),
    ("Clean_Symbex.exec_assignD",
     "[| exec_stop ?\<sigma>;
         ?\<sigma> \<Turnstile> _bind_SE _ (assign ?f) ?M |]
      ==> ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Clean_Symbex.exec_assign_globalD'",
     "[| exec_stop ?\<sigma>;
         ?\<sigma> \<Turnstile> ?upd :==\<^sub>G ?rhs ;- ?M |]
      ==> ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 0)
           ))),
    ("Clean_Symbex.exec_assign_localD'",
     "[| exec_stop ?\<sigma>;
         ?\<sigma> \<Turnstile> ?upd :==\<^sub>L ?rhs ;- ?M |]
      ==> ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 0)
           ))),
    ("Clean_Symbex.exec_call_2",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       _bind_SE _ (call_2\<^sub>C ?M ?A\<^sub>1 ?A\<^sub>2) ?M') =
      (?\<sigma> \<Turnstile> ?M')",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_var 0)))),
    ("Clean_Symbex.non_exec_call_0'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> call_0\<^sub>C ?M ;- ?M') =
      (?\<sigma> \<Turnstile> ?M ;- ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Clean_Symbex.non_exec_assign",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (assign ?f) ?M) =
      (?f ?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 1, template_var 2)),
           template_var 0)))),
    ("Clean_Symbex.exec_assign_globalD",
     "[| exec_stop ?\<sigma>;
         ?\<sigma> \<Turnstile> _bind_SE _ (?upd :==\<^sub>G ?rhs) ?M |]
      ==> ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 0)
           ))),
    ("Clean_Symbex.exec_assign_localD",
     "[| exec_stop ?\<sigma>;
         ?\<sigma> \<Turnstile> _bind_SE _ (?upd :==\<^sub>L ?rhs) ?M |]
      ==> ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 0)
           ))),
    ("Clean_Symbex.exec_call",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (call\<^sub>C ?M ?A\<^sub>1) ?M') =
      (?\<sigma> \<Turnstile> ?M' undefined)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_var 0, template_hole 0))))),
    ("Clean_Symbex.exec_call_1",
     "exec_stop ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (call_1\<^sub>C ?M ?A\<^sub>1) ?M') =
      (?\<sigma> \<Turnstile> ?M' undefined)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_var 0, template_hole 0))))),
    ("Clean_Symbex.non_exec_call_0",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (call_0\<^sub>C ?M) ?M') =
      (?\<sigma> \<Turnstile> ?M ;- ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Clean_Symbex.if\<^sub>C_cond_cong",
     "?f ?\<sigma> = ?g ?\<sigma> ==>
      (_if_SECLEAN ?f ?c ?d) ?\<sigma> = (_if_SECLEAN ?g ?c ?d) ?\<sigma>",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_var 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3)))),
    ("Clean_Symbex.non_exec_assign_localD'",
     "[| \<triangleright> ?\<sigma>;
         ?\<sigma> \<Turnstile> _bind_SE _ (assign ?f) ?M |]
      ==> ?f ?\<sigma> \<Turnstile> ?M",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 1, template_var 2)),
             template_var 0)
           ))),
    ("Clean_Symbex.non_exec_call'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> call\<^sub>C ?M ?A\<^sub>1 ;- ?M') =
      (?\<sigma> \<Turnstile> ?M (?A\<^sub>1 ?\<sigma>) ;- ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 2,
                 template_app (template_var 1, template_var 3))),
             template_var 0))))),
    ("Clean_Symbex.non_exec_call_1'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> call_1\<^sub>C ?M ?A\<^sub>1 ;- ?M') =
      (?\<sigma> \<Turnstile> ?M (?A\<^sub>1 ?\<sigma>) ;- ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 2,
                 template_app (template_var 1, template_var 3))),
             template_var 0))))),
    ("Clean_Symbex.non_exec_assign_global'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> ?upd :==\<^sub>G ?rhs ;- ?M) =
      (?upd (%_. ?rhs ?\<sigma>) ?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_var 2, t_empty), template_var 3)),
           template_var 0)))),
    ("Clean_Symbex.non_exec_assign_local'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> ?upd :==\<^sub>L ?rhs ;- ?M) =
      (?upd (upd_hd (%_. ?rhs ?\<sigma>)) ?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_var 2, template_app (template_hole 0, t_empty)),
               template_var 3)),
           template_var 0)))),
    ("Clean_Symbex.non_exec_assign_global",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (?upd :==\<^sub>G ?rhs) ?M) =
      (?upd (%_. ?rhs ?\<sigma>) ?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_var 2, t_empty), template_var 3)),
           template_var 0)))),
    ("Clean_Symbex.exec_while\<^sub>C",
     "(?\<sigma> \<Turnstile> _while_C ?b ?c ;- ?M) =
      (?\<sigma> \<Turnstile>
       _if_SECLEAN ?b (?c ;- _while_C ?b ?c ;- unset_break_status)
        skip\<^sub>S\<^sub>E ;-
       ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_var 1)),
                     template_hole 1))),
               template_hole 0)),
           template_var 0)))),
    ("Clean_Symbex.non_exec_assign_local",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _bind_SE _ (?upd :==\<^sub>L ?rhs) ?M) =
      (?upd (upd_hd (%_. ?rhs ?\<sigma>)) ?\<sigma> \<Turnstile> ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_var 2, template_app (template_hole 0, t_empty)),
               template_var 3)),
           template_var 0)))),
    ("Clean_Symbex.valid_exec_If\<^sub>C",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile> _if_SECLEAN ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M) =
      (?\<sigma> \<Turnstile> _if_SE ?P ?B\<^sub>1 ?B\<^sub>2 ;- ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 4))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Clean_Symbex.non_exec_call_2'",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       call_2\<^sub>C ?M ?A\<^sub>1 ?A\<^sub>2 ;- ?M') =
      (?\<sigma> \<Turnstile>
       ?M (?A\<^sub>1 ?\<sigma>) (?A\<^sub>2 ?\<sigma>) ;- ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 4))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_var 3,
                   template_app (template_var 2, template_var 4)),
                 template_app (template_var 1, template_var 4))),
             template_var 0))))),
    ("Clean_Symbex.non_exec_call",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (call\<^sub>C ?M ?A\<^sub>1) ?M') =
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (?M (?A\<^sub>1 ?\<sigma>)) ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 2,
                 template_app (template_var 1, template_var 3))),
             t_empty))))),
    ("Clean_Symbex.non_exec_call_1",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (call_1\<^sub>C ?M ?A\<^sub>1) ?M') =
      (?\<sigma> \<Turnstile>
       bind\<^sub>S\<^sub>E (?M (?A\<^sub>1 ?\<sigma>)) ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 2,
                 template_app (template_var 1, template_var 3))),
             t_empty))))),
    ("Clean_Symbex.non_exec_call_2",
     "\<triangleright> ?\<sigma> ==>
      (?\<sigma> \<Turnstile>
       _bind_SE _ (call_2\<^sub>C ?M ?A\<^sub>1 ?A\<^sub>2) ?M') =
      (?\<sigma> \<Turnstile>
       ?M (?A\<^sub>1 ?\<sigma>) (?A\<^sub>2 ?\<sigma>) ;- ?M')",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 4))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_var 3,
                   template_app (template_var 2, template_var 4)),
                 template_app (template_var 1, template_var 4))),
             template_var 0))))),
    ("Clean_Symbex.exec_while_k",
     "(?\<sigma> \<Turnstile> while_k (Suc ?n) ?b ?c ;- ?M) =
      (?\<sigma> \<Turnstile>
       _if_SECLEAN ?b (?c ;- while_k ?n ?b ?c ;- unset_break_status)
        skip\<^sub>S\<^sub>E ;-
       ?M)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 4),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 3)),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 7, template_var 4),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 5, template_var 3),
                           template_var 2),
                         template_var 1)),
                     template_hole 1))),
               template_hole 0)),
           template_var 0)))),
    ("Clean_Symbex.exec_while_kD",
     "?\<sigma> \<Turnstile> while_k (Suc ?n) ?b ?c ;- ?M ==>
      ?\<sigma> \<Turnstile>
      _if_SECLEAN ?b (?c ;- while_k ?n ?b ?c ;- unset_break_status)
       skip\<^sub>S\<^sub>E ;-
      ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 3)),
                      template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 4),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_var 3),
                               template_var 2),
                             template_var 1)),
                         template_hole 1))),
                   template_hole 0)),
               template_var 0))
           )))]
