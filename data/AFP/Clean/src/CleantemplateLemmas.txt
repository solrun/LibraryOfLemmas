   [("Clean.exec_stop1", "break_status ?\<sigma> ==> exec_stop ?\<sigma>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Clean.exec_stop2", "return_status ?\<sigma> ==> exec_stop ?\<sigma>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Clean.exec_stop_vs_control_independence",
     "\<sharp> ?upd ==>
      exec_stop (?upd ?f ?\<sigma>) = exec_stop ?\<sigma>",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 2, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Clean.strong_vs_weak_ci",
     "\<sharp>! ?L ==>
      \<sharp>
       (%f \<sigma>.
           put\<^bsub>?L\<^esub> \<sigma>
            (f (get\<^bsub>?L\<^esub> \<sigma>)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Clean.exec_stop_vs_control_independence''",
     "\<sharp> ?upd ==>
      ?upd ?f (?\<sigma>(| break_status := ?b |)) = ?upd ?f ?\<sigma>
      (| break_status := ?b |)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_equation
        (template_app
          (template_app (template_var 3, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 0, t_empty),
           template_app
            (template_app (template_var 3, template_var 2),
             template_var 0))))),
    ("Clean.exec_stop_vs_control_independence'",
     "\<sharp> ?upd ==>
      ?upd ?f (?\<sigma>(| return_status := ?b |)) = ?upd ?f ?\<sigma>
      (| return_status := ?b |)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_equation
        (template_app
          (template_app (template_var 3, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 0, t_empty),
           template_app
            (template_app (template_var 3, template_var 2),
             template_var 0))))),
    ("Clean.strong_vs_weak_upd",
     "[| \<sharp>! (create\<^sub>L ?getv ?updv);
         (%f \<sigma>. ?updv (%_. f (?getv \<sigma>)) \<sigma>) = ?updv |]
      ==> \<sharp> ?updv",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_equation (t_empty, template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Clean.strong_vs_weak_upd_list",
     "[| \<sharp>! (create\<^sub>L ?getv ?updv);
         (%f \<sigma>. ?updv (%_. f (?getv \<sigma>)) \<sigma>) = ?updv |]
      ==> \<sharp> (?updv o upd_hd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_equation (t_empty, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           )))]
