   [("Generalize.gen_eq_gen_ML", "gen ?A ?t = gen_ML ?A ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Generalize.bound_tv_gen",
     "bound_tv (gen ?A ?t) = free_tv ?t - free_tv ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Generalize.new_tv_compatible_gen",
     "new_tv ?n ?t ==> new_tv ?n (gen ?A ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Generalize.gen_bound_typ_instance",
     "gen ($ ?S ?A) ($ ?S ?t) <= $ ?S (gen ?A ?t)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Generalize.gen_without_effect",
     "free_tv ?t <= free_tv ?sch ==> gen ?sch ?t = mk_scheme ?t",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Generalize.free_tv_gen",
     "free_tv (gen ($ ?S ?A) ?t) = free_tv ?t Int free_tv ($ ?S ?A)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1))))),
    ("Generalize.gen_eq_on_free_tv",
     "free_tv ?A = free_tv ?B ==> gen ?A ?t = gen ?B ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Generalize.bound_typ_inst_gen",
     "free_tv ?t <= free_tv ?A ==> bound_typ_inst ?S (gen ?A ?t) = ?t",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 2))),
    ("Generalize.free_tv_subset_gen_le",
     "free_tv ?B <= free_tv ?A ==> gen ?A ?t <= gen ?B ?t",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Generalize.free_tv_gen_cons",
     "free_tv (gen ($ ?S ?A) ?t # $ ?S ?A) = free_tv ($ ?S ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Generalize.gen_t_le_gen_alpha_t",
     "new_tv ?n ?A ==>
      gen ?A ?t
      <= gen ?A ($ (%x. TVar (if x : free_tv ?A then x else ?n + x)) ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, t_empty), template_var 0))))),
    ("Generalize.gen_subst_commutes",
     "free_tv ?S Int (free_tv ?t - free_tv ?A) = {} ==>
      gen ($ ?S ?A) ($ ?S ?t) = $ ?S (gen ?A ?t)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app (template_hole 6, template_var 0))),
          template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)))))]
