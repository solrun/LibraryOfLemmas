   [("Wellfounded.total_on_less_than", "total_on ?A less_than",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Wellfounded.wf_measure", "wf (measure ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Wellfounded.wf_imp_irrefl", "wf ?r ==> irrefl ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.wf_acyclic", "wf ?r ==> acyclic ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.wf_comp_self", "wf ?R = wf (?R O ?R)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("List.length_dropWhile_le", "length (dropWhile ?P ?xs) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("List.length_takeWhile_le", "length (takeWhile ?P ?xs) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Wellfounded.wf_trancl", "wf ?r ==> wf (?r^+)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.max_ext_wf", "wf ?r ==> wf (max_ext ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.min_ext_wf", "wf ?r ==> wf (min_ext ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.accp_wfPD", "wfP ?r ==> Wellfounded.accp ?r ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Wellfounded.wfP_trancl", "wfP ?r ==> wfP ?r^++",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.wfP_accp_iff", "wfP ?r = (ALL x. Wellfounded.accp ?r x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("List.distinct_dropWhile",
     "distinct ?xs ==> distinct (dropWhile ?P ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List.distinct_takeWhile",
     "distinct ?xs ==> distinct (takeWhile ?P ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Wellfounded.wf_mlex", "wf ?R ==> wf (?f <*mlex*> ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Wellfounded.acc_wfD", "wf ?r ==> ?x : Wellfounded.acc ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Wellfounded.wf_Int1", "wf ?r ==> wf (?r Int ?r')",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.wf_Int2", "wf ?r ==> wf (?r' Int ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Wellfounded.wf_inv_image", "wf ?r ==> wf (inv_image ?r ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.wf_exp", "wf (?R ^^ ?n) ==> wf ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Wellfounded.wf_acc_iff", "wf ?r = (ALL x. x : Wellfounded.acc ?r)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Wellfounded.less_than_iff", "((?x, ?y) : less_than) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.dropWhile_idem",
     "dropWhile ?P (dropWhile ?P ?xs) = dropWhile ?P ?xs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.takeWhile_idem",
     "takeWhile ?P (takeWhile ?P ?xs) = takeWhile ?P ?xs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.takeWhile_dropWhile_id",
     "takeWhile ?P ?xs @ dropWhile ?P ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Wellfounded.wf_iff_acyclic_if_finite",
     "finite ?r ==> wf ?r = acyclic ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.wf_converse_trancl", "wf (?r^-1) ==> wf ((?r^+)^-1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Wellfounded.accp_wfPI", "ALL x. Wellfounded.accp ?r x ==> wfP ?r",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.pred_nat_trancl_eq_le",
     "((?m, ?n) : pred_nat^*) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Wellfounded.less_eq", "((?m, ?n) : pred_nat^+) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.dropWhile_eq_drop",
     "dropWhile ?P ?xs = drop (length (takeWhile ?P ?xs)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("List.takeWhile_eq_take",
     "takeWhile ?P ?xs = take (length (takeWhile ?P ?xs)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_var 0))),
    ("Wfrec.adm_lemma", "adm_wf ?R (%f x. ?F (cut f ?R x) x)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)
         )),
    ("Wellfounded.wf_not_refl", "wf ?r ==> (?a, ?a) ~: ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 0)),
                 template_var 1)
               )
           ))),
    ("Wellfounded.accp_subset",
     "?R1.0 <= ?R2.0 ==> Wellfounded.accp ?R2.0 <= Wellfounded.accp ?R1.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Wellfounded.acc_subset",
     "?R1.0 <= ?R2.0 ==> Wellfounded.acc ?R2.0 <= Wellfounded.acc ?R1.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Wellfounded.acc_wfI", "ALL x. x : Wellfounded.acc ?r ==> wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.finite_acyclic_wf",
     "[| finite ?r; acyclic ?r |] ==> wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List.dropWhile_transfer",
     "rel_fun (rel_fun ?A (=)) (rel_fun (list_all2 ?A) (list_all2 ?A))
       dropWhile dropWhile",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("List.takeWhile_transfer",
     "rel_fun (rel_fun ?A (=)) (rel_fun (list_all2 ?A) (list_all2 ?A))
       takeWhile takeWhile",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Wellfounded.wfP_wf_eq", "wfP (%x y. (x, y) : ?r) = wf ?r",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Wellfounded.finite_acyclic_wf_converse",
     "[| finite ?r; acyclic ?r |] ==> wf (?r^-1)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.wf_subset", "[| wf ?r; ?p <= ?r |] ==> wf ?p",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Wellfounded.wfP_subset", "[| wfP ?r; ?p <= ?r |] ==> wfP ?p",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("List.dropWhile_eq_Nil_conv",
     "(dropWhile ?P ?xs = []) = (ALL x:set ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("List.takeWhile_eq_all_conv",
     "(takeWhile ?P ?xs = ?xs) = (ALL x:set ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Wellfounded.in_finite_psubset",
     "((?A, ?B) : finite_psubset) = (?A < ?B & finite ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.in_measure", "((?x, ?y) : measure ?f) = (?f ?x < ?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("Wellfounded.wfP_acyclicP", "wfP ?r ==> acyclicP ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty)))
           ))),
    ("List.set_dropWhileD", "?x : set (dropWhile ?P ?xs) ==> ?x : set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Wellfounded.asym_lex_prod",
     "[| asym ?R; asym ?S |] ==> asym (?R <*lex*> ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.trans_lex_prod",
     "[| trans ?R1.0; trans ?R2.0 |] ==> trans (?R1.0 <*lex*> ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.wf_lex_prod",
     "[| wf ?ra; wf ?rb |] ==> wf (?ra <*lex*> ?rb)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("List.dropWhile_map",
     "dropWhile ?P (map ?f ?xs) = map ?f (dropWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List.dropWhile_replicate",
     "dropWhile ?P (replicate ?n ?x) =
      (if ?P ?x then [] else replicate ?n ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("List.takeWhile_map",
     "takeWhile ?P (map ?f ?xs) = map ?f (takeWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List.takeWhile_replicate",
     "takeWhile ?P (replicate ?n ?x) =
      (if ?P ?x then replicate ?n ?x else [])",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("List.zip_takeWhile_snd",
     "zip ?xs (takeWhile ?P ?ys) = takeWhile (?P o snd) (zip ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("List.zip_takeWhile_fst",
     "zip (takeWhile ?P ?xs) ?ys = takeWhile (?P o fst) (zip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Wfrec.theI_unique", "EX! x. ?P x ==> ?P ?x = (?x = The ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_implication
        ([template_predicate
           (template_app (template_var 1, template_var 0))],
         template_equation
          (template_var 0,
           template_app (template_hole 0, template_var 1))))),
    ("Wellfounded.accp_downwards_aux",
     "?r^** ?b ?a ==> Wellfounded.accp ?r ?a --> Wellfounded.accp ?r ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Wellfounded.accp_downward",
     "[| Wellfounded.accp ?r ?b; ?r ?a ?b |] ==> Wellfounded.accp ?r ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 0), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Wellfounded.accp_eq_acc",
     "Wellfounded.accp ?r = (%x. x : Wellfounded.acc {(x, y). ?r x y})",
     template_equation
      (template_app (template_hole 4, template_var 0), t_empty)),
    ("Wellfounded.accp_acc_eq",
     "Wellfounded.accp (%x xa. (x, xa) : ?r) =
      (%x. x : Wellfounded.acc ?r)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("List.dropWhile_eq_self_iff",
     "(dropWhile ?P ?xs = ?xs) = (?xs = [] | ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 2)),
             template_app
              (template_hole 1,
               template_app
                (template_var 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("List.takeWhile_eq_Nil_iff",
     "(takeWhile ?P ?xs = []) = (?xs = [] | ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 3)),
             template_app
              (template_hole 1,
               template_app
                (template_var 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Order_Relation.well_order_on_Well_order",
     "well_order_on ?A ?r ==> ?A = Field ?r & Well_order ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0)),
               template_var 0))
           ))),
    ("Wellfounded.mlex_less", "?f ?x < ?f ?y ==> (?x, ?y) : ?f <*mlex*> ?R",
     template_implication
      ([template_inequation
         (less_than, template_app (template_var 3, template_var 2),
          template_app (template_var 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("List.hd_dropWhile",
     "dropWhile ?P ?xs ~= [] ==> ~ ?P (hd (dropWhile ?P ?xs))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 1,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)))
               )
           ))),
    ("Wellfounded.wfE_pf", "[| wf ?R; ?A <= ?R `` ?A |] ==> ?A = {}",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation (template_var 0, template_hole 0))),
    ("Wellfounded.accp_downwards",
     "[| Wellfounded.accp ?r ?a; ?r^** ?b ?a |] ==> Wellfounded.accp ?r ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Wellfounded.wf_union_merge",
     "wf (?R Un ?S) = wf (?R O ?R Un ?S O ?R Un ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_var 0)))),
    ("List.find_dropWhile",
     "find ?P ?xs =
      (case dropWhile (Not o ?P) ?xs of [] => None | x # xa => Some x)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("List.takeWhile_not_last",
     "distinct ?xs ==> takeWhile (%y. y ~= last ?xs) ?xs = butlast ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty), template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Wfrec.cut_apply", "(?x, ?a) : ?R ==> cut ?f ?R ?a ?x = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 2),
           template_var 3),
         template_app (template_var 0, template_var 3)))),
    ("List.set_takeWhileD",
     "?x : set (takeWhile ?P ?xs) ==> ?x : set ?xs & ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_var 0))),
             template_app (template_var 1, template_var 2))
           ))),
    ("Wfrec.wf_same_fst",
     "(!!x. ?P x ==> wf (?R x)) ==> wf (same_fst ?P ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.accpI",
     "(!!y. ?r y ?x ==> Wellfounded.accp ?r y) ==> Wellfounded.accp ?r ?x",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Wellfounded.wf_map_prod_image",
     "[| wf ?r; inj ?f |] ==> wf (map_prod ?f ?f ` ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 0)),
               template_var 1))
           ))),
    ("Wellfounded.total_lex_prod",
     "[| total ?r; total ?s |] ==> total (?r <*lex*> ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.wf_converse",
     "[| irrefl ?r; trans ?r; finite ?r |] ==> wf (?r^-1)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.finite_subset_wf",
     "finite ?A ==> wf {(X, Y). X < Y & Y <= ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty)))
           ))),
    ("List.takeWhile_tail",
     "~ ?P ?x ==> takeWhile ?P (?xs @ ?x # ?l) = takeWhile ?P ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 1)))),
    ("W.weaken_not_elem_A_minus_B", "?x ~: ?A | ?x : ?B ==> ?x ~: ?A - ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("W.W_var_ge", "W ?e ?A ?n = Some (?S, ?t, ?m) ==> ?n <= ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))))],
       template_inequation (less_equals, template_var 3, template_var 0))),
    ("W.W_var_geD", "Some (?S, ?t, ?m) = W ?e ?A ?n ==> ?n <= ?m",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 5),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3))),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 0, template_var 3))),
    ("Wellfounded.wfI_pf", "(!!A. A <= ?R `` A ==> A = {}) ==> wf ?R",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.wf_irrefl",
     "[| wf ?r; (?a, ?a) ~: ?r ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 1)),
                     template_var 2)
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Wfrec.wfrec_unique",
     "[| adm_wf ?R ?F; wf ?R |] ==> EX! y. wfrec_rel ?R ?F ?x y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wellfounded.max_extp_max_ext_eq",
     "max_extp (%x xa. (x, xa) : ?R) = (%x xa. (x, xa) : max_ext ?R)",
     template_equation (template_app (template_hole 5, t_empty), t_empty)),
    ("Wellfounded.wf_insert",
     "wf (insert (?y, ?x) ?r) = (wf ?r & (?x, ?y) ~: ?r^*)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 0)))))),
    ("Wfrec.wfrec",
     "wf ?R ==> wfrec ?R ?F ?a = ?F (cut (wfrec ?R ?F) ?R ?a) ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_var 1,
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 2),
               template_var 0)),
           template_var 0)))),
    ("W.new_tv_bound_typ_inst_sch",
     "new_tv ?n ?sch ==>
      new_tv (?n + min_new_bound_tv ?sch)
       (bound_typ_inst (%b. TVar (b + ?n)) ?sch)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))
           ))),
    ("List.takeWhile_nth",
     "?j < length (takeWhile ?P ?xs) ==> takeWhile ?P ?xs ! ?j = ?xs ! ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Wellfounded.acc_downwards_aux",
     "(?b, ?a) : ?r^* ==>
      ?a : Wellfounded.acc ?r --> ?b : Wellfounded.acc ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("List.nth_length_takeWhile",
     "length (takeWhile ?P ?xs) < length ?xs ==>
      ~ ?P (?xs ! length (takeWhile ?P ?xs))",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)),
          template_app (template_hole 3, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0))))
               )
           ))),
    ("W.weaken_A_Int_B_eq_empty",
     "ALL x. x : ?A --> x ~: ?B ==> ?A Int ?B = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Wfrec.wfrec_fixpoint",
     "[| wf ?R; adm_wf ?R ?F |] ==> wfrec ?R ?F = ?F (wfrec ?R ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Wellfounded.wf_relcomp_compatible",
     "[| wf ?R; ?R O ?S <= ?S O ?R |] ==> wf (?S O ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Wellfounded.wf_not_sym",
     "[| wf ?r; (?a, ?x) : ?r |] ==> (?x, ?a) ~: ?r",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_var 2)
               )
           ))),
    ("Wellfounded.acc_downward",
     "[| ?b : Wellfounded.acc ?r; (?a, ?b) : ?r |]
      ==> ?a : Wellfounded.acc ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Wellfounded.total_on_lex_prod",
     "[| total_on ?A ?r; total_on ?B ?s |]
      ==> total_on (?A \<times> ?B) (?r <*lex*> ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3), t_empty)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Wellfounded.acc_downwards",
     "[| ?a : Wellfounded.acc ?r; (?b, ?a) : ?r^* |]
      ==> ?b : Wellfounded.acc ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 1))
           ))),
    ("List.dropWhile_last",
     "[| ?x : set ?xs; ~ ?P ?x |] ==> last (dropWhile ?P ?xs) = last ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("Wellfounded.wf_union_compatible",
     "[| wf ?R; wf ?S; ?R O ?S <= ?R |] ==> wf (?R Un ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("List.dropWhile_append3",
     "~ ?P ?y ==>
      dropWhile ?P (?xs @ ?y # ?ys) = dropWhile ?P ?xs @ ?y # ?ys",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("List.takeWhile_append1",
     "[| ?x : set ?xs; ~ ?P ?x |]
      ==> takeWhile ?P (?xs @ ?ys) = takeWhile ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("List.dropWhile_eq_Cons_conv",
     "(dropWhile ?P ?xs = ?y # ?ys) =
      (?xs = takeWhile ?P ?xs @ ?y # ?ys & ~ ?P ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0)))),
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)))
           ))),
    ("List.dropWhile_append",
     "dropWhile ?P (?xs @ ?ys) =
      (if ALL x:set ?xs. ?P x then dropWhile ?P ?ys
       else dropWhile ?P ?xs @ ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List.takeWhile_append",
     "takeWhile ?P (?xs @ ?ys) =
      (if ALL x:set ?xs. ?P x then ?xs @ takeWhile ?P ?ys
       else takeWhile ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("List.remdups_adj_append_dropWhile",
     "remdups_adj (?xs @ ?y # ?ys) =
      remdups_adj (?xs @ [?y]) @ remdups_adj (dropWhile (%x. x = ?y) ?ys)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("List.dropWhile_append2",
     "(!!x. x : set ?xs ==> ?P x) ==>
      dropWhile ?P (?xs @ ?ys) = dropWhile ?P ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("W.new_tv_compatible_W",
     "[| new_tv ?n ?A; Some (?S, ?t, ?m) = W ?e ?A ?n |] ==> new_tv ?m ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 0),
              template_var 4),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), template_var 4)
           ))),
    ("Wellfounded.mlex_leq",
     "[| ?f ?x <= ?f ?y; (?x, ?y) : ?R |] ==> (?x, ?y) : ?f <*mlex*> ?R",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_app (template_var 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Wellfounded.wf_Un",
     "[| wf ?r; wf ?s; Domain ?r Int Range ?s = {} |] ==> wf (?r Un ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("List.dropWhile_nth",
     "?j < length (dropWhile ?P ?xs) ==>
      dropWhile ?P ?xs ! ?j = ?xs ! (?j + length (takeWhile ?P ?xs))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("List.takeWhile_eq_filter",
     "(!!x. x : set (dropWhile ?P ?xs) ==> ~ ?P x) ==>
      takeWhile ?P ?xs = filter ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Wellfounded.wfP_induct",
     "[| wfP ?r; !!x. ALL y. ?r y x --> ?P y ==> ?P x |] ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("List.dropWhile_append1",
     "[| ?x : set ?xs; ~ ?P ?x |]
      ==> dropWhile ?P (?xs @ ?ys) = dropWhile ?P ?xs @ ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Wfrec.cuts_eq",
     "(cut ?f ?R ?x = cut ?g ?R ?x) =
      (ALL y. (y, ?x) : ?R --> ?f y = ?g y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2),
           template_var 1)),
       template_app (template_hole 4, t_empty))),
    ("Wellfounded.qc_wf_relto_iff",
     "?R O ?S <= (?R Un ?S)^* O ?R ==> wf (?S^* O ?R O ?S^*) = wf ?R",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0))),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 3, template_var 0)))),
         template_app (template_hole 0, template_var 1)))),
    ("List.takeWhile_append2",
     "(!!x. x : set ?xs ==> ?P x) ==>
      takeWhile ?P (?xs @ ?ys) = ?xs @ takeWhile ?P ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Wfrec.same_fstI",
     "[| ?P ?x; (?y', ?y) : ?R ?x |]
      ==> ((?x, ?y'), ?x, ?y) : same_fst ?P ?R",
     template_implication
      ([template_predicate (template_app (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Wellfounded.wfP_induct_rule",
     "[| wfP ?r; !!x. (!!y. ?r y x ==> ?P y) ==> ?P x |] ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Wellfounded.not_accp_down",
     "[| ~ Wellfounded.accp ?R ?x;
         !!z. [| ?R z ?x; ~ Wellfounded.accp ?R z |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("W.free_tv_bound_typ_inst1",
     "[| ?v ~: free_tv ?sch;
         ?v : free_tv (bound_typ_inst (TVar o ?S) ?sch) |]
      ==> EX x. ?v = ?S x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 6, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 0)),
                  template_var 1)))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wellfounded.wf_asym",
     "[| wf ?r; (?a, ?x) : ?r; (?x, ?a) ~: ?r ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 3)
            ),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 2)),
                     template_var 3)
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Wellfounded.wfP_eq_minimal",
     "wfP ?r = (ALL Q x. x : Q --> (EX z:Q. ALL y. ?r y z --> y ~: Q))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Wellfounded.wf_induct",
     "[| wf ?r; !!x. ALL y. (y, x) : ?r --> ?P y ==> ?P x |] ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("W.W_correct_lemma",
     "[| new_tv ?n ?A; Some (?S, ?t, ?m) = W ?e ?A ?n |]
      ==> $ ?S ?A \<turnstile> ?e :: ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 4)),
               template_var 0),
             template_var 2)
           ))),
    ("W.has_type_casesE",
     "[| ?A \<turnstile> Var ?n :: ?t;
         [| ?n < length ?A; ?t <| ?A ! ?n |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_inequation
            (less_than, template_var 2,
             template_app (template_hole 2, template_var 3))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Wellfounded.mlex_iff",
     "((?x, ?y) : ?f <*mlex*> ?R) =
      (?f ?x < ?f ?y | ?f ?x = ?f ?y & (?x, ?y) : ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 1, template_var 3)),
                 template_app (template_var 1, template_var 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 1, template_var 3)),
                   template_app (template_var 1, template_var 2))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2)),
                 template_var 0)))
           ))),
    ("Wellfounded.wfPUNIVI",
     "(!!P x. ALL x. (ALL y. ?r y x --> P y) --> P x ==> P x) ==> wfP ?r",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.wf_induct_rule",
     "[| wf ?r; !!x. (!!y. (y, x) : ?r ==> ?P y) ==> ?P x |] ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("W.new_tv_W",
     "[| new_tv ?n ?A; W ?e ?A ?n = Some (?S, ?t, ?m) |]
      ==> new_tv ?m ?S & new_tv ?m ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 4),
            template_var 5),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List.length_takeWhile_less_P_nth",
     "[| !!i. i < ?j ==> ?P (?xs ! i); ?j <= length ?xs |]
      ==> ?j <= length (takeWhile ?P ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Wellfounded.wf_eq_minimal",
     "wf ?r = (ALL Q x. x : Q --> (EX z:Q. ALL y. (y, z) : ?r --> y ~: Q))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Wellfounded.wf_if_measure",
     "(!!x. ?P x ==> ?f (?g x) < ?f x) ==> wf {(y, x). ?P x & y = ?g x}",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty)))
           ))),
    ("Wellfounded.max_ext_additive",
     "[| (?A, ?B) : max_ext ?R; (?C, ?D) : max_ext ?R |]
      ==> (?A Un ?C, ?B Un ?D) : max_ext ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Wellfounded.in_lex_prod",
     "(((?a, ?b), ?a', ?b') : ?r <*lex*> ?s) =
      ((?a, ?a') : ?r | ?a = ?a' & (?b, ?b') : ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2))),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 3)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2)),
                 template_var 0)))
           ))),
    ("Wellfounded.wfUNIVI",
     "(!!P x. ALL x. (ALL y. (y, x) : ?r --> P y) --> P x ==> P x) ==>
      wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List.dropWhile_cong",
     "[| ?l = ?k; !!x. x : set ?l ==> ?P x = ?Q x |]
      ==> dropWhile ?P ?l = dropWhile ?Q ?k",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("List.takeWhile_cong",
     "[| ?l = ?k; !!x. x : set ?l ==> ?P x = ?Q x |]
      ==> takeWhile ?P ?l = takeWhile ?Q ?k",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Wellfounded.not_acc_down",
     "[| ?x ~: Wellfounded.acc ?R;
         !!z. [| (z, ?x) : ?R; z ~: Wellfounded.acc ?R |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Wellfounded.wfI_min",
     "(!!x Q. x : Q ==> EX z:Q. ALL y. (y, z) : ?R --> y ~: Q) ==> wf ?R",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List.takeWhile_neq_rev",
     "[| distinct ?xs; ?x : set ?xs |]
      ==> takeWhile (%y. y ~= ?x) (rev ?xs) =
          rev (tl (dropWhile (%y. y ~= ?x) ?xs))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty),
               template_var 1)))))),
    ("Wellfounded.accp_induct",
     "[| Wellfounded.accp ?r ?a;
         !!x. [| Wellfounded.accp ?r x; ALL y. ?r y x --> ?P y |]
              ==> ?P x |]
      ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("W.has_type_casesE",
     "[| ?A \<turnstile> App ?e1.0 ?e2.0 :: ?t;
         !!t2. [| ?A \<turnstile> ?e1.0 :: t2 -> ?t;
                  ?A \<turnstile> ?e2.0 :: t2 |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("List.dropWhile_neq_rev",
     "[| distinct ?xs; ?x : set ?xs |]
      ==> dropWhile (%y. y ~= ?x) (rev ?xs) =
          ?x # rev (takeWhile (%y. y ~= ?x) ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, t_empty),
               template_var 1)))))),
    ("Wellfounded.accp_induct_rule",
     "[| Wellfounded.accp ?r ?a;
         !!x. [| Wellfounded.accp ?r x; !!y. ?r y x ==> ?P y |] ==> ?P x |]
      ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Wellfounded.wf_Union",
     "[| ALL r:?R. wf r;
         ALL r:?R. ALL s:?R. r ~= s --> Domain r Int Range s = {} |]
      ==> wf (\<Union> ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app (template_hole 0, template_var 0))
           ))),
    ("W.has_type_casesE",
     "[| ?A \<turnstile> LET ?e1.0 ?e2.0 :: ?t;
         !!t1. [| ?A \<turnstile> ?e1.0 :: t1;
                  gen ?A t1 # ?A \<turnstile> ?e2.0 :: ?t |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("W.W_complete",
     "[] \<turnstile> ?e :: ?t' ==>
      EX S t m. W ?e [] ?n = Some (S, t, m) & (EX R. ?t' = $ R t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("W.has_type_casesE",
     "[| ?A \<turnstile> Abs ?e :: ?t;
         !!t1 t2.
            [| ?t = t1 -> t2; mk_scheme t1 # ?A \<turnstile> ?e :: t2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Wellfounded.wf_bounded_measure",
     "(!!a b.
          (b, a) : ?r ==> ?ub b <= ?ub a & ?f b <= ?ub a & ?f a < ?f b) ==>
      wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Wellfounded.acc_induct",
     "[| ?a : Wellfounded.acc ?r;
         !!x. [| x : Wellfounded.acc ?r; ALL y. (y, x) : ?r --> ?P y |]
              ==> ?P x |]
      ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("Wellfounded.acc_induct_rule",
     "[| ?a : Wellfounded.acc ?r;
         !!x. [| x : Wellfounded.acc ?r; !!y. (y, x) : ?r ==> ?P y |]
              ==> ?P x |]
      ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("W.free_tv_W",
     "[| W ?e ?A ?n = Some (?S, ?t, ?m); ?v : free_tv ?S | ?v : free_tv ?t;
         ?v < ?n |]
      ==> ?v : free_tv ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1)))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 3))),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app (template_hole 2, template_var 2)))
            ),
        template_inequation (less_than, template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 5))
           ))),
    ("Order_Relation.Linear_order_Well_order_iff",
     "Linear_order ?r ==>
      Well_order ?r =
      (ALL A<=Field ?r. A ~= {} --> (EX a:A. ALL a':A. (a, a') : ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 12, template_var 0)),
           template_var 0),
         template_app (template_hole 9, t_empty)))),
    ("Wellfounded.wfP_SUP",
     "[| ALL i. wfP (?r i);
         ALL i j.
            ?r i ~= ?r j --> inf (Domainp (?r i)) (Rangep (?r j)) = bot |]
      ==> wfP (Sup (range ?r))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 11,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Wellfounded.wfE_min",
     "[| wf ?R; ?x : ?Q;
         !!z. [| z : ?Q; !!y. (y, z) : ?R ==> y ~: ?Q |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Wellfounded.wf_bounded_set",
     "(!!a b.
          (b, a) : ?r ==>
          finite (?ub a) & ?ub b <= ?ub a & ?f b <= ?ub a & ?f a < ?f b) ==>
      wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Wellfounded.wfE_min'",
     "[| wf ?R; ?Q ~= {};
         !!z. [| z : ?Q; !!y. (y, z) : ?R ==> y ~: ?Q |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Wellfounded.wf_map_prod_image_Dom_Ran",
     "[| wf ?r;
         !!a a'.
            [| a : Domain ?r; a' : Range ?r; ?f a = ?f a' |] ==> a = a' |]
      ==> wf (map_prod ?f ?f ` ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 0)),
               template_var 1))
           ))),
    ("Fun.bij_betw_byWitness",
     "[| ALL a:?A. ?f' (?f a) = a; ALL a':?A'. ?f (?f' a') = a';
         ?f ` ?A <= ?A'; ?f' ` ?A' <= ?A |]
      ==> bij_betw ?f ?A ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0), t_empty)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 3),
          template_var 0),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 0),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("List.takeWhile_eq_take_P_nth",
     "[| !!i. [| i < ?n; i < length ?xs |] ==> ?P (?xs ! i);
         ?n < length ?xs ==> ~ ?P (?xs ! ?n) |]
      ==> takeWhile ?P ?xs = take ?n ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_implication
         ([template_inequation
            (less_than, template_var 2,
             template_app (template_hole 5, template_var 1))],
          template_negation
           (
              template_predicate
               (
                  template_app
                   (template_var 0,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 2))
                  )
              ))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Wellfounded.wfI",
     "[| ?r <= ?A \<times> ?B;
         !!x P.
            [| ALL x. (ALL y. (y, x) : ?r --> P y) --> P x; x : ?A;
               x : ?B |]
            ==> P x |]
      ==> wf ?r",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 8, template_var 1), t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("W.W_complete_lemma",
     "[| $ ?S' ?A \<turnstile> ?e :: ?t'; new_tv ?n ?A |]
      ==> EX S t.
             (EX m. W ?e ?A ?n = Some (S, t, m)) &
             (EX R. $ ?S' ?A = $ R ($ S ?A) & ?t' = $ R t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Wellfounded.accp_subset_induct",
     "[| ?D <= Wellfounded.accp ?R; !!x z. [| ?D x; ?R z x |] ==> ?D z;
         ?D ?x; !!x. [| ?D x; !!z. ?R z x ==> ?P z |] ==> ?P x |]
      ==> ?P ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 1, template_var 2)),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_var 3, template_var 1)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Wellfounded.wf_UN",
     "[| !!i. i : ?I ==> wf (?r i);
         !!i j.
            [| i : ?I; j : ?I; ?r i ~= ?r j |]
            ==> Domain (?r i) Int Range (?r j) = {} |]
      ==> wf (\<Union> (?r ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Wellfounded.acc_subset_induct",
     "[| ?D <= Wellfounded.acc ?R;
         !!x z. [| x : ?D; (z, x) : ?R |] ==> z : ?D; ?x : ?D;
         !!x. [| x : ?D; !!z. (z, x) : ?R ==> ?P z |] ==> ?P x |]
      ==> ?P ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_var 0, template_var 1))))]
