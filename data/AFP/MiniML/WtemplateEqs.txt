   [("Wellfounded.wf_comp_self", "wf ?R = wf (?R O ?R)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Wellfounded.wfP_accp_iff", "wfP ?r = (ALL x. Wellfounded.accp ?r x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Wellfounded.wf_acc_iff", "wf ?r = (ALL x. x : Wellfounded.acc ?r)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Wellfounded.less_than_iff", "((?x, ?y) : less_than) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.dropWhile_idem",
     "dropWhile ?P (dropWhile ?P ?xs) = dropWhile ?P ?xs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.takeWhile_idem",
     "takeWhile ?P (takeWhile ?P ?xs) = takeWhile ?P ?xs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.takeWhile_dropWhile_id",
     "takeWhile ?P ?xs @ dropWhile ?P ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Wellfounded.pred_nat_trancl_eq_le",
     "((?m, ?n) : pred_nat^*) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Wellfounded.less_eq", "((?m, ?n) : pred_nat^+) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.dropWhile_eq_drop",
     "dropWhile ?P ?xs = drop (length (takeWhile ?P ?xs)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("List.takeWhile_eq_take",
     "takeWhile ?P ?xs = take (length (takeWhile ?P ?xs)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_var 0))),
    ("Wellfounded.wfP_wf_eq", "wfP (%x y. (x, y) : ?r) = wf ?r",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("List.dropWhile_eq_Nil_conv",
     "(dropWhile ?P ?xs = []) = (ALL x:set ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("List.takeWhile_eq_all_conv",
     "(takeWhile ?P ?xs = ?xs) = (ALL x:set ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Wellfounded.in_finite_psubset",
     "((?A, ?B) : finite_psubset) = (?A < ?B & finite ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Wellfounded.in_measure", "((?x, ?y) : measure ?f) = (?f ?x < ?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("List.dropWhile_map",
     "dropWhile ?P (map ?f ?xs) = map ?f (dropWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List.dropWhile_replicate",
     "dropWhile ?P (replicate ?n ?x) =
      (if ?P ?x then [] else replicate ?n ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("List.takeWhile_map",
     "takeWhile ?P (map ?f ?xs) = map ?f (takeWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List.takeWhile_replicate",
     "takeWhile ?P (replicate ?n ?x) =
      (if ?P ?x then replicate ?n ?x else [])",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("List.zip_takeWhile_snd",
     "zip ?xs (takeWhile ?P ?ys) = takeWhile (?P o snd) (zip ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("List.zip_takeWhile_fst",
     "zip (takeWhile ?P ?xs) ?ys = takeWhile (?P o fst) (zip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Wellfounded.accp_eq_acc",
     "Wellfounded.accp ?r = (%x. x : Wellfounded.acc {(x, y). ?r x y})",
     template_equation
      (template_app (template_hole 4, template_var 0), t_empty)),
    ("Wellfounded.accp_acc_eq",
     "Wellfounded.accp (%x xa. (x, xa) : ?r) =
      (%x. x : Wellfounded.acc ?r)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("List.dropWhile_eq_self_iff",
     "(dropWhile ?P ?xs = ?xs) = (?xs = [] | ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_var 0),
       template_dunno)),
    ("List.takeWhile_eq_Nil_iff",
     "(takeWhile ?P ?xs = []) = (?xs = [] | ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_dunno)),
    ("Wellfounded.wf_union_merge",
     "wf (?R Un ?S) = wf (?R O ?R Un ?S O ?R Un ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_var 0)))),
    ("List.find_dropWhile",
     "find ?P ?xs =
      (case dropWhile (Not o ?P) ?xs of [] => None | x # xa => Some x)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Wellfounded.max_extp_max_ext_eq",
     "max_extp (%x xa. (x, xa) : ?R) = (%x xa. (x, xa) : max_ext ?R)",
     template_equation (template_app (template_hole 5, t_empty), t_empty)),
    ("Wellfounded.wf_insert",
     "wf (insert (?y, ?x) ?r) = (wf ?r & (?x, ?y) ~: ?r^*)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 0)))))),
    ("List.dropWhile_eq_Cons_conv",
     "(dropWhile ?P ?xs = ?y # ?ys) =
      (?xs = takeWhile ?P ?xs @ ?y # ?ys & ~ ?P ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_dunno)),
    ("List.dropWhile_append",
     "dropWhile ?P (?xs @ ?ys) =
      (if ALL x:set ?xs. ?P x then dropWhile ?P ?ys
       else dropWhile ?P ?xs @ ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List.takeWhile_append",
     "takeWhile ?P (?xs @ ?ys) =
      (if ALL x:set ?xs. ?P x then ?xs @ takeWhile ?P ?ys
       else takeWhile ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("List.remdups_adj_append_dropWhile",
     "remdups_adj (?xs @ ?y # ?ys) =
      remdups_adj (?xs @ [?y]) @ remdups_adj (dropWhile (%x. x = ?y) ?ys)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Wfrec.cuts_eq",
     "(cut ?f ?R ?x = cut ?g ?R ?x) =
      (ALL y. (y, ?x) : ?R --> ?f y = ?g y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2),
           template_var 1)),
       template_app (template_hole 4, t_empty))),
    ("Wellfounded.wfP_eq_minimal",
     "wfP ?r = (ALL Q x. x : Q --> (EX z:Q. ALL y. ?r y z --> y ~: Q))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Wellfounded.mlex_iff",
     "((?x, ?y) : ?f <*mlex*> ?R) =
      (?f ?x < ?f ?y | ?f ?x = ?f ?y & (?x, ?y) : ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Wellfounded.wf_eq_minimal",
     "wf ?r = (ALL Q x. x : Q --> (EX z:Q. ALL y. (y, z) : ?r --> y ~: Q))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Wellfounded.in_lex_prod",
     "(((?a, ?b), ?a', ?b') : ?r <*lex*> ?s) =
      ((?a, ?a') : ?r | ?a = ?a' & (?b, ?b') : ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2))),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_dunno))]
