   [("Maybe.option_bind_None", "option_bind None ?f = None",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Maybe.option_bind_Some", "option_bind (Some ?s) ?f = ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Maybe.rotate_Some", "(?y = Some ?x) = (Some ?x = ?y)",
     template_bimplication
      (template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)),
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Maybe.option_bind_eq_None",
     "(option_bind ?m ?f = None) =
      (?m = None | (EX p. ?m = Some p & ?f p = None))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 7, template_var 1), template_var 0),
         template_hole 6),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Maybe.split_option_bind",
     "?P (option_bind ?res ?f) =
      ((?res = None --> ?P None) & (ALL s. ?res = Some s --> ?P (?f s)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_hole 3)),
                 template_app (template_var 2, template_hole 2))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Maybe.split_option_bind_asm",
     "?P (option_bind ?res ?f) =
      (~ (?res = None & ~ ?P None | (EX s. ?res = Some s & ~ ?P (?f s))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_hole 3)),
                     template_app
                      (template_hole 7,
                       template_app (template_var 2, template_hole 2)))),
                 template_app (template_hole 1, t_empty))
               )
           )))]
