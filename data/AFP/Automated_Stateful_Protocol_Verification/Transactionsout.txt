Loading theory "Draft.Transactions" (required by "Draft.TransactionsTemplates")
Loading theory "Draft.Templates" (required by "Draft.TransactionsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.167s cpu time, 0.027s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TransactionsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.501s elapsed time, 1.035s cpu time, 0.075s GC time
Found termination order: "{}"
Found termination order: "{}"
instantiation
  prot_atom :: (enum) enum
  enum_prot_atom == enum_class.enum :: 'a prot_atom list
  enum_all_prot_atom == enum_class.enum_all ::
    ('a prot_atom => bool) => bool
  enum_ex_prot_atom == enum_class.enum_ex :: ('a prot_atom => bool) => bool
### theory "Draft.Transactions"
### 5.549s elapsed time, 7.301s cpu time, 1.742s GC time
Loading theory "Draft.TransactionsTemplates"
val templateLemmas =
   [("Transactions.transaction_proj_fresh_eq",
     "transaction_fresh (transaction_proj ?n ?T) = transaction_fresh ?T",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Transactions.transaction_strand_subsets",
     "set (transaction_checks ?T) <= set (transaction_strand ?T)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Transactions.transaction_strand_subsets",
     "set (transaction_receive ?T) <= set (transaction_strand ?T)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Transactions.transaction_strand_subsets",
     "set (transaction_selects ?T) <= set (transaction_strand ?T)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Transactions.transaction_strand_subsets",
     "set (transaction_send ?T) <= set (transaction_strand ?T)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Transactions.transaction_strand_subsets",
     "set (transaction_updates ?T) <= set (transaction_strand ?T)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Transactions.is_Fun_Set_subst",
     "is_Fun_Set ?S' ==> is_Fun_Set (?S' \<cdot> ?\<sigma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Transactions.transaction_strand_proj",
     "transaction_strand (transaction_proj ?n ?T) =
      proj ?n (transaction_strand ?T)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Transactions.transaction_strand_subsets",
     "set (unlabel (transaction_checks ?T))
      <= set (unlabel (transaction_strand ?T))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Transactions.transaction_strand_subsets",
     "set (unlabel (transaction_receive ?T))
      <= set (unlabel (transaction_strand ?T))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Transactions.transaction_strand_subsets",
     "set (unlabel (transaction_selects ?T))
      <= set (unlabel (transaction_strand ?T))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Transactions.transaction_strand_subsets",
     "set (unlabel (transaction_send ?T))
      <= set (unlabel (transaction_strand ?T))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Transactions.transaction_strand_subsets",
     "set (unlabel (transaction_updates ?T))
      <= set (unlabel (transaction_strand ?T))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Transactions.bvars_wellformed_transaction_unfold",
     "wellformed_transaction ?T ==>
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Transactions.bvars_wellformed_transaction_unfold",
     "wellformed_transaction ?T ==>
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Transactions.bvars_wellformed_transaction_unfold",
     "wellformed_transaction ?T ==>
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T) = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Transactions.bvars_wellformed_transaction_unfold",
     "wellformed_transaction ?T ==>
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_updates ?T) = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Transactions.dual_wellformed_transaction_ident_cases'",
     "wellformed_transaction ?T ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T) =
      transaction_checks ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Transactions.dual_wellformed_transaction_ident_cases'",
     "wellformed_transaction ?T ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) =
      transaction_selects ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Transactions.dual_wellformed_transaction_ident_cases'",
     "wellformed_transaction ?T ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_updates ?T) =
      transaction_updates ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Transactions.is_Fun_Set_exi",
     "is_Fun_Set ?x = (EX s. ?x = Fun (Set s) [])",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Transactions.transaction_proj_trms_subset",
     "trms_transaction (transaction_proj ?n ?T) <= trms_transaction ?T",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Transactions.transaction_proj_vars_subset",
     "vars_transaction (transaction_proj ?n ?T) <= vars_transaction ?T",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
           ?\<theta>)
      <= set (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
              ?\<theta>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
           ?\<theta>)
      <= set (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
              ?\<theta>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
           ?\<theta>)
      <= set (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
              ?\<theta>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
           ?\<theta>)
      <= set (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
              ?\<theta>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
           ?\<theta>)
      <= set (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
              ?\<theta>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Transactions.transaction_fresh_vars_subset",
     "wellformed_transaction ?T ==>
      set (transaction_fresh ?T) <= fv_transaction ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.wellformed_transaction_wf\<^sub>s\<^sub>s\<^sub>t",
     "wellformed_transaction ?T ==>
      wf'\<^sub>s\<^sub>s\<^sub>t (set (transaction_fresh ?T))
       (unlabel
         (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_strand ?T)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (unlabel
            (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
             ?\<theta>))
      <= set (unlabel
               (transaction_strand
                 ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                ?\<theta>))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (unlabel
            (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
             ?\<theta>))
      <= set (unlabel
               (transaction_strand
                 ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                ?\<theta>))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (unlabel
            (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
             ?\<theta>))
      <= set (unlabel
               (transaction_strand
                 ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                ?\<theta>))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (unlabel
            (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
             ?\<theta>))
      <= set (unlabel
               (transaction_strand
                 ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                ?\<theta>))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Transactions.transaction_strand_subst_subsets",
     "set (unlabel
            (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
             ?\<theta>))
      <= set (unlabel
               (transaction_strand
                 ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                ?\<theta>))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Transactions.bvars_wellformed_transaction_unfold",
     "wellformed_transaction ?T ==>
      bvars_transaction ?T =
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.dual_transaction_ik_is_transaction_send",
     "wellformed_transaction ?T ==>
      ik\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_strand ?T)) =
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.wellformed_transaction_wf\<^sub>s\<^sub>s\<^sub>t",
     "wellformed_transaction ?T ==>
      set (transaction_fresh ?T) Int bvars_transaction ?T = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))),
         template_hole 0))),
    ("Transactions.wellformed_transaction_wf\<^sub>s\<^sub>s\<^sub>t",
     "wellformed_transaction ?T ==>
      fv_transaction ?T Int bvars_transaction ?T = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)))),
           template_app
            (template_hole 1,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_hole 0))),
    ("Transactions.transaction_proj_member",
     "?T : set ?P ==>
      transaction_proj ?n ?T : set (map (transaction_proj ?n) ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 0)),
                 template_var 1)))
           ))),
    ("Transactions.dual_wellformed_transaction_ident_cases",
     "list_all is_Update (unlabel ?S) ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t ?S = ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Transactions.is_Fun_SetE",
     "[| is_Fun_Set ?t; !!s. ?t = Fun (Set s) [] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_checks ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_receive ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_selects ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_receive ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_selects ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_checks ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_receive ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.transaction_fresh_vars_notin",
     "[| wellformed_transaction ?T; ?x : set (transaction_fresh ?T) |]
      ==> ?x ~: vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                 (transaction_selects ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Transactions.wellformed_transaction_unlabel_cases",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_receive ?T)) |]
      ==> EX t. ?x = receive\<langle>t\<rangle>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Transactions.wellformed_transaction_unlabel_cases",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_send ?T)) |]
      ==> EX t. ?x = send\<langle>t\<rangle>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Transactions.wellformed_transaction_send_receive_fv_subset",
     "[| wellformed_transaction ?T;
         ?t : trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
               (transaction_receive ?T) |]
      ==> fv ?t <= fv_transaction ?T",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1))))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 1)))))),
    ("Transactions.wellformed_transaction_send_receive_trm_cases",
     "[| wellformed_transaction ?T;
         ?t : trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
               (transaction_receive ?T) |]
      ==> receive\<langle>?t\<rangle>
          : set (unlabel (transaction_receive ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1))))
           ))),
    ("Transactions.wellformed_transaction_send_receive_fv_subset",
     "[| wellformed_transaction ?T;
         ?t : trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T) |]
      ==> fv ?t <= fv_transaction ?T",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1))))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 1)))))),
    ("Transactions.wellformed_transaction_send_receive_trm_cases",
     "[| wellformed_transaction ?T;
         ?t : trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T) |]
      ==> send\<langle>?t\<rangle> : set (unlabel (transaction_send ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1))))
           ))),
    ("Transactions.wellformed_transaction_cases",
     "[| wellformed_transaction ?T;
         (?l, ?x) : set (transaction_receive ?T) |]
      ==> EX t. ?x = receive\<langle>t\<rangle>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Transactions.wellformed_transaction_cases",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_send ?T) |]
      ==> EX t. ?x = send\<langle>t\<rangle>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Transactions.dual_wellformed_transaction_ident_cases",
     "list_all is_Assignment (unlabel ?S) ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t ?S = ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Transactions.dual_transaction_ik_is_transaction_send'",
     "wellformed_transaction ?T ==>
      ik\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<delta>)) =
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_send ?T) \<cdot>\<^sub>s\<^sub>e\<^sub>t
      ?\<delta>",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_var 0)))),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app
              (template_hole 7,
               template_app (template_hole 0, template_var 1))))))),
    ("Transactions.fv_wellformed_transaction_unfold",
     "wellformed_transaction ?T ==>
      fv_transaction ?T =
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) Un
      set (transaction_fresh ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 3, template_var 0)))),
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 2, template_var 0))))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.dual_wellformed_transaction_ident_cases",
     "list_all is_Check (unlabel ?S) ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t ?S = ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, t_empty),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Transactions.dual_transaction_strand",
     "wellformed_transaction ?T ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_strand ?T) =
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) @
      transaction_selects ?T @
      transaction_checks ?T @
      transaction_updates ?T @
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 7,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 0, template_var 0))))))))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = receive\<langle>?t\<rangle> |]
      ==> ?x : set (unlabel (transaction_receive ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))))
            ),
        template_equation
         (template_var 1, template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 2))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = send\<langle>?t\<rangle> |]
      ==> ?x : set (unlabel (transaction_send ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))))
            ),
        template_equation
         (template_var 1, template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 2))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = delete\<langle>?t,?s\<rangle> |]
      ==> ?x : set (unlabel (transaction_updates ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3))))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = insert\<langle>?t,?s\<rangle> |]
      ==> ?x : set (unlabel (transaction_updates ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3))))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Transactions.is_Update_in_transaction_updates",
     "[| is_Update ?t; ?t : set (unlabel (transaction_strand ?TT));
         wellformed_transaction ?TT |]
      ==> ?t : set (unlabel (transaction_updates ?TT))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0))))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Transactions.wellformed_transaction_send_receive_subst_trm_cases",
     "[| wellformed_transaction ?T;
         ?t : trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
               (transaction_receive ?T) \<cdot>\<^sub>s\<^sub>e\<^sub>t
              ?\<theta> |]
      ==> receive\<langle>?t\<rangle>
          : set (unlabel
                  (transaction_receive
                    ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                   ?\<theta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, t_empty),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 2)),
                   template_var 0))))
           ))),
    ("Transactions.wellformed_transaction_send_receive_subst_trm_cases",
     "[| wellformed_transaction ?T;
         ?t : trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
               (transaction_send ?T) \<cdot>\<^sub>s\<^sub>e\<^sub>t
              ?\<theta> |]
      ==> send\<langle>?t\<rangle>
          : set (unlabel
                  (transaction_send
                    ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                   ?\<theta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, t_empty),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 2)),
                   template_var 0))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = \<langle>?t == ?s\<rangle> |]
      ==> ?x : set (unlabel (transaction_checks ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3))))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = select\<langle>?t,?s\<rangle> |]
      ==> ?x : set (unlabel (transaction_selects ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3))))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x = \<langle>?t in ?s\<rangle> |]
      ==> ?x : set (unlabel (transaction_checks ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3))))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Transactions.wellformed_transaction_strand_unlabel_memberD",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_strand ?T));
         ?x =
         \<forall>?X\<langle>\<or>\<noteq>: ?F \<or>\<notin>: ?G\<rangle> |]
      ==> ?x : set (unlabel (transaction_checks ?T))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 4))))
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 4))))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = receive\<langle>?t\<rangle> |]
      ==> (?l, ?x) : set (transaction_receive ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)))
            ),
        template_equation
         (template_var 1, template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = send\<langle>?t\<rangle> |]
      ==> (?l, ?x) : set (transaction_send ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)))
            ),
        template_equation
         (template_var 1, template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = delete\<langle>?t,?s\<rangle> |]
      ==> (?l, ?x) : set (transaction_updates ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = insert\<langle>?t,?s\<rangle> |]
      ==> (?l, ?x) : set (transaction_updates ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Transactions.dual_transaction_strand_subst",
     "wellformed_transaction ?T ==>
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<delta>) =
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) @
      transaction_selects ?T @
      transaction_checks ?T @
      transaction_updates ?T @
      dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_send ?T) \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
      ?\<delta>",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 4, template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 3, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 2, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 1, template_var 1)),
                     template_app
                      (template_hole 8,
                       template_app (template_hole 0, template_var 1))))))),
           template_var 0)))),
    ("Transactions.db\<^sub>s\<^sub>s\<^sub>t_transaction_prefix_eq",
     "[| wellformed_transaction ?T;
         prefix ?S
          (transaction_receive ?T @
           transaction_selects ?T @ transaction_checks ?T) |]
      ==> db\<^sub>l\<^sub>s\<^sub>s\<^sub>t ?A =
          db\<^sub>l\<^sub>s\<^sub>s\<^sub>t
           (?A @
            dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
             (?S \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t ?\<delta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 3)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 6, template_var 3)),
                  template_app (template_hole 5, template_var 3))))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)))))))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = \<langle>?t == ?s\<rangle> |]
      ==> (?l, ?x) : set (transaction_checks ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 5,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = select\<langle>?t,?s\<rangle> |]
      ==> (?l, ?x) : set (transaction_selects ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 5,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x = \<langle>?t in ?s\<rangle> |]
      ==> (?l, ?x) : set (transaction_checks ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 5,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Transactions.wellformed_transaction_strand_memberD",
     "[| wellformed_transaction ?T; (?l, ?x) : set (transaction_strand ?T);
         ?x =
         \<forall>?X\<langle>\<or>\<noteq>: ?F \<or>\<notin>: ?G\<rangle> |]
      ==> (?l, ?x) : set (transaction_checks ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 5)))
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3)),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("Transactions.trms_transaction_unfold",
     "trms_transaction ?T =
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_updates ?T) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 3, template_var 0))))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 2, template_var 0))))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 1, template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.bvars_transaction_unfold",
     "bvars_transaction ?T =
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_updates ?T) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 3, template_var 0))))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 2, template_var 0))))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 1, template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.fv_transaction_unfold",
     "fv_transaction ?T =
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_updates ?T) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 3, template_var 0))))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 2, template_var 0))))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 1, template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.vars_transaction_unfold",
     "vars_transaction ?T =
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_selects ?T) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_checks ?T) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_updates ?T) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 3, template_var 0))))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 2, template_var 0))))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 1, template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0)))))),
    ("Transactions.dual_unlabel_transaction_strand",
     "wellformed_transaction ?T ==>
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_strand ?T)) =
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_receive ?T)) @
      unlabel (transaction_selects ?T) @
      unlabel (transaction_checks ?T) @
      unlabel (transaction_updates ?T) @
      unlabel (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t (transaction_send ?T))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 8,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 1, template_var 0))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 0, template_var 0)))))))))),
    ("Transactions.wellformed_transaction_unlabel_cases",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_updates ?T)) |]
      ==> (EX t s. ?x = insert\<langle>t,s\<rangle>) |
          (EX t s. ?x = delete\<langle>t,s\<rangle>)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Transactions.wellformed_transaction_cases",
     "[| wellformed_transaction ?T;
         (?l, ?x) : set (transaction_updates ?T) |]
      ==> (EX t s. ?x = insert\<langle>t,s\<rangle>) |
          (EX t s. ?x = delete\<langle>t,s\<rangle>)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Transactions.wellformed_transaction_unlabel_cases",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_selects ?T)) |]
      ==> (EX t s. ?x = \<langle>t := s\<rangle>) |
          (EX t s. ?x = select\<langle>t,s\<rangle>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Transactions.wellformed_transaction_cases",
     "[| wellformed_transaction ?T;
         (?l, ?x) : set (transaction_selects ?T) |]
      ==> (EX t s. ?x = \<langle>t := s\<rangle>) |
          (EX t s. ?x = select\<langle>t,s\<rangle>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Transactions.transaction_strand_memberD",
     "?x : set (transaction_strand ?T) ==>
      ?x : set (transaction_receive ?T) |
      ?x : set (transaction_selects ?T) |
      ?x : set (transaction_checks ?T) |
      ?x : set (transaction_updates ?T) | ?x : set (transaction_send ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 4, template_var 0)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 3, template_var 0)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 2, template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app
                        (template_hole 7,
                         template_app (template_hole 1, template_var 0)))),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 0, template_var 0)))))))
           ))),
    ("Transactions.Fun_Set_InSet_iff",
     "(?u = \<langle>?a: Var ?x \<in> Fun (Set ?s) []\<rangle>) =
      (is_InSet ?u &
       is_Var (the_elem_term ?u) &
       is_Fun_Set (the_set_term ?u) &
       the_Set (the_Fun (the_set_term ?u)) = ?s &
       the_Var (the_elem_term ?u) = ?x & the_check ?u = ?a)",
     template_bimplication
      (template_equation
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 17, template_var 2),
             template_app (template_hole 16, template_var 1)),
           template_app
            (template_app
              (template_hole 15,
               template_app (template_hole 14, template_var 0)),
             template_hole 13))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app (template_hole 11, template_var 3)),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_hole 10,
                   template_app (template_hole 9, template_var 3))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 3))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 7, template_var 3)))),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 9, template_var 3))),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 3)),
                       template_var 2))))))
           ))),
    ("Transactions.trms_transaction_subst_unfold",
     "trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) =
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      trms\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 4, template_var 1)),
                             template_var 0)))),
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 3, template_var 1)),
                           template_var 0))))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 2, template_var 1)),
                       template_var 0))))),
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0))))),
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Transactions.bvars_transaction_subst_unfold",
     "bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) =
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      bvars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 4, template_var 1)),
                             template_var 0)))),
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 3, template_var 1)),
                           template_var 0))))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 2, template_var 1)),
                       template_var 0))))),
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0))))),
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Transactions.fv_transaction_subst_unfold",
     "fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) =
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      fv\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 4, template_var 1)),
                             template_var 0)))),
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 3, template_var 1)),
                           template_var 0))))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 2, template_var 1)),
                       template_var 0))))),
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0))))),
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Transactions.vars_transaction_subst_unfold",
     "vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) =
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>) Un
      vars\<^sub>l\<^sub>s\<^sub>s\<^sub>t
       (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
        ?\<theta>)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 4, template_var 1)),
                             template_var 0)))),
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 3, template_var 1)),
                           template_var 0))))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 2, template_var 1)),
                       template_var 0))))),
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0))))),
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Transactions.transaction_dual_subst_unfold",
     "unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_strand ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<theta>)) =
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_receive ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<theta>)) @
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_selects ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<theta>)) @
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_checks ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<theta>)) @
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_updates ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<theta>)) @
      unlabel
       (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
         (transaction_send ?T \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
          ?\<theta>))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 4, template_var 1)),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 3, template_var 1)),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 2, template_var 1)),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 1, template_var 1)),
                       template_var 0)))),
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 0, template_var 1)),
                     template_var 0))))))))),
    ("Transactions.transaction_strand_unlabel_memberD",
     "?x : set (unlabel (transaction_strand ?T)) ==>
      ?x : set (unlabel (transaction_receive ?T)) |
      ?x : set (unlabel (transaction_selects ?T)) |
      ?x : set (unlabel (transaction_checks ?T)) |
      ?x : set (unlabel (transaction_updates ?T)) |
      ?x : set (unlabel (transaction_send ?T))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 4, template_var 0))))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 3, template_var 0))))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 2, template_var 0))))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 9, template_var 1),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 1, template_var 0))))),
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 0, template_var 0))))))))
           ))),
    ("Transactions.wellformed_transaction_unlabel_cases",
     "[| wellformed_transaction ?T;
         ?x : set (unlabel (transaction_checks ?T)) |]
      ==> (EX t s. ?x = \<langle>t == s\<rangle>) |
          (EX t s. ?x = \<langle>t in s\<rangle>) |
          (EX X F G.
              ?x =
              \<forall>X\<langle>\<or>\<noteq>: F \<or>\<notin>: G\<rangle>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Transactions.wellformed_transaction_cases",
     "[| wellformed_transaction ?T;
         (?l, ?x) : set (transaction_checks ?T) |]
      ==> (EX t s. ?x = \<langle>t == s\<rangle>) |
          (EX t s. ?x = \<langle>t in s\<rangle>) |
          (EX X F G.
              ?x =
              \<forall>X\<langle>\<or>\<noteq>: F \<or>\<notin>: G\<rangle>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Transactions.Fun_Set_NotInSet_iff",
     "(?u = \<langle>Var ?x not in Fun (Set ?s) []\<rangle>) =
      ((is_NegChecks ?u &
        bvars\<^sub>s\<^sub>s\<^sub>t\<^sub>p ?u = [] &
        the_eqs ?u = [] &
        length (the_ins ?u) = 1 &
        is_Var (fst (hd (the_ins ?u))) &
        is_Fun_Set (snd (hd (the_ins ?u)))) &
       the_Set (the_Fun (snd (hd (the_ins ?u)))) = ?s &
       the_Var (fst (hd (the_ins ?u))) = ?x)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 28, template_hole 27),
             template_hole 26),
           template_app
            (template_app
              (template_hole 25,
               template_app
                (template_app
                  (template_hole 24,
                   template_app (template_hole 23, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 22,
                     template_app (template_hole 21, template_var 0)),
                   template_hole 20))),
             template_hole 26))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 19,
                   template_app (template_hole 18, template_var 2)),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app (template_hole 16, template_var 2)),
                       template_hole 27)),
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_app
                          (template_hole 15,
                           template_app (template_hole 14, template_var 2)),
                         template_hole 26)),
                     template_app
                      (template_app
                        (template_hole 19,
                         template_app
                          (template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11, template_var 2))),
                           template_hole 10)),
                       template_app
                        (template_app
                          (template_hole 19,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 11, template_var 2))))),
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 11, template_var 2)))))))))),
             template_app
              (template_app
                (template_hole 19,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 11, template_var 2)))))),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 11, template_var 2))))),
                 template_var 1)))
           ))),
    ("Transactions.db\<^sub>l\<^sub>s\<^sub>s\<^sub>t_dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t_set_ex",
     "[| ?d : set (db'\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                    (dual\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                      ?A \<cdot>\<^sub>l\<^sub>s\<^sub>s\<^sub>t
                     ?\<theta>)
                    ?\<I> ?D);
         ALL t u.
            insert\<langle>t,u\<rangle> : set (unlabel ?A) -->
            (EX s. u = Fun (Set s) []);
         ALL t u.
            delete\<langle>t,u\<rangle> : set (unlabel ?A) -->
            (EX s. u = Fun (Set s) []);
         ALL d:set ?D. EX s. snd d = Fun (Set s) [] |]
      ==> EX s. snd ?d = Fun (Set s) []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_hole 15,
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_hole 13, template_var 3)),
                          template_var 2))),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 17, template_var 0)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 7, t_empty))))]:
   (string * thm * template) list
### theory "Draft.TransactionsTemplates"
### 0.643s elapsed time, 0.921s cpu time, 0.192s GC time
val it = (): unit
