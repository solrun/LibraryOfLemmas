Loading theory "Draft.Term_Variants" (required by "Draft.Stateful_Protocol_VerificationTemplates" via "Draft.Stateful_Protocol_Verification" via "Draft.Term_Implication")
Loading theory "Draft.Transactions" (required by "Draft.Stateful_Protocol_VerificationTemplates" via "Draft.Stateful_Protocol_Verification" via "Draft.Stateful_Protocol_Model")
Loading theory "Draft.Templates" (required by "Draft.Stateful_Protocol_VerificationTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.079s elapsed time, 0.254s cpu time, 0.020s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Stateful_Protocol_VerificationTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "term_variants_pred"
  Proving monotonicity ...
### theory "Draft.Term_Variants"
### 0.258s elapsed time, 0.792s cpu time, 0.020s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.529s elapsed time, 1.304s cpu time, 0.137s GC time
Found termination order: "{}"
Found termination order: "{}"
instantiation
  prot_atom :: (enum) enum
  enum_prot_atom == enum_class.enum :: 'a prot_atom list
  enum_all_prot_atom == enum_class.enum_all ::
    ('a prot_atom => bool) => bool
  enum_ex_prot_atom == enum_class.enum_ex :: ('a prot_atom => bool) => bool
### theory "Draft.Transactions"
### 5.681s elapsed time, 7.359s cpu time, 1.260s GC time
Loading theory "Draft.Term_Abstraction" (required by "Draft.Stateful_Protocol_VerificationTemplates" via "Draft.Stateful_Protocol_Verification" via "Draft.Stateful_Protocol_Model")
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Term_Abstraction"
### 3.750s elapsed time, 5.228s cpu time, 1.234s GC time
Loading theory "Draft.Stateful_Protocol_Model" (required by "Draft.Stateful_Protocol_VerificationTemplates" via "Draft.Stateful_Protocol_Verification")
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "reachable_constraintsp"
  Proving monotonicity ...
### theory "Draft.Stateful_Protocol_Model"
### 5.017s elapsed time, 6.386s cpu time, 1.818s GC time
Loading theory "Draft.Term_Implication" (required by "Draft.Stateful_Protocol_VerificationTemplates" via "Draft.Stateful_Protocol_Verification")
Proofs for inductive predicate(s) "timpl_closurep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "timpl_closure'_stepp"
  Proving monotonicity ...
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "timpls_transformable_to_pred"
  Proving monotonicity ...
### theory "Draft.Term_Implication"
### 11.076s elapsed time, 13.412s cpu time, 3.203s GC time
Loading theory "Draft.Stateful_Protocol_Verification" (required by "Draft.Stateful_Protocol_VerificationTemplates")
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
locale secure_stateful_protocol
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
    and P :: "('fun, 'atom, 'sets, 'lbl) prot_transaction list"
    and
    FP_OCC_TI ::
      "(('fun, 'atom, 'sets) prot_fun,
        (('fun, 'atom, 'sets) prot_fun, 'atom prot_atom) Term.term *
        nat) Term.term list *
       'sets set list * ('sets set * 'sets set) list"
    and
    P_SMP ::
      "(('fun, 'atom, 'sets) prot_fun,
        (('fun, 'atom, 'sets) prot_fun, 'atom prot_atom) Term.term *
        nat) Term.term list"
  assumes
    "secure_stateful_protocol arity\<^sub>f arity\<^sub>s public\<^sub>f
      Ana\<^sub>f \<Gamma>\<^sub>f label_witness1 label_witness2 P FP_OCC_TI
      P_SMP"
locale secure_stateful_protocol'
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
    and P :: "('fun, 'atom, 'sets, 'lbl) prot_transaction list"
    and
    FP_OCC_TI ::
      "(('fun, 'atom, 'sets) prot_fun,
        (('fun, 'atom, 'sets) prot_fun, 'atom prot_atom) Term.term *
        nat) Term.term list *
       'sets set list * ('sets set * 'sets set) list"
  assumes
    "secure_stateful_protocol' arity\<^sub>f arity\<^sub>s public\<^sub>f
      Ana\<^sub>f \<Gamma>\<^sub>f label_witness1 label_witness2 P
      FP_OCC_TI"
locale secure_stateful_protocol''
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
    and P :: "('fun, 'atom, 'sets, 'lbl) prot_transaction list"
  assumes
    "secure_stateful_protocol'' arity\<^sub>f arity\<^sub>s public\<^sub>f
      Ana\<^sub>f \<Gamma>\<^sub>f label_witness1 label_witness2 P"
locale secure_stateful_protocol'''
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
    and P :: "('fun, 'atom, 'sets, 'lbl) prot_transaction list"
    and
    FP_OCC_TI ::
      "(('fun, 'atom, 'sets) prot_fun,
        (('fun, 'atom, 'sets) prot_fun, 'atom prot_atom) Term.term *
        nat) Term.term list *
       'sets set list * ('sets set * 'sets set) list"
    and
    P_SMP ::
      "(('fun, 'atom, 'sets) prot_fun,
        (('fun, 'atom, 'sets) prot_fun, 'atom prot_atom) Term.term *
        nat) Term.term list"
  assumes
    "secure_stateful_protocol''' arity\<^sub>f arity\<^sub>s public\<^sub>f
      Ana\<^sub>f \<Gamma>\<^sub>f label_witness1 label_witness2 P FP_OCC_TI
      P_SMP"
locale secure_stateful_protocol''''
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
    and P :: "('fun, 'atom, 'sets, 'lbl) prot_transaction list"
    and
    FP_OCC_TI ::
      "(('fun, 'atom, 'sets) prot_fun,
        (('fun, 'atom, 'sets) prot_fun, 'atom prot_atom) Term.term *
        nat) Term.term list *
       'sets set list * ('sets set * 'sets set) list"
  assumes
    "secure_stateful_protocol'''' arity\<^sub>f arity\<^sub>s public\<^sub>f
      Ana\<^sub>f \<Gamma>\<^sub>f label_witness1 label_witness2 P
      FP_OCC_TI"
locale stateful_protocol_model
  fixes arity\<^sub>f :: "'fun => nat"
    and arity\<^sub>s :: "'sets => nat"
    and public\<^sub>f :: "'fun => bool"
    and
    Ana\<^sub>f ::
      "'fun
       => (('fun, 'atom, 'sets) prot_fun, nat) Term.term list * nat list"
    and \<Gamma>\<^sub>f :: "'fun => 'atom option"
    and label_witness1 :: "'lbl"
    and label_witness2 :: "'lbl"
  assumes
    "stateful_protocol_model arity\<^sub>f public\<^sub>f Ana\<^sub>f
      \<Gamma>\<^sub>f label_witness1 label_witness2"
### theory "Draft.Stateful_Protocol_Verification"
### 49.917s elapsed time, 59.190s cpu time, 11.377s GC time
Loading theory "Draft.Stateful_Protocol_VerificationTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Stateful_Protocol_VerificationTemplates"
### 0.602s elapsed time, 0.827s cpu time, 0.109s GC time
val it = (): unit
