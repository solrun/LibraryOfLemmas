Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.575s cpu time, 0.051s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Trivia")
### theory "Fresh_Identifiers.Fresh"
### 0.236s elapsed time, 0.967s cpu time, 0.051s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.257s elapsed time, 1.051s cpu time, 0.051s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "{}"
### theory "HOL-Library.Nat_Bijection"
### 0.374s elapsed time, 1.501s cpu time, 0.156s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs")
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.221s elapsed time, 0.871s cpu time, 0.105s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.989s elapsed time, 3.772s cpu time, 0.839s GC time
### theory "HOL-Library.BigO"
### 0.894s elapsed time, 3.395s cpu time, 0.738s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.453s elapsed time, 5.594s cpu time, 1.051s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.400s elapsed time, 1.574s cpu time, 0.101s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Bounded_Deducibility_Security.IO_Automaton")
Found termination order: "size <*mlex*> {}"
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 1.916s elapsed time, 7.415s cpu time, 1.178s GC time
Loading theory "Draft.Prelim" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Loading theory "Draft.Templates" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.292s cpu time, 0.029s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Safety_PropertiesMoreTemplates")
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.388s elapsed time, 1.526s cpu time, 0.094s GC time
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.711s elapsed time, 2.346s cpu time, 0.230s GC time
Found termination order: "{}"
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 1.126s elapsed time, 3.163s cpu time, 0.311s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 2.911s elapsed time, 5.694s cpu time, 0.518s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
### theory "Draft.System_Specification"
### 10.961s elapsed time, 15.295s cpu time, 4.936s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Safety_PropertiesMoreTemplates" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.042s elapsed time, 0.106s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Safety_PropertiesMoreTemplates")
### theory "Draft.Safety_Properties"
### 0.105s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.Safety_PropertiesMoreTemplates"
val templateLemmas =
   [("Safety_Properties.remove1_in_set",
     "?x \<in>\<in> remove1 ?y ?xs ==> ?x \<in>\<in> ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Safety_Properties.reach_pendingUReqs_distinct",
     "reach ?s ==> distinct (pendingUReqs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_hole 4)),
                  template_hole 3),
                template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Safety_Properties.reach_distinct_friends_reqs",
     "reach ?s ==> distinct (friendIDs ?s ?uid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_hole 4)),
                  template_hole 3),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Safety_Properties.reach_distinct_friends_reqs",
     "reach ?s ==> distinct (pendingFReqs ?s ?uid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_hole 4)),
                  template_hole 3),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Safety_Properties.reach_distinct_friends_reqs",
     "reach ?s ==> distinct (recvOuterFriendIDs ?s ?uid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_hole 4)),
                  template_hole 3),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Safety_Properties.reach_distinct_friends_reqs",
     "reach ?s ==> distinct (sentOuterFriendIDs ?s ?uid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_hole 4)),
                  template_hole 3),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Safety_Properties.Lact_Ract_noStateChange",
     "?a : range Lact Un range Ract ==> snd (step ?s ?a) = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_hole 6)),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Safety_Properties.Lact_Ract_noStateChange_set",
     "set ?al <= range Lact Un range Ract ==> snd (sstep ?s ?al) = ?s",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 1),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7)),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 1)),
         template_var 0))),
    ("Safety_Properties.reach_postIDs_persist",
     "[| ?pID \<in>\<in> postIDs ?s; step ?s ?a = (?ou, ?s') |]
      ==> ?pID \<in>\<in> postIDs ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)))
           ))),
    ("Safety_Properties.IDs_mono",
     "[| step ?s ?a = (?ou, ?s'); ?aid \<in>\<in> clientApiIDs ?s |]
      ==> ?aid \<in>\<in> clientApiIDs ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Safety_Properties.IDs_mono",
     "[| step ?s ?a = (?ou, ?s'); ?sid \<in>\<in> serverApiIDs ?s |]
      ==> ?sid \<in>\<in> serverApiIDs ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Safety_Properties.IDs_mono",
     "[| step ?s ?a = (?ou, ?s'); ?nid \<in>\<in> postIDs ?s |]
      ==> ?nid \<in>\<in> postIDs ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Safety_Properties.IDs_mono",
     "[| step ?s ?a = (?ou, ?s'); ?uid \<in>\<in> userIDs ?s |]
      ==> ?uid \<in>\<in> userIDs ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Safety_Properties.reach_friendIDs_symmetric",
     "reach ?s ==>
      (?uID1.0 \<in>\<in> friendIDs ?s ?uID2.0) =
      (?uID2.0 \<in>\<in> friendIDs ?s ?uID1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_hole 6)),
                  template_hole 5),
                template_hole 4),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Safety_Properties.reach_admin_userIDs",
     "[| reach ?s; ?uID \<in>\<in> userIDs ?s |]
      ==> admin ?s \<in>\<in> userIDs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_hole 6)),
                  template_hole 5),
                template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 1)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Safety_Properties.reach_not_postIDs_emptyPost",
     "[| reach ?s; ?PID ~: set (postIDs ?s) |]
      ==> post ?s ?PID = emptyPost",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 10, template_hole 9)),
                  template_hole 8),
                template_hole 7),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Safety_Properties.IDs_mono",
     "[| step ?s ?a = (?ou, ?s'); ?nid \<in>\<in> outerPostIDs ?s ?aid |]
      ==> ?nid \<in>\<in> outerPostIDs ?s' ?aid",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Safety_Properties.IDsOK_mono",
     "[| step ?s ?a = (?ou, ?s');
         IDsOK ?s ?uIDs ?pIDs ?saID_pIDs_s ?caIDs |]
      ==> IDsOK ?s' ?uIDs ?pIDs ?saID_pIDs_s ?caIDs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 7), template_var 6),
          template_app
           (template_app (template_hole 1, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 7),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Safety_Properties.reach_owner_userIDs",
     "[| reach ?s; ?pID \<in>\<in> postIDs ?s |]
      ==> owner ?s ?pID \<in>\<in> userIDs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 10, template_hole 9)),
                  template_hole 8),
                template_hole 7),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Safety_Properties.reach_distinct_friends_reqs",
     "[| reach ?s; ?uid' \<in>\<in> pendingFReqs ?s ?uid |]
      ==> ?uid ~: set (friendIDs ?s ?uid')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_hole 7)),
                  template_hole 6),
                template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)))
               )
           ))),
    ("Safety_Properties.reach_distinct_friends_reqs",
     "[| reach ?s; ?uid' \<in>\<in> pendingFReqs ?s ?uid |]
      ==> ?uid' ~: set (friendIDs ?s ?uid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_hole 7)),
                  template_hole 6),
                template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))
               )
           ))),
    ("Safety_Properties.reach_IDs_used_IDsOK",
     "[| reach ?s; ?uid \<in>\<in> friendIDs ?s ?uid' |]
      ==> IDsOK ?s [?uid, ?uid'] [] [] []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_app (template_hole 12, template_hole 11)),
                  template_hole 10),
                template_hole 9),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_hole 3))),
                 template_hole 2),
               template_hole 1),
             template_hole 0)
           ))),
    ("Safety_Properties.reach_IDs_used_IDsOK",
     "[| reach ?s; ?uid \<in>\<in> pendingFReqs ?s ?uid' |]
      ==> IDsOK ?s [?uid, ?uid'] [] [] []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_app (template_hole 12, template_hole 11)),
                  template_hole 10),
                template_hole 9),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_hole 3))),
                 template_hole 2),
               template_hole 1),
             template_hole 0)
           ))),
    ("Safety_Properties.reach_pendingUReqs",
     "[| reach ?s; ?uid \<in>\<in> pendingUReqs ?s |]
      ==> ?uid ~: set (userIDs ?s) & admin ?s \<in>\<in> userIDs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 10, template_hole 9)),
                  template_hole 8),
                template_hole 7),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 1, template_var 1))))),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 0, template_var 1)),
               template_app
                (template_hole 5,
                 template_app (template_hole 1, template_var 1))))
           ))),
    ("Safety_Properties.istate_sSys",
     "[| step istate ?a = (?ou, ?s');
         !!uid p. ?a = Sact (sSys uid p) ==> ?thesis;
         ?s' = istate ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 7)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Safety_Properties.reach_AID_used_valid",
     "[| reach ?s;
         ?aid \<in>\<in> serverApiIDs ?s |
         ?aid \<in>\<in> clientApiIDs ?s |
         ?aid \<in>\<in> pendingSApiReqs ?s |
         ?aid \<in>\<in> pendingCApiReqs ?s |]
      ==> admin ?s \<in>\<in> userIDs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_app (template_hole 14, template_hole 13)),
                  template_hole 12),
                template_hole 11),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 0),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 6, template_var 1)))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 0),
                      template_app
                       (template_hole 8,
                        template_app (template_hole 5, template_var 1)))),
                  template_app
                   (template_app (template_hole 9, template_var 0),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 4, template_var 1))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Safety_Properties.userOfA_not_userIDs_outErr",
     "[| EX uid. userOfA ?a = Some uid & uid ~: set (userIDs ?s);
         ALL aID uID p name. ?a ~= Sact (sSys uID p);
         ALL uID name. ?a ~= Cact (cNUReq uID name) |]
      ==> fst (step ?s ?a) = outErr",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Safety_Properties.step_outerFriendIDs_idem",
     "[| step ?s ?a = (?ou, ?s');
         ALL uID p aID uID'.
            ?a ~= COMact (comSendCreateOFriend uID p aID uID') &
            ?a ~= COMact (comReceiveCreateOFriend aID p uID uID') &
            ?a ~= COMact (comSendDeleteOFriend uID p aID uID') &
            ?a ~= COMact (comReceiveDeleteOFriend aID p uID uID') |]
      ==> recvOuterFriendIDs ?s' = recvOuterFriendIDs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 13, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("Safety_Properties.step_outerFriendIDs_idem",
     "[| step ?s ?a = (?ou, ?s');
         ALL uID p aID uID'.
            ?a ~= COMact (comSendCreateOFriend uID p aID uID') &
            ?a ~= COMact (comReceiveCreateOFriend aID p uID uID') &
            ?a ~= COMact (comSendDeleteOFriend uID p aID uID') &
            ?a ~= COMact (comReceiveDeleteOFriend aID p uID uID') |]
      ==> sentOuterFriendIDs ?s' = sentOuterFriendIDs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 13, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("Safety_Properties.reach_not_postIDs_friendV",
     "[| reach ?s; ?PID ~: set (postIDs ?s) |] ==> vis ?s ?PID = FriendV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_app (template_hole 14, template_hole 13)),
                  template_hole 12),
                template_hole 11),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_hole 2),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 1),
                         template_hole 2),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_hole 1),
                               template_hole 2),
                             template_hole 1),
                           template_hole 2),
                         template_hole 2),
                       template_hole 1),
                     template_hole 1),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 1),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 2),
                                   template_hole 2),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_hole 0)))))))))),
    ("Safety_Properties.reach_vis",
     "reach ?s ==> vis ?s ?pID : {FriendV, PublicV}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_app (template_hole 12, template_hole 11)),
                  template_hole 10),
                template_hole 9),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 4, template_hole 3),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 3),
                           template_hole 3),
                         template_hole 2),
                       template_hole 2),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 4, template_hole 3),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_hole 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_hole 2),
                                     template_hole 3),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 4, template_hole 2), template_hole 3),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 4, template_hole 3), template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 2),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 4, template_hole 3), template_hole 3),
   template_hole 2),
 template_hole 3),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1)))))))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 4, template_hole 3),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_hole 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_hole 2),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_hole 2),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 4, template_hole 3), template_hole 2),
                                     template_hole 3),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 4, template_hole 3), template_hole 3),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 2),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 4, template_hole 2), template_hole 3),
   template_hole 3),
 template_hole 2),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 2),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 4, template_hole 2), template_hole 2),
     template_hole 3),
   template_hole 3),
 template_hole 3),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 1)))))))),
                 template_hole 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.Safety_PropertiesMoreTemplates"
### 0.595s elapsed time, 0.848s cpu time, 0.088s GC time
val it = (): unit
