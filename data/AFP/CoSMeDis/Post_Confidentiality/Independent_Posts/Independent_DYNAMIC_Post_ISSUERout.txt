Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.520s cpu time, 0.034s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.150s elapsed time, 0.622s cpu time, 0.034s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Trivia")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Fresh_Identifiers.Fresh"
### 0.259s elapsed time, 1.056s cpu time, 0.034s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
### theory "HOL-Library.Set_Algebras"
### 0.211s elapsed time, 0.830s cpu time, 0.081s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.339s elapsed time, 1.359s cpu time, 0.115s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.227s elapsed time, 0.878s cpu time, 0.154s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
consts
  cycle :: "'a list => 'a stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.952s elapsed time, 3.623s cpu time, 0.780s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.915s elapsed time, 3.483s cpu time, 0.775s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.460s elapsed time, 5.627s cpu time, 0.971s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.470s elapsed time, 1.859s cpu time, 0.119s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
Found termination order: "size <*mlex*> {}"
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Bounded_Deducibility_Security.IO_Automaton")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
### theory "HOL-Library.Tree"
### 1.971s elapsed time, 7.628s cpu time, 1.076s GC time
Loading theory "Draft.Prelim" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.221s elapsed time, 0.862s cpu time, 0.068s GC time
Loading theory "Draft.Templates" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.086s elapsed time, 0.338s cpu time, 0.055s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates")
Found termination order: "{}"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.454s elapsed time, 1.669s cpu time, 0.165s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.726s elapsed time, 2.758s cpu time, 0.295s GC time
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.614s elapsed time, 2.245s cpu time, 0.246s GC time
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 1.162s elapsed time, 3.402s cpu time, 0.411s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.382s elapsed time, 0.808s cpu time, 0.089s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.362s elapsed time, 0.757s cpu time, 0.088s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.374s elapsed time, 0.781s cpu time, 0.084s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 3.285s elapsed time, 7.936s cpu time, 0.911s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
### theory "Draft.System_Specification"
### 10.437s elapsed time, 13.491s cpu time, 3.406s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.044s elapsed time, 0.109s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER")
### theory "Draft.Safety_Properties"
### 0.122s elapsed time, 0.170s cpu time, 0.057s GC time
Loading theory "Draft.Post_Intro" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Post_Observation_Setup_ISSUER")
### theory "Draft.Post_Intro"
### 0.019s elapsed time, 0.021s cpu time, 0.000s GC time
Loading theory "Draft.Post_Observation_Setup_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER")
locale Fixed_UIDs
  fixes UIDs :: "userID set"
locale Fixed_PID
  fixes PID :: "postID"
locale ObservationSetup_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Observation_Setup_ISSUER"
### 0.515s elapsed time, 0.678s cpu time, 0.073s GC time
Loading theory "Draft.Independent_Post_Observation_Setup_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER")
Loading theory "Draft.Post_Unwinding_Helper_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER")
locale Issuer_State_Equivalence_Up_To_PID
  fixes PID :: "postID"
locale Strong_ObservationSetup_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Unwinding_Helper_ISSUER"
### 0.217s elapsed time, 0.463s cpu time, 0.060s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Post_Observation_Setup_ISSUER"
### 0.592s elapsed time, 0.967s cpu time, 0.087s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates" via "Draft.Independent_DYNAMIC_Post_ISSUER")
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER"
### 2.319s elapsed time, 3.790s cpu time, 0.332s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates")
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Proofs for inductive predicate(s) "BC", "BO"
  Proving monotonicity ...
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Independent_DYNAMIC_Post_ISSUER"
### 0.718s elapsed time, 0.798s cpu time, 0.107s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Independent_DYNAMIC_Post_ISSUERMoreTemplates"
### 0.615s elapsed time, 0.889s cpu time, 0.152s GC time
val it = (): unit
