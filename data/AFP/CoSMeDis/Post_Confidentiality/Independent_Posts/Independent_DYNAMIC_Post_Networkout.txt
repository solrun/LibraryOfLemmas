Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.143s elapsed time, 0.596s cpu time, 0.038s GC time
Loading theory "BD_Security_Compositional.Trivial_Security" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.API_Network" via "BD_Security_Compositional.Composing_Security_Network")
### theory "HOL-Library.Function_Algebras"
### 0.146s elapsed time, 0.601s cpu time, 0.038s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Fresh_Identifiers.Fresh"
### 0.214s elapsed time, 0.881s cpu time, 0.038s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
### theory "BD_Security_Compositional.Trivial_Security"
### 0.080s elapsed time, 0.321s cpu time, 0.000s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Trivia")
### theory "HOL-Library.Nat_Bijection"
### 0.347s elapsed time, 1.386s cpu time, 0.130s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
### theory "HOL-Library.Set_Algebras"
### 0.259s elapsed time, 1.023s cpu time, 0.092s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
### theory "Fresh_Identifiers.Fresh_String"
### 0.315s elapsed time, 1.229s cpu time, 0.180s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs")
consts
  prefixes :: "'a list => 'a list list"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  left :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.166s elapsed time, 4.460s cpu time, 0.987s GC time
### theory "HOL-Library.BigO"
### 1.035s elapsed time, 3.947s cpu time, 0.899s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.698s elapsed time, 6.547s cpu time, 1.246s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.494s elapsed time, 1.941s cpu time, 0.136s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
### theory "HOL-Library.Tree"
### 2.181s elapsed time, 8.446s cpu time, 1.339s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Bounded_Deducibility_Security.IO_Automaton")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Loading theory "Draft.Prelim" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.239s elapsed time, 0.938s cpu time, 0.091s GC time
Loading theory "Draft.Templates" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.272s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates")
Found termination order: "{}"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.481s elapsed time, 1.775s cpu time, 0.158s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.729s elapsed time, 2.765s cpu time, 0.262s GC time
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.575s elapsed time, 2.124s cpu time, 0.208s GC time
Loading theory "BD_Security_Compositional.Composing_Security" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.API_Network" via "BD_Security_Compositional.Composing_Security_Network")
Loading theory "BD_Security_Compositional.Transporting_Security" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.API_Network" via "BD_Security_Compositional.Composing_Security_Network")
locale Abstract_BD_Security_Trans
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
    and validSystemTrace' :: "'traces' => bool"
    and V' :: "'traces' => 'values'"
    and O' :: "'traces' => 'observations'"
    and B' :: "'values' => 'values' => bool"
    and TT' :: "'traces' => bool"
    and translateTrace :: "'traces => 'traces'"
    and translateObs :: "'observations => 'observations'"
    and translateVal :: "'values => 'values'"
  assumes
    "Abstract_BD_Security_Trans validSystemTrace V O B TT validSystemTrace'
      V' O' B' TT' translateTrace translateObs translateVal"
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
locale Abstract_BD_Security_Comp
  fixes validSystemTraces1 :: "'traces1 => bool"
    and V1 :: "'traces1 => 'values1"
    and O1 :: "'traces1 => 'observations1"
    and TT1 :: "'traces1 => bool"
    and B1 :: "'values1 => 'values1 => bool"
    and validSystemTraces2 :: "'traces2 => bool"
    and V2 :: "'traces2 => 'values2"
    and O2 :: "'traces2 => 'observations2"
    and TT2 :: "'traces2 => bool"
    and B2 :: "'values2 => 'values2 => bool"
    and validSystemTraces :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and TT :: "'traces => bool"
    and B :: "'values => 'values => bool"
    and comp :: "'traces1 => 'traces2 => 'traces => bool"
    and compO :: "'observations1 => 'observations2 => 'observations => bool"
    and compV :: "'values1 => 'values2 => 'values => bool"
  assumes
    "Abstract_BD_Security_Comp validSystemTraces1 V1 O1 TT1 B1
      validSystemTraces2 V2 O2 TT2 B2 validSystemTraces V O TT B comp compO
      compV"
Found termination order: "{}"
locale BD_Security_TS_Trans
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'val"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'val list => 'val list => bool"
    and istate' :: "'state'"
    and validTrans' :: "'trans' => bool"
    and srcOf' :: "'trans' => 'state'"
    and tgtOf' :: "'trans' => 'state'"
    and \<phi>' :: "'trans' => bool"
    and f' :: "'trans' => 'val'"
    and \<gamma>' :: "'trans' => bool"
    and g' :: "'trans' => 'obs'"
    and T' :: "'trans' => bool"
    and B' :: "'val' list => 'val' list => bool"
    and translateState :: "'state => 'state'"
    and translateTrans :: "'trans => 'trans'"
    and translateObs :: "'obs => 'obs' option"
    and translateVal :: "'val => 'val' option"
  assumes
    "BD_Security_TS_Trans istate validTrans srcOf tgtOf \<phi> f \<gamma> g
      T B istate' validTrans' srcOf' tgtOf' \<phi>' f' \<gamma>' g' T' B'
      translateState translateTrans translateObs translateVal"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
locale BD_Security_TS_Weaken_Observations
  fixes istate :: "'a"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'a"
    and tgtOf :: "'trans => 'a"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'b"
    and \<gamma> :: "'trans => bool"
    and T :: "'trans => bool"
    and B :: "'b list => 'b list => bool"
    and g :: "'trans => 'obs"
    and translateObs :: "'obs => 'obs' option"
### theory "BD_Security_Compositional.Transporting_Security"
### 0.638s elapsed time, 2.496s cpu time, 0.324s GC time
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 1.261s elapsed time, 4.768s cpu time, 0.533s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.474s elapsed time, 1.445s cpu time, 0.217s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.429s elapsed time, 1.306s cpu time, 0.165s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.466s elapsed time, 1.420s cpu time, 0.205s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 4.265s elapsed time, 13.639s cpu time, 2.907s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
locale BD_Security_TS_Comp
  fixes istate1 :: "'state1"
    and validTrans1 :: "'trans1 => bool"
    and srcOf1 :: "'trans1 => 'state1"
    and tgtOf1 :: "'trans1 => 'state1"
    and \<phi>1 :: "'trans1 => bool"
    and f1 :: "'trans1 => 'value1"
    and \<gamma>1 :: "'trans1 => bool"
    and g1 :: "'trans1 => 'obs1"
    and T1 :: "'trans1 => bool"
    and B1 :: "'value1 list => 'value1 list => bool"
    and istate2 :: "'state2"
    and validTrans2 :: "'trans2 => bool"
    and srcOf2 :: "'trans2 => 'state2"
    and tgtOf2 :: "'trans2 => 'state2"
    and \<phi>2 :: "'trans2 => bool"
    and f2 :: "'trans2 => 'value2"
    and \<gamma>2 :: "'trans2 => bool"
    and g2 :: "'trans2 => 'obs2"
    and T2 :: "'trans2 => bool"
    and B2 :: "'value2 list => 'value2 list => bool"
    and isCom1 :: "'trans1 => bool"
    and isCom2 :: "'trans2 => bool"
    and sync :: "'trans1 => 'trans2 => bool"
    and isComV1 :: "'value1 => bool"
    and isComV2 :: "'value2 => bool"
    and syncV :: "'value1 => 'value2 => bool"
    and isComO1 :: "'obs1 => bool"
    and isComO2 :: "'obs2 => bool"
    and syncO :: "'obs1 => 'obs2 => bool"
  assumes
    "BD_Security_TS_Comp istate1 validTrans1 srcOf1 tgtOf1 \<phi>1 f1
      \<gamma>1 g1 T1 B1 istate2 validTrans2 srcOf2 tgtOf2 \<phi>2 f2
      \<gamma>2 g2 T2 B2 isCom1 isCom2 sync isComV1 isComV2 syncV isComO1
      isComO2 syncO"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "compV"
  Proving monotonicity ...
Proofs for inductive predicate(s) "compO"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ccomp"
  Proving monotonicity ...
locale BD_Security_TS_Comp
  fixes istate1 :: "'state1"
    and validTrans1 :: "'trans1 => bool"
    and srcOf1 :: "'trans1 => 'state1"
    and tgtOf1 :: "'trans1 => 'state1"
    and \<phi>1 :: "'trans1 => bool"
    and f1 :: "'trans1 => 'value1"
    and \<gamma>1 :: "'trans1 => bool"
    and g1 :: "'trans1 => 'obs1"
    and T1 :: "'trans1 => bool"
    and B1 :: "'value1 list => 'value1 list => bool"
    and istate2 :: "'state2"
    and validTrans2 :: "'trans2 => bool"
    and srcOf2 :: "'trans2 => 'state2"
    and tgtOf2 :: "'trans2 => 'state2"
    and \<phi>2 :: "'trans2 => bool"
    and f2 :: "'trans2 => 'value2"
    and \<gamma>2 :: "'trans2 => bool"
    and g2 :: "'trans2 => 'obs2"
    and T2 :: "'trans2 => bool"
    and B2 :: "'value2 list => 'value2 list => bool"
    and isCom1 :: "'trans1 => bool"
    and isCom2 :: "'trans2 => bool"
    and sync :: "'trans1 => 'trans2 => bool"
    and isComV1 :: "'value1 => bool"
    and isComV2 :: "'value2 => bool"
    and syncV :: "'value1 => 'value2 => bool"
    and isComO1 :: "'obs1 => bool"
    and isComO2 :: "'obs2 => bool"
    and syncO :: "'obs1 => 'obs2 => bool"
  assumes
    "BD_Security_TS_Comp istate1 validTrans1 srcOf1 tgtOf1 \<phi>1 f1
      \<gamma>1 g1 T1 B1 istate2 validTrans2 srcOf2 tgtOf2 \<phi>2 f2
      \<gamma>2 g2 T2 B2 isCom1 isCom2 sync isComV1 isComV2 syncV isComO1
      isComO2 syncO"
Found termination order: "{}"
locale BD_Security_TS_Comp
  fixes istate1 :: "'state1"
    and validTrans1 :: "'trans1 => bool"
    and srcOf1 :: "'trans1 => 'state1"
    and tgtOf1 :: "'trans1 => 'state1"
    and \<phi>1 :: "'trans1 => bool"
    and f1 :: "'trans1 => 'value1"
    and \<gamma>1 :: "'trans1 => bool"
    and g1 :: "'trans1 => 'obs1"
    and T1 :: "'trans1 => bool"
    and B1 :: "'value1 list => 'value1 list => bool"
    and istate2 :: "'state2"
    and validTrans2 :: "'trans2 => bool"
    and srcOf2 :: "'trans2 => 'state2"
    and tgtOf2 :: "'trans2 => 'state2"
    and \<phi>2 :: "'trans2 => bool"
    and f2 :: "'trans2 => 'value2"
    and \<gamma>2 :: "'trans2 => bool"
    and g2 :: "'trans2 => 'obs2"
    and T2 :: "'trans2 => bool"
    and B2 :: "'value2 list => 'value2 list => bool"
    and isCom1 :: "'trans1 => bool"
    and isCom2 :: "'trans2 => bool"
    and sync :: "'trans1 => 'trans2 => bool"
    and isComV1 :: "'value1 => bool"
    and isComV2 :: "'value2 => bool"
    and syncV :: "'value1 => 'value2 => bool"
    and isComO1 :: "'obs1 => bool"
    and isComO2 :: "'obs2 => bool"
    and syncO :: "'obs1 => 'obs2 => bool"
  assumes
    "BD_Security_TS_Comp istate1 validTrans1 srcOf1 tgtOf1 \<phi>1 f1
      \<gamma>1 g1 T1 B1 istate2 validTrans2 srcOf2 tgtOf2 \<phi>2 f2
      \<gamma>2 g2 T2 B2 isCom1 isCom2 sync isComV1 isComV2 syncV isComO1
      isComO2 syncO"
### theory "BD_Security_Compositional.Composing_Security"
### 6.561s elapsed time, 18.195s cpu time, 6.301s GC time
Loading theory "BD_Security_Compositional.Composing_Security_Network" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.API_Network")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
  assumes "TS_Network istate validTrans srcOf tgtOf nodes comOf tgtNodeOf"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "comp"
  Proving monotonicity ...
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
locale Empty_TS_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
  assumes "Empty_TS_Network istate validTrans srcOf tgtOf comOf tgtNodeOf"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_Empty_TS_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
  assumes
    "BD_Security_Empty_TS_Network istate validTrans srcOf tgtOf comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_Singleton_Source_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
  assumes
    "BD_Security_Singleton_Source_Network istate validTrans srcOf tgtOf
      comOf tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network_Change_Nodes
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and nodes' :: "'a set"
  assumes
    "BD_Security_TS_Network_Change_Nodes istate validTrans srcOf tgtOf nodes
      comOf tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source nodes'"
locale BD_Security_TS_Network_New_Node_NoSource
  fixes validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
    and istate :: "'nodeid => 'state"
    and nodes :: "'nodeid set"
    and f :: "'nodeid => 'trans => 'val"
    and g :: "'nodeid => 'trans => 'obs"
    and NID :: "'nodeid"
  assumes
    "BD_Security_TS_Network_New_Node_NoSource validTrans srcOf tgtOf comOf
      tgtNodeOf sync \<phi> \<gamma> comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source istate nodes f g NID"
See theory exports
### theory "Draft.System_Specification"
### 12.884s elapsed time, 28.972s cpu time, 5.673s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.040s elapsed time, 0.080s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER")
### theory "Draft.Safety_Properties"
### 0.117s elapsed time, 0.237s cpu time, 0.000s GC time
Loading theory "Draft.Post_Intro" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER" via "Draft.Post_Observation_Setup_ISSUER")
Loading theory "Draft.Post_Observation_Setup_RECEIVER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_Post_RECEIVER" via "Draft.Independent_Post_Observation_Setup_RECEIVER")
locale Fixed_UIDs
  fixes UIDs :: "userID set"
locale Fixed_PID
  fixes PID :: "postID"
locale Fixed_AID
  fixes AID :: "apiID"
### theory "Draft.Post_Intro"
### 0.023s elapsed time, 0.068s cpu time, 0.000s GC time
Loading theory "Draft.Post_Observation_Setup_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_Post_Observation_Setup_ISSUER")
locale ObservationSetup_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
locale Fixed_UIDs
  fixes UIDs :: "userID set"
locale Fixed_PID
  fixes PID :: "postID"
locale ObservationSetup_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Observation_Setup_RECEIVER"
### 0.500s elapsed time, 1.614s cpu time, 0.151s GC time
Loading theory "Draft.Independent_Post_Observation_Setup_RECEIVER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_Post_RECEIVER")
Loading theory "Draft.Post_Unwinding_Helper_RECEIVER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_Post_RECEIVER" via "Draft.Independent_Post_Value_Setup_RECEIVER")
Found termination order: "{}"
locale Strong_ObservationSetup_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
locale Receiver_State_Equivalence_Up_To_PID
  fixes PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Unwinding_Helper_RECEIVER"
### 0.311s elapsed time, 1.227s cpu time, 0.143s GC time
Found termination order: "{}"
### theory "Draft.Post_Observation_Setup_ISSUER"
### 0.844s elapsed time, 2.955s cpu time, 0.294s GC time
Loading theory "Draft.Independent_Post_Observation_Setup_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER")
Loading theory "Draft.Post_Unwinding_Helper_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER" via "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER")
locale Strong_ObservationSetup_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
locale Issuer_State_Equivalence_Up_To_PID
  fixes PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Post_Observation_Setup_RECEIVER"
### 0.640s elapsed time, 2.491s cpu time, 0.213s GC time
Loading theory "Draft.Independent_Post_Value_Setup_RECEIVER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_Post_RECEIVER")
### theory "Draft.Post_Unwinding_Helper_ISSUER"
### 0.345s elapsed time, 1.357s cpu time, 0.122s GC time
Found termination order: "{}"
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Post_Observation_Setup_ISSUER"
### 0.877s elapsed time, 3.083s cpu time, 0.266s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER")
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Post_Value_Setup_RECEIVER"
### 1.532s elapsed time, 5.160s cpu time, 0.424s GC time
Loading theory "Draft.Independent_Post_RECEIVER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network")
Found termination order: "{}"
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Post_RECEIVER"
### 0.597s elapsed time, 1.987s cpu time, 0.160s GC time
locale BD_Security_TS_Cut_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and nodesLeft :: "'a set"
    and nodesRight :: "'a set"
  assumes
    "BD_Security_TS_Cut_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source nodesLeft nodesRight"
Found termination order: "{}"
### theory "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER"
### 3.118s elapsed time, 9.476s cpu time, 0.724s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_ISSUER" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network")
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
locale BD_Security_TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Proofs for inductive predicate(s) "BC", "BO"
  Proving monotonicity ...
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Independent_DYNAMIC_Post_ISSUER"
### 0.812s elapsed time, 1.711s cpu time, 0.192s GC time
locale BD_Security_TS_Network_MergeSec
  fixes \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'a"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'sec list => 'sec list => bool"
    and comOfV :: "'nodeid => 'sec => com"
    and tgtNodeOfV :: "'nodeid => 'sec => 'nodeid"
    and syncV :: "'nodeid => 'sec => 'nodeid => 'sec => bool"
    and comOfO :: "'nodeid => 'a => com"
    and tgtNodeOfO :: "'nodeid => 'a => 'nodeid"
    and syncO :: "'nodeid => 'a => 'nodeid => 'a => bool"
    and source :: "'nodeid"
    and istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'sec"
    and mergeSec :: "'nodeid => 'sec => 'nodeid => 'sec => 'msec"
  assumes
    "BD_Security_TS_Network_MergeSec \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source istate validTrans srcOf tgtOf nodes
      comOf tgtNodeOf sync \<phi> f"
Proofs for inductive predicate(s) "compSec"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Proofs for inductive predicate(s) "srcSyncV"
  Proving monotonicity ...
Proofs for inductive predicate(s) "binSyncV"
  Proving monotonicity ...
locale BD_Security_TS_Network_Preserve_Source_Security
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
  assumes
    "BD_Security_TS_Network_Preserve_Source_Security istate validTrans srcOf
      tgtOf nodes comOf tgtNodeOf sync \<phi> f \<gamma> g T B comOfV
      tgtNodeOfV syncV comOfO tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network_getTgtV
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and getTgtV :: "'d => 'd"
  assumes
    "BD_Security_TS_Network_getTgtV istate validTrans srcOf tgtOf nodes
      comOf tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source getTgtV"
locale BD_Security_TS_Network_Preserve_Source_Security_getTgtV
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and getTgtV :: "'d => 'd"
  assumes
    "BD_Security_TS_Network_Preserve_Source_Security_getTgtV istate
      validTrans srcOf tgtOf nodes comOf tgtNodeOf sync \<phi> f \<gamma> g
      T B comOfV tgtNodeOfV syncV comOfO tgtNodeOfO syncO source getTgtV"
locale BD_Security_TS_Network'
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network' istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g source"
Found termination order: "size_list size <*mlex*> {}"
### theory "BD_Security_Compositional.Composing_Security_Network"
### 20.101s elapsed time, 43.436s cpu time, 3.938s GC time
Loading theory "Draft.API_Network" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates" via "Draft.Independent_DYNAMIC_Post_Network")
locale Network
  fixes AIDs :: "apiID set"
  assumes "Network AIDs"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.API_Network"
### 2.411s elapsed time, 3.504s cpu time, 0.236s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_Network" (required by "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates")
locale Post_Network
  fixes AIDs :: "apiID set"
    and UIDs :: "apiID => userID set"
    and AID :: "apiID"
    and PID :: "postID"
  assumes "Post_Network AIDs AID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_DYNAMIC_Post_Network"
### 2.947s elapsed time, 3.196s cpu time, 0.290s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates"
val templateLemmas =
   [("Independent_DYNAMIC_Post_Network.value_cases",
     "[| !!pst. ?v = Inl (Post.PVal pst) ==> ?thesis;
         !!aid pst. ?v = Inl (Post.PValS aid pst) ==> ?thesis;
         !!ov. ?v = Inl (Post.OVal ov) ==> ?thesis;
         !!pst. ?v = Inr (Post_RECEIVER.PValR pst) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Independent_DYNAMIC_Post_NetworkMoreTemplates"
### 0.778s elapsed time, 1.042s cpu time, 0.125s GC time
val it = (): unit
