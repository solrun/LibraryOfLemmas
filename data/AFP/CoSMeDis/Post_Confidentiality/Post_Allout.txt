Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.123s elapsed time, 0.512s cpu time, 0.027s GC time
Loading theory "BD_Security_Compositional.Trivial_Security" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_Network" via "Draft.API_Network" via "BD_Security_Compositional.Composing_Security_Network")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "HOL-Library.Function_Algebras"
### 0.155s elapsed time, 0.642s cpu time, 0.027s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "BD_Security_Compositional.Trivial_Security"
### 0.065s elapsed time, 0.257s cpu time, 0.000s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap" via "Bounded_Deducibility_Security.Trivia")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Fresh_Identifiers.Fresh"
### 0.232s elapsed time, 0.948s cpu time, 0.027s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Nat_Bijection"
### 0.384s elapsed time, 1.543s cpu time, 0.111s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.238s elapsed time, 0.938s cpu time, 0.084s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
### theory "Fresh_Identifiers.Fresh_String"
### 0.217s elapsed time, 0.848s cpu time, 0.084s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs")
consts
  prefixes :: "'a list => 'a list list"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  suffixes :: "'a list => 'a list list"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.941s elapsed time, 3.582s cpu time, 0.751s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.873s elapsed time, 3.324s cpu time, 0.680s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.435s elapsed time, 5.534s cpu time, 0.921s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap")
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.462s elapsed time, 1.824s cpu time, 0.133s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
Found termination order: "size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.224s elapsed time, 0.880s cpu time, 0.067s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
### theory "HOL-Library.Tree"
### 1.973s elapsed time, 7.630s cpu time, 1.081s GC time
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
Loading theory "Draft.Prelim" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Loading theory "Draft.Templates" (required by "Draft.Post_AllMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.071s elapsed time, 0.287s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Post_AllMoreTemplates")
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.446s elapsed time, 1.565s cpu time, 0.145s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.693s elapsed time, 2.547s cpu time, 0.226s GC time
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.624s elapsed time, 2.255s cpu time, 0.233s GC time
Loading theory "BD_Security_Compositional.Composing_Security" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2")
Loading theory "BD_Security_Compositional.Independent_Secrets" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network")
locale Abstract_BD_Security_Two_Secrets
  fixes validSystemTrace :: "'traces => bool"
    and V1 :: "'traces => 'values1"
    and O1 :: "'traces => 'observations1"
    and B1 :: "'values1 => 'values1 => bool"
    and TT1 :: "'traces => bool"
    and V2 :: "'traces => 'values2"
    and O2 :: "'traces => 'observations2"
    and B2 :: "'values2 => 'values2 => bool"
    and TT2 :: "'traces => bool"
    and O :: "'traces => 'observations"
  assumes
    "Abstract_BD_Security_Two_Secrets validSystemTrace V1 O1 B1 V2 O2 B2 TT2
      O"
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
locale Abstract_BD_Security_Comp
  fixes validSystemTraces1 :: "'traces1 => bool"
    and V1 :: "'traces1 => 'values1"
    and O1 :: "'traces1 => 'observations1"
    and TT1 :: "'traces1 => bool"
    and B1 :: "'values1 => 'values1 => bool"
    and validSystemTraces2 :: "'traces2 => bool"
    and V2 :: "'traces2 => 'values2"
    and O2 :: "'traces2 => 'observations2"
    and TT2 :: "'traces2 => bool"
    and B2 :: "'values2 => 'values2 => bool"
    and validSystemTraces :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and TT :: "'traces => bool"
    and B :: "'values => 'values => bool"
    and comp :: "'traces1 => 'traces2 => 'traces => bool"
    and compO :: "'observations1 => 'observations2 => 'observations => bool"
    and compV :: "'values1 => 'values2 => 'values => bool"
  assumes
    "Abstract_BD_Security_Comp validSystemTraces1 V1 O1 TT1 B1
      validSystemTraces2 V2 O2 TT2 B2 validSystemTraces V O TT B comp compO
      compV"
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
locale BD_Security_TS_Two_Secrets
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi>1 :: "'trans => bool"
    and f1 :: "'trans => 'val1"
    and \<gamma>1 :: "'trans => bool"
    and g1 :: "'trans => 'obs1"
    and T1 :: "'trans => bool"
    and B1 :: "'val1 list => 'val1 list => bool"
    and \<phi>2 :: "'trans => bool"
    and f2 :: "'trans => 'val2"
    and \<gamma>2 :: "'trans => bool"
    and g2 :: "'trans => 'obs2"
    and T2 :: "'trans => bool"
    and B2 :: "'val2 list => 'val2 list => bool"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
  assumes
    "BD_Security_TS_Two_Secrets istate validTrans srcOf tgtOf \<phi>1 f1
      \<gamma>1 g1 \<phi>2 f2 \<gamma>2 g2 T2 \<gamma> g"
### theory "BD_Security_Compositional.Independent_Secrets"
### 0.380s elapsed time, 1.490s cpu time, 0.167s GC time
Loading theory "BD_Security_Compositional.Transporting_Security" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_Network" via "Draft.API_Network" via "BD_Security_Compositional.Composing_Security_Network")
Found termination order: "{}"
locale Abstract_BD_Security_Trans
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
    and validSystemTrace' :: "'traces' => bool"
    and V' :: "'traces' => 'values'"
    and O' :: "'traces' => 'observations'"
    and B' :: "'values' => 'values' => bool"
    and TT' :: "'traces' => bool"
    and translateTrace :: "'traces => 'traces'"
    and translateObs :: "'observations => 'observations'"
    and translateVal :: "'values => 'values'"
  assumes
    "Abstract_BD_Security_Trans validSystemTrace V O B TT validSystemTrace'
      V' O' B' TT' translateTrace translateObs translateVal"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 1.320s elapsed time, 4.977s cpu time, 0.513s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_TS_Trans
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'val"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'val list => 'val list => bool"
    and istate' :: "'state'"
    and validTrans' :: "'trans' => bool"
    and srcOf' :: "'trans' => 'state'"
    and tgtOf' :: "'trans' => 'state'"
    and \<phi>' :: "'trans' => bool"
    and f' :: "'trans' => 'val'"
    and \<gamma>' :: "'trans' => bool"
    and g' :: "'trans' => 'obs'"
    and T' :: "'trans' => bool"
    and B' :: "'val' list => 'val' list => bool"
    and translateState :: "'state => 'state'"
    and translateTrans :: "'trans => 'trans'"
    and translateObs :: "'obs => 'obs' option"
    and translateVal :: "'val => 'val' option"
  assumes
    "BD_Security_TS_Trans istate validTrans srcOf tgtOf \<phi> f \<gamma> g
      T B istate' validTrans' srcOf' tgtOf' \<phi>' f' \<gamma>' g' T' B'
      translateState translateTrans translateObs translateVal"
locale BD_Security_TS_Weaken_Observations
  fixes istate :: "'a"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'a"
    and tgtOf :: "'trans => 'a"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'b"
    and \<gamma> :: "'trans => bool"
    and T :: "'trans => bool"
    and B :: "'b list => 'b list => bool"
    and g :: "'trans => 'obs"
    and translateObs :: "'obs => 'obs' option"
### theory "BD_Security_Compositional.Transporting_Security"
### 0.579s elapsed time, 2.276s cpu time, 0.229s GC time
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "{}"
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.879s elapsed time, 3.056s cpu time, 1.419s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Bounded_Deducibility_Security.Compositional_Reasoning")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.424s elapsed time, 1.288s cpu time, 0.115s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.852s elapsed time, 2.738s cpu time, 1.488s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 4.560s elapsed time, 14.898s cpu time, 3.771s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
locale BD_Security_TS_Comp
  fixes istate1 :: "'state1"
    and validTrans1 :: "'trans1 => bool"
    and srcOf1 :: "'trans1 => 'state1"
    and tgtOf1 :: "'trans1 => 'state1"
    and \<phi>1 :: "'trans1 => bool"
    and f1 :: "'trans1 => 'value1"
    and \<gamma>1 :: "'trans1 => bool"
    and g1 :: "'trans1 => 'obs1"
    and T1 :: "'trans1 => bool"
    and B1 :: "'value1 list => 'value1 list => bool"
    and istate2 :: "'state2"
    and validTrans2 :: "'trans2 => bool"
    and srcOf2 :: "'trans2 => 'state2"
    and tgtOf2 :: "'trans2 => 'state2"
    and \<phi>2 :: "'trans2 => bool"
    and f2 :: "'trans2 => 'value2"
    and \<gamma>2 :: "'trans2 => bool"
    and g2 :: "'trans2 => 'obs2"
    and T2 :: "'trans2 => bool"
    and B2 :: "'value2 list => 'value2 list => bool"
    and isCom1 :: "'trans1 => bool"
    and isCom2 :: "'trans2 => bool"
    and sync :: "'trans1 => 'trans2 => bool"
    and isComV1 :: "'value1 => bool"
    and isComV2 :: "'value2 => bool"
    and syncV :: "'value1 => 'value2 => bool"
    and isComO1 :: "'obs1 => bool"
    and isComO2 :: "'obs2 => bool"
    and syncO :: "'obs1 => 'obs2 => bool"
  assumes
    "BD_Security_TS_Comp istate1 validTrans1 srcOf1 tgtOf1 \<phi>1 f1
      \<gamma>1 g1 T1 B1 istate2 validTrans2 srcOf2 tgtOf2 \<phi>2 f2
      \<gamma>2 g2 T2 B2 isCom1 isCom2 sync isComV1 isComV2 syncV isComO1
      isComO2 syncO"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "compV"
  Proving monotonicity ...
Proofs for inductive predicate(s) "compO"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ccomp"
  Proving monotonicity ...
locale BD_Security_TS_Comp
  fixes istate1 :: "'state1"
    and validTrans1 :: "'trans1 => bool"
    and srcOf1 :: "'trans1 => 'state1"
    and tgtOf1 :: "'trans1 => 'state1"
    and \<phi>1 :: "'trans1 => bool"
    and f1 :: "'trans1 => 'value1"
    and \<gamma>1 :: "'trans1 => bool"
    and g1 :: "'trans1 => 'obs1"
    and T1 :: "'trans1 => bool"
    and B1 :: "'value1 list => 'value1 list => bool"
    and istate2 :: "'state2"
    and validTrans2 :: "'trans2 => bool"
    and srcOf2 :: "'trans2 => 'state2"
    and tgtOf2 :: "'trans2 => 'state2"
    and \<phi>2 :: "'trans2 => bool"
    and f2 :: "'trans2 => 'value2"
    and \<gamma>2 :: "'trans2 => bool"
    and g2 :: "'trans2 => 'obs2"
    and T2 :: "'trans2 => bool"
    and B2 :: "'value2 list => 'value2 list => bool"
    and isCom1 :: "'trans1 => bool"
    and isCom2 :: "'trans2 => bool"
    and sync :: "'trans1 => 'trans2 => bool"
    and isComV1 :: "'value1 => bool"
    and isComV2 :: "'value2 => bool"
    and syncV :: "'value1 => 'value2 => bool"
    and isComO1 :: "'obs1 => bool"
    and isComO2 :: "'obs2 => bool"
    and syncO :: "'obs1 => 'obs2 => bool"
  assumes
    "BD_Security_TS_Comp istate1 validTrans1 srcOf1 tgtOf1 \<phi>1 f1
      \<gamma>1 g1 T1 B1 istate2 validTrans2 srcOf2 tgtOf2 \<phi>2 f2
      \<gamma>2 g2 T2 B2 isCom1 isCom2 sync isComV1 isComV2 syncV isComO1
      isComO2 syncO"
Found termination order: "{}"
locale BD_Security_TS_Comp
  fixes istate1 :: "'state1"
    and validTrans1 :: "'trans1 => bool"
    and srcOf1 :: "'trans1 => 'state1"
    and tgtOf1 :: "'trans1 => 'state1"
    and \<phi>1 :: "'trans1 => bool"
    and f1 :: "'trans1 => 'value1"
    and \<gamma>1 :: "'trans1 => bool"
    and g1 :: "'trans1 => 'obs1"
    and T1 :: "'trans1 => bool"
    and B1 :: "'value1 list => 'value1 list => bool"
    and istate2 :: "'state2"
    and validTrans2 :: "'trans2 => bool"
    and srcOf2 :: "'trans2 => 'state2"
    and tgtOf2 :: "'trans2 => 'state2"
    and \<phi>2 :: "'trans2 => bool"
    and f2 :: "'trans2 => 'value2"
    and \<gamma>2 :: "'trans2 => bool"
    and g2 :: "'trans2 => 'obs2"
    and T2 :: "'trans2 => bool"
    and B2 :: "'value2 list => 'value2 list => bool"
    and isCom1 :: "'trans1 => bool"
    and isCom2 :: "'trans2 => bool"
    and sync :: "'trans1 => 'trans2 => bool"
    and isComV1 :: "'value1 => bool"
    and isComV2 :: "'value2 => bool"
    and syncV :: "'value1 => 'value2 => bool"
    and isComO1 :: "'obs1 => bool"
    and isComO2 :: "'obs2 => bool"
    and syncO :: "'obs1 => 'obs2 => bool"
  assumes
    "BD_Security_TS_Comp istate1 validTrans1 srcOf1 tgtOf1 \<phi>1 f1
      \<gamma>1 g1 T1 B1 istate2 validTrans2 srcOf2 tgtOf2 \<phi>2 f2
      \<gamma>2 g2 T2 B2 isCom1 isCom2 sync isComV1 isComV2 syncV isComO1
      isComO2 syncO"
### theory "BD_Security_Compositional.Composing_Security"
### 5.943s elapsed time, 16.373s cpu time, 4.071s GC time
Loading theory "BD_Security_Compositional.Composing_Security_Network" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_Network" via "Draft.API_Network")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
  assumes "TS_Network istate validTrans srcOf tgtOf nodes comOf tgtNodeOf"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "comp"
  Proving monotonicity ...
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "{}"
locale Empty_TS_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
  assumes "Empty_TS_Network istate validTrans srcOf tgtOf comOf tgtNodeOf"
Found termination order: "{}"
locale BD_Security_TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_Empty_TS_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
  assumes
    "BD_Security_Empty_TS_Network istate validTrans srcOf tgtOf comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_Singleton_Source_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
  assumes
    "BD_Security_Singleton_Source_Network istate validTrans srcOf tgtOf
      comOf tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network_Change_Nodes
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and nodes' :: "'a set"
  assumes
    "BD_Security_TS_Network_Change_Nodes istate validTrans srcOf tgtOf nodes
      comOf tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source nodes'"
locale BD_Security_TS_Network_New_Node_NoSource
  fixes validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
    and istate :: "'nodeid => 'state"
    and nodes :: "'nodeid set"
    and f :: "'nodeid => 'trans => 'val"
    and g :: "'nodeid => 'trans => 'obs"
    and NID :: "'nodeid"
  assumes
    "BD_Security_TS_Network_New_Node_NoSource validTrans srcOf tgtOf comOf
      tgtNodeOf sync \<phi> \<gamma> comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source istate nodes f g NID"
See theory exports
### theory "Draft.System_Specification"
### 11.852s elapsed time, 25.570s cpu time, 2.575s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER" via "Draft.Post_Intro" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.042s elapsed time, 0.082s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER" via "Draft.Post_Intro")
### theory "Draft.Safety_Properties"
### 0.118s elapsed time, 0.234s cpu time, 0.000s GC time
Loading theory "Draft.Post_Intro" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Observation_Setup_ISSUER")
Loading theory "Draft.Post_Observation_Setup_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_RECEIVER")
### theory "Draft.Post_Intro"
### 0.024s elapsed time, 0.068s cpu time, 0.000s GC time
Loading theory "Draft.Post_Observation_Setup_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER")
locale Fixed_UIDs
  fixes UIDs :: "userID set"
locale Fixed_PID
  fixes PID :: "postID"
locale Fixed_AID
  fixes AID :: "apiID"
locale ObservationSetup_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
locale Fixed_UIDs
  fixes UIDs :: "userID set"
locale Fixed_PID
  fixes PID :: "postID"
locale ObservationSetup_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Observation_Setup_RECEIVER"
### 0.534s elapsed time, 1.713s cpu time, 0.195s GC time
Loading theory "Draft.Independent_Post_Observation_Setup_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_Post_RECEIVER")
Loading theory "Draft.Post_Unwinding_Helper_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_RECEIVER" via "Draft.Post_Value_Setup_RECEIVER")
Found termination order: "{}"
locale Receiver_State_Equivalence_Up_To_PID
  fixes PID :: "postID"
    and AID :: "apiID"
locale Strong_ObservationSetup_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Unwinding_Helper_RECEIVER"
### 0.270s elapsed time, 1.054s cpu time, 0.098s GC time
Loading theory "Draft.Post_Value_Setup_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_RECEIVER")
### theory "Draft.Post_Observation_Setup_ISSUER"
### 0.815s elapsed time, 2.832s cpu time, 0.293s GC time
Loading theory "Draft.Independent_Post_Observation_Setup_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER")
Found termination order: "{}"
locale Strong_ObservationSetup_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Post_Observation_Setup_RECEIVER"
### 0.681s elapsed time, 2.669s cpu time, 0.262s GC time
Loading theory "Draft.Post_Unwinding_Helper_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER" via "Draft.Post_Value_Setup_ISSUER")
Found termination order: "{}"
locale Issuer_State_Equivalence_Up_To_PID
  fixes PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Unwinding_Helper_ISSUER"
### 0.311s elapsed time, 1.225s cpu time, 0.089s GC time
Loading theory "Draft.DYNAMIC_Post_Value_Setup_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.DYNAMIC_Post_COMPOSE2" via "Draft.DYNAMIC_Post_ISSUER")
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
### theory "Draft.Independent_Post_Observation_Setup_ISSUER"
### 0.997s elapsed time, 3.902s cpu time, 0.362s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_DYNAMIC_Post_ISSUER")
Found termination order: "{}"
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Value_Setup_RECEIVER"
### 1.894s elapsed time, 7.427s cpu time, 0.633s GC time
Loading theory "Draft.Independent_Post_Value_Setup_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network" via "Draft.Independent_DYNAMIC_Post_Network" via "Draft.Independent_Post_RECEIVER")
Found termination order: "{}"
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Cut_Network
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and nodesLeft :: "'a set"
    and nodesRight :: "'a set"
  assumes
    "BD_Security_TS_Cut_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source nodesLeft nodesRight"
Found termination order: "{}"
### theory "Draft.Independent_Post_Value_Setup_RECEIVER"
### 2.048s elapsed time, 7.967s cpu time, 0.742s GC time
Loading theory "Draft.Independent_Post_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network" via "Draft.Independent_DYNAMIC_Post_Network")
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
### theory "Draft.Independent_Post_RECEIVER"
### 0.660s elapsed time, 2.554s cpu time, 0.214s GC time
Loading theory "Draft.Post_Value_Setup_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2" via "Draft.Post_ISSUER")
locale Post_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
locale BD_Security_TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Found termination order: "{}"
### theory "Draft.DYNAMIC_Post_Value_Setup_ISSUER"
### 4.904s elapsed time, 19.062s cpu time, 1.734s GC time
Loading theory "Draft.DYNAMIC_Post_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.DYNAMIC_Post_COMPOSE2")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_DYNAMIC_Post_Value_Setup_ISSUER"
### 5.096s elapsed time, 19.771s cpu time, 1.889s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network" via "Draft.Independent_DYNAMIC_Post_Network")
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Proofs for inductive predicate(s) "BC", "BO"
  Proving monotonicity ...
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
Found termination order: "{}"
Proofs for inductive predicate(s) "BC", "BO"
  Proving monotonicity ...
### theory "Draft.DYNAMIC_Post_ISSUER"
### 2.246s elapsed time, 8.516s cpu time, 4.503s GC time
Loading theory "Draft.Post_RECEIVER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
locale BD_Security_TS_Network_MergeSec
  fixes \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'a"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'sec list => 'sec list => bool"
    and comOfV :: "'nodeid => 'sec => com"
    and tgtNodeOfV :: "'nodeid => 'sec => 'nodeid"
    and syncV :: "'nodeid => 'sec => 'nodeid => 'sec => bool"
    and comOfO :: "'nodeid => 'a => com"
    and tgtNodeOfO :: "'nodeid => 'a => 'nodeid"
    and syncO :: "'nodeid => 'a => 'nodeid => 'a => bool"
    and source :: "'nodeid"
    and istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'sec"
    and mergeSec :: "'nodeid => 'sec => 'nodeid => 'sec => 'msec"
  assumes
    "BD_Security_TS_Network_MergeSec \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source istate validTrans srcOf tgtOf nodes
      comOf tgtNodeOf sync \<phi> f"
### theory "Draft.Independent_DYNAMIC_Post_ISSUER"
### 2.147s elapsed time, 8.188s cpu time, 4.341s GC time
Proofs for inductive predicate(s) "compSec"
  Proving monotonicity ...
Found termination order: "{}"
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_RECEIVER"
### 0.972s elapsed time, 3.842s cpu time, 0.262s GC time
Loading theory "Draft.DYNAMIC_Post_COMPOSE2" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All")
locale BD_Security_TS_Network
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and comOfV :: "'nodeid => 'val => com"
    and tgtNodeOfV :: "'nodeid => 'val => 'nodeid"
    and syncV :: "'nodeid => 'val => 'nodeid => 'val => bool"
    and comOfO :: "'nodeid => 'obs => com"
    and tgtNodeOfO :: "'nodeid => 'obs => 'nodeid"
    and syncO :: "'nodeid => 'obs => 'nodeid => 'obs => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV comOfO
      tgtNodeOfO syncO source"
Proofs for inductive predicate(s) "srcSyncV"
  Proving monotonicity ...
Proofs for inductive predicate(s) "binSyncV"
  Proving monotonicity ...
Found termination order: "{}"
### theory "Draft.Post_Value_Setup_ISSUER"
### 4.975s elapsed time, 18.585s cpu time, 5.408s GC time
Loading theory "Draft.Post_ISSUER" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_COMPOSE2")
locale Post_ISSUER
  fixes UIDs :: "userID set"
    and PID :: "postID"
locale BD_Security_TS_Network_Preserve_Source_Security
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
  assumes
    "BD_Security_TS_Network_Preserve_Source_Security istate validTrans srcOf
      tgtOf nodes comOf tgtNodeOf sync \<phi> f \<gamma> g T B comOfV
      tgtNodeOfV syncV comOfO tgtNodeOfO syncO source"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Post_ISSUER"
### 0.996s elapsed time, 3.038s cpu time, 0.367s GC time
Loading theory "Draft.Post_COMPOSE2" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All")
locale Post_COMPOSE2
  fixes UIDs :: "userID set"
    and UIDs2 :: "userID set"
    and AID1 :: "apiID"
    and PID :: "postID"
    and AID2 :: "apiID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network_getTgtV
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and getTgtV :: "'d => 'd"
  assumes
    "BD_Security_TS_Network_getTgtV istate validTrans srcOf tgtOf nodes
      comOf tgtNodeOf sync \<phi> f \<gamma> g comOfV tgtNodeOfV syncV
      comOfO tgtNodeOfO syncO source getTgtV"
Found termination order: "{}"
locale Post_COMPOSE2
  fixes UIDs :: "userID set"
    and UIDs2 :: "userID set"
    and AID1 :: "apiID"
    and PID :: "postID"
    and AID2 :: "apiID"
locale BD_Security_TS_Network_Preserve_Source_Security_getTgtV
  fixes istate :: "'a => 'b"
    and validTrans :: "'a => 'c => bool"
    and srcOf :: "'a => 'c => 'b"
    and tgtOf :: "'a => 'c => 'b"
    and nodes :: "'a set"
    and comOf :: "'a => 'c => com"
    and tgtNodeOf :: "'a => 'c => 'a"
    and sync :: "'a => 'c => 'a => 'c => bool"
    and \<phi> :: "'a => 'c => bool"
    and f :: "'a => 'c => 'd"
    and \<gamma> :: "'a => 'c => bool"
    and g :: "'a => 'c => 'e"
    and T :: "'a => 'c => bool"
    and B :: "'a => 'd list => 'd list => bool"
    and comOfV :: "'a => 'd => com"
    and tgtNodeOfV :: "'a => 'd => 'a"
    and syncV :: "'a => 'd => 'a => 'd => bool"
    and comOfO :: "'a => 'e => com"
    and tgtNodeOfO :: "'a => 'e => 'a"
    and syncO :: "'a => 'e => 'a => 'e => bool"
    and source :: "'a"
    and getTgtV :: "'d => 'd"
  assumes
    "BD_Security_TS_Network_Preserve_Source_Security_getTgtV istate
      validTrans srcOf tgtOf nodes comOf tgtNodeOf sync \<phi> f \<gamma> g
      T B comOfV tgtNodeOfV syncV comOfO tgtNodeOfO syncO source getTgtV"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale BD_Security_TS_Network'
  fixes istate :: "'nodeid => 'state"
    and validTrans :: "'nodeid => 'trans => bool"
    and srcOf :: "'nodeid => 'trans => 'state"
    and tgtOf :: "'nodeid => 'trans => 'state"
    and nodes :: "'nodeid set"
    and comOf :: "'nodeid => 'trans => com"
    and tgtNodeOf :: "'nodeid => 'trans => 'nodeid"
    and sync :: "'nodeid => 'trans => 'nodeid => 'trans => bool"
    and \<phi> :: "'nodeid => 'trans => bool"
    and f :: "'nodeid => 'trans => 'val"
    and \<gamma> :: "'nodeid => 'trans => bool"
    and g :: "'nodeid => 'trans => 'obs"
    and T :: "'nodeid => 'trans => bool"
    and B :: "'nodeid => 'val list => 'val list => bool"
    and source :: "'nodeid"
  assumes
    "BD_Security_TS_Network' istate validTrans srcOf tgtOf nodes comOf
      tgtNodeOf sync \<phi> f \<gamma> g source"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
### theory "BD_Security_Compositional.Composing_Security_Network"
### 25.479s elapsed time, 77.691s cpu time, 15.005s GC time
Loading theory "Draft.API_Network" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Post_Network")
locale Network
  fixes AIDs :: "apiID set"
  assumes "Network AIDs"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.API_Network"
### 21.976s elapsed time, 70.617s cpu time, 60.217s GC time
Loading theory "Draft.Independent_DYNAMIC_Post_Network" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All" via "Draft.Independent_Posts_Network")
Loading theory "Draft.DYNAMIC_Post_Network" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All")
locale Post_Network
  fixes AIDs :: "apiID set"
    and UIDs :: "apiID => userID set"
    and AID :: "apiID"
    and PID :: "postID"
  assumes "Post_Network AIDs AID"
locale Post_Network
  fixes AIDs :: "apiID set"
    and UIDs :: "apiID => userID set"
    and AID :: "apiID"
    and PID :: "postID"
  assumes "Post_Network AIDs AID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_DYNAMIC_Post_Network"
### 4.365s elapsed time, 17.297s cpu time, 0.742s GC time
Loading theory "Draft.Independent_Posts_Network" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All")
### theory "Draft.DYNAMIC_Post_Network"
### 4.416s elapsed time, 17.492s cpu time, 0.742s GC time
Loading theory "Draft.Post_Network" (required by "Draft.Post_AllMoreTemplates" via "Draft.Post_All")
locale Post_Network
  fixes AIDs :: "apiID set"
    and UIDs :: "apiID => userID set"
    and AID :: "apiID"
    and PID :: "postID"
  assumes "Post_Network AIDs AID"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale Post
  fixes UIDs :: "userID set"
    and PID :: "postID"
locale Post_RECEIVER
  fixes UIDs :: "userID set"
    and PID :: "postID"
    and AID :: "apiID"
### theory "Draft.Post_Network"
### 4.087s elapsed time, 16.146s cpu time, 0.983s GC time
locale Post_Network
  fixes AIDs :: "apiID set"
    and UIDs :: "apiID => userID set"
    and AID :: "apiID"
    and PID :: "postID"
  assumes "Post_Network AIDs AID"
Found termination order: "{}"
Found termination order: "{}"
locale Posts_Network
  fixes AIDs :: "apiID set"
    and UIDs :: "apiID => userID set"
    and AID1 :: "apiID"
    and AID2 :: "apiID"
    and PID1 :: "postID"
    and PID2 :: "postID"
  assumes "Posts_Network AIDs AID1 AID2"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Independent_Posts_Network"
### 15.616s elapsed time, 54.886s cpu time, 15.011s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
"comReceivePost"
  :: "apiID => password => postID => post => userID => vis => comActt"
Found termination order: "{}"
Found termination order: "{}"
locale Post_COMPOSE2
  fixes UIDs :: "userID set"
    and UIDs2 :: "userID set"
    and AID1 :: "apiID"
    and PID :: "postID"
    and AID2 :: "apiID"
### theory "Draft.DYNAMIC_Post_COMPOSE2"
### 88.290s elapsed time, 263.220s cpu time, 126.950s GC time
Found termination order: "{}"
"comReceivePost"
  :: "apiID => password => postID => post => userID => vis => comActt"
locale Post_COMPOSE2
  fixes UIDs :: "userID set"
    and UIDs2 :: "userID set"
    and AID1 :: "apiID"
    and PID :: "postID"
    and AID2 :: "apiID"
### theory "Draft.Post_COMPOSE2"
### 89.066s elapsed time, 260.760s cpu time, 126.672s GC time
Loading theory "Draft.Post_All" (required by "Draft.Post_AllMoreTemplates")
### theory "Draft.Post_All"
### 0.791s elapsed time, 0.851s cpu time, 0.049s GC time
Loading theory "Draft.Post_AllMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Post_AllMoreTemplates"
### 0.889s elapsed time, 1.201s cpu time, 0.140s GC time
val it = (): unit
