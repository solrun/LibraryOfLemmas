   [("Closed.reachable_closed_reachable_pnet",
     "?s : reachable (AWN_SOS.closed (pnet ?np ?n)) TT ==>
      ?s : reachable (pnet ?np ?n) TT",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, t_empty),
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0))
           ))),
    ("Closed.reachable_not_in_net_tree_ips",
     "[| ?s : reachable (AWN_SOS.closed (pnet ?np ?n)) TT;
         ?i ~: net_tree_ips ?n |]
      ==> netmap ?s ?i = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, t_empty),
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      template_var 1))),
                template_hole 6))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 0),
         template_hole 0))),
    ("Closed.complete_net_reachable_is_subnet",
     "?st
      : reachable (AWN_SOS.closed (pnet ?np (?p1.0 \<parallel> ?p2.0)))
         ?I ==>
      EX s t. ?st = SubnetS s t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, t_empty),
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 1)))),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Closed.complete_net_preserves_subnets",
     "(SubnetS ?s ?t, ?a, ?st')
      : cnet_sos
         (pnet_sos (automaton.trans (pnet ?np ?p1.0))
           (automaton.trans (pnet ?np ?p2.0))) ==>
      EX s' t'. ?st' = SubnetS s' t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 2),
                        template_var 1))),
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_var 0)))))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Closed.closed_pnet_aodv_init",
     "[| ?s : init (AWN_SOS.closed (pnet ?np ?n)); ?i : net_tree_ips ?n |]
      ==> the (netmap ?s ?i) : init (?np ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, t_empty),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)))
           ))),
    ("Closed.closed_imp_pnet_trans",
     "(?s, ?a, ?s') : automaton.trans (AWN_SOS.closed (pnet ?np ?n)) ==>
      EX a'. (?s, a', ?s') : automaton.trans (pnet ?np ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, t_empty),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Closed.closed_subnet_net_state",
     "[| ?st
         : reachable (AWN_SOS.closed (pnet ?np (?p1.0 \<parallel> ?p2.0)))
            TT;
         !!s t. ?st = SubnetS s t ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, t_empty),
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_var 1)))),
                template_hole 3))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Closed.closed_node_net_state",
     "[| ?st
         : reachable
            (AWN_SOS.closed (pnet ?np \<langle>?ii; ?R\<^sub>i\<rangle>))
            TT;
         !!\<xi> p q R. ?st = NodeS ?ii ((\<xi>, p), q) R ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, t_empty),
                    template_app
                     (template_app (template_hole 10, template_var 3),
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_var 1)))),
                template_hole 8))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Closed.closed_reachable_par_subnet_induct",
     "[| SubnetS ?s ?t
         : reachable (AWN_SOS.closed (pnet ?np (?p1.0 \<parallel> ?p2.0)))
            ?I;
         !!s t.
            SubnetS s t
            : init (AWN_SOS.closed (pnet ?np (?p1.0 \<parallel> ?p2.0))) ==>
            ?P s t;
         !!s t s' t' a.
            [| SubnetS s t
               : reachable
                  (AWN_SOS.closed (pnet ?np (?p1.0 \<parallel> ?p2.0))) ?I;
               ?P s t;
               (SubnetS s t, a, SubnetS s' t')
               : automaton.trans
                  (AWN_SOS.closed (pnet ?np (?p1.0 \<parallel> ?p2.0)));
               ?I a |]
            ==> ?P s' t' |]
      ==> ?P ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, t_empty),
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_app
                       (template_app (template_hole 6, template_var 3),
                        template_var 2)))),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 6), template_var 5)
           )))]
