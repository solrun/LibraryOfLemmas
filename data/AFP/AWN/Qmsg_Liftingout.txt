Loading theory "Draft.TransitionSystems" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels" via "Draft.AWN_SOS")
Loading theory "Draft.Lib" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels" via "Draft.AWN_SOS" via "Draft.AWN")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Lib"
### 0.047s elapsed time, 0.224s cpu time, 0.000s GC time
Loading theory "Draft.AWN" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels" via "Draft.AWN_SOS")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.513s cpu time, 0.039s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class msg = type +
  fixes newpkt :: "nat * nat => 'a"
    and eq_newpkt :: "'a => bool"
  assumes "eq_newpkt_eq": "!!d i. eq_newpkt (newpkt (d, i))"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.TransitionSystems"
### 0.306s elapsed time, 1.227s cpu time, 0.113s GC time
Loading theory "Draft.Invariants" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_Invariants")
### theory "HOL-Library.Nat_Bijection"
### 0.333s elapsed time, 1.332s cpu time, 0.113s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.833s cpu time, 0.073s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
### theory "Draft.Invariants"
### 0.341s elapsed time, 1.336s cpu time, 0.175s GC time
Loading theory "Draft.OInvariants" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.OAWN_Invariants")
Proofs for inductive predicate(s) "oreachablep"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "Draft.OInvariants"
### 0.814s elapsed time, 3.048s cpu time, 0.864s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.168s elapsed time, 4.445s cpu time, 1.040s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.803s elapsed time, 2.492s cpu time, 0.286s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.159s elapsed time, 7.276s cpu time, 1.374s GC time
Loading theory "Draft.Templates" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.111s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Qmsg_LiftingMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.555s elapsed time, 1.162s cpu time, 0.126s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class tau = type +
  fixes tau :: "'a"
instantiation
  seq_action :: (type) tau
  tau_seq_action == tau :: 'a seq_action
instantiation
  node_action :: (type) tau
  tau_node_action == tau :: 'a node_action
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.AWN"
### 6.396s elapsed time, 13.389s cpu time, 2.066s GC time
Loading theory "Draft.AWN_Cterms" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels" via "Draft.Inv_Cterms" via "Draft.AWN_Labels")
Loading theory "Draft.AWN_SOS" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels")
Loading theory "Draft.OAWN_SOS" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting")
Proofs for inductive predicate(s) "microstep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "seqp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "oseqp_sosp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "parp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "oparp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "node_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ctermsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "onode_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "pnet_sosp"
  Proving monotonicity ...
### theory "Draft.AWN_Cterms"
### 2.592s elapsed time, 8.195s cpu time, 2.042s GC time
Loading theory "Draft.AWN_Labels" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels" via "Draft.Inv_Cterms")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  labelfrom ::
    "int => int => ('s, 'm, 'p, 'a) seqp => int * ('s, 'm, 'p, int) seqp"
Proofs for inductive predicate(s) "cnet_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "opnet_sosp"
  Proving monotonicity ...
### theory "Draft.AWN_SOS"
### 3.464s elapsed time, 10.846s cpu time, 2.280s GC time
instantiation
  label :: (ord) ord
  less_eq_label == less_eq :: 'a label => 'a label => bool
  less_label == less :: 'a label => 'a label => bool
Found termination order: "{}"
### theory "Draft.AWN_Labels"
### 1.050s elapsed time, 2.996s cpu time, 0.279s GC time
Loading theory "Draft.Inv_Cterms" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg" via "Draft.AWN_SOS_Labels")
Loading theory "Draft.AWN_Invariants" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
val simp_only = fn: thm list -> Proof.context -> int -> tactic
val shallow_simp = fn: Proof.context -> int -> tactic
val create_vcs = fn: Proof.context -> int -> tactic
val try_invs = fn: Proof.context -> int -> tactic
val try_final = fn: Proof.context -> int -> tactic
val each = fn: Proof.context -> int -> tactic
val simp_all = fn: Proof.context -> tactic
val intro_and_invs = fn: Proof.context -> int -> tactic
val process_vcs = fn: Proof.context -> 'a -> tactic
### theory "Draft.Inv_Cterms"
### 0.712s elapsed time, 2.142s cpu time, 0.168s GC time
Loading theory "Draft.AWN_SOS_Labels" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting" via "Draft.Qmsg")
Proofs for inductive predicate(s) "ocnet_sosp"
  Proving monotonicity ...
### theory "Draft.AWN_Invariants"
### 0.873s elapsed time, 2.626s cpu time, 0.212s GC time
### theory "Draft.AWN_SOS_Labels"
### 0.324s elapsed time, 0.829s cpu time, 0.076s GC time
Loading theory "Draft.Qmsg" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting")
### theory "Draft.OAWN_SOS"
### 4.861s elapsed time, 14.560s cpu time, 2.579s GC time
Loading theory "Draft.OAWN_Invariants" (required by "Draft.Qmsg_LiftingMoreTemplates" via "Draft.Qmsg_Lifting")
Found termination order: "{}"
### theory "Draft.Qmsg"
### 0.314s elapsed time, 0.651s cpu time, 0.071s GC time
### theory "Draft.OAWN_Invariants"
### 0.699s elapsed time, 0.895s cpu time, 0.094s GC time
Loading theory "Draft.Qmsg_Lifting" (required by "Draft.Qmsg_LiftingMoreTemplates")
### theory "Draft.Qmsg_Lifting"
### 0.260s elapsed time, 0.297s cpu time, 0.054s GC time
Loading theory "Draft.Qmsg_LiftingMoreTemplates"
val templateLemmas =
   [("Qmsg_Lifting.qmsg_no_change_on_send_or_receive",
     "[| ((?\<sigma>, ?s), ?a, ?\<sigma>', ?s')
         : oparp_sos ?i (oseqp_sos ?\<Gamma> ?i)
            (seqp_sos \<Gamma>\<^sub>Q\<^sub>M\<^sub>S\<^sub>G);
         ?a ~= \<tau> |]
      ==> ?\<sigma>' ?i = ?\<sigma> ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 2)))),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 1)),
                template_app (template_hole 5, template_hole 4)))
            ),
        template_negation
         (template_equation (template_var 4, template_hole 1))],
       template_equation
        (template_app (template_var 3, template_var 1),
         template_app (template_var 6, template_var 1)))),
    ("Qmsg_Lifting.oseq_no_change_on_send",
     "((?\<sigma>, ?s), ?a, ?\<sigma>', ?s') : oseqp_sos ?\<Gamma> ?i ==>
      case ?a of receive ma => True | \<tau>\<^sub>s => True
      | _ => ?\<sigma>' ?i = ?\<sigma> ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2)))),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, t_empty),
                           t_empty),
                         t_empty),
                       t_empty),
                     t_empty),
                   t_empty),
                 t_empty),
               template_hole 0),
             template_var 4)
           ))),
    ("Qmsg_Lifting.par_qmsg_oreachable_statelessassm",
     "[| (?\<sigma>, ?\<zeta>)
         : oreachable (?A \<langle>\<langle>\<^bsub>?i\<^esub> qmsg)
            (%\<sigma> _. orecvmsg (%_. ?R) \<sigma>)
            (other (%_ _. True) {?i});
         !!\<xi>. ?U \<xi> \<xi> |]
      ==> (?\<sigma>, fst ?\<zeta>)
          : oreachable ?A (%\<sigma> _. orecvmsg (%_. ?R) \<sigma>)
             (other (%_ _. True) {?i}) &
          snd ?\<zeta> : reachable qmsg (recvmsg ?R) &
          (ALL m:set (fst (snd ?\<zeta>)). ?R m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_app (template_hole 23, template_var 3),
                        template_var 2),
                      template_app
                       (template_app
                         (template_app (template_hole 22, template_hole 21),
                          template_app
                           (template_hole 20, template_hole 19)),
                        template_hole 18))),
                  t_empty),
                template_app
                 (template_app (template_hole 16, t_empty),
                  template_app
                   (template_app (template_hole 14, template_var 2),
                    template_hole 13))))
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 5),
                     template_app (template_hole 8, template_var 4))),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_var 3),
                     t_empty),
                   template_app
                    (template_app (template_hole 16, t_empty),
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 13))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 4)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 22, template_hole 21),
                           template_app
                            (template_hole 20, template_hole 19)),
                         template_hole 18)),
                     template_app (template_hole 3, template_var 1)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 5, template_var 4)))),
                 t_empty)))
           ))),
    ("Qmsg_Lifting.lift_step_into_qmsg_statelessassm",
     "[| ?A \<Turnstile>\<^sub>A (%\<sigma> _. orecvmsg (%_. ?R) \<sigma>,
                                  other (%_ _. True) {?i} \<rightarrow>)
                                  globala ?P;
         !!\<sigma> \<sigma>' m.
            \<sigma>' ?i = \<sigma> ?i ==>
            ?P (\<sigma>, receive m, \<sigma>');
         !!\<sigma> \<sigma>' m.
            ?P (\<sigma>, receive m, \<sigma>') ==>
            ?P (\<sigma>, \<tau>, \<sigma>') |]
      ==> ?A \<langle>\<langle>\<^bsub>?i\<^esub> qmsg \<Turnstile>\<^sub>A (%\<sigma>
    _. orecvmsg (%_. ?R) \<sigma>,
 other (%_ _. True) {?i} \<rightarrow>) globala ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 21, template_var 3), t_empty),
                template_app
                 (template_app (template_hole 19, t_empty),
                  template_app
                   (template_app (template_hole 17, template_var 1),
                    template_hole 16))),
              template_app (template_hole 15, template_var 0))
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 1),
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_app (template_hole 3, template_hole 2)),
                       template_hole 1))),
                 t_empty),
               template_app
                (template_app (template_hole 19, t_empty),
                 template_app
                  (template_app (template_hole 17, template_var 1),
                   template_hole 16))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Qmsg_Lifting.lift_into_qmsg",
     "[| ?A \<Turnstile> (otherwith ?S {?i} (orecvmsg ?R),
                          other ?U {?i} \<rightarrow>) global ?P;
         !!\<xi>. ?U \<xi> \<xi>;
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>';
         !!\<sigma> \<sigma>' m.
            [| ALL j. ?U (\<sigma> j) (\<sigma>' j); ?R \<sigma> m |]
            ==> ?R \<sigma>' m;
         ?A \<Turnstile>\<^sub>A (otherwith ?S {?i} (orecvmsg ?R),
                                  other ?U {?i} \<rightarrow>)
                                  globala
                                   (%(\<sigma>, uu_, \<sigma>').
 ?U (\<sigma> ?i) (\<sigma>' ?i)) |]
      ==> ?A \<langle>\<langle>\<^bsub>?i\<^esub> qmsg \<Turnstile> (otherwith
                                ?S {?i} (orecvmsg ?R),
                               other ?U {?i} \<rightarrow>) global ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 22, template_var 5),
                  template_app
                   (template_app
                     (template_app (template_hole 21, template_var 4),
                      template_app
                       (template_app (template_hole 20, template_var 3),
                        template_hole 19)),
                    template_app (template_hole 18, template_var 2))),
                template_app
                 (template_app (template_hole 17, template_var 1),
                  template_app
                   (template_app (template_hole 20, template_var 3),
                    template_hole 19))),
              template_app (template_hole 16, template_var 0))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_app
                   (template_app
                     (template_app (template_hole 21, template_var 4),
                      template_app
                       (template_app (template_hole 20, template_var 3),
                        template_hole 19)),
                    template_app (template_hole 18, template_var 2))),
                template_app
                 (template_app (template_hole 17, template_var 1),
                  template_app
                   (template_app (template_hole 20, template_var 3),
                    template_hole 19))),
              template_app
               (template_hole 10, template_app (template_hole 9, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 5),
                       template_var 3),
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_app (template_hole 3, template_hole 2)),
                       template_hole 1))),
                 template_app
                  (template_app
                    (template_app (template_hole 21, template_var 4),
                     template_app
                      (template_app (template_hole 20, template_var 3),
                       template_hole 19)),
                   template_app (template_hole 18, template_var 2))),
               template_app
                (template_app (template_hole 17, template_var 1),
                 template_app
                  (template_app (template_hole 20, template_var 3),
                   template_hole 19))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Qmsg_Lifting.par_qmsg_oreachable",
     "[| (?\<sigma>, ?\<zeta>)
         : oreachable (?A \<langle>\<langle>\<^bsub>?i\<^esub> qmsg)
            (otherwith ?S {?i} (orecvmsg ?R)) (other ?U {?i});
         ?A \<Turnstile>\<^sub>A (otherwith ?S {?i} (orecvmsg ?R),
                                  other ?U {?i} \<rightarrow>)
                                  globala
                                   (%(\<sigma>, uu_, \<sigma>').
 ?U (\<sigma> ?i) (\<sigma>' ?i));
         !!\<xi>. ?U \<xi> \<xi>;
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>';
         !!\<sigma> \<sigma>' m.
            [| ALL j. ?U (\<sigma> j) (\<sigma>' j); ?R \<sigma> m |]
            ==> ?R \<sigma>' m |]
      ==> (?\<sigma>, fst ?\<zeta>)
          : oreachable ?A (otherwith ?S {?i} (orecvmsg ?R))
             (other ?U {?i}) &
          snd ?\<zeta> : reachable qmsg (recvmsg (?R ?\<sigma>)) &
          (ALL m:set (fst (snd ?\<zeta>)). ?R ?\<sigma> m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app (template_hole 32, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app
                   (template_hole 31,
                    template_app
                     (template_app
                       (template_app (template_hole 30, template_var 4),
                        template_var 3),
                      template_app
                       (template_app
                         (template_app (template_hole 29, template_hole 28),
                          template_app
                           (template_hole 27, template_hole 26)),
                        template_hole 25))),
                  template_app
                   (template_app
                     (template_app (template_hole 24, template_var 2),
                      template_app
                       (template_app (template_hole 23, template_var 3),
                        template_hole 22)),
                    template_app (template_hole 21, template_var 1))),
                template_app
                 (template_app (template_hole 20, template_var 0),
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_hole 22))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 19, template_var 4),
                  template_app
                   (template_app
                     (template_app (template_hole 24, template_var 2),
                      template_app
                       (template_app (template_hole 23, template_var 3),
                        template_hole 22)),
                    template_app (template_hole 21, template_var 1))),
                template_app
                 (template_app (template_hole 20, template_var 0),
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_hole 22))),
              template_app
               (template_hole 18, template_app (template_hole 17, t_empty)))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 6),
                     template_app (template_hole 8, template_var 5))),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_var 4),
                     template_app
                      (template_app
                        (template_app (template_hole 24, template_var 2),
                         template_app
                          (template_app (template_hole 23, template_var 3),
                           template_hole 22)),
                       template_app (template_hole 21, template_var 1))),
                   template_app
                    (template_app (template_hole 20, template_var 0),
                     template_app
                      (template_app (template_hole 23, template_var 3),
                       template_hole 22))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 5)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 29, template_hole 28),
                           template_app
                            (template_hole 27, template_hole 26)),
                         template_hole 25)),
                     template_app
                      (template_hole 3,
                       template_app (template_var 1, template_var 6))))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 5, template_var 5)))),
                 t_empty)))
           ))),
    ("Qmsg_Lifting.lift_step_into_qmsg",
     "[| ?A \<Turnstile>\<^sub>A (otherwith ?S {?i} (orecvmsg ?R),
                                  other ?U {?i} \<rightarrow>) globala ?P;
         !!\<xi>. ?U \<xi> \<xi>;
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>';
         !!\<sigma> \<sigma>' m.
            [| ALL j. ?U (\<sigma> j) (\<sigma>' j); ?R \<sigma> m |]
            ==> ?R \<sigma>' m;
         ?A \<Turnstile>\<^sub>A (otherwith ?S {?i} (orecvmsg ?R),
                                  other ?U {?i} \<rightarrow>)
                                  globala
                                   (%(\<sigma>, uu_, \<sigma>').
 ?U (\<sigma> ?i) (\<sigma>' ?i));
         !!\<sigma> \<sigma>' m.
            [| ALL j. ?U (\<sigma> j) (\<sigma>' j);
               \<sigma>' ?i = \<sigma> ?i |]
            ==> ?P (\<sigma>, receive m, \<sigma>');
         !!\<sigma> \<sigma>' m.
            ?P (\<sigma>, receive m, \<sigma>') ==>
            ?P (\<sigma>, \<tau>, \<sigma>') |]
      ==> ?A \<langle>\<langle>\<^bsub>?i\<^esub> qmsg \<Turnstile>\<^sub>A (otherwith
  ?S {?i} (orecvmsg ?R),
 other ?U {?i} \<rightarrow>) globala ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 5),
                  template_app
                   (template_app
                     (template_app (template_hole 24, template_var 4),
                      template_app
                       (template_app (template_hole 23, template_var 3),
                        template_hole 22)),
                    template_app (template_hole 21, template_var 2))),
                template_app
                 (template_app (template_hole 20, template_var 1),
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_hole 22))),
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 5),
                  template_app
                   (template_app
                     (template_app (template_hole 24, template_var 4),
                      template_app
                       (template_app (template_hole 23, template_var 3),
                        template_hole 22)),
                    template_app (template_hole 21, template_var 2))),
                template_app
                 (template_app (template_hole 20, template_var 1),
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_hole 22))),
              template_app
               (template_hole 19, template_app (template_hole 14, t_empty)))
            ),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 5),
                       template_var 3),
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_app (template_hole 3, template_hole 2)),
                       template_hole 1))),
                 template_app
                  (template_app
                    (template_app (template_hole 24, template_var 4),
                     template_app
                      (template_app (template_hole 23, template_var 3),
                       template_hole 22)),
                   template_app (template_hole 21, template_var 2))),
               template_app
                (template_app (template_hole 20, template_var 1),
                 template_app
                  (template_app (template_hole 23, template_var 3),
                   template_hole 22))),
             template_app (template_hole 0, template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.Qmsg_LiftingMoreTemplates"
### 0.438s elapsed time, 0.611s cpu time, 0.073s GC time
val it = (): unit
