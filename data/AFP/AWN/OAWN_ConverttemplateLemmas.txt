   [("OAWN_Convert.other_steps_resp_local", "other_steps (other ?A ?I) ?I",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("OAWN_Convert.oseqp_sos_resp_local_steps",
     "local_steps (oseqp_sos ?\<Gamma> ?i) {?i}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("OAWN_Convert.seql_onl_swap",
     "seql ?i (onl ?\<Gamma> ?P) = onl ?\<Gamma> (seql ?i ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OAWN_Convert.seqll_onll_swap",
     "seqll ?i (onll ?\<Gamma> ?P) = onll ?\<Gamma> (seqll ?i ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OAWN_Convert.seqlsimp",
     "seql ?i ?P (?\<sigma>, ?p) = ?P (?\<sigma> ?i, ?p)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 1, template_var 3)),
           template_var 0)))),
    ("OAWN_Convert.seqlI", "?P (fst ?s ?i, snd ?s) ==> seql ?i ?P ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0)),
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("OAWN_Convert.oseqp_sos_subreachable",
     "automaton.trans ?OA = oseqp_sos ?\<Gamma> ?i ==>
      subreachable ?OA (other ?ANY {?i}) {?i}",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("OAWN_Convert.seqllsimp",
     "seqll ?i ?P ((?\<sigma>, ?p), ?a, ?\<sigma>', ?p') =
      ?P ((?\<sigma> ?i, ?p), ?a, ?\<sigma>' ?i, ?p')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 6), template_var 5),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_app
        (template_var 5,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 4, template_var 6)),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 6)),
               template_var 0)))))),
    ("OAWN_Convert.closed_from_initialiD",
     "[| initiali ?i ?OI ?CI; (?\<xi>, ?p) : ?CI |]
      ==> EX \<sigma>. \<sigma> ?i = ?\<xi> & (\<sigma>, ?p) : ?OI",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OAWN_Convert.open_from_initialiD",
     "[| initiali ?i ?OI ?CI; (?\<sigma>, ?p) : ?OI |]
      ==> EX \<xi>. ?\<sigma> ?i = \<xi> & (\<xi>, ?p) : ?CI",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OAWN_Convert.seqllD",
     "seqll ?i ?P ((?\<sigma>, ?p), ?a, ?\<sigma>', ?p') ==>
      ?P ((?\<sigma> ?i, ?p), ?a, ?\<sigma>' ?i, ?p')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 4, template_var 6)),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 1, template_var 6)),
                   template_var 0))))
           ))),
    ("OAWN_Convert.seqllI",
     "?P ((?\<sigma> ?i, ?p), ?a, ?\<sigma>' ?i, ?p') ==>
      seqll ?i ?P ((?\<sigma>, ?p), ?a, ?\<sigma>', ?p')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_var 5, template_var 4)),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_var 1, template_var 4)),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 6),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))))
           ))),
    ("OAWN_Convert.same_seql",
     "[| ALL j:{?i}. ?\<sigma>' j = ?\<sigma> j;
         seql ?i ?P (?\<sigma>', ?s) |]
      ==> seql ?i ?P (?\<sigma>, ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_hole 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OAWN_Convert.oseq_step_is_seq_step",
     "[| ((?\<sigma>, ?p), ?a, ?\<sigma>', ?p') : oseqp_sos ?\<Gamma> ?i;
         ?\<sigma> ?i = ?\<xi> |]
      ==> EX \<xi>'.
             ?\<sigma>' ?i = \<xi>' &
             ((?\<xi>, ?p), ?a, \<xi>', ?p') : seqp_sos ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 7),
                      template_var 6)),
                  template_app
                   (template_app (template_hole 9, template_var 5),
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 3)))),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_var 7, template_var 1), template_var 0)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("OAWN_Convert.open_seq_invariant",
     "[| ?A \<TTurnstile> (?I \<rightarrow>) ?P;
         initiali ?i (init ?OA) (init ?A);
         automaton.trans ?OA = oseqp_sos ?\<Gamma> ?i;
         automaton.trans ?A = seqp_sos ?\<Gamma> |]
      ==> ?OA \<Turnstile> (act ?I, other ?ANY {?i} \<rightarrow>)
                            seql ?i ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 3),
                template_app (template_hole 13, template_var 2)),
              template_app (template_hole 12, template_var 6))
            ),
        template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 3)),
        template_equation
         (template_app (template_hole 7, template_var 6),
          template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app (template_hole 4, template_var 5)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4))
           ))),
    ("OAWN_Convert.open_seq_step_invariant",
     "[| ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?P;
         initiali ?i (init ?OA) (init ?A);
         automaton.trans ?OA = oseqp_sos ?\<Gamma> ?i;
         automaton.trans ?A = seqp_sos ?\<Gamma> |]
      ==> ?OA \<Turnstile>\<^sub>A (act ?I, other ?ANY {?i} \<rightarrow>)
                                    seqll ?i ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 3),
                template_app (template_hole 13, template_var 2)),
              template_app (template_hole 12, template_var 6))
            ),
        template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 3)),
        template_equation
         (template_app (template_hole 7, template_var 6),
          template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app (template_hole 4, template_var 5)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4))
           ))),
    ("OAWN_Convert.reachable_oseq_seqp_sos'",
     "[| ?s : reachable ?OA ?I; initiali ?i (init ?OA) (init ?A);
         automaton.trans ?OA = oseqp_sos ?\<Gamma> ?i;
         automaton.trans ?A = seqp_sos ?\<Gamma> |]
      ==> EX \<xi>. fst ?s ?i = \<xi> & (\<xi>, snd ?s) : reachable ?A ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app
               (template_app (template_hole 17, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 2),
                template_app (template_hole 15, template_var 4)),
              template_app (template_hole 14, template_var 1))
            ),
        template_equation
         (template_app (template_hole 12, template_var 4),
          template_app
           (template_app (template_hole 11, template_var 0),
            template_var 2)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("OAWN_Convert.reachable_oseq_seqp_sos",
     "[| (?\<sigma>, ?p) : reachable ?OA ?I;
         initiali ?i (init ?OA) (init ?A);
         automaton.trans ?OA = oseqp_sos ?\<Gamma> ?i;
         automaton.trans ?A = seqp_sos ?\<Gamma> |]
      ==> EX \<xi>. ?\<sigma> ?i = \<xi> & (\<xi>, ?p) : reachable ?A ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 6),
                  template_var 5)),
              template_app
               (template_app (template_hole 15, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 2),
                template_app (template_hole 13, template_var 4)),
              template_app (template_hole 12, template_var 1))
            ),
        template_equation
         (template_app (template_hole 10, template_var 4),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_var 2)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("OAWN_Convert.initialiI",
     "[| !!\<sigma> p. (\<sigma>, p) : ?OI ==> (\<sigma> ?i, p) : ?CI;
         !!\<xi> p.
            (\<xi>, p) : ?CI ==>
            EX \<sigma>. \<xi> = \<sigma> ?i & (\<sigma>, p) : ?OI |]
      ==> initiali ?i ?OI ?CI",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("OAWN_Convert.same_seqll",
     "[| ALL j:{?i}. ?\<sigma>\<^sub>1' j = ?\<sigma>\<^sub>1 j;
         ALL j:{?i}. ?\<sigma>\<^sub>2' j = ?\<sigma>\<^sub>2 j;
         seqll ?i ?P
          ((?\<sigma>\<^sub>1', ?s), ?a, ?\<sigma>\<^sub>2', ?s') |]
      ==> seqll ?i ?P
           ((?\<sigma>\<^sub>1, ?s), ?a, ?\<sigma>\<^sub>2, ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 8),
                  template_hole 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 8),
                  template_hole 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 8),
                template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_var 2)),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 8),
               template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0))))
           )))]
