Loading theory "Draft.Lib" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ONode_Lifting" via "Draft.AWN")
Loading theory "Draft.TransitionSystems" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ONode_Lifting" via "Draft.OAWN_SOS")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Lib"
### 0.047s elapsed time, 0.223s cpu time, 0.000s GC time
Loading theory "Draft.AWN" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ONode_Lifting")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class msg = type +
  fixes newpkt :: "nat * nat => 'a"
    and eq_newpkt :: "'a => bool"
  assumes "eq_newpkt_eq": "!!d i. eq_newpkt (newpkt (d, i))"
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.565s cpu time, 0.040s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.TransitionSystems"
### 0.283s elapsed time, 1.153s cpu time, 0.040s GC time
Loading theory "Draft.Invariants" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ONode_Lifting" via "Draft.OInvariants")
### theory "HOL-Library.Nat_Bijection"
### 0.333s elapsed time, 1.328s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.251s elapsed time, 0.978s cpu time, 0.080s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
### theory "Draft.Invariants"
### 0.321s elapsed time, 1.269s cpu time, 0.090s GC time
Loading theory "Draft.OInvariants" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ONode_Lifting")
Proofs for inductive predicate(s) "oreachablep"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "Draft.OInvariants"
### 0.778s elapsed time, 2.922s cpu time, 0.752s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.151s elapsed time, 4.377s cpu time, 0.928s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.014s elapsed time, 3.171s cpu time, 0.961s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.374s elapsed time, 7.785s cpu time, 1.915s GC time
Loading theory "Draft.Templates" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.168s cpu time, 0.050s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ONode_LiftingMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.515s elapsed time, 1.048s cpu time, 0.041s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class tau = type +
  fixes tau :: "'a"
instantiation
  seq_action :: (type) tau
  tau_seq_action == tau :: 'a seq_action
instantiation
  node_action :: (type) tau
  tau_node_action == tau :: 'a node_action
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.AWN"
### 7.171s elapsed time, 15.174s cpu time, 3.389s GC time
Loading theory "Draft.OAWN_SOS" (required by "Draft.ONode_LiftingMoreTemplates" via "Draft.ONode_Lifting")
Proofs for inductive predicate(s) "oseqp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "oparp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "onode_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "opnet_sosp"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "ocnet_sosp"
  Proving monotonicity ...
### theory "Draft.OAWN_SOS"
### 3.277s elapsed time, 3.446s cpu time, 0.188s GC time
Loading theory "Draft.ONode_Lifting" (required by "Draft.ONode_LiftingMoreTemplates")
### theory "Draft.ONode_Lifting"
### 0.298s elapsed time, 0.314s cpu time, 0.025s GC time
Loading theory "Draft.ONode_LiftingMoreTemplates"
val templateLemmas =
   [("ONode_Lifting.node_addressD",
     "(?\<sigma>, NodeS ?i ?\<zeta> ?R)
      : oreachable (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S
         ?U ==>
      ?i = ?ii",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 8),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5))),
              template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_equation (template_var 7, template_var 4))),
    ("ONode_Lifting.node_net_state",
     "(?\<sigma>, ?s)
      : oreachable (\<langle>?i : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S
         ?U ==>
      EX \<zeta> R. ?s = NodeS ?i \<zeta> R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("ONode_Lifting.node_net_state'",
     "?s : oreachable (\<langle>?i : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S
            ?U ==>
      EX \<sigma> \<zeta> R. ?s = (\<sigma>, NodeS ?i \<zeta> R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("ONode_Lifting.node_local_deliver",
     "\<langle>?i : ?\<zeta>\<^sub>i : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (?S,
             ?U \<rightarrow>)
             globala
              (%(uu_, a, uu_).
                  ALL j. j ~= ?i --> (ALL d. a ~= j:deliver(d)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_var 1),
             template_var 0),
           template_app
            (template_hole 8, template_app (template_hole 7, t_empty)))
         )),
    ("ONode_Lifting.node_tau_deliver_unchanged",
     "\<langle>?i : ?\<zeta>\<^sub>i : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (?S,
             ?U \<rightarrow>)
             globala
              (%(\<sigma>, a, \<sigma>').
                  a = \<tau> | (EX i d. a = i:deliver(d)) -->
                  (ALL j. j ~= ?i --> \<sigma>' j = \<sigma> j))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_app (template_hole 13, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_var 1),
             template_var 0),
           template_app
            (template_hole 12, template_app (template_hole 11, t_empty)))
         )),
    ("ONode_Lifting.node_lift",
     "[| ?T \<Turnstile> (otherwith ?S {?ii} (orecvmsg ?I),
                          other ?U {?ii} \<rightarrow>) global ?P;
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>' |]
      ==> \<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile> (otherwith
                                   ?S {?ii} (oarrivemsg ?I),
                                  other ?U {?ii} \<rightarrow>) global ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 11, template_var 5),
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_hole 9)),
                    template_app (template_hole 8, template_var 3))),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app
                   (template_app (template_hole 10, template_var 4),
                    template_hole 9))),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 6),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_app
                      (template_app (template_hole 10, template_var 4),
                       template_hole 9)),
                   template_app (template_hole 1, template_var 3))),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app (template_hole 10, template_var 4),
                   template_hole 9))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("ONode_Lifting.node_proc_reachable_statelessassm",
     "(?\<sigma>, NodeS ?i ?\<zeta> ?R)
      : oreachable (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o)
         (otherwith (%_ _. True) {?ii} (oarrivemsg ?I))
         (other (%_ _. True) {?ii}) ==>
      (?\<sigma>, ?\<zeta>)
      : oreachable ?T (otherwith (%_ _. True) {?ii} (orecvmsg ?I))
         (other (%_ _. True) {?ii})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 7),
                  template_app
                   (template_app
                     (template_app (template_hole 13, template_var 6),
                      template_var 5),
                    template_var 4))),
              template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 2),
                      template_var 1)),
                  template_app
                   (template_app
                     (template_app (template_hole 10, t_empty),
                      template_app
                       (template_app (template_hole 8, template_var 3),
                        template_hole 7)),
                    template_app (template_hole 6, template_var 0))),
                template_app
                 (template_app (template_hole 5, t_empty),
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_hole 7))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_var 5)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, t_empty),
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_hole 7)),
                   template_app (template_hole 0, template_var 0))),
               template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_hole 7))))
           ))),
    ("ONode_Lifting.node_lift_anycast_statelessassm",
     "?T \<Turnstile>\<^sub>A (%\<sigma> _. orecvmsg ?I \<sigma>,
                               other (%_ _. True) {?i} \<rightarrow>)
                               globala
                                (%(\<sigma>, a, \<sigma>').
                                    anycast (?Q \<sigma> \<sigma>') a) ==>
      \<langle>?i : ?T : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
  _. oarrivemsg ?I \<sigma>,
                                     other (%_ _. True) {?i} \<rightarrow>)
                                     globala
(%(\<sigma>, a, \<sigma>'). castmsg (?Q \<sigma> \<sigma>') a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 4), t_empty),
                template_app
                 (template_app (template_hole 14, t_empty),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_hole 11))),
              template_app
               (template_hole 10, template_app (template_hole 9, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 4),
                     template_var 0)),
                 t_empty),
               template_app
                (template_app (template_hole 14, t_empty),
                 template_app
                  (template_app (template_hole 12, template_var 2),
                   template_hole 11))),
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty)))
           ))),
    ("ONode_Lifting.node_proc_reachable",
     "[| (?\<sigma>, NodeS ?i ?\<zeta> ?R)
         : oreachable (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o)
            (otherwith ?S {?ii} (oarrivemsg ?I)) (other ?U {?ii});
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>' |]
      ==> (?\<sigma>, ?\<zeta>)
          : oreachable ?T (otherwith ?S {?ii} (orecvmsg ?I))
             (other ?U {?ii})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 9),
                  template_app
                   (template_app
                     (template_app (template_hole 13, template_var 8),
                      template_var 7),
                    template_var 6))),
              template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_app (template_hole 10, template_var 2),
                      template_app
                       (template_app (template_hole 9, template_var 5),
                        template_hole 8)),
                    template_app (template_hole 7, template_var 1))),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 9, template_var 5),
                    template_hole 8))))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 9),
                 template_var 7)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app (template_hole 9, template_var 5),
                       template_hole 8)),
                   template_app (template_hole 0, template_var 1))),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app (template_hole 9, template_var 5),
                   template_hole 8))))
           ))),
    ("ONode_Lifting.node_net_state_trans",
     "[| (?\<sigma>, ?s)
         : oreachable
            (\<langle>?i : ?\<zeta>\<^sub>i : ?R\<^sub>i\<rangle>\<^sub>o)
            ?S ?U;
         ((?\<sigma>, ?s), ?a, ?\<sigma>', ?s')
         : automaton.trans
            (\<langle>?i : ?\<zeta>\<^sub>i : ?R\<^sub>i\<rangle>\<^sub>o);
         !!\<zeta> R \<zeta>' R'.
            [| ?s = NodeS ?i \<zeta> R; ?s' = NodeS ?i \<zeta>' R' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 10),
                  template_var 9)),
              template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6)),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 10, template_var 10),
                      template_var 9)),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 10, template_var 2),
                      template_var 1)))),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 8),
                    template_var 7),
                  template_var 6)))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("ONode_Lifting.node_lift_step_statelessassm",
     "[| ?T \<Turnstile>\<^sub>A (%\<sigma> _. orecvmsg ?I \<sigma>,
                                  other (%_ _. True) {?i} \<rightarrow>)
                                  globala
                                   (%(\<sigma>, uu_, \<sigma>').
 ?Q (\<sigma> ?i) (\<sigma>' ?i));
         !!\<xi>. ?Q \<xi> \<xi> |]
      ==> \<langle>?i : ?T : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
      _. oarrivemsg ?I \<sigma>,
   other (%_ _. True) {?i} \<rightarrow>)
   globala (%(\<sigma>, uu_, \<sigma>'). ?Q (\<sigma> ?i) (\<sigma>' ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 15, template_var 4), t_empty),
                template_app
                 (template_app (template_hole 13, t_empty),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_hole 10))),
              template_app
               (template_hole 9, template_app (template_hole 8, t_empty)))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 4),
                     template_var 0)),
                 t_empty),
               template_app
                (template_app (template_hole 13, t_empty),
                 template_app
                  (template_app (template_hole 11, template_var 2),
                   template_hole 10))),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("ONode_Lifting.node_lift_anycast",
     "[| ?T \<Turnstile>\<^sub>A (otherwith ?S {?i} (orecvmsg ?I),
                                  other ?U {?i} \<rightarrow>)
                                  globala
                                   (%(\<sigma>, a, \<sigma>').
 anycast (?Q \<sigma> \<sigma>') a);
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>' |]
      ==> \<langle>?i : ?T : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (otherwith
    ?S {?i} (oarrivemsg ?I),
   other ?U {?i} \<rightarrow>)
   globala (%(\<sigma>, a, \<sigma>'). castmsg (?Q \<sigma> \<sigma>') a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 17, template_var 5),
                      template_app
                       (template_app (template_hole 16, template_var 4),
                        template_hole 15)),
                    template_app (template_hole 14, template_var 3))),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_app
                   (template_app (template_hole 16, template_var 4),
                    template_hole 15))),
              template_app
               (template_hole 12, template_app (template_hole 11, t_empty)))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 4),
                       template_var 6),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 5),
                     template_app
                      (template_app (template_hole 16, template_var 4),
                       template_hole 15)),
                   template_app (template_hole 4, template_var 3))),
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_app
                  (template_app (template_hole 16, template_var 4),
                   template_hole 15))),
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty)))
           ))),
    ("ONode_Lifting.node_lift_step",
     "[| ?T \<Turnstile>\<^sub>A (otherwith ?S {?i} (orecvmsg ?I),
                                  other ?U {?i} \<rightarrow>)
                                  globala
                                   (%(\<sigma>, uu_, \<sigma>').
 ?Q \<sigma> \<sigma>');
         !!\<sigma> \<sigma>'.
            other ?U {?i} \<sigma> \<sigma>' ==> ?Q \<sigma> \<sigma>';
         !!\<xi> \<xi>'. ?S \<xi> \<xi>' ==> ?U \<xi> \<xi>' |]
      ==> \<langle>?i : ?T : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (otherwith
    ?S {?i} (oarrivemsg ?I),
   other ?U {?i} \<rightarrow>)
   globala (%(\<sigma>, uu_, \<sigma>'). ?Q \<sigma> \<sigma>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 16, template_var 5),
                      template_app
                       (template_app (template_hole 15, template_var 4),
                        template_hole 14)),
                    template_app (template_hole 13, template_var 3))),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_app
                   (template_app (template_hole 15, template_var 4),
                    template_hole 14))),
              template_app
               (template_hole 11, template_app (template_hole 10, t_empty)))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 6),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_app (template_hole 15, template_var 4),
                       template_hole 14)),
                   template_app (template_hole 3, template_var 3))),
               template_app
                (template_app (template_hole 12, template_var 2),
                 template_app
                  (template_app (template_hole 15, template_var 4),
                   template_hole 14))),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("ONode_Lifting.nodemap_induct",
     "[| (?\<sigma>, NodeS ?ii ?\<zeta> ?R)
         : oreachable (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S
            ?U;
         !!\<sigma> \<zeta>.
            (\<sigma>, NodeS ?ii \<zeta> ?R\<^sub>i)
            : init (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ==>
            ?P \<sigma> \<zeta> ?R\<^sub>i;
         !!\<sigma> \<zeta> R \<sigma>' a.
            [| (\<sigma>, NodeS ?ii \<zeta> R)
               : oreachable
                  (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S ?U;
               ?U \<sigma> \<sigma>'; ?P \<sigma> \<zeta> R |]
            ==> ?P \<sigma>' \<zeta> R;
         !!\<sigma> \<zeta> R \<sigma>' \<zeta>' R' a.
            [| (\<sigma>, NodeS ?ii \<zeta> R)
               : oreachable
                  (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S ?U;
               ((\<sigma>, NodeS ?ii \<zeta> R), a, \<sigma>',
                NodeS ?ii \<zeta>' R')
               : automaton.trans
                  (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o);
               ?S \<sigma> \<sigma>' a; ?P \<sigma> \<zeta> R |]
            ==> ?P \<sigma>' \<zeta>' R' |]
      ==> ?P ?\<sigma> ?\<zeta> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 8),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_var 7),
                      template_var 6),
                    template_var 5))),
              template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 8),
               template_var 6),
             template_var 5)
           ))),
    ("ONode_Lifting.nodemap_induct'",
     "[| (?\<sigma>, NodeS ?ii ?\<zeta> ?R)
         : oreachable (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S
            ?U;
         !!\<sigma> \<zeta>.
            (\<sigma>, NodeS ?ii \<zeta> ?R\<^sub>i)
            : init (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ==>
            ?P (\<sigma>, NodeS ?ii \<zeta> ?R\<^sub>i);
         !!\<sigma> \<zeta> R \<sigma>' a.
            [| (\<sigma>, NodeS ?ii \<zeta> R)
               : oreachable
                  (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S ?U;
               ?U \<sigma> \<sigma>'; ?P (\<sigma>, NodeS ?ii \<zeta> R) |]
            ==> ?P (\<sigma>', NodeS ?ii \<zeta> R);
         !!\<sigma> \<zeta> R \<sigma>' \<zeta>' R' a.
            [| (\<sigma>, NodeS ?ii \<zeta> R)
               : oreachable
                  (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o) ?S ?U;
               ((\<sigma>, NodeS ?ii \<zeta> R), a, \<sigma>',
                NodeS ?ii \<zeta>' R')
               : automaton.trans
                  (\<langle>?ii : ?T : ?R\<^sub>i\<rangle>\<^sub>o);
               ?S \<sigma> \<sigma>' a;
               ?P (\<sigma>, NodeS ?ii \<zeta> R) |]
            ==> ?P (\<sigma>', NodeS ?ii \<zeta>' R') |]
      ==> ?P (?\<sigma>, NodeS ?ii ?\<zeta> ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 8),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_var 7),
                      template_var 6),
                    template_var 5))),
              template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app (template_hole 13, template_var 8),
               template_app
                (template_app
                  (template_app (template_hole 12, template_var 7),
                   template_var 6),
                 template_var 5)))
           )))]:
   (string * thm * template) list
### theory "Draft.ONode_LiftingMoreTemplates"
### 0.428s elapsed time, 0.612s cpu time, 0.078s GC time
val it = (): unit
