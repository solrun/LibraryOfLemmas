Loading theory "Draft.Lib" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting" via "Draft.AWN")
Loading theory "Draft.TransitionSystems" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting" via "Draft.OAWN_SOS")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.Lib"
### 0.049s elapsed time, 0.227s cpu time, 0.000s GC time
Loading theory "Draft.AWN" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.537s cpu time, 0.041s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class msg = type +
  fixes newpkt :: "nat * nat => 'a"
    and eq_newpkt :: "'a => bool"
  assumes "eq_newpkt_eq": "!!d i. eq_newpkt (newpkt (d, i))"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.TransitionSystems"
### 0.314s elapsed time, 1.263s cpu time, 0.135s GC time
Loading theory "Draft.Invariants" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting" via "Draft.OInvariants")
### theory "HOL-Library.Set_Algebras"
### 0.235s elapsed time, 0.926s cpu time, 0.094s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.368s elapsed time, 1.471s cpu time, 0.135s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
### theory "Draft.Invariants"
### 0.337s elapsed time, 1.327s cpu time, 0.120s GC time
Loading theory "Draft.OInvariants" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting")
Proofs for inductive predicate(s) "oreachablep"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  left :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "Draft.OInvariants"
### 0.857s elapsed time, 3.177s cpu time, 0.956s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs")
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.197s elapsed time, 4.534s cpu time, 1.076s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.032s elapsed time, 3.246s cpu time, 1.031s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.432s elapsed time, 8.089s cpu time, 2.138s GC time
Loading theory "Draft.Templates" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.078s elapsed time, 0.176s cpu time, 0.051s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OPnet_LiftingMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.515s elapsed time, 1.051s cpu time, 0.043s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class tau = type +
  fixes tau :: "'a"
instantiation
  seq_action :: (type) tau
  tau_seq_action == tau :: 'a seq_action
instantiation
  node_action :: (type) tau
  tau_node_action == tau :: 'a node_action
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.AWN"
### 7.052s elapsed time, 15.269s cpu time, 3.702s GC time
Loading theory "Draft.OAWN_SOS" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting")
Proofs for inductive predicate(s) "oseqp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "oparp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "onode_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "opnet_sosp"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "ocnet_sosp"
  Proving monotonicity ...
### theory "Draft.OAWN_SOS"
### 3.109s elapsed time, 3.312s cpu time, 0.229s GC time
Loading theory "Draft.ONode_Lifting" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting")
Loading theory "Draft.OPnet" (required by "Draft.OPnet_LiftingMoreTemplates" via "Draft.OPnet_Lifting")
### theory "Draft.OPnet"
### 0.167s elapsed time, 0.341s cpu time, 0.000s GC time
### theory "Draft.ONode_Lifting"
### 0.278s elapsed time, 0.443s cpu time, 0.000s GC time
Loading theory "Draft.OPnet_Lifting" (required by "Draft.OPnet_LiftingMoreTemplates")
### theory "Draft.OPnet_Lifting"
### 0.265s elapsed time, 0.265s cpu time, 0.000s GC time
Loading theory "Draft.OPnet_LiftingMoreTemplates"
val templateLemmas =
   [("OPnet_Lifting.other_net_tree_ips_par_left",
     "[| other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))
          ?\<sigma> ?\<sigma>';
         !!\<xi>. ?U \<xi> \<xi> |]
      ==> other ?U (net_tree_ips ?p\<^sub>1) ?\<sigma> ?\<sigma>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("OPnet_Lifting.other_net_tree_ips_par_right",
     "[| other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))
          ?\<sigma> ?\<sigma>';
         !!\<xi>. ?U \<xi> \<xi> |]
      ==> other ?U (net_tree_ips ?p\<^sub>2) ?\<sigma> ?\<sigma>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("OPnet_Lifting.subnet_oreachable_true_true",
     "(?\<sigma>, SubnetS ?s\<^sub>1 ?s\<^sub>2)
      : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
         (%_ _ _. True) (%_ _. True) ==>
      (?\<sigma>, ?s\<^sub>1)
      : oreachable (opnet ?onp ?p\<^sub>1) (%_ _ _. True) (%_ _. True)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3))),
              template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_app
                       (template_app (template_hole 1, template_var 1),
                        template_var 0))),
                  t_empty),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 4)),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1)),
                 t_empty),
               t_empty))
           ))),
    ("OPnet_Lifting.subnet_oreachable_true_true",
     "(?\<sigma>, SubnetS ?s\<^sub>1 ?s\<^sub>2)
      : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
         (%_ _ _. True) (%_ _. True) ==>
      (?\<sigma>, ?s\<^sub>2)
      : oreachable (opnet ?onp ?p\<^sub>2) (%_ _ _. True) (%_ _. True)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3))),
              template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_app
                       (template_app (template_hole 1, template_var 1),
                        template_var 0))),
                  t_empty),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 t_empty),
               t_empty))
           ))),
    ("OPnet_Lifting.ostep_arrive_invariantD",
     "[| ?p \<Turnstile>\<^sub>A (%\<sigma> _. oarrivemsg ?I \<sigma>,
                                  ?U \<rightarrow>) ?P;
         (?\<sigma>, ?s)
         : oreachable ?p (otherwith ?S ?IPS (oarrivemsg ?I)) ?U;
         ((?\<sigma>, ?s), ?a, ?\<sigma>', ?s') : automaton.trans ?p;
         oarrivemsg ?I ?\<sigma> ?a |]
      ==> ?P ((?\<sigma>, ?s), ?a, ?\<sigma>', ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 10), t_empty),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 10),
                  template_app
                   (template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3),
                    template_app (template_hole 8, template_var 9))),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 6, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_var 0)))),
              template_app (template_hole 0, template_var 10))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 9),
                template_var 6),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_var 7,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0))))
           ))),
    ("OPnet_Lifting.oreachable_par_subnet_induct",
     "[| (?\<sigma>, SubnetS ?s ?t)
         : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2)) ?S
            ?U;
         !!\<sigma> s t.
            (\<sigma>, SubnetS s t)
            : init (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2)) ==>
            ?P \<sigma> s t;
         !!\<sigma> s t \<sigma>'.
            [| (\<sigma>, SubnetS s t)
               : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
                  ?S ?U;
               ?U \<sigma> \<sigma>'; ?P \<sigma> s t |]
            ==> ?P \<sigma>' s t;
         !!\<sigma> s t \<sigma>' s' t' a.
            [| (\<sigma>, SubnetS s t)
               : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
                  ?S ?U;
               ((\<sigma>, SubnetS s t), a, \<sigma>', SubnetS s' t')
               : automaton.trans
                  (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2));
               ?S \<sigma> \<sigma>' a; ?P \<sigma> s t |]
            ==> ?P \<sigma>' s' t' |]
      ==> ?P ?\<sigma> ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 8),
                  template_app
                   (template_app (template_hole 11, template_var 7),
                    template_var 6))),
              template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 5),
                      template_app
                       (template_app (template_hole 8, template_var 4),
                        template_var 3))),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 8),
               template_var 7),
             template_var 6)
           ))),
    ("OPnet_Lifting.subnet_oreachable_disjoint",
     "[| !!\<xi>. ?S \<xi> \<xi>; !!\<xi>. ?U \<xi> \<xi>;
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, uu_).
castmsg (?I \<sigma>) a);
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a ~= \<tau> & (ALL d. a ~= i:deliver(d)) --> ?S (\<sigma> i) (\<sigma>' i));
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a = \<tau> | (EX d. a = i:deliver(d)) --> ?U (\<sigma> i) (\<sigma>' i));
         (?\<sigma>, SubnetS ?s ?t)
         : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
            (otherwith ?S (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))
              (oarrivemsg ?I))
            (other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))) |]
      ==> net_tree_ips ?p\<^sub>1 Int net_tree_ips ?p\<^sub>2 = {}",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2))),
              template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 6),
                      template_app
                       (template_app (template_hole 4, template_var 1),
                        template_var 0))),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 8),
                      template_app
                       (template_hole 2,
                        template_app
                         (template_app (template_hole 4, template_var 1),
                          template_var 0))),
                    template_app (template_hole 26, template_var 5))),
                template_app
                 (template_app (template_hole 25, template_var 7),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_hole 23))),
    ("OPnet_Lifting.subnet_oreachable1",
     "[| !!\<xi>. ?S \<xi> \<xi>; !!\<xi>. ?U \<xi> \<xi>;
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, uu_).
castmsg (?I \<sigma>) a);
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a ~= \<tau> & (ALL d. a ~= i:deliver(d)) --> ?S (\<sigma> i) (\<sigma>' i));
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a = \<tau> | (EX d. a = i:deliver(d)) --> ?U (\<sigma> i) (\<sigma>' i));
         (?\<sigma>, SubnetS ?s ?t)
         : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
            (otherwith ?S (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))
              (oarrivemsg ?I))
            (other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))) |]
      ==> (?\<sigma>, ?s)
          : oreachable (opnet ?onp ?p\<^sub>1)
             (otherwith ?S (net_tree_ips ?p\<^sub>1) (oarrivemsg ?I))
             (other ?U (net_tree_ips ?p\<^sub>1))",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2))),
              template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app
                       (template_app (template_hole 2, template_var 1),
                        template_var 0))),
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_hole 0,
                        template_app
                         (template_app (template_hole 2, template_var 1),
                          template_var 0))),
                    template_app (template_hole 24, template_var 5))),
                template_app
                 (template_app (template_hole 23, template_var 7),
                  template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 6),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 8),
                     template_app (template_hole 0, template_var 1)),
                   template_app (template_hole 24, template_var 5))),
               template_app
                (template_app (template_hole 23, template_var 7),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("OPnet_Lifting.subnet_oreachable2",
     "[| !!\<xi>. ?S \<xi> \<xi>; !!\<xi>. ?U \<xi> \<xi>;
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, uu_).
castmsg (?I \<sigma>) a);
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a ~= \<tau> & (ALL d. a ~= i:deliver(d)) --> ?S (\<sigma> i) (\<sigma>' i));
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a = \<tau> | (EX d. a = i:deliver(d)) --> ?U (\<sigma> i) (\<sigma>' i));
         (?\<sigma>, SubnetS ?s ?t)
         : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
            (otherwith ?S (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))
              (oarrivemsg ?I))
            (other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))) |]
      ==> (?\<sigma>, ?t)
          : oreachable (opnet ?onp ?p\<^sub>2)
             (otherwith ?S (net_tree_ips ?p\<^sub>2) (oarrivemsg ?I))
             (other ?U (net_tree_ips ?p\<^sub>2))",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2))),
              template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app
                       (template_app (template_hole 2, template_var 1),
                        template_var 0))),
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_hole 0,
                        template_app
                         (template_app (template_hole 2, template_var 1),
                          template_var 0))),
                    template_app (template_hole 24, template_var 5))),
                template_app
                 (template_app (template_hole 23, template_var 7),
                  template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 6),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 8),
                     template_app (template_hole 0, template_var 0)),
                   template_app (template_hole 24, template_var 5))),
               template_app
                (template_app (template_hole 23, template_var 7),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("OPnet_Lifting.pnet_lift",
     "[| !!ii R\<^sub>i.
            \<langle>ii : ?onp
                           ii : R\<^sub>i\<rangle>\<^sub>o \<Turnstile> (otherwith
                                    ?S {ii} (oarrivemsg ?I),
                                   other ?U {ii} \<rightarrow>)
                                   global (?P ii);
         !!\<xi>. ?S \<xi> \<xi>; !!\<xi>. ?U \<xi> \<xi>;
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, uu_).
castmsg (?I \<sigma>) a);
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a ~= \<tau> & (ALL d. a ~= i:deliver(d)) --> ?S (\<sigma> i) (\<sigma>' i));
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a = \<tau> | (EX d. a = i:deliver(d)) --> ?U (\<sigma> i) (\<sigma>' i)) |]
      ==> opnet ?onp
           ?p \<Turnstile> (otherwith ?S (net_tree_ips ?p) (oarrivemsg ?I),
                            other ?U (net_tree_ips ?p) \<rightarrow>)
                            global
                             (%\<sigma>.
                                 ALL i:net_tree_ips ?p. ?P i \<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 25,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 23, template_var 4),
                     template_app (template_hole 1, template_var 0)),
                   template_app (template_hole 20, template_var 3))),
               template_app
                (template_app (template_hole 19, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app (template_hole 18, t_empty))
           ))),
    ("OPnet_Lifting.opnet_sync_action_subnet_oreachable",
     "[| (?\<sigma>, SubnetS ?s ?t)
         : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
            (%\<sigma> _. oarrivemsg ?I \<sigma>)
            (other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2)));
         !!\<xi>. ?U \<xi> \<xi>;
         opnet ?onp
          ?p\<^sub>1 \<Turnstile>\<^sub>A (%\<sigma> _.
        oarrivemsg ?I \<sigma>,
     other ?U (net_tree_ips ?p\<^sub>1) \<rightarrow>)
     globala
      (%(\<sigma>, a, \<sigma>').
          castmsg (?I \<sigma>) a &
          (a = \<tau> | (EX i d. a = i:deliver(d)) -->
           (ALL i:net_tree_ips ?p\<^sub>1. ?U (\<sigma> i) (\<sigma>' i)) &
           (ALL i.
               i ~: net_tree_ips ?p\<^sub>1 --> \<sigma>' i = \<sigma> i)));
         opnet ?onp
          ?p\<^sub>2 \<Turnstile>\<^sub>A (%\<sigma> _.
        oarrivemsg ?I \<sigma>,
     other ?U (net_tree_ips ?p\<^sub>2) \<rightarrow>)
     globala
      (%(\<sigma>, a, \<sigma>').
          castmsg (?I \<sigma>) a &
          (a = \<tau> | (EX i d. a = i:deliver(d)) -->
           (ALL i:net_tree_ips ?p\<^sub>2. ?U (\<sigma> i) (\<sigma>' i)) &
           (ALL i.
               i ~: net_tree_ips ?p\<^sub>2 -->
               \<sigma>' i = \<sigma> i))) |]
      ==> (?\<sigma>, ?s)
          : oreachable (opnet ?onp ?p\<^sub>1)
             (%\<sigma> _. oarrivemsg ?I \<sigma>)
             (other ?U (net_tree_ips ?p\<^sub>1)) &
          (?\<sigma>, ?t)
          : oreachable (opnet ?onp ?p\<^sub>2)
             (%\<sigma> _. oarrivemsg ?I \<sigma>)
             (other ?U (net_tree_ips ?p\<^sub>2)) &
          net_tree_ips ?p\<^sub>1 Int net_tree_ips ?p\<^sub>2 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app (template_hole 28, template_var 7),
                  template_app
                   (template_app (template_hole 27, template_var 6),
                    template_var 5))),
              template_app
               (template_app
                 (template_app
                   (template_hole 26,
                    template_app
                     (template_app (template_hole 25, template_var 4),
                      template_app
                       (template_app (template_hole 24, template_var 3),
                        template_var 2))),
                  t_empty),
                template_app
                 (template_app (template_hole 22, template_var 0),
                  template_app
                   (template_hole 21,
                    template_app
                     (template_app (template_hole 24, template_var 3),
                      template_var 2)))))
            ),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app (template_hole 25, template_var 4),
                      template_var 3)),
                  t_empty),
                template_app
                 (template_app (template_hole 22, template_var 0),
                  template_app (template_hole 21, template_var 3))),
              template_app
               (template_hole 18, template_app (template_hole 17, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app (template_hole 25, template_var 4),
                      template_var 2)),
                  t_empty),
                template_app
                 (template_app (template_hole 22, template_var 0),
                  template_app (template_hole 21, template_var 2))),
              template_app
               (template_hole 18, template_app (template_hole 17, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 29,
                   template_app
                    (template_app (template_hole 28, template_var 7),
                     template_var 6)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 26,
                       template_app
                        (template_app (template_hole 25, template_var 4),
                         template_var 3)),
                     t_empty),
                   template_app
                    (template_app (template_hole 22, template_var 0),
                     template_app (template_hole 21, template_var 3))))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 29,
                     template_app
                      (template_app (template_hole 28, template_var 7),
                       template_var 5)),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 26,
                         template_app
                          (template_app (template_hole 25, template_var 4),
                           template_var 2)),
                       t_empty),
                     template_app
                      (template_app (template_hole 22, template_var 0),
                       template_app (template_hole 21, template_var 2))))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 21, template_var 3)),
                     template_app (template_hole 21, template_var 2))),
                 template_hole 0)))
           ))),
    ("OPnet_Lifting.subnet_oreachable",
     "[| (?\<sigma>, SubnetS ?s ?t)
         : oreachable (opnet ?onp (?p\<^sub>1 \<parallel> ?p\<^sub>2))
            (otherwith ?S (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2))
              (oarrivemsg ?I))
            (other ?U (net_tree_ips (?p\<^sub>1 \<parallel> ?p\<^sub>2)));
         !!\<xi>. ?S \<xi> \<xi>; !!\<xi>. ?U \<xi> \<xi>;
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, uu_).
castmsg (?I \<sigma>) a);
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a ~= \<tau> & (ALL d. a ~= i:deliver(d)) --> ?S (\<sigma> i) (\<sigma>' i));
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a = \<tau> | (EX d. a = i:deliver(d)) --> ?U (\<sigma> i) (\<sigma>' i)) |]
      ==> (?\<sigma>, ?s)
          : oreachable (opnet ?onp ?p\<^sub>1)
             (otherwith ?S (net_tree_ips ?p\<^sub>1) (oarrivemsg ?I))
             (other ?U (net_tree_ips ?p\<^sub>1)) &
          (?\<sigma>, ?t)
          : oreachable (opnet ?onp ?p\<^sub>2)
             (otherwith ?S (net_tree_ips ?p\<^sub>2) (oarrivemsg ?I))
             (other ?U (net_tree_ips ?p\<^sub>2)) &
          net_tree_ips ?p\<^sub>1 Int net_tree_ips ?p\<^sub>2 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app (template_hole 30, template_var 8),
                  template_app
                   (template_app (template_hole 29, template_var 7),
                    template_var 6))),
              template_app
               (template_app
                 (template_app
                   (template_hole 28,
                    template_app
                     (template_app (template_hole 27, template_var 5),
                      template_app
                       (template_app (template_hole 26, template_var 4),
                        template_var 3))),
                  template_app
                   (template_app
                     (template_app (template_hole 25, template_var 2),
                      template_app
                       (template_hole 24,
                        template_app
                         (template_app (template_hole 26, template_var 4),
                          template_var 3))),
                    template_app (template_hole 23, template_var 1))),
                template_app
                 (template_app (template_hole 22, template_var 0),
                  template_app
                   (template_hole 24,
                    template_app
                     (template_app (template_hole 26, template_var 4),
                      template_var 3)))))
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 31,
                   template_app
                    (template_app (template_hole 30, template_var 8),
                     template_var 7)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 28,
                       template_app
                        (template_app (template_hole 27, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app
                        (template_app (template_hole 25, template_var 2),
                         template_app (template_hole 24, template_var 4)),
                       template_app (template_hole 23, template_var 1))),
                   template_app
                    (template_app (template_hole 22, template_var 0),
                     template_app (template_hole 24, template_var 4))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 31,
                     template_app
                      (template_app (template_hole 30, template_var 8),
                       template_var 6)),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app (template_hole 27, template_var 5),
                           template_var 3)),
                       template_app
                        (template_app
                          (template_app (template_hole 25, template_var 2),
                           template_app (template_hole 24, template_var 3)),
                         template_app (template_hole 23, template_var 1))),
                     template_app
                      (template_app (template_hole 22, template_var 0),
                       template_app (template_hole 24, template_var 3))))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 24, template_var 4)),
                     template_app (template_hole 24, template_var 3))),
                 template_hole 15)))
           ))),
    ("OPnet_Lifting.lift_opnet_sync_action",
     "[| !!\<xi>. ?U \<xi> \<xi>;
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, uu_).
castmsg (?I \<sigma>) a);
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a ~= \<tau> & (ALL d. a ~= i:deliver(d)) --> ?S (\<sigma> i) (\<sigma>' i));
         !!i R.
            \<langle>i : ?onp
                          i : R\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
                                    _. oarrivemsg ?I \<sigma>,
                                 other ?U {i} \<rightarrow>)
                                 globala
                                  (%(\<sigma>, a, \<sigma>').
a = \<tau> | (EX d. a = i:deliver(d)) --> ?U (\<sigma> i) (\<sigma>' i)) |]
      ==> opnet ?onp
           ?p \<Turnstile>\<^sub>A (%\<sigma> _. oarrivemsg ?I \<sigma>,
                                    other ?U
                                     (net_tree_ips ?p) \<rightarrow>)
                                    globala
                                     (%(\<sigma>, a, \<sigma>').
   castmsg (?I \<sigma>) a &
   (a ~= \<tau> & (ALL i d. a ~= i:deliver(d)) -->
    (ALL i:net_tree_ips ?p. ?S (\<sigma> i) (\<sigma>' i))) &
   (a = \<tau> | (EX i d. a = i:deliver(d)) -->
    (ALL i:net_tree_ips ?p. ?U (\<sigma> i) (\<sigma>' i)) &
    (ALL i. i ~: net_tree_ips ?p --> \<sigma>' i = \<sigma> i)))",
     template_implication
      ([template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 23,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 0)),
                 t_empty),
               template_app
                (template_app (template_hole 20, template_var 4),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_hole 17, template_app (template_hole 16, t_empty)))
           )))]:
   (string * thm * template) list
### theory "Draft.OPnet_LiftingMoreTemplates"
### 0.428s elapsed time, 0.632s cpu time, 0.123s GC time
val it = (): unit
