Loading theory "Draft.Lib" (required by "Draft.InvariantsMoreTemplates" via "Draft.Invariants")
Loading theory "Draft.TransitionSystems" (required by "Draft.InvariantsMoreTemplates" via "Draft.Invariants")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Lib"
### 0.051s elapsed time, 0.240s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.530s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.250s elapsed time, 0.971s cpu time, 0.115s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.TransitionSystems"
### 0.329s elapsed time, 1.325s cpu time, 0.115s GC time
Loading theory "Draft.Invariants" (required by "Draft.InvariantsMoreTemplates")
### theory "HOL-Library.Nat_Bijection"
### 0.350s elapsed time, 1.399s cpu time, 0.115s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
### theory "Draft.Invariants"
### 0.318s elapsed time, 1.254s cpu time, 0.088s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.958s elapsed time, 3.232s cpu time, 0.703s GC time
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.061s elapsed time, 3.362s cpu time, 0.742s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.894s elapsed time, 4.913s cpu time, 0.869s GC time
Loading theory "Draft.Templates" (required by "Draft.InvariantsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.061s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.InvariantsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.442s elapsed time, 0.478s cpu time, 0.043s GC time
Loading theory "Draft.InvariantsMoreTemplates"
val templateLemmas =
   [("Invariants.step_invariant_true",
     "?p \<TTurnstile>\<^sub>A (%(s, a, s'). True)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3),
           template_app (template_hole 2, t_empty))
         )),
    ("Invariants.reachablep_reachable_eq",
     "reachablep ?A ?I = (%x. x : reachable ?A ?I)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       t_empty)),
    ("Invariants.invariant_restrict_inD",
     "?A \<TTurnstile> ?P ==> ?A \<TTurnstile> (?QI \<rightarrow>) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_hole 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Invariants.init_empty_reachable_empty",
     "init ?A = {} ==> reachable ?A ?I = {}",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 1))),
    ("Invariants.reachable_weaken_TT",
     "?s : reachable ?A ?I ==> ?s : reachable ?A TT",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Invariants.invariant_initE",
     "[| ?A \<TTurnstile> (?I \<rightarrow>) ?P; ?s : init ?A |] ==> ?P ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 3))
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Invariants.invariantD",
     "[| ?A \<TTurnstile> (?I \<rightarrow>) ?P; ?s : reachable ?A ?I |]
      ==> ?P ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Invariants.invariant_arbitraryI",
     "(!!s. s : reachable ?A ?I ==> ?P s) ==>
      ?A \<TTurnstile> (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Invariants.reachable_weakenE",
     "[| ?s : reachable ?A ?P; !!a. ?P a ==> ?Q a |]
      ==> ?s : reachable ?A ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Invariants.invariant_weakenE",
     "[| ?A \<TTurnstile> (?PI \<rightarrow>) ?P; !!s. ?P s ==> ?Q s;
         !!a. ?QI a ==> ?PI a |]
      ==> ?A \<TTurnstile> (?QI \<rightarrow>) ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             template_var 1)
           ))),
    ("Invariants.step_invariant_weakenE",
     "[| ?A \<TTurnstile>\<^sub>A (?PI \<rightarrow>) ?P;
         !!t. ?P t ==> ?Q t; !!a. ?QI a ==> ?PI a |]
      ==> ?A \<TTurnstile>\<^sub>A (?QI \<rightarrow>) ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             template_var 1)
           ))),
    ("Invariants.step_invariantD",
     "[| ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?P;
         ?s : reachable ?A ?I; (?s, ?a, ?s') : automaton.trans ?A; ?I ?a |]
      ==> ?P (?s, ?a, ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))),
              template_app (template_hole 0, template_var 5))
            ),
        template_predicate (template_app (template_var 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Invariants.step_invariantI",
     "(!!s a s'.
          [| s : reachable ?A ?I; (s, a, s') : automaton.trans ?A; ?I a |]
          ==> ?P (s, a, s')) ==>
      ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Invariants.step_invariantE",
     "[| ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?P;
         ?s : reachable ?A ?I; (?s, ?a, ?s') : automaton.trans ?A; ?I ?a;
         ?P (?s, ?a, ?s') ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app (template_hole 0, template_var 6))
            ),
        template_predicate (template_app (template_var 5, template_var 2)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_var 4,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Invariants.reachable_icases",
     "[| ?s : reachable ?A ?I; ?s : init ?A ==> ?P;
         !!s a.
            [| s : reachable ?A ?I; (s, a, ?s) : automaton.trans ?A; ?I a |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app (template_hole 6, template_var 2))
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Invariants.step_invariant_weaken_with_invariantE",
     "[| ?A \<TTurnstile> (?I \<rightarrow>) ?P;
         ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?Q;
         !!s a s'.
            [| ?P s; ?P s'; ?Q (s, a, s'); ?I a |] ==> ?R (s, a, s') |]
      ==> ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3),
             template_var 0)
           ))),
    ("Invariants.invariantI",
     "[| !!s. s : init ?A ==> ?P s;
         !!s a s'.
            [| s : reachable ?A ?I; ?P s; (s, a, s') : automaton.trans ?A;
               ?I a |]
            ==> ?P s' |]
      ==> ?A \<TTurnstile> (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Invariants.step_invariant_pairI",
     "(!!\<xi> p \<xi>' p' a.
          [| (\<xi>, p) : reachable ?A ?I;
             ((\<xi>, p), a, \<xi>', p') : automaton.trans ?A; ?I a |]
          ==> ?P ((\<xi>, p), a, \<xi>', p')) ==>
      ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Invariants.step_invariant_arbitraryI",
     "(!!\<xi> p a \<xi>' p'.
          [| (\<xi>, p) : reachable ?A ?I;
             ((\<xi>, p), a, \<xi>', p') : automaton.trans ?A; ?I a |]
          ==> ?P ((\<xi>, p), a, \<xi>', p')) ==>
      ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Invariants.step_to_invariantI",
     "[| ?A \<TTurnstile>\<^sub>A (?I \<rightarrow>) ?Q;
         !!s. s : init ?A ==> ?P s;
         !!s s' a.
            [| s : reachable ?A ?I; ?P s; ?Q (s, a, s'); ?I a |]
            ==> ?P s' |]
      ==> ?A \<TTurnstile> (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Invariants.invariant_pairI",
     "[| !!\<xi> p. (\<xi>, p) : init ?A ==> ?P (\<xi>, p);
         !!\<xi> p \<xi>' p' a.
            [| (\<xi>, p) : reachable ?A ?I; ?P (\<xi>, p);
               ((\<xi>, p), a, \<xi>', p') : automaton.trans ?A; ?I a |]
            ==> ?P (\<xi>', p') |]
      ==> ?A \<TTurnstile> (?I \<rightarrow>) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Invariants.reachable_pair_induct",
     "[| (?\<xi>, ?p) : reachable ?A ?I;
         !!\<xi> p. (\<xi>, p) : init ?A ==> ?P \<xi> p;
         !!\<xi> p \<xi>' p' a.
            [| (\<xi>, p) : reachable ?A ?I; ?P \<xi> p;
               ((\<xi>, p), a, \<xi>', p') : automaton.trans ?A; ?I a |]
            ==> ?P \<xi>' p' |]
      ==> ?P ?\<xi> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 4), template_var 3)
           )))]:
   (string * thm * template) list
### theory "Draft.InvariantsMoreTemplates"
### 0.312s elapsed time, 0.432s cpu time, 0.055s GC time
val it = (): unit
