   [("Toy.not_eq_newpkt_pkt", "~ eq_newpkt (Pkt ?no ?sid)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("Toy.msg_ok_Newpkt", "msg_ok ?\<sigma> (Newpkt ?data ?dst)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Toy.toy_labels_not_empty",
     "labels \<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?p ~= {}",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_hole 0)
         )),
    ("Toy.clear_locals_but_not_globals",
     "state.id (clear_locals ?\<xi>) = state.id ?\<xi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Toy.clear_locals_but_not_globals",
     "nhid (clear_locals ?\<xi>) = nhid ?\<xi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Toy.clear_locals_but_not_globals",
     "no (clear_locals ?\<xi>) = no ?\<xi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Toy.msg_sender_simps", "msg_sender (Pkt ?d ?sid) = ?sid",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Toy.msg_ok_newpkt", "msg_ok ?\<sigma> (newpkt (?data, ?dst))",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Toy.toy_ex_label",
     "EX l. l : labels \<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?p",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Toy.pkt_simp", "pkt (?no, ?sid) = Pkt ?no ?sid",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Toy.oaodv_control_within",
     "control_within \<Gamma>\<^sub>T\<^sub>O\<^sub>Y (init (optoy ?i))",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 5),
                   template_var 0)),
               template_hole 0)))
         )),
    ("Toy.toy_control_within",
     "control_within \<Gamma>\<^sub>T\<^sub>O\<^sub>Y (init (ptoy ?i))",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 1, template_hole 5)),
               template_hole 0)))
         )),
    ("Toy.some_neq_not_eq", "(SOME x. x ~= ?i) ~= ?i",
     template_negation
      (
         template_equation
          (template_app (template_hole 0, t_empty), template_var 0)
         )),
    ("Toy.less_seqp",
     "(?l1.0 < ?l2.0) = (nat_of_seqp ?l1.0 < nat_of_seqp ?l2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.less_eq_seqp",
     "(?l1.0 <= ?l2.0) = (nat_of_seqp ?l1.0 <= nat_of_seqp ?l2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.nos_inc_simp",
     "nos_inc ?\<xi> ?\<xi>' = (no ?\<xi> <= no ?\<xi>')",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.toy_trans",
     "automaton.trans (ptoy ?i) =
      seqp_sos \<Gamma>\<^sub>T\<^sub>O\<^sub>Y",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)),
       template_app (template_hole 2, template_hole 1))),
    ("Toy.nos_incD", "nos_inc ?\<xi> ?\<xi>' ==> no ?\<xi> <= no ?\<xi>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.otoy_trans",
     "automaton.trans (optoy ?i) =
      oseqp_sos \<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?i",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Toy.msg_ok_Pkt",
     "msg_ok ?\<sigma> (Pkt ?data ?src) = (?data <= no (?\<sigma> ?src))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_var 2, template_var 0))))),
    ("Toy.is_msg_inv_id",
     "?\<xi>' : is_newpkt ?\<xi> ==> state.id ?\<xi>' = state.id ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_nhid",
     "?\<xi>' : is_newpkt ?\<xi> ==> nhid ?\<xi>' = nhid ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_no",
     "?\<xi>' : is_newpkt ?\<xi> ==> no ?\<xi>' = no ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_sid",
     "?\<xi>' : is_newpkt ?\<xi> ==> sid ?\<xi>' = sid ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_msg",
     "?\<xi>' : is_newpkt ?\<xi> ==> msg ?\<xi>' = msg ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_id",
     "?\<xi>' : is_pkt ?\<xi> ==> state.id ?\<xi>' = state.id ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_nhid",
     "?\<xi>' : is_pkt ?\<xi> ==> nhid ?\<xi>' = nhid ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_no",
     "?\<xi>' : is_pkt ?\<xi> ==> no ?\<xi>' = no ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.is_msg_inv_msg",
     "?\<xi>' : is_pkt ?\<xi> ==> msg ?\<xi>' = msg ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Toy.msg_ok_pkt",
     "msg_ok ?\<sigma> (pkt (?data, ?src)) =
      (?data <= no (?\<sigma> ?src))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_var 2, template_var 0))))),
    ("Toy.toy_proc_cases",
     "?p : ctermsl (\<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?pn) ==>
      ?p : ctermsl (\<Gamma>\<^sub>T\<^sub>O\<^sub>Y PToy)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("Toy.initiali_toy", "initiali ?i (init (optoy ?i)) (init (ptoy ?i))",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 10, template_var 0),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0)),
                 template_hole 4))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_hole 5)),
               template_hole 4)))
         )),
    ("Toy.\<sigma>\<^sub>O\<^sub>T\<^sub>O\<^sub>Y_labels",
     "(?\<sigma>, ?p) : \<sigma>\<^sub>O\<^sub>T\<^sub>O\<^sub>Y ==>
      labels \<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?p = {PToy-:0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_hole 8)
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_hole 0)))),
    ("Toy.id_constant",
     "ptoy
       ?i \<TTurnstile> onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (%(\<xi>, uu_). state.id \<xi> = ?i)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_var 0)),
                   template_app (template_hole 7, template_hole 6)),
                 template_hole 5)),
             template_hole 4),
           template_app
            (template_app (template_hole 3, template_hole 6),
             template_app (template_hole 2, t_empty)))
         )),
    ("Toy.\<sigma>\<^sub>T\<^sub>O\<^sub>Y_labels",
     "(?\<xi>, ?p) : \<sigma>\<^sub>T\<^sub>O\<^sub>Y ?i ==>
      labels \<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?p = {PToy-:0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_app (template_hole 8, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_hole 0)))),
    ("Toy.msg_ok_other_nos_inc",
     "[| msg_ok ?\<sigma> ?m; other nos_inc {?i} ?\<sigma> ?\<sigma>' |]
      ==> msg_ok ?\<sigma>' ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 0)),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), template_var 2)
           ))),
    ("Toy.anycast_weakenE",
     "[| anycast ?P ?a; !!m. ?P m ==> ?Q m |] ==> anycast ?Q ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Toy.msg_ok_no_leq_no",
     "[| msg_ok ?\<sigma> ?m;
         ALL j. no (?\<sigma> j) <= no (?\<sigma>' j) |]
      ==> msg_ok ?\<sigma>' ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 1)
           ))),
    ("Toy.seq_nos_incs'",
     "ptoy
       ?i \<TTurnstile>\<^sub>A (%((\<xi>, uu_), uu_, \<xi>', uu_).
                                    nos_inc \<xi> \<xi>')",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_var 0)),
                   template_app (template_hole 8, template_hole 7)),
                 template_hole 6)),
             template_hole 5),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))
         )),
    ("Toy.msg_okI",
     "(!!num' sid'. ?m = Pkt num' sid' ==> num' <= no (?\<sigma> sid')) ==>
      msg_ok ?\<sigma> ?m",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Toy.fst_initmissing_netgmap_pair_fst",
     "fst (initmissing
            (netgmap (%(p, q). (fst (Fun.id p), snd (Fun.id p), q)) ?s)) =
      fst (initmissing (netgmap fst ?s))",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Toy.seq_nos_incs",
     "ptoy
       ?i \<TTurnstile>\<^sub>A onll \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                                 (%((\<xi>, uu_), uu_, \<xi>', uu_).
                                     nos_inc \<xi> \<xi>')",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_var 0)),
                   template_app (template_hole 9, template_hole 8)),
                 template_hole 7)),
             template_hole 6),
           template_app
            (template_app (template_hole 5, template_hole 8),
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))))
         )),
    ("Toy.toy_ex_labelE",
     "[| ALL l:labels \<Gamma>\<^sub>T\<^sub>O\<^sub>Y ?p. ?P l ?p;
         EX p l. ?P l p ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2)),
              t_empty)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 1, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Toy.oseq_msg_ok",
     "optoy
       ?i \<Turnstile>\<^sub>A (act TT, other ?U {?i} \<rightarrow>)
                                globala
                                 (%(\<sigma>, a, uu_).
                                     anycast (msg_ok \<sigma>) a)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 13),
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 1)),
                   template_hole 10)),
               template_app (template_hole 9, template_hole 8)),
             template_app
              (template_app (template_hole 7, template_var 0),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))
         )),
    ("Toy.sender_ip_valid",
     "ptoy
       ?i \<TTurnstile>\<^sub>A onll \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                                 (%((\<xi>, uu_), a, uu_).
                                     anycast
(%m. msg_sender m = state.id \<xi>) a)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 0)),
                   template_app (template_hole 11, template_hole 10)),
                 template_hole 9)),
             template_hole 8),
           template_app
            (template_app (template_hole 7, template_hole 10),
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty))))
         )),
    ("Toy.oseq_id_constant",
     "optoy
       ?i \<Turnstile> (act TT, other ?ANY {?i} \<rightarrow>)
                        onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (seql ?i (%(\<xi>, uu_). state.id \<xi> = ?i))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 13),
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 1)),
                   template_hole 10)),
               template_app (template_hole 9, template_hole 8)),
             template_app
              (template_app (template_hole 7, template_var 0),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_app
            (template_app (template_hole 4, template_hole 11),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, t_empty))))
         )),
    ("Toy.not_in_net_ips_fst_init_missing",
     "?i ~: net_ips ?\<sigma> ==>
      fst (initmissing (netgmap fst ?\<sigma>)) ?i = toy_init ?i",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_app (template_hole 11, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4),
                   template_var 1),
                 template_app (template_hole 3, t_empty)),
               template_app (template_hole 1, t_empty)),
             template_app (template_hole 1, t_empty)),
           template_hole 0)))),
    ("Toy.oseq_bigger_than_next",
     "optoy
       ?i \<Turnstile> (otherwith nos_inc {?i} (orecvmsg msg_ok),
                        other nos_inc {?i} \<rightarrow>)
                        global
                         (%\<sigma>.
                             no (\<sigma> ?i)
                             <= no (\<sigma> (nhid (\<sigma> ?i))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_app (template_hole 15, template_hole 14),
                     template_app
                      (template_app (template_hole 13, template_hole 12),
                       template_var 0)),
                   template_hole 11)),
               template_app
                (template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_hole 7)),
                 template_app (template_hole 6, template_hole 5))),
             template_app
              (template_app (template_hole 4, template_hole 9),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7))),
           template_app (template_hole 3, t_empty))
         )),
    ("Toy.oseq_nos_incs",
     "optoy
       ?i \<Turnstile>\<^sub>A (act TT, other ?ANY {?i} \<rightarrow>)
                                onll \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                                 (seqll ?i
                                   (%((\<xi>, uu_), uu_, \<xi>', uu_).
 nos_inc \<xi> \<xi>'))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app
                    (template_app (template_hole 16, template_hole 15),
                     template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_var 1)),
                   template_hole 12)),
               template_app (template_hole 11, template_hole 10)),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 7))),
           template_app
            (template_app (template_hole 6, template_hole 13),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, t_empty)))))
         )),
    ("Toy.nhid_eq_i",
     "ptoy
       ?i \<TTurnstile> onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (%(\<xi>, l).
                             l : {PToy-:2..PToy-:8} --> nhid \<xi> = ?i)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_app
                    (template_hole 17,
                     template_app (template_hole 16, template_var 0)),
                   template_app (template_hole 15, template_hole 14)),
                 template_hole 13)),
             template_hole 12),
           template_app
            (template_app (template_hole 11, template_hole 14),
             template_app (template_hole 10, t_empty)))
         )),
    ("Toy.nhid_eq_id",
     "ptoy
       ?i \<TTurnstile> onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (%(\<xi>, l).
                             l : {PToy-:2..PToy-:8} -->
                             nhid \<xi> = state.id \<xi>)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_app
                    (template_hole 18,
                     template_app (template_hole 17, template_var 0)),
                   template_app (template_hole 16, template_hole 15)),
                 template_hole 14)),
             template_hole 13),
           template_app
            (template_app (template_hole 12, template_hole 15),
             template_app (template_hole 11, t_empty)))
         )),
    ("Toy.seq_no_leq_num",
     "ptoy
       ?i \<TTurnstile> onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (%(\<xi>, l).
                             l : {PToy-:7..PToy-:8} -->
                             no \<xi> <= num \<xi>)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_app
                    (template_hole 19,
                     template_app (template_hole 18, template_var 0)),
                   template_app (template_hole 17, template_hole 16)),
                 template_hole 15)),
             template_hole 14),
           template_app
            (template_app (template_hole 13, template_hole 16),
             template_app (template_hole 12, t_empty)))
         )),
    ("Toy.seq_msg_ok",
     "ptoy
       ?i \<TTurnstile>\<^sub>A onll \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                                 (%((\<xi>, uu_), a, uu_).
                                     anycast
(%m. case m of Pkt num' sid' => num' = no \<xi> & sid' = ?i
     | Newpkt nat1 nat2 => True)
a)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_app
                    (template_hole 15,
                     template_app (template_hole 14, template_var 0)),
                   template_app (template_hole 13, template_hole 12)),
                 template_hole 11)),
             template_hole 10),
           template_app
            (template_app (template_hole 9, template_hole 12),
             template_app
              (template_hole 8, template_app (template_hole 7, t_empty))))
         )),
    ("Toy.oreceived_msg_ok",
     "optoy
       ?i \<Turnstile> (otherwith nos_inc {?i} (orecvmsg msg_ok),
                        other nos_inc {?i} \<rightarrow>)
                        onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (%(\<sigma>, l).
                             l : {PToy-:1..} -->
                             msg_ok \<sigma> (msg (\<sigma> ?i)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_app (template_hole 20, template_hole 19),
                     template_app
                      (template_app (template_hole 18, template_hole 17),
                       template_var 0)),
                   template_hole 16)),
               template_app
                (template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_app
                    (template_app (template_hole 13, template_var 0),
                     template_hole 12)),
                 template_app (template_hole 11, template_hole 10))),
             template_app
              (template_app (template_hole 9, template_hole 14),
               template_app
                (template_app (template_hole 13, template_var 0),
                 template_hole 12))),
           template_app
            (template_app (template_hole 8, template_hole 17),
             template_app (template_hole 7, t_empty)))
         )),
    ("Toy.all_nos_inc",
     "optoy
       ?i \<Turnstile>\<^sub>A (otherwith nos_inc {?i} ?S,
                                other nos_inc {?i} \<rightarrow>)
                                onll \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                                 (%((\<sigma>, uu_), a, \<sigma>', uu_).
                                     ALL j.
  nos_inc (\<sigma> j) (\<sigma>' j))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_app (template_hole 15, template_hole 14),
                     template_app
                      (template_app (template_hole 13, template_hole 12),
                       template_var 1)),
                   template_hole 11)),
               template_app
                (template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 7)),
                 template_var 0)),
             template_app
              (template_app (template_hole 6, template_hole 9),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 7))),
           template_app
            (template_app (template_hole 5, template_hole 12),
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))))
         )),
    ("Toy.opar_bigger_than_next",
     "optoy
       ?i \<langle>\<langle>\<^bsub>?i\<^esub> qmsg \<Turnstile> (otherwith
                             nos_inc {?i} (orecvmsg msg_ok),
                            other nos_inc {?i} \<rightarrow>)
                            global
                             (%\<sigma>.
                                 no (\<sigma> ?i)
                                 <= no (\<sigma> (nhid (\<sigma> ?i))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 20,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 19, template_hole 18),
                           template_app
                            (template_app
                              (template_hole 17, template_hole 16),
                             template_var 0)),
                         template_hole 15)),
                     template_var 0),
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_hole 11)),
                     template_hole 15))),
               template_app
                (template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_hole 7)),
                 template_app (template_hole 6, template_hole 5))),
             template_app
              (template_app (template_hole 4, template_hole 9),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7))),
           template_app (template_hole 3, t_empty))
         )),
    ("Toy.onode_bigger_than_next",
     "\<langle>?i : optoy
                     ?i \<langle>\<langle>\<^bsub>?i\<^esub> qmsg : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile> (otherwith
                                   nos_inc {?i} (oarrivemsg msg_ok),
                                  other nos_inc {?i} \<rightarrow>)
                                  global
                                   (%\<sigma>.
 no (\<sigma> ?i) <= no (\<sigma> (nhid (\<sigma> ?i))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app
                    (template_app (template_hole 21, template_var 1),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 20,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 19, template_hole 18),
                               template_app
                                (template_app
                                  (template_hole 17, template_hole 16),
                                 template_var 1)),
                             template_hole 15)),
                         template_var 1),
                       template_app
                        (template_app
                          (template_app
                            (template_hole 14, template_hole 13),
                           template_app
                            (template_hole 12, template_hole 11)),
                         template_hole 15))),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 7)),
                 template_app (template_hole 6, template_hole 5))),
             template_app
              (template_app (template_hole 4, template_hole 9),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 7))),
           template_app (template_hole 3, t_empty))
         )),
    ("Toy.oseq_nhid_eq_i",
     "optoy
       ?i \<Turnstile> (act TT, other ?ANY {?i} \<rightarrow>)
                        onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (seql ?i
                           (%(\<xi>, l).
                               l : {PToy-:2..PToy-:8} -->
                               nhid \<xi> = ?i))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 23,
                 template_app
                  (template_app
                    (template_app (template_hole 22, template_hole 21),
                     template_app
                      (template_app (template_hole 20, template_hole 19),
                       template_var 1)),
                   template_hole 18)),
               template_app (template_hole 17, template_hole 16)),
             template_app
              (template_app (template_hole 15, template_var 0),
               template_app
                (template_app (template_hole 14, template_var 1),
                 template_hole 13))),
           template_app
            (template_app (template_hole 12, template_hole 19),
             template_app
              (template_app (template_hole 11, template_var 1),
               template_app (template_hole 10, t_empty))))
         )),
    ("Toy.oseq_nhid_eq_id",
     "optoy
       ?i \<Turnstile> (act TT, other ?ANY {?i} \<rightarrow>)
                        onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (seql ?i
                           (%(\<xi>, l).
                               l : {PToy-:2..PToy-:8} -->
                               nhid \<xi> = state.id \<xi>))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_app (template_hole 23, template_hole 22),
                     template_app
                      (template_app (template_hole 21, template_hole 20),
                       template_var 1)),
                   template_hole 19)),
               template_app (template_hole 18, template_hole 17)),
             template_app
              (template_app (template_hole 16, template_var 0),
               template_app
                (template_app (template_hole 15, template_var 1),
                 template_hole 14))),
           template_app
            (template_app (template_hole 13, template_hole 20),
             template_app
              (template_app (template_hole 12, template_var 1),
               template_app (template_hole 11, t_empty))))
         )),
    ("Toy.opnet_bigger_than_next",
     "opnet (%i. optoy i \<langle>\<langle>\<^bsub>i\<^esub> qmsg)
       ?n \<Turnstile> (otherwith nos_inc (net_tree_ips ?n)
                         (oarrivemsg msg_ok),
                        other nos_inc (net_tree_ips ?n) \<rightarrow>)
                        global
                         (%\<sigma>.
                             ALL i:net_tree_ips ?n.
                                no (\<sigma> i)
                                <= no (\<sigma> (nhid (\<sigma> i))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app (template_hole 21, t_empty),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app (template_hole 8, template_var 0)),
                 template_app (template_hole 7, template_hole 6))),
             template_app
              (template_app (template_hole 5, template_hole 9),
               template_app (template_hole 8, template_var 0))),
           template_app (template_hole 4, t_empty))
         )),
    ("Toy.node_local_nos_inc",
     "\<langle>?i : optoy
                     ?i \<langle>\<langle>\<^bsub>?i\<^esub> qmsg : ?R\<^sub>i\<rangle>\<^sub>o \<Turnstile>\<^sub>A (%\<sigma>
       _. oarrivemsg (%_ _. True) \<sigma>,
    other (%_ _. True) {?i} \<rightarrow>)
    globala
     (%(\<sigma>, uu_, \<sigma>'). nos_inc (\<sigma> ?i) (\<sigma>' ?i))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app
                    (template_app (template_hole 19, template_var 1),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 18,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 17, template_hole 16),
                               template_app
                                (template_app
                                  (template_hole 15, template_hole 14),
                                 template_var 1)),
                             template_hole 13)),
                         template_var 1),
                       template_app
                        (template_app
                          (template_app
                            (template_hole 12, template_hole 11),
                           template_app
                            (template_hole 10, template_hole 9)),
                         template_hole 13))),
                   template_var 0)),
               t_empty),
             template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4))),
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))
         )),
    ("Toy.oseq_no_leq_num",
     "optoy
       ?i \<Turnstile> (act TT, other ?ANY {?i} \<rightarrow>)
                        onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (seql ?i
                           (%(\<xi>, l).
                               l : {PToy-:7..PToy-:8} -->
                               no \<xi> <= num \<xi>))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 25,
                 template_app
                  (template_app
                    (template_app (template_hole 24, template_hole 23),
                     template_app
                      (template_app (template_hole 22, template_hole 21),
                       template_var 1)),
                   template_hole 20)),
               template_app (template_hole 19, template_hole 18)),
             template_app
              (template_app (template_hole 17, template_var 0),
               template_app
                (template_app (template_hole 16, template_var 1),
                 template_hole 15))),
           template_app
            (template_app (template_hole 14, template_hole 21),
             template_app
              (template_app (template_hole 13, template_var 1),
               template_app (template_hole 12, t_empty))))
         )),
    ("Toy.is_pkt_handler_num_leq_no",
     "optoy
       ?i \<Turnstile> (otherwith nos_inc {?i} (orecvmsg msg_ok),
                        other nos_inc {?i} \<rightarrow>)
                        onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                         (%(\<sigma>, l).
                             l : {PToy-:6..PToy-:10} -->
                             num (\<sigma> ?i)
                             <= no (\<sigma> (sid (\<sigma> ?i))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 27,
                 template_app
                  (template_app
                    (template_app (template_hole 26, template_hole 25),
                     template_app
                      (template_app (template_hole 24, template_hole 23),
                       template_var 0)),
                   template_hole 22)),
               template_app
                (template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_app
                    (template_app (template_hole 19, template_var 0),
                     template_hole 18)),
                 template_app (template_hole 17, template_hole 16))),
             template_app
              (template_app (template_hole 15, template_hole 20),
               template_app
                (template_app (template_hole 19, template_var 0),
                 template_hole 18))),
           template_app
            (template_app (template_hole 14, template_hole 23),
             template_app (template_hole 13, t_empty)))
         )),
    ("Toy.bigger_than_next",
     "wf_net_tree ?n ==>
      AWN_SOS.closed
       (pnet (%i. ptoy i \<langle>\<langle> qmsg)
         ?n) \<TTurnstile> netglobal
                            (%\<sigma>.
                                ALL i.
                                   no (\<sigma> i)
                                   <= no (\<sigma> (nhid (\<sigma> i))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app (template_hole 19, t_empty),
                   template_app
                    (template_app (template_hole 16, t_empty),
                     template_var 0))),
               template_hole 5),
             template_app (template_hole 4, t_empty))
           ))),
    ("Toy.ocnet_bigger_than_next",
     "oclosed
       (opnet (%i. optoy i \<langle>\<langle>\<^bsub>i\<^esub> qmsg)
         ?n) \<Turnstile> (%_ _ _. True,
                           other nos_inc (net_tree_ips ?n) \<rightarrow>)
                           global
                            (%\<sigma>.
                                ALL i:net_tree_ips ?n.
                                   no (\<sigma> i)
                                   <= no (\<sigma> (nhid (\<sigma> i))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 23,
                 template_app
                  (template_app (template_hole 22, t_empty),
                   template_app
                    (template_app (template_hole 19, t_empty),
                     template_var 0))),
               t_empty),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app (template_hole 5, template_var 0))),
           template_app (template_hole 4, t_empty))
         )),
    ("Toy.oreceived_msg_inv",
     "[| !!\<sigma> \<sigma>' m.
            [| ?P \<sigma> m; other ?Q {?i} \<sigma> \<sigma>' |]
            ==> ?P \<sigma>' m;
         !!\<sigma> m.
            ?P \<sigma> m ==>
            ?P (\<sigma>(?i := \<sigma> ?i(| msg := m |))) m |]
      ==> optoy
           ?i \<Turnstile> (otherwith ?Q {?i} (orecvmsg ?P),
                            other ?Q {?i} \<rightarrow>)
                            onl \<Gamma>\<^sub>T\<^sub>O\<^sub>Y
                             (%(\<sigma>, l).
                                 l : {PToy-:1} -->
                                 ?P \<sigma> (msg (\<sigma> ?i)))",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_app (template_hole 16, template_hole 15),
                       template_app
                        (template_app (template_hole 14, template_hole 13),
                         template_var 0)),
                     template_hole 12)),
                 template_app
                  (template_app
                    (template_app (template_hole 11, template_var 1),
                     template_app
                      (template_app (template_hole 21, template_var 0),
                       template_hole 20)),
                   template_app (template_hole 10, template_var 2))),
               template_app
                (template_app (template_hole 22, template_var 1),
                 template_app
                  (template_app (template_hole 21, template_var 0),
                   template_hole 20))),
             template_app
              (template_app (template_hole 9, template_hole 13),
               template_app (template_hole 8, t_empty)))
           )))]
