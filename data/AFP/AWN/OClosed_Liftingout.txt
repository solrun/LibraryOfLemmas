Loading theory "Draft.Lib" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting" via "Draft.AWN")
Loading theory "Draft.TransitionSystems" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting" via "Draft.OAWN_SOS")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Lib"
### 0.041s elapsed time, 0.194s cpu time, 0.000s GC time
Loading theory "Draft.AWN" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class msg = type +
  fixes newpkt :: "nat * nat => 'a"
    and eq_newpkt :: "'a => bool"
  assumes "eq_newpkt_eq": "!!d i. eq_newpkt (newpkt (d, i))"
### theory "HOL-Library.Function_Algebras"
### 0.141s elapsed time, 0.579s cpu time, 0.037s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.TransitionSystems"
### 0.315s elapsed time, 1.263s cpu time, 0.125s GC time
Loading theory "Draft.Invariants" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting" via "Draft.OInvariants")
### theory "HOL-Library.Nat_Bijection"
### 0.322s elapsed time, 1.288s cpu time, 0.125s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.221s elapsed time, 0.879s cpu time, 0.089s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
### theory "Draft.Invariants"
### 0.347s elapsed time, 1.364s cpu time, 0.214s GC time
Loading theory "Draft.OInvariants" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting")
Proofs for inductive predicate(s) "oreachablep"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "Draft.OInvariants"
### 0.817s elapsed time, 3.078s cpu time, 0.840s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Stream"
### 1.179s elapsed time, 4.493s cpu time, 1.054s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.804s elapsed time, 2.493s cpu time, 0.340s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.440s elapsed time, 8.090s cpu time, 2.183s GC time
Loading theory "Draft.Templates" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OClosed_LiftingMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.555s elapsed time, 1.142s cpu time, 0.078s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class tau = type +
  fixes tau :: "'a"
instantiation
  seq_action :: (type) tau
  tau_seq_action == tau :: 'a seq_action
instantiation
  node_action :: (type) tau
  tau_node_action == tau :: 'a node_action
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.AWN"
### 7.212s elapsed time, 15.323s cpu time, 3.551s GC time
Loading theory "Draft.OAWN_SOS" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting" via "Draft.ONode_Lifting")
Proofs for inductive predicate(s) "oseqp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "oparp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "onode_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "opnet_sosp"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "ocnet_sosp"
  Proving monotonicity ...
### theory "Draft.OAWN_SOS"
### 3.357s elapsed time, 3.597s cpu time, 0.288s GC time
Loading theory "Draft.ONode_Lifting" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting")
Loading theory "Draft.OPnet" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting" via "Draft.OPnet_Lifting")
### theory "Draft.OPnet"
### 0.186s elapsed time, 0.378s cpu time, 0.000s GC time
### theory "Draft.ONode_Lifting"
### 0.300s elapsed time, 0.485s cpu time, 0.000s GC time
Loading theory "Draft.OPnet_Lifting" (required by "Draft.OClosed_LiftingMoreTemplates" via "Draft.OClosed_Lifting")
### theory "Draft.OPnet_Lifting"
### 0.326s elapsed time, 0.414s cpu time, 0.119s GC time
Loading theory "Draft.OClosed_Lifting" (required by "Draft.OClosed_LiftingMoreTemplates")
### theory "Draft.OClosed_Lifting"
### 0.050s elapsed time, 0.050s cpu time, 0.000s GC time
Loading theory "Draft.OClosed_LiftingMoreTemplates"
val templateLemmas =
   [("OClosed_Lifting.trans_fst_oclosed_fst1",
     "(?s, connect(?i, ?i'), ?s') : ocnet_sos (automaton.trans ?p) ==>
      (?s, connect(?i, ?i'), ?s') : automaton.trans ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2)),
                    template_var 1))),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2)),
                   template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("OClosed_Lifting.trans_fst_oclosed_fst3",
     "(?s, ?i:deliver(?d), ?s') : ocnet_sos (automaton.trans ?p) ==>
      (?s, ?i:deliver(?d), ?s') : automaton.trans ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2)),
                    template_var 1))),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2)),
                   template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("OClosed_Lifting.trans_fst_oclosed_fst2",
     "(?s, disconnect(?i, ?i'), ?s') : ocnet_sos (automaton.trans ?p) ==>
      (?s, disconnect(?i, ?i'), ?s') : automaton.trans ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2)),
                    template_var 1))),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2)),
                   template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("OClosed_Lifting.inclosed_closed",
     "opnet ?np
       ?p \<Turnstile> (otherwith (=) (net_tree_ips ?p) inoclosed,
                        ?U \<rightarrow>) ?P ==>
      oclosed
       (opnet ?np ?p) \<Turnstile> (%_ _ _. True, ?U \<rightarrow>) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_app (template_hole 5, template_var 2)),
                    template_hole 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_var 2))),
                 t_empty),
               template_var 1),
             template_var 0)
           ))),
    ("OClosed_Lifting.oclosed_oreachable_oreachable",
     "(?\<sigma>, ?\<zeta>)
      : oreachable (oclosed (opnet ?onp ?p)) (%_ _ _. True) ?U ==>
      (?\<sigma>, ?\<zeta>) : oreachable (opnet ?onp ?p) (%_ _ _. True) ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, t_empty),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1))),
                  t_empty),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 t_empty),
               template_var 0))
           ))),
    ("OClosed_Lifting.oclosed_oreachable_inclosed",
     "(?\<sigma>, ?\<zeta>)
      : oreachable (oclosed (opnet ?np ?p)) (%_ _ _. True) ?U ==>
      (?\<sigma>, ?\<zeta>)
      : oreachable (opnet ?np ?p)
         (otherwith (=) (net_tree_ips ?p) inoclosed) ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, t_empty),
                      template_app
                       (template_app (template_hole 5, template_var 2),
                        template_var 1))),
                  t_empty),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.OClosed_LiftingMoreTemplates"
### 0.385s elapsed time, 0.508s cpu time, 0.000s GC time
val it = (): unit
