Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver")
Loading theory "HOL-Combinatorics.Stirling" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver" via "HOL-Library.Monad_Syntax")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.102s elapsed time, 0.396s cpu time, 0.026s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver")
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Monad_Syntax"
### 0.034s elapsed time, 0.132s cpu time, 0.000s GC time
Loading theory "HOL-Library.Cancellation" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Library.Multiset")
### theory "HOL-Combinatorics.Transposition"
### 0.147s elapsed time, 0.566s cpu time, 0.026s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
structure Eisbach_Rule_Insts: sig end
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
consts
  stirling_row_aux :: "'a => 'a => 'a list => 'a list"
### theory "HOL-Combinatorics.Stirling"
### 0.276s elapsed time, 1.076s cpu time, 0.083s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Library.Function_Algebras"
### 0.103s elapsed time, 0.408s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Eisbach.Eisbach"
### 0.438s elapsed time, 1.714s cpu time, 0.138s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.477s elapsed time, 1.907s cpu time, 0.180s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.FuncSet"
### 0.475s elapsed time, 1.898s cpu time, 0.180s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Set_Algebras"
### 0.231s elapsed time, 0.949s cpu time, 0.069s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.375s elapsed time, 1.500s cpu time, 0.219s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Disjoint_Sets"
### 0.458s elapsed time, 1.647s cpu time, 0.597s GC time
Loading theory "Card_Partitions.Injectivity_Solver" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Card_Partitions.Injectivity_Solver"
### 0.429s elapsed time, 1.689s cpu time, 0.172s GC time
Loading theory "Card_Partitions.Set_Partition" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Card_Partitions.Set_Partition"
### 0.165s elapsed time, 0.650s cpu time, 0.107s GC time
Loading theory "Card_Partitions.Card_Partitions" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.115s elapsed time, 4.241s cpu time, 0.885s GC time
Loading theory "HOL-ex.Birthday_Paradox" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
### theory "HOL-ex.Birthday_Paradox"
### 0.054s elapsed time, 0.222s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
### theory "Card_Partitions.Card_Partitions"
### 0.577s elapsed time, 2.124s cpu time, 0.879s GC time
Loading theory "Bell_Numbers_Spivey.Bell_Numbers" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
### theory "Bell_Numbers_Spivey.Bell_Numbers"
### 0.160s elapsed time, 0.628s cpu time, 0.068s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.BigO"
### 1.052s elapsed time, 3.540s cpu time, 1.154s GC time
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
### theory "HOL-Library.Tree"
### 2.456s elapsed time, 8.687s cpu time, 2.204s GC time
Loading theory "Draft.Templates" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.110s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PreliminariesMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.833s elapsed time, 2.085s cpu time, 1.029s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.943s elapsed time, 11.616s cpu time, 3.313s GC time
Loading theory "Card_Multisets.Card_Multisets" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
Loading theory "Card_Number_Partitions.Additions_to_Main" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Number_Partitions.Card_Number_Partitions" via "Card_Number_Partitions.Number_Partition")
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
Proofs for inductive predicate(s) "R"
  Proving monotonicity ...
### theory "Card_Number_Partitions.Additions_to_Main"
### 0.079s elapsed time, 0.304s cpu time, 0.119s GC time
Loading theory "Card_Number_Partitions.Number_Partition" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "Card_Number_Partitions.Card_Number_Partitions")
### theory "Card_Multisets.Card_Multisets"
### 0.103s elapsed time, 0.401s cpu time, 0.119s GC time
### theory "Card_Number_Partitions.Number_Partition"
### 0.095s elapsed time, 0.241s cpu time, 0.000s GC time
Loading theory "Card_Number_Partitions.Card_Number_Partitions" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "Card_Number_Partitions.Card_Number_Partitions"
### 0.160s elapsed time, 0.389s cpu time, 0.130s GC time
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 0.758s elapsed time, 1.468s cpu time, 0.397s GC time
Loading theory "Draft.Preliminaries" (required by "Draft.PreliminariesMoreTemplates")
### theory "Draft.Preliminaries"
### 0.813s elapsed time, 1.669s cpu time, 1.159s GC time
Loading theory "Draft.PreliminariesMoreTemplates"
val templateLemmas =
   [("Preliminaries.Partition_diag", "Partition ?n ?n = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Preliminaries.finitely_many_partition_on_iff",
     "finite {P. partition_on ?A P} = finite ?A",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Preliminaries.count_mset_set_leq",
     "finite ?A ==> count (mset_set ?A) ?x <= 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0))),
    ("Preliminaries.count_mset_set_leq'",
     "finite ?A ==> count (mset_set ?A) ?x <= Suc 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Preliminaries.mset_set_set_mset",
     "?M <=# mset_set ?A ==> mset_set (set_mset ?M) = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 1))),
    ("Preliminaries.infinite_partition_on",
     "infinite ?A ==> infinite {P. partition_on ?A P}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 2, template_app (template_hole 1, t_empty))
               )
           ))),
    ("Preliminaries.card_set_mset",
     "?M <=# mset_set ?A ==> card (set_mset ?M) = size ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("Preliminaries.mset_set_set_mset'",
     "ALL x. count ?M x <= 1 ==> mset_set (set_mset ?M) = ?M",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Preliminaries.mset_set_subseteq_mset_set",
     "[| finite ?B; ?A <= ?B |] ==> mset_set ?A <=# mset_set ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Preliminaries.card_extensional_funcset",
     "finite ?A ==> card (?A \<rightarrow>\<^sub>E ?B) = card ?B ^ card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Preliminaries.card_set_mset'",
     "ALL x. count ?M x <= 1 ==> card (set_mset ?M) = size ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Preliminaries.subset_with_given_card_exists",
     "?n <= card ?A ==> EX B<=?A. card B = ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Preliminaries.card_lists_length_eq",
     "card {xs. set xs <= ?B & length xs = ?n} = card ?B ^ ?n",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Preliminaries.image_mset_fun_upd",
     "?x ~:# ?M ==> image_mset (?f(?x := ?y)) ?M = image_mset ?f ?M",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Preliminaries.card_equiv_class",
     "[| finite ?A; equiv ?A ?R |] ==> card ?A = sum card (?A // ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Preliminaries.lists_length_eq_Suc_eq_empty_iff",
     "({xs. set xs <= ?A & length xs = Suc ?n} = {}) = (?A = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 9, t_empty), template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("Preliminaries.finite_lists_length_eq_iff",
     "finite {xs. set xs <= ?A & length xs = ?n} = (finite ?A | ?n = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9, template_app (template_hole 8, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("Preliminaries.finite_quotient_iff",
     "equiv ?A ?R ==>
      finite ?A = (finite (?A // ?R) & (ALL X:?A // ?R. finite X))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             t_empty))))),
    ("Preliminaries.bij_betw_congI",
     "[| bij_betw ?f ?A ?A'; ALL a:?A. ?f a = ?g a |]
      ==> bij_betw ?g ?A ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Preliminaries.lists_length_eq_eq_empty_iff",
     "({xs. set xs <= ?A & length xs = ?n} = {}) = (?A = {} & 0 < ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 10, t_empty), template_hole 4),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Preliminaries.msubset_mset_set_iff",
     "finite ?A ==>
      (set_mset ?M <= ?A & (ALL x. count ?M x <= 1)) =
      (?M <=# mset_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_var 1)),
           template_app (template_hole 5, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Preliminaries.finite_equiv_implies_finite_carrier",
     "[| equiv ?A ?R; finite (?A // ?R); ALL X:?A // ?R. finite X |]
      ==> finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              t_empty)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Preliminaries.univ_commute'",
     "[| equiv ?A ?r; ?f respects ?r; ?x : ?A |]
      ==> univ ?f (?r `` {?x}) = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app (template_var 1, template_var 0)))),
    ("Preliminaries.bij_betw_implies_inj_on_and_card_eq",
     "[| finite ?B; ?f : ?A \<rightarrow>\<^sub>E ?B |]
      ==> bij_betw ?f ?A ?B = (inj_on ?f ?A & card ?A = card ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 0), t_empty))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0),
                template_var 2)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 2)))
             )))),
    ("Preliminaries.card_number_partitions_with_only_parts_1",
     "card
       {N. (ALL n. n :# N --> n = 1) &
           number_partition ?n N & size N <= ?x} =
      iverson (?n <= ?x)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, t_empty)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Preliminaries.univ_predicate_impl_forall",
     "[| equiv ?A ?R; ?P respects ?R; ?X : ?A // ?R; univ ?P ?X |]
      ==> ALL x:?X. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("Preliminaries.bij_betw_implies_surj_on_and_card_eq",
     "[| finite ?A; ?f : ?A \<rightarrow>\<^sub>E ?B |]
      ==> bij_betw ?f ?A ?B = (?f ` ?A = ?B & card ?A = card ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 2), t_empty))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 2),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 2)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 0)))
             )))),
    ("Preliminaries.finite_same_card_bij_on_ext_funcset",
     "[| finite ?A; finite ?B; card ?A = card ?B |]
      ==> EX f. f : ?A \<rightarrow>\<^sub>E ?B & bij_betw f ?A ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Preliminaries.card_partition_on_size1_eq_iverson",
     "finite ?A ==>
      card {P. partition_on ?A P & card P <= ?k & (ALL X:P. card X = 1)} =
      iverson (card ?A <= ?k)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_hole 9, template_app (template_hole 8, t_empty)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 2, template_var 1)),
             template_var 0))))),
    ("Preliminaries.card_equiv_class_same_size",
     "[| equiv ?A ?R; !!F. F : ?A // ?R ==> card F = ?k |]
      ==> card ?A = ?k * card (?A // ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)))))),
    ("Preliminaries.Union_quotient_restricted",
     "[| equiv ?A ?r; ?P respects ?r |]
      ==> \<Union> ({x: ?A. ?P x} // ?r) = {x: ?A. ?P x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("Preliminaries.disjoint_family_onI",
     "(!!m n. [| m : ?S; n : ?S; m ~= n |] ==> ?A m Int ?A n = {}) ==>
      disjoint_family_on ?A ?S",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Preliminaries.univ_preserves_predicate",
     "[| equiv ?A ?r; ?P respects ?r |]
      ==> {x: ?A. ?P x} // ?r = {X: ?A // ?r. univ ?P X}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_var 1),
         template_app (template_hole 2, t_empty)))),
    ("Preliminaries.lists_length_eq_Suc_eq_image_Cons",
     "{xs. set xs <= ?A & length xs = Suc ?n} =
      (%(x, xs). x # xs) `
      (?A \<times> {xs. set xs <= ?A & length xs = ?n})",
     template_equation
      (template_app (template_hole 10, t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Preliminaries.card_equiv_class_restricted",
     "[| finite {x: ?A. ?P x}; equiv ?A ?R; ?P respects ?R |]
      ==> card {x: ?A. ?P x} = sum card ({x: ?A. ?P x} // ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9, template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 8, t_empty)),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_app
            (template_app
              (template_hole 0, template_app (template_hole 8, t_empty)),
             template_var 0))))),
    ("Preliminaries.card_equiv_class_restricted_same_size",
     "[| equiv ?A ?R; ?P respects ?R;
         !!F. F : {x: ?A. ?P x} // ?R ==> card F = ?k |]
      ==> card {x: ?A. ?P x} = ?k * card ({x: ?A. ?P x} // ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 6, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 2))))))]:
   (string * thm * template) list
### theory "Draft.PreliminariesMoreTemplates"
### 0.400s elapsed time, 0.613s cpu time, 0.080s GC time
val it = (): unit
