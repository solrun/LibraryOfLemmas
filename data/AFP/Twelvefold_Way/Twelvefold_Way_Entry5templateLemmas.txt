   [("Twelvefold_Way_Entry5.card_multiset_only_sets",
     "finite ?A ==>
      card {M. M <=# mset_set ?A & size M = ?k} = card ?A choose ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Twelvefold_Way_Entry5.subset_of_functions_of",
     "[| finite ?A; finite ?X; card ?A = card ?X |]
      ==> subset_of ?A (functions_of ?A ?X) = ?X",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Twelvefold_Way_Entry5.subset_of",
     "?F : {f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
           domain_permutation ?A ?B ==>
      subset_of ?A ?F <= ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app
                 (template_hole 8, template_app (template_hole 7, t_empty)),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Twelvefold_Way_Entry5.bij_betw_mset_set_card",
     "finite ?A ==>
      bij_betw mset_set {X. X <= ?A & card X = ?k}
       {M. M <=# mset_set ?A & size M = ?k}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_app (template_hole 7, t_empty)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Twelvefold_Way_Entry5.subset_of",
     "?F : {f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
           domain_permutation ?A ?B ==>
      card (subset_of ?A ?F) = card ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, t_empty)),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("Twelvefold_Way_Entry5.card_multiset_only_sets'",
     "finite ?A ==>
      card {M. set_mset M <= ?A & size M = ?k & (ALL x. count M x <= 1)} =
      card ?A choose ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1))],
       template_equation
        (template_app
          (template_hole 11, template_app (template_hole 10, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Twelvefold_Way_Entry5.card_injective_functions_domain_permutation",
     "[| finite ?A; finite ?B |]
      ==> card
           ({f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_permutation ?A ?B) =
          card ?B choose card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Twelvefold_Way_Entry5.functions_of_subset_of",
     "[| finite ?A;
         ?F : {f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
              domain_permutation ?A ?B |]
      ==> functions_of ?A (subset_of ?A ?F) = ?F",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app
                 (template_hole 9, template_app (template_hole 8, t_empty)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 1))),
    ("Twelvefold_Way_Entry5.functions_of_eq",
     "[| finite ?A; ?f : {f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} |]
      ==> functions_of ?A (?f ` ?A) = domain_permutation ?A ?B `` {?f}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Twelvefold_Way_Entry5.bij_betw_mset_set_card'",
     "finite ?A ==>
      bij_betw mset_set {X. X <= ?A & card X = ?k}
       {M. set_mset M <= ?A & size M = ?k & (ALL x. count M x <= 1)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, template_hole 12),
               template_app (template_hole 11, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("Twelvefold_Way_Entry5.bij_betw_functions_of",
     "[| finite ?A; finite ?B |]
      ==> bij_betw (functions_of ?A) {X. X <= ?B & card X = card ?A}
           ({f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_permutation ?A ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, template_var 1)),
               template_app (template_hole 11, t_empty)),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Twelvefold_Way_Entry5.bij_betw_subset_of",
     "[| finite ?A; finite ?B |]
      ==> bij_betw (subset_of ?A)
           ({f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_permutation ?A ?B)
           {X. X <= ?B & card X = card ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, template_var 1)),
               template_app
                (template_app
                  (template_hole 11,
                   template_app (template_hole 10, t_empty)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Twelvefold_Way_Entry5.functions_of",
     "[| finite ?A; finite ?B; ?X <= ?B; card ?X = card ?A |]
      ==> functions_of ?A ?X
          : {f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_permutation ?A ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           )))]
