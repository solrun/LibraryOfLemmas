   [("Twelvefold_Way_Entry7.partitions_of",
     "[| finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) // range_permutation ?A ?B |]
      ==> partition_on ?A (partitions_of ?A ?B ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    t_empty)),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Twelvefold_Way_Entry7.partitions_of",
     "[| finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) // range_permutation ?A ?B |]
      ==> card (partitions_of ?A ?B ?F) <= card ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 0),
                    t_empty)),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 2)))),
    ("Twelvefold_Way_Entry7.functions_of_partitions_of",
     "[| finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) // range_permutation ?A ?B |]
      ==> functions_of (partitions_of ?A ?B ?F) ?A ?B = ?F",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    t_empty)),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_var 0),
           template_var 2),
         template_var 1))),
    ("Twelvefold_Way_Entry7.partitions_of_functions_of",
     "[| finite ?A; finite ?B; partition_on ?A ?P; card ?P <= card ?B |]
      ==> partitions_of ?A ?B (functions_of ?P ?A ?B) = ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Twelvefold_Way_Entry7.bij_betw_partitions_of",
     "[| finite ?A; finite ?B |]
      ==> bij_betw (partitions_of ?A ?B)
           ((?A \<rightarrow>\<^sub>E ?B) // range_permutation ?A ?B)
           {P. partition_on ?A P & card P <= card ?B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     t_empty)),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0))),
             template_app (template_hole 5, t_empty))
           ))),
    ("Twelvefold_Way_Entry7.functions_of",
     "[| finite ?A; finite ?B; partition_on ?A ?P; card ?P <= card ?B |]
      ==> functions_of ?P ?A ?B
          : (?A \<rightarrow>\<^sub>E ?B) // range_permutation ?A ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   t_empty)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           )))]
