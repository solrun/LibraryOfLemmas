   [("Twelvefold_Way_Entry11.card_injective_functions_domain_and_range_permutation",
     "[| finite ?A; finite ?B |]
      ==> card
           ({f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_and_range_permutation ?A ?B) =
          iverson (card ?A <= card ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0)))))),
    ("Twelvefold_Way_Entry11.inj_on_implies_all_one",
     "[| finite ?A; finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) //
              domain_and_range_permutation ?A ?B;
         univ (%f. inj_on f ?A) ?F |]
      ==> ALL n. n :# number_partition_of ?A ?B ?F --> n = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    t_empty)),
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Twelvefold_Way_Entry11.functions_of_is_inj_on",
     "[| finite ?A; finite ?B; ALL n. n :# ?N --> n = 1;
         number_partition (card ?A) ?N; size ?N <= card ?B |]
      ==> univ (%f. inj_on f ?A) (functions_of ?A ?B ?N)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Twelvefold_Way_Entry11.all_one_implies_inj_on",
     "[| finite ?A; finite ?B; ALL n. n :# ?N --> n = 1;
         number_partition (card ?A) ?N; size ?N <= card ?B;
         ?f : functions_of ?A ?B ?N |]
      ==> inj_on ?f ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Twelvefold_Way_Entry11.bij_betw_number_partition_of",
     "[| finite ?A; finite ?B |]
      ==> bij_betw (number_partition_of ?A ?B)
           ({f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_and_range_permutation ?A ?B)
           {N. (ALL n. n :# N --> n = 1) &
               number_partition (card ?A) N & size N <= card ?B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 1)),
        template_predicate
         (template_app (template_hole 21, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app (template_hole 19, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 18,
                   template_app (template_hole 17, t_empty)),
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_var 0))),
             template_app (template_hole 11, t_empty))
           ))),
    ("Twelvefold_Way_Entry11.bij_betw_functions_of",
     "[| finite ?A; finite ?B |]
      ==> bij_betw (functions_of ?A ?B)
           {N. (ALL n. n :# N --> n = 1) &
               number_partition (card ?A) N & size N <= card ?B}
           ({f: ?A \<rightarrow>\<^sub>E ?B. inj_on f ?A} //
            domain_and_range_permutation ?A ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 1)),
        template_predicate
         (template_app (template_hole 21, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app (template_hole 19, template_var 1),
                   template_var 0)),
               template_app (template_hole 18, t_empty)),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           )))]
