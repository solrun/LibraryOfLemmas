Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver")
Loading theory "HOL-Combinatorics.Stirling" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver" via "HOL-Library.Monad_Syntax")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.095s elapsed time, 0.359s cpu time, 0.032s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver")
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Monad_Syntax"
### 0.031s elapsed time, 0.128s cpu time, 0.000s GC time
Loading theory "HOL-Library.Cancellation" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "HOL-Library.Multiset")
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Transposition"
### 0.184s elapsed time, 0.719s cpu time, 0.032s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
structure Eisbach_Rule_Insts: sig end
consts
  stirling_row_aux :: "'a => 'a => 'a list => 'a list"
### theory "HOL-Combinatorics.Stirling"
### 0.243s elapsed time, 0.956s cpu time, 0.032s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.115s elapsed time, 0.440s cpu time, 0.075s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.427s elapsed time, 1.677s cpu time, 0.148s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Eisbach.Eisbach"
### 0.582s elapsed time, 2.276s cpu time, 0.180s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Nat_Bijection"
### 0.334s elapsed time, 1.353s cpu time, 0.147s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.FuncSet"
### 0.524s elapsed time, 2.097s cpu time, 0.222s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Set_Algebras"
### 0.245s elapsed time, 0.997s cpu time, 0.174s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Disjoint_Sets"
### 0.492s elapsed time, 1.779s cpu time, 0.719s GC time
Loading theory "Card_Partitions.Injectivity_Solver" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Card_Partitions.Injectivity_Solver"
### 0.425s elapsed time, 1.678s cpu time, 0.168s GC time
Loading theory "Card_Partitions.Set_Partition" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "Card_Partitions.Set_Partition"
### 0.161s elapsed time, 0.631s cpu time, 0.091s GC time
Loading theory "Card_Partitions.Card_Partitions" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
### theory "HOL-Library.Stream"
### 1.150s elapsed time, 4.380s cpu time, 0.979s GC time
Loading theory "HOL-ex.Birthday_Paradox" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### theory "HOL-ex.Birthday_Paradox"
### 0.083s elapsed time, 0.322s cpu time, 0.106s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### theory "Card_Partitions.Card_Partitions"
### 0.604s elapsed time, 2.228s cpu time, 0.945s GC time
Loading theory "Bell_Numbers_Spivey.Bell_Numbers" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
### theory "Bell_Numbers_Spivey.Bell_Numbers"
### 0.186s elapsed time, 0.736s cpu time, 0.127s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.BigO"
### 1.067s elapsed time, 3.708s cpu time, 1.152s GC time
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "size <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
### theory "HOL-Library.Tree"
### 2.444s elapsed time, 8.493s cpu time, 2.193s GC time
Loading theory "Draft.Templates" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.106s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.839s elapsed time, 2.106s cpu time, 1.053s GC time
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 4.048s elapsed time, 12.223s cpu time, 3.507s GC time
Loading theory "Card_Multisets.Card_Multisets" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
Loading theory "Card_Number_Partitions.Additions_to_Main" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Number_Partitions.Card_Number_Partitions" via "Card_Number_Partitions.Number_Partition")
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
Proofs for inductive predicate(s) "R"
  Proving monotonicity ...
### theory "Card_Number_Partitions.Additions_to_Main"
### 0.082s elapsed time, 0.320s cpu time, 0.128s GC time
Loading theory "Card_Number_Partitions.Number_Partition" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries" via "Card_Number_Partitions.Card_Number_Partitions")
### theory "Card_Multisets.Card_Multisets"
### 0.107s elapsed time, 0.428s cpu time, 0.128s GC time
### theory "Card_Number_Partitions.Number_Partition"
### 0.119s elapsed time, 0.277s cpu time, 0.000s GC time
Loading theory "Card_Number_Partitions.Card_Number_Partitions" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions" via "Draft.Preliminaries")
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "Card_Number_Partitions.Card_Number_Partitions"
### 0.160s elapsed time, 0.391s cpu time, 0.135s GC time
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 0.778s elapsed time, 1.482s cpu time, 0.400s GC time
Loading theory "Draft.Preliminaries" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions")
### theory "Draft.Preliminaries"
### 0.482s elapsed time, 0.500s cpu time, 0.000s GC time
Loading theory "Draft.Twelvefold_Way_Core" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10" via "Draft.Equiv_Relations_on_Functions")
### theory "Draft.Twelvefold_Way_Core"
### 0.131s elapsed time, 0.131s cpu time, 0.000s GC time
Loading theory "Draft.Equiv_Relations_on_Functions" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates" via "Draft.Twelvefold_Way_Entry10")
### theory "Draft.Equiv_Relations_on_Functions"
### 0.086s elapsed time, 0.086s cpu time, 0.000s GC time
Loading theory "Draft.Twelvefold_Way_Entry10" (required by "Draft.Twelvefold_Way_Entry10MoreTemplates")
### theory "Draft.Twelvefold_Way_Entry10"
### 0.058s elapsed time, 0.058s cpu time, 0.000s GC time
Loading theory "Draft.Twelvefold_Way_Entry10MoreTemplates"
val templateLemmas =
   [("Twelvefold_Way_Entry10.card_domain_and_range_permutation",
     "[| finite ?A; finite ?B |]
      ==> card
           ((?A \<rightarrow>\<^sub>E ?B) //
            domain_and_range_permutation ?A ?B) =
          Partition (card ?A + card ?B) (card ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1), t_empty)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 0))),
           template_app (template_hole 0, template_var 0))))),
    ("Twelvefold_Way_Entry10.number_partition_of",
     "[| finite ?A; finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) //
              domain_and_range_permutation ?A ?B |]
      ==> number_partition (card ?A) (number_partition_of ?A ?B ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    t_empty)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Twelvefold_Way_Entry10.number_partition_of",
     "[| finite ?A; finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) //
              domain_and_range_permutation ?A ?B |]
      ==> size (number_partition_of ?A ?B ?F) <= card ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    t_empty)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Twelvefold_Way_Entry10.functions_of_number_partition_of",
     "[| finite ?A; finite ?B;
         ?F : (?A \<rightarrow>\<^sub>E ?B) //
              domain_and_range_permutation ?A ?B |]
      ==> functions_of ?A ?B (number_partition_of ?A ?B ?F) = ?F",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    t_empty)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("Twelvefold_Way_Entry10.number_partition_of_functions_of",
     "[| finite ?A; finite ?B; number_partition (card ?A) ?N;
         size ?N <= card ?B |]
      ==> number_partition_of ?A ?B (functions_of ?A ?B ?N) = ?N",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("Twelvefold_Way_Entry10.bij_betw_number_partition_of",
     "[| finite ?A; finite ?B |]
      ==> bij_betw (number_partition_of ?A ?B)
           ((?A \<rightarrow>\<^sub>E ?B) //
            domain_and_range_permutation ?A ?B)
           {N. number_partition (card ?A) N & size N <= card ?B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     t_empty)),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0))),
             template_app (template_hole 6, t_empty))
           ))),
    ("Twelvefold_Way_Entry10.functions_of",
     "[| finite ?A; finite ?B; number_partition (card ?A) ?N;
         size ?N <= card ?B |]
      ==> functions_of ?A ?B ?N
          : (?A \<rightarrow>\<^sub>E ?B) //
            domain_and_range_permutation ?A ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   t_empty)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Twelvefold_Way_Entry10.card_setsum_partition",
     "[| finite ?A; finite ?B; ?f : ?A \<rightarrow>\<^sub>E ?B |]
      ==> sum card ((%b. {x: ?A. ?f x = b}) ` ?B - {{}}) = card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app
               (template_app (template_hole 12, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, t_empty), template_var 1)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))),
         template_app (template_hole 9, template_var 2))))]:
   (string * thm * template) list
### theory "Draft.Twelvefold_Way_Entry10MoreTemplates"
### 0.396s elapsed time, 0.663s cpu time, 0.195s GC time
val it = (): unit
