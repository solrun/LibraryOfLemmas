Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver")
Loading theory "HOL-Combinatorics.Stirling" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver" via "HOL-Library.Monad_Syntax")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.092s elapsed time, 0.351s cpu time, 0.028s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions" via "Card_Partitions.Injectivity_Solver")
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Monad_Syntax"
### 0.035s elapsed time, 0.141s cpu time, 0.000s GC time
Loading theory "HOL-Library.Cancellation" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "HOL-Library.Multiset")
### theory "HOL-Combinatorics.Transposition"
### 0.139s elapsed time, 0.543s cpu time, 0.028s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
structure Eisbach_Rule_Insts: sig end
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
consts
  stirling_row_aux :: "'a => 'a => 'a list => 'a list"
### theory "HOL-Combinatorics.Stirling"
### 0.265s elapsed time, 1.029s cpu time, 0.085s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
### theory "HOL-Library.Function_Algebras"
### 0.093s elapsed time, 0.369s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Eisbach.Eisbach"
### 0.429s elapsed time, 1.678s cpu time, 0.140s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.FuncSet"
### 0.420s elapsed time, 1.684s cpu time, 0.174s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "HOL-Combinatorics.Permutations")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.460s elapsed time, 1.845s cpu time, 0.174s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.211s elapsed time, 0.866s cpu time, 0.062s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Nat_Bijection"
### 0.361s elapsed time, 1.445s cpu time, 0.213s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Disjoint_Sets"
### 0.459s elapsed time, 1.658s cpu time, 0.614s GC time
Loading theory "Card_Partitions.Injectivity_Solver" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
### theory "Card_Partitions.Injectivity_Solver"
### 0.410s elapsed time, 1.619s cpu time, 0.120s GC time
Loading theory "Card_Partitions.Set_Partition" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Partitions.Card_Partitions")
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
### theory "Card_Partitions.Set_Partition"
### 0.163s elapsed time, 0.643s cpu time, 0.095s GC time
Loading theory "Card_Partitions.Card_Partitions" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
consts
  flat :: "'a list stream => 'a stream"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.109s elapsed time, 4.211s cpu time, 0.861s GC time
Loading theory "HOL-ex.Birthday_Paradox" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
### theory "HOL-ex.Birthday_Paradox"
### 0.053s elapsed time, 0.209s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### theory "Card_Partitions.Card_Partitions"
### 0.358s elapsed time, 1.402s cpu time, 0.160s GC time
Loading theory "Bell_Numbers_Spivey.Bell_Numbers" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
### theory "Bell_Numbers_Spivey.Bell_Numbers"
### 0.162s elapsed time, 0.640s cpu time, 0.110s GC time
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.BigO"
### 1.088s elapsed time, 3.588s cpu time, 1.150s GC time
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
### theory "HOL-Library.Tree"
### 2.480s elapsed time, 8.680s cpu time, 2.157s GC time
Loading theory "Draft.Templates" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.111s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Twelvefold_Way_CoreMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.553s elapsed time, 1.158s cpu time, 0.128s GC time
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.651s elapsed time, 10.617s cpu time, 2.349s GC time
Loading theory "Card_Multisets.Card_Multisets" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
Loading theory "Card_Number_Partitions.Additions_to_Main" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Number_Partitions.Card_Number_Partitions" via "Card_Number_Partitions.Number_Partition")
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
Proofs for inductive predicate(s) "R"
  Proving monotonicity ...
### theory "Card_Number_Partitions.Additions_to_Main"
### 0.051s elapsed time, 0.197s cpu time, 0.000s GC time
Loading theory "Card_Number_Partitions.Number_Partition" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries" via "Card_Number_Partitions.Card_Number_Partitions")
### theory "Card_Multisets.Card_Multisets"
### 0.072s elapsed time, 0.288s cpu time, 0.000s GC time
### theory "Card_Number_Partitions.Number_Partition"
### 0.448s elapsed time, 1.392s cpu time, 1.087s GC time
Loading theory "Card_Number_Partitions.Card_Number_Partitions" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core" via "Draft.Preliminaries")
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "Card_Number_Partitions.Card_Number_Partitions"
### 0.150s elapsed time, 0.339s cpu time, 0.071s GC time
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 1.130s elapsed time, 2.476s cpu time, 1.275s GC time
Loading theory "Draft.Preliminaries" (required by "Draft.Twelvefold_Way_CoreMoreTemplates" via "Draft.Twelvefold_Way_Core")
### theory "Draft.Preliminaries"
### 0.520s elapsed time, 0.614s cpu time, 0.086s GC time
Loading theory "Draft.Twelvefold_Way_Core" (required by "Draft.Twelvefold_Way_CoreMoreTemplates")
### theory "Draft.Twelvefold_Way_Core"
### 0.137s elapsed time, 0.137s cpu time, 0.000s GC time
Loading theory "Draft.Twelvefold_Way_CoreMoreTemplates"
val templateLemmas =
   [("Twelvefold_Way_Core.obtain_function",
     "[| finite ?A; size ?M = card ?A |]
      ==> EX f. image_mset f (mset_set ?A) = ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Twelvefold_Way_Core.obtain_partition",
     "[| finite ?A; number_partition (card ?A) ?N |]
      ==> EX P. partition_on ?A P & image_mset card (mset_set P) = ?N",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Twelvefold_Way_Core.obtain_function_on_ext_funcset",
     "[| finite ?A; size ?M = card ?A |]
      ==> EX f:?A \<rightarrow>\<^sub>E set_mset ?M.
             image_mset f (mset_set ?A) = ?M",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1), t_empty)),
             t_empty)
           ))),
    ("Twelvefold_Way_Core.the_elem_eq",
     "[| ?f : ?A \<rightarrow>\<^sub>E ?B; ?b : ?f ` ?A |]
      ==> the_elem (?f ` {x': ?A. ?f x' = ?b}) = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app (template_hole 2, t_empty))),
         template_var 0))),
    ("Twelvefold_Way_Core.permutes_implies_inv_image_on_eq",
     "?p permutes ?B ==>
      (%b. {x: ?A. ?p (?f x) = b}) ` ?B = (%b. {x: ?A. ?f x = b}) ` ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty), template_var 2),
         template_app
          (template_app (template_hole 4, t_empty), template_var 2)))),
    ("Twelvefold_Way_Core.obtain_domain_permutation_for_two_bijections",
     "[| bij_betw ?f ?A ?B; bij_betw ?f' ?A ?B;
         !!p. [| p permutes ?A; ALL a:?A. ?f a = ?f' (p a) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Twelvefold_Way_Core.obtain_range_permutation_for_two_bijections",
     "[| bij_betw ?f ?A ?B; bij_betw ?f' ?A ?B;
         !!p. [| p permutes ?B; ALL a:?A. ?f a = p (?f' a) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Twelvefold_Way_Core.card_domain_partitions",
     "[| ?f : ?A \<rightarrow>\<^sub>E ?B; finite ?B |]
      ==> card ((%b. {x: ?A. ?f x = b}) ` ?B - {{}}) = card (?f ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_app (template_hole 14, template_var 1), t_empty))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, t_empty), template_var 0)),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Twelvefold_Way_Core.image_mset_eq_implies_permutes",
     "[| finite ?A;
         image_mset ?f (mset_set ?A) = image_mset ?f' (mset_set ?A);
         !!p. [| p permutes ?A; ALL x:?A. ?f x = ?f' (p x) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 3)),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_var 3))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Twelvefold_Way_Core.image_mset_eq_implies_bij_betw",
     "[| finite ?A; finite ?A';
         image_mset ?f (mset_set ?A) = image_mset ?f' (mset_set ?A');
         !!bij.
            [| bij_betw bij ?A ?A'; ALL x:?A. ?f x = ?f' (bij x) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_app (template_hole 6, template_var 4)),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_var 3))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Twelvefold_Way_Core.permutes_domain_partition_eq",
     "[| ?f : ?A \<rightarrow> ?B; ?p\<^sub>A permutes ?A; ?b : ?B |]
      ==> ?p\<^sub>A ` {x: ?A. ?f x = ?b} =
          {x: ?A. ?f (inv ?p\<^sub>A x) = ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_app (template_hole 10, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)))),
    ("Twelvefold_Way_Core.obtain_function_with_partition",
     "[| finite ?A; finite ?B; partition_on ?A ?P; card ?P <= card ?B |]
      ==> EX f:?A \<rightarrow>\<^sub>E ?B.
             (%b. {x: ?A. f x = b}) ` ?B - {{}} = ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 0),
          template_app (template_hole 12, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2), t_empty)),
             t_empty)
           ))),
    ("Twelvefold_Way_Core.partition_implies_permutes",
     "[| finite ?A; partition_on ?A ?P; partition_on ?A ?P';
         image_mset card (mset_set ?P') = image_mset card (mset_set ?P);
         !!p. [| p permutes ?A; ?P' = (`) p ` ?P |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_hole 6),
            template_app (template_hole 5, template_var 1)),
          template_app
           (template_app (template_hole 7, template_hole 6),
            template_app (template_hole 5, template_var 2))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Twelvefold_Way_Core.image_domain_partition_eq",
     "[| ?f : ?A \<rightarrow>\<^sub>E ?B; ?p\<^sub>A permutes ?A |]
      ==> (`) ?p\<^sub>A ` (%b. {x: ?A. ?f x = b}) ` ?B =
          (%b. {x: ?A. ?f (inv ?p\<^sub>A x) = b}) ` ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, t_empty),
           template_app
            (template_app (template_hole 6, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 6, t_empty), template_var 1)))),
    ("Twelvefold_Way_Core.obtain_extensional_function_from_number_partition",
     "[| finite ?A; finite ?B; number_partition (card ?A) ?N;
         size ?N <= card ?B |]
      ==> EX f:?A \<rightarrow>\<^sub>E ?B.
             image_mset card
              (mset_set ((%b. {x: ?A. f x = b}) ` ?B - {{}})) =
             ?N",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_predicate
         (template_app (template_hole 19, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 0),
          template_app (template_hole 14, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 2), t_empty)),
             t_empty)
           ))),
    ("Twelvefold_Way_Core.permutes_implies_multiset_of_partition_cards_eq",
     "[| ?p\<^sub>A permutes ?A; ?p\<^sub>B permutes ?B |]
      ==> image_mset card
           (mset_set
             ((%b. {x: ?A. ?p\<^sub>B (?f' (?p\<^sub>A x)) = b}) ` ?B -
              {{}})) =
          image_mset card
           (mset_set ((%b. {x: ?A. ?f' x = b}) ` ?B - {{}}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 11, template_hole 10),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, t_empty),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 11, template_hole 10),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, t_empty),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0))))))),
    ("Twelvefold_Way_Core.partitions_eq_implies_permutes",
     "[| ?f : ?A \<rightarrow>\<^sub>E ?B;
         ?f' : ?A \<rightarrow>\<^sub>E ?B; finite ?B;
         (%b. {x: ?A. ?f x = b}) ` ?B - {{}} =
         (%b. {x: ?A. ?f' x = b}) ` ?B - {{}} |]
      ==> EX p. p permutes ?B & (ALL x:?A. ?f x = p (?f' x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app
               (template_app (template_hole 14, template_var 2), t_empty))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, t_empty), template_var 1)),
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)),
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, t_empty), template_var 1)),
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Twelvefold_Way_Core.the_elem",
     "[| ?f : ?A \<rightarrow>\<^sub>E ?B;
         ?f' : ?A \<rightarrow>\<^sub>E ?B;
         (%b. {x: ?A. ?f x = b}) ` ?B - {{}} =
         (%b. {x: ?A. ?f' x = b}) ` ?B - {{}};
         ?x : ?A |]
      ==> the_elem (?f ` {xa: ?A. ?f' xa = ?f' ?x}) = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_app (template_hole 12, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app (template_hole 12, template_var 3), t_empty))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, t_empty), template_var 2)),
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_hole 2)),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, t_empty), template_var 2)),
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_hole 2))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 4),
             template_app (template_hole 8, t_empty))),
         template_app (template_var 4, template_var 0)))),
    ("Twelvefold_Way_Core.partitions_eq_implies",
     "[| ?f : ?A \<rightarrow>\<^sub>E ?B;
         ?f' : ?A \<rightarrow>\<^sub>E ?B;
         (%b. {x: ?A. ?f x = b}) ` ?B - {{}} =
         (%b. {x: ?A. ?f' x = b}) ` ?B - {{}};
         ?x : ?A; ?x' : ?A; ?f ?x = ?f ?x' |]
      ==> ?f' ?x = ?f' ?x'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app
               (template_app (template_hole 10, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 4), t_empty))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, t_empty), template_var 3)),
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_hole 0)),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, t_empty), template_var 3)),
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_hole 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 4)
            ),
        template_equation
         (template_app (template_var 5, template_var 1),
          template_app (template_var 5, template_var 0))],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Twelvefold_Way_Core.multiset_of_partition_cards_eq_implies_permutes",
     "[| finite ?A; finite ?B; ?f : ?A \<rightarrow>\<^sub>E ?B;
         ?f' : ?A \<rightarrow>\<^sub>E ?B;
         image_mset card (mset_set ((%b. {x: ?A. ?f x = b}) ` ?B - {{}})) =
         image_mset card (mset_set ((%b. {x: ?A. ?f' x = b}) ` ?B - {{}}));
         !!p\<^sub>A p\<^sub>B.
            [| p\<^sub>A permutes ?A; p\<^sub>B permutes ?B;
               ALL x:?A. ?f x = p\<^sub>B (?f' (p\<^sub>A x)) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 4)),
        template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 2),
              template_app
               (template_app (template_hole 18, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_app
               (template_app (template_hole 18, template_var 4), t_empty))
            ),
        template_equation
         (template_app
           (template_app (template_hole 16, template_hole 15),
            template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, t_empty),
                    template_var 3)),
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5)))),
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, t_empty),
                    template_var 3)),
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5))))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Twelvefold_Way_CoreMoreTemplates"
### 0.408s elapsed time, 0.644s cpu time, 0.146s GC time
val it = (): unit
