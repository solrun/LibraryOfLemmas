   [("SN_Orders.of_nat_ge_zero", "(0::?'a) <= of_nat ?n",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("SN_Orders.SN_imp_non_inf", "SN ?r ==> non_inf ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SN_Orders.pow_mono_one", "(1::?'a) <= ?a ==> (1::?'a) <= ?a ^ ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SN_Orders.of_nat_mono", "?m <= ?n ==> of_nat ?m <= of_nat ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SN_Orders.plus_right_mono", "?z <= ?y ==> ?x + ?z <= ?x + ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SN_Orders.foldr_max", "?a : set ?as ==> ?a <= foldr max ?as ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)))),
    ("SN_Orders.mult_ge_one",
     "[| (1::?'a) <= ?a; (1::?'a) <= ?b |] ==> (1::?'a) <= ?a * ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SN_Orders.mult_ge_zero",
     "[| (0::?'a) <= ?a; (0::?'a) <= ?b |] ==> (0::?'a) <= ?a * ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SN_Orders.sum_list_ge_0",
     "(!!x. x : set ?xs ==> (0::?'a) <= x) ==> (0::?'a) <= sum_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("SN_Orders.pow_mono_exp",
     "[| (1::?'a) <= ?a; ?m <= ?n |] ==> ?a ^ ?m <= ?a ^ ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SN_Orders.sum_list_ge_0_nth",
     "(!!i. i < length ?xs ==> (0::?'a) <= ?xs ! i) ==>
      (0::?'a) <= sum_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals, template_hole 2,
         template_app (template_hole 0, template_var 0)))),
    ("SN_Orders.non_inf_imp_SN_bound",
     "non_inf ?r ==> SN {(a, b). (b, ?c) : ?r & (a, b) : ?r}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5, template_app (template_hole 4, t_empty))),
             template_hole 0)
           ))),
    ("SN_Orders.non_inf_image",
     "[| non_inf ?r; !!a b. (a, b) : ?s ==> (?f a, ?f b) : ?r |]
      ==> non_inf ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("SN_Orders.non_infI",
     "(!!a f. (!!i. (f i, f (Suc i)) : ?r) ==> EX i. (f i, a) ~: ?r) ==>
      non_inf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SN_Orders.non_infE",
     "[| non_inf ?r;
         !!i. (?f i, ?f (Suc i)) ~: ?r | (?f i, ?a) ~: ?r ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("SN_Orders.sum_list_ge_mono",
     "[| length ?as = length ?bs;
         !!i. i < length ?bs ==> ?bs ! i <= ?as ! i |]
      ==> sum_list ?bs <= sum_list ?as",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1))))]
