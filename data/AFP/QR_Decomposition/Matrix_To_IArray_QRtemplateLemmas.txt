   [("Matrix_To_IArray_QR.iarray_to_vec_vec_to_iarray",
     "iarray_to_vec (vec_to_iarray ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix_To_IArray_QR.iarray_to_matrix_matrix_to_iarray",
     "iarray_to_matrix (matrix_to_iarray ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix_To_IArray_QR.matrix_to_iarray_ncols",
     "ncols ?A = ncols_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_nrows",
     "nrows ?A = nrows_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.length_vec_to_iarray",
     "IArray.length (vec_to_iarray ?xa) = CARD(?'n)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Matrix_To_IArray_QR.length_eq_card_rows",
     "IArray.length (matrix_to_iarray ?A) = CARD(?'rows)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Matrix_To_IArray_QR.ncols_eq_card_columns",
     "ncols_iarray (matrix_to_iarray ?A) = CARD(?'columns)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Matrix_To_IArray_QR.nrows_eq_card_rows",
     "nrows_iarray (matrix_to_iarray ?A) = CARD(?'rows)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Matrix_To_IArray_QR.is_zero_iarray_eq_iff",
     "(?A = 0) = is_zero_iarray (vec_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_transpose",
     "matrix_to_iarray (Finite_Cartesian_Product.transpose ?A) =
      transpose_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.length_eq_card_columns",
     "IArray.length (matrix_to_iarray ?A !! 0) = CARD(?'columns)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_hole 2)),
       template_app (template_hole 1, template_hole 0))),
    ("Matrix_To_IArray_QR.vec_to_iarray_columns",
     "vec_to_iarray ` columns ?A = columns_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_rows",
     "vec_to_iarray ` rows ?A = rows_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_mat",
     "matrix_to_iarray (mat ?k) = mat_iarray ?k CARD(?'n)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Matrix_To_IArray_QR.iarray_to_vec_nth",
     "iarray_to_vec ?A $ ?i = ?A !! mod_type_class.to_nat ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_nth'",
     "vec_to_iarray ?A !! mod_type_class.to_nat ?i = ?A $ ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix_To_IArray_QR.vec_to_iarray_morph",
     "(?A = ?B) = (vec_to_iarray ?A = vec_to_iarray ?B)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_morph",
     "(?A = ?B) = (matrix_to_iarray ?A = matrix_to_iarray ?B)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_column",
     "vec_to_iarray (column ?i ?A) =
      column_iarray (mod_type_class.to_nat ?i) (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_row'",
     "vec_to_iarray (row ?i ?A) =
      matrix_to_iarray ?A !! mod_type_class.to_nat ?i",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_row",
     "vec_to_iarray (row ?i ?A) =
      row_iarray (mod_type_class.to_nat ?i) (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_matrix",
     "vec_to_iarray (?A $ ?i) =
      matrix_to_iarray ?A !! mod_type_class.to_nat ?i",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_plus",
     "vec_to_iarray (?a + ?b) = vec_to_iarray ?a + vec_to_iarray ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_vector_matrix_mult",
     "vec_to_iarray (?x v* ?A) = vec_to_iarray ?x v*i matrix_to_iarray ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.vec_to_iarray_matrix_matrix_mult",
     "vec_to_iarray (?A *v ?x) = matrix_to_iarray ?A *iv vec_to_iarray ?x",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_plus",
     "matrix_to_iarray (?A + ?B) =
      matrix_to_iarray ?A + matrix_to_iarray ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_matrix_matrix_mult",
     "matrix_to_iarray (?A ** ?B) =
      matrix_to_iarray ?A **i matrix_to_iarray ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_mult_columns",
     "matrix_to_iarray (mult_column ?A ?i ?q) =
      mult_column_iarray (matrix_to_iarray ?A) (mod_type_class.to_nat ?i)
       ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_mult_row",
     "matrix_to_iarray (mult_row ?A ?i ?q) =
      mult_row_iarray (matrix_to_iarray ?A) (mod_type_class.to_nat ?i) ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Matrix_To_IArray_QR.vec_to_iarray_iarray_to_vec",
     "IArray.length ?A = CARD(?'n) ==>
      vec_to_iarray (iarray_to_vec ?A) = ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_interchange_columns",
     "matrix_to_iarray (interchange_columns ?A ?i ?j) =
      interchange_columns_iarray (matrix_to_iarray ?A)
       (mod_type_class.to_nat ?i) (mod_type_class.to_nat ?j)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_interchange_rows",
     "matrix_to_iarray (interchange_rows ?A ?i ?j) =
      interchange_rows_iarray (matrix_to_iarray ?A)
       (mod_type_class.to_nat ?i) (mod_type_class.to_nat ?j)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_nth",
     "matrix_to_iarray ?A !! mod_type_class.to_nat ?i !!
      mod_type_class.to_nat ?j =
      ?A $ ?i $ ?j",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 3, template_var 1))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_column_add",
     "matrix_to_iarray (column_add ?A ?i ?j ?q) =
      column_add_iarray (matrix_to_iarray ?A) (mod_type_class.to_nat ?i)
       (mod_type_class.to_nat ?j) ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 3)),
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_row_add",
     "matrix_to_iarray (row_add ?A ?i ?j ?q) =
      row_add_iarray (matrix_to_iarray ?A) (mod_type_class.to_nat ?i)
       (mod_type_class.to_nat ?j) ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 3)),
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Matrix_To_IArray_QR.vec_to_iarray_nth",
     "?i < CARD(?'n) ==>
      vec_to_iarray ?A !! ?i = ?A $ mod_type_class.from_nat ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Matrix_To_IArray_QR.vec_to_iarray_column'",
     "?k < ncols ?A ==>
      vec_to_iarray (column (mod_type_class.from_nat ?k) ?A) =
      column_iarray ?k (matrix_to_iarray ?A)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix_To_IArray_QR.mult_iarray_works",
     "?a < IArray.length ?A ==> mult_iarray ?A ?q !! ?a = ?q * ?A !! ?a",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Matrix_To_IArray_QR.column_iarray_nth",
     "?i < nrows_iarray ?A ==> column_iarray ?j ?A !! ?i = ?A !! ?i !! ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Matrix_To_IArray_QR.map_vec_to_iarray_rw",
     "map (%x. vec_to_iarray (?A $ mod_type_class.from_nat x))
       [0..<CARD(?'rows)] !
      mod_type_class.to_nat ?i =
      vec_to_iarray (?A $ ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_hole 1)))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_var 0)))),
    ("Matrix_To_IArray_QR.matrix_to_iarray_eq_of_fun",
     "[| ALL i. vec_to_iarray (?A $ i) = ?f (mod_type_class.to_nat i);
         ?n = IArray.length (matrix_to_iarray ?A) |]
      ==> matrix_to_iarray ?A = IArray.of_fun ?f ?n",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_equation
         (template_var 0,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)))],
       template_equation
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0))))]
