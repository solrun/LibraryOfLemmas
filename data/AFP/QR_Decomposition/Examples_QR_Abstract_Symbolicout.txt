Loading theory "Deriving.Derive_Manager" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Show.Show_Instances" via "Show.Show")
Loading theory "Deriving.Generator_Aux" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Show.Show_Instances" via "Show.Show")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Miscellaneous" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
signature DERIVE_MANAGER =
  sig
    val derive: string -> string -> string -> theory -> theory
    val derive_cmd: string -> string -> string -> theory -> theory
    val print_info: theory -> unit
    val register_derive:
       string ->
         string ->
           (string -> string -> theory -> theory) -> theory -> theory
  end
structure Derive_Manager: DERIVE_MANAGER
### theory "Deriving.Derive_Manager"
### 0.044s elapsed time, 0.204s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Abstract_Nat" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "HOL-Library.Code_Target_Numeral" via "HOL-Library.Code_Target_Nat")
signature BNF_ACCESS =
  sig
    val bnf_types: Proof.context -> string list -> typ list
    val case_consts: Proof.context -> string list -> term list
    val case_simps: Proof.context -> string list -> thm list list
    val case_thms: Proof.context -> string list -> thm list
    val constr_argument_types:
       Proof.context -> string list -> typ list list list
    val constr_terms: Proof.context -> string -> term list
    val distinct_thms: Proof.context -> string list -> thm list list
    val induct_thms: Proof.context -> string list -> thm list
    val inject_thms: Proof.context -> string list -> thm list list
    val map_comps: Proof.context -> string list -> thm list
    val map_simps: Proof.context -> string list -> thm list list
    val map_terms: Proof.context -> string list -> term list
    val set_simps: Proof.context -> string list -> thm list list
    val set_terms: Proof.context -> string list -> term list list
  end
structure Bnf_Access: BNF_ACCESS
### theory "HOL-Library.Code_Abstract_Nat"
### 0.050s elapsed time, 0.196s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Target_Nat" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "HOL-Library.Code_Target_Numeral")
### theory "HOL-Combinatorics.Transposition"
### 0.136s elapsed time, 0.556s cpu time, 0.022s GC time
Loading theory "HOL-Library.Code_Target_Int" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "HOL-Library.Code_Target_Numeral")
signature GENERATOR_AUX =
  sig
    val OF_option: thm -> thm option list -> thm
    val add_used_tycos:
       Proof.context -> string -> string list -> string list
    val alist_to_string: (string * 'a) list -> string
    val conjI_tac:
       thm list ->
         Proof.context ->
           'a list -> (Proof.context -> int -> tactic) -> tactic
    val create_map:
       (typ -> term) ->
         (string * typ -> 'a -> term) ->
           'a ->
             (typ -> bool) ->
               (local_theory -> string -> bool list) ->
                 (local_theory -> string -> term) ->
                   (local_theory -> string -> 'a -> term) ->
                     string list ->
                       (local_theory -> string -> 'a) ->
                         typ -> local_theory -> term
    val create_partial:
       'a ->
         (typ -> bool) ->
           (local_theory -> string -> bool list) ->
             (local_theory -> string -> term) ->
               (local_theory -> string -> 'a -> term) ->
                 string list ->
                   (local_theory -> string -> 'a) ->
                     typ -> local_theory -> term
    val define_overloaded:
       string * term -> local_theory -> thm * local_theory
    val define_overloaded_generic:
       Attrib.binding * term -> local_theory -> thm * local_theory
    val drop_last: 'a list -> 'a list
    val freeify_tvars: typ -> typ
    val ind_case_to_idxs: 'a list list -> int -> int * int
    val infer_type: Proof.context -> term -> term
    val ints_to_subscript: int list -> string
    val is_class_instance: theory -> string -> sort -> bool
    val lambdas: term list -> term -> term
    val mk_case_tac:
       Proof.context ->
         term option list list ->
           thm ->
             (int ->
                Proof.context * thm list * (string * cterm) list -> tactic)
               -> tactic
    val mk_def: typ -> string -> term -> term
    val mk_id: typ -> term
    val mk_infer_const: string -> Proof.context -> term -> term
    val mutual_recursive_types:
       string -> Proof.context -> string list * typ list
    val prove_multi_future:
       Proof.context ->
         string list ->
           term list ->
             term list ->
               ({context: Proof.context, prems: thm list} -> tactic) ->
                 thm list
    val recursor:
       (string -> 'a) * ('a -> bool list) * string list ->
         bool ->
           (typ -> 'b) ->
             (typ -> 'b) ->
               (typ -> 'b) ->
                 ((typ * 'b option) list * 'a -> 'b) -> typ -> 'b
    val rename_types: (typ * typ) list -> term -> term
    val split_IHs:
       (string -> 'a) * ('a -> bool list) * string list ->
         typ list -> thm list -> thm list list
    val std_recursor_tac:
       (string -> 'a) * ('a -> bool list) * string list ->
         typ list ->
           ('a -> thm) ->
             thm list -> typ -> thm list -> Proof.context -> tactic
    val sub: string -> string
    val subT: string -> typ -> string
    val typ_and_vs_of_typname:
       theory -> string -> sort -> typ * (string * sort) list
    val typ_and_vs_of_used_typname:
       string ->
         bool list -> string list -> typ * (string * string list) list
    val type_parameters:
       typ -> Proof.context -> (string * sort) list * typ list
  end
structure Generator_Aux: GENERATOR_AUX
### theory "Deriving.Generator_Aux"
### 0.158s elapsed time, 0.655s cpu time, 0.022s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
### Code generator: dropping subsumed code equation
### divmod_nat ?m ?n ==
### if ?n = 0 | ?m < ?n then (0, ?m)
### else let (q, y) = divmod_nat (?m - ?n) ?n in (Suc q, y)
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit1 ?n) ==
### if ?m < ?n then (0, numeral (num.Bit1 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit1 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit1 ?n) ==
### if ?m <= ?n then (0, numeral (num.Bit0 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit0 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r + 1)
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit1 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit0 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod ?m num.One == (numeral ?m, 0)
### Code generator: dropping subsumed code equation
### 1 == Int.Pos num.One
### Code generator: dropping subsumed code equation
### Suc ?m <= ?n == ?m < ?n
### Code generator: dropping subsumed code equation
### 0 <= ?n == True
### Code generator: dropping subsumed code equation
### Int.Neg ?m + Int.Neg ?n == Int.Neg (?m + ?n)
### Code generator: dropping subsumed code equation
### Int.Neg ?m + Int.Pos ?n == Int.sub ?n ?m
### Code generator: dropping subsumed code equation
### Int.Pos ?m + Int.Neg ?n == Int.sub ?m ?n
### Code generator: dropping subsumed code equation
### Int.Pos ?m + Int.Pos ?n == Int.Pos (?m + ?n)
### Code generator: dropping subsumed code equation
### 0 + ?l == ?l
### Code generator: dropping subsumed code equation
### ?k + 0 == ?k
### Code generator: dropping subsumed code equation
### ?m < Suc ?n == ?m <= ?n
### Code generator: dropping subsumed code equation
### ?n < 0 == False
### Code generator: dropping subsumed code equation
### - Int.Neg ?m == Int.Pos ?m
### Code generator: dropping subsumed code equation
### - Int.Pos ?m == Int.Neg ?m
### Code generator: dropping subsumed code equation
### - 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m - Int.Neg ?n == Int.sub ?n ?m
### Code generator: dropping subsumed code equation
### Int.Neg ?m - Int.Pos ?n == Int.Neg (?m + ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m - Int.Neg ?n == Int.Pos (?m + ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m - Int.Pos ?n == Int.sub ?m ?n
### Code generator: dropping subsumed code equation
### 0 - ?l == - ?l
### Code generator: dropping subsumed code equation
### ?k - 0 == ?k
### Code generator: dropping subsumed code equation
### Int.dup (Int.Neg ?n) == Int.Neg (num.Bit0 ?n)
### Code generator: dropping subsumed code equation
### Int.dup (Int.Pos ?n) == Int.Pos (num.Bit0 ?n)
### Code generator: dropping subsumed code equation
### Int.dup 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m * Int.Neg ?n == Int.Pos (?m * ?n)
### Code generator: dropping subsumed code equation
### Int.Neg ?m * Int.Pos ?n == Int.Neg (?m * ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m * Int.Neg ?n == Int.Neg (?m * ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m * Int.Pos ?n == Int.Pos (?m * ?n)
### Code generator: dropping subsumed code equation
### 0 * ?l == 0
### Code generator: dropping subsumed code equation
### ?k * 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m div Int.Neg ?n == fst (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m div Int.Neg ?n == - Divides.adjust_div (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Neg ?m div Int.Pos ?n == - Divides.adjust_div (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m div Int.Pos ?n == fst (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### ?k div Int.Neg num.One == - ?k
### Code generator: dropping subsumed code equation
### ?k div Int.Pos num.One == ?k
### Code generator: dropping subsumed code equation
### 0 div ?k == 0
### Code generator: dropping subsumed code equation
### ?k div 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m mod Int.Neg ?n == - snd (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m mod Int.Neg ?n ==
### - Divides.adjust_mod (Int.Pos ?n) (snd (divmod ?m ?n))
### Code generator: dropping subsumed code equation
### Int.Neg ?m mod Int.Pos ?n ==
### Divides.adjust_mod (Int.Pos ?n) (snd (divmod ?m ?n))
### Code generator: dropping subsumed code equation
### Int.Pos ?m mod Int.Pos ?n == snd (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### ?k mod Int.Neg num.One == 0
### Code generator: dropping subsumed code equation
### ?k mod Int.Pos num.One == 0
### Code generator: dropping subsumed code equation
### 0 mod ?k == 0
### Code generator: dropping subsumed code equation
### ?k mod 0 == ?k
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit1 ?n) ==
### if ?m < ?n then (0, numeral (num.Bit1 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit1 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit1 ?n) ==
### if ?m <= ?n then (0, numeral (num.Bit0 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit0 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r + 1)
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit1 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit0 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod ?m num.One == (numeral ?m, 0)
### Code generator: dropping subsumed code equation
### equal_class.equal ?k ?k == True
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Neg ?k) (Int.Neg ?l) == equal_class.equal ?k ?l
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Neg ?k) (Int.Pos ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Neg ?k) 0 == False
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Pos ?k) (Int.Neg ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Pos ?k) (Int.Pos ?l) == equal_class.equal ?k ?l
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Pos ?k) 0 == False
### Code generator: dropping subsumed code equation
### equal_class.equal 0 (Int.Neg ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal 0 (Int.Pos ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal 0 0 == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k <= Int.Neg ?l == ?l <= ?k
### Code generator: dropping subsumed code equation
### Int.Neg ?k <= Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k <= 0 == True
### Code generator: dropping subsumed code equation
### Int.Pos ?k <= Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### Int.Pos ?k <= Int.Pos ?l == ?k <= ?l
### Code generator: dropping subsumed code equation
### Int.Pos ?k <= 0 == False
### Code generator: dropping subsumed code equation
### 0 <= Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### 0 <= Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### 0 <= 0 == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k < Int.Neg ?l == ?l < ?k
### Code generator: dropping subsumed code equation
### Int.Neg ?k < Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k < 0 == True
### Code generator: dropping subsumed code equation
### Int.Pos ?k < Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### Int.Pos ?k < Int.Pos ?l == ?k < ?l
### Code generator: dropping subsumed code equation
### Int.Pos ?k < 0 == False
### Code generator: dropping subsumed code equation
### 0 < Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### 0 < Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### 0 < 0 == False
### Code generator: dropping subsumed code equation
### of_nat ?n == semiring_1_class.of_nat_aux (%i. i + (1::?'a)) ?n (0::?'a)
### Code generator: dropping subsumed code equation
### of_int (Int.Pos ?k) == numeral ?k
### Code generator: dropping subsumed code equation
### of_int 0 == 0::?'a
### Code generator: dropping subsumed code equation
### of_int (Int.Neg ?k) == - numeral ?k
### Code generator: dropping subsumed code equation
### nat (Int.Pos ?k) == nat_of_num ?k
### Code generator: dropping subsumed code equation
### nat 0 == 0
### Code generator: dropping subsumed code equation
### nat (Int.Neg ?k) == 0
### theory "HOL-Library.Code_Target_Nat"
### 0.163s elapsed time, 0.650s cpu time, 0.022s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Library.Code_Target_Int"
### 0.126s elapsed time, 0.504s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Target_Numeral" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Function_Algebras"
### 0.114s elapsed time, 0.440s cpu time, 0.039s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms" via "HOL-Library.Countable_Set")
### theory "HOL-Library.Code_Target_Numeral"
### 0.119s elapsed time, 0.467s cpu time, 0.039s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.435s elapsed time, 1.751s cpu time, 0.061s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Miscellaneous" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.FuncSet"
### 0.407s elapsed time, 1.604s cpu time, 0.126s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.394s elapsed time, 1.423s cpu time, 0.460s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.443s elapsed time, 1.612s cpu time, 0.510s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Disjoint_Sets"
### 0.447s elapsed time, 1.624s cpu time, 0.526s GC time
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Library.Numeral_Type" via "HOL-Library.Cardinality")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.480s elapsed time, 1.883s cpu time, 0.258s GC time
Loading theory "HOL-Library.Product_Plus" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Analysis.Product_Vector")
consts
  shift :: "'a list => 'a stream => 'a stream"
instantiation
  prod :: (zero, zero) zero
  zero_prod == zero_class.zero :: 'a * 'b
Proofs for coinductive predicate(s) "streamsp"
instantiation
  prod :: (plus, plus) plus
  plus_prod == plus :: 'a * 'b => 'a * 'b => 'a * 'b
  Proving monotonicity ...
instantiation
  prod :: (minus, minus) minus
  minus_prod == minus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (uminus, uminus) uminus
  uminus_prod == uminus :: 'a * 'b => 'a * 'b
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### theory "HOL-Library.Product_Plus"
### 0.107s elapsed time, 0.423s cpu time, 0.058s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
consts
  snth :: "'a stream => nat => 'a"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  stake :: "nat => 'a stream => 'a list"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
consts
  sdrop :: "nat => 'a stream => 'a stream"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.Phantom_Type"
### 0.780s elapsed time, 2.926s cpu time, 0.956s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Library.Numeral_Type")
### theory "HOL-Library.Set_Algebras"
### 0.441s elapsed time, 1.594s cpu time, 0.794s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  flat :: "'a list stream => 'a stream"
### Additional type variable(s) in locale specification "CARD_1": 'a
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### theory "HOL-Library.Stream"
### 1.166s elapsed time, 4.440s cpu time, 1.115s GC time
Loading theory "HOL-Library.Z2" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Code_Z2")
instantiation
  bit :: zero_neq_one
  one_bit == one_class.one :: bit
  zero_bit == zero_class.zero :: bit
### Additional type variable(s) in locale specification "card2": 'a
instantiation
  bit :: semidom_modulo
  modulo_bit == modulo :: bit => bit => bit
  divide_bit == divide :: bit => bit => bit
  minus_bit == minus :: bit => bit => bit
  times_bit == times :: bit => bit => bit
  plus_bit == plus :: bit => bit => bit
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
class zero_neq_one = one + zero +
  assumes "zero_neq_one": "(0::'a) ~= (1::'a)"
### Type
### bit => nat => bit
### of constant "Power.power_class.power"
### is too specific compared to declared type
### ?'a::{} => nat => ?'a::{}, in theorem:
### ?a ^ ?n == of_bool (odd ?a | ?n = 0)
instantiation
  bit :: field
  inverse_bit == inverse :: bit => bit
  uminus_bit == uminus :: bit => bit
instantiation
  bit :: semiring_bits
  bit_bit == bit :: bit => nat => bool
instantiation
  bit :: ring_bit_operations
  not_bit == not :: bit => bit
  and_bit == and :: bit => bit => bit
  or_bit == or :: bit => bit => bit
  xor_bit == xor :: bit => bit => bit
  mask_bit == mask :: nat => bit
  set_bit_bit == set_bit :: nat => bit => bit
  unset_bit_bit == unset_bit :: nat => bit => bit
  flip_bit_bit == flip_bit :: nat => bit => bit
  push_bit_bit == push_bit :: nat => bit => bit
  drop_bit_bit == drop_bit :: nat => bit => bit
  take_bit_bit == take_bit :: nat => bit => bit
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
### theory "HOL-Library.Z2"
### 0.349s elapsed time, 1.369s cpu time, 0.216s GC time
Loading theory "Gauss_Jordan.Code_Z2" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract")
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
consts
  mset :: "'a list => 'a multiset"
### theory "Gauss_Jordan.Code_Z2"
### 0.034s elapsed time, 0.141s cpu time, 0.000s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms" via "HOL-Library.Countable_Set")
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
consts
  left :: "'a tree => 'a tree"
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
consts
  right :: "'a tree => 'a tree"
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
Found termination order: "size <*mlex*> {}"
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
### theory "HOL-Library.Cardinality"
### 0.809s elapsed time, 3.191s cpu time, 0.372s GC time
Loading theory "HOL-Library.Code_Cardinality" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Elementary_Operations" via "Gauss_Jordan.Code_Matrix" via "Gauss_Jordan.Code_Set")
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### Code generator: dropping subsumed code equation
### List.coset [] <= set [] == False
### theory "HOL-Library.Code_Cardinality"
### 0.139s elapsed time, 0.550s cpu time, 0.103s GC time
Loading theory "Gauss_Jordan.Code_Set" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Elementary_Operations" via "Gauss_Jordan.Code_Matrix")
Found termination order: "size <*mlex*> {}"
### theory "Gauss_Jordan.Code_Set"
### 0.033s elapsed time, 0.129s cpu time, 0.000s GC time
Loading theory "HOL-Library.Numeral_Type" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type")
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
### Additional type variable(s) in locale specification "countable": 'a
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
instantiation
  num1 :: CARD_1
instantiation
  num1 :: {comm_monoid_mult,numeral,comm_ring}
  uminus_num1 == uminus :: num1 => num1
  zero_num1 == zero_class.zero :: num1
  minus_num1 == minus :: num1 => num1 => num1
  plus_num1 == plus :: num1 => num1 => num1
  one_num1 == one_class.one :: num1
  times_num1 == times :: num1 => num1 => num1
instantiation
  num1 :: linorder
  less_eq_num1 == less_eq :: num1 => num1 => bool
  less_num1 == less :: num1 => num1 => bool
Found termination order: "size <*mlex*> {}"
locale mod_type
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_type n Rep Abs"
locale mod_ring
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_ring n Rep Abs"
instantiation
  bit0 :: (finite) {minus,one,plus,times,uminus,zero}
  bit1 :: (finite) {minus,one,plus,times,uminus,zero}
  zero_bit0 == zero_class.zero :: 'a bit0
  uminus_bit0 == uminus :: 'a bit0 => 'a bit0
  times_bit0 == times :: 'a bit0 => 'a bit0 => 'a bit0
  plus_bit0 == plus :: 'a bit0 => 'a bit0 => 'a bit0
  one_bit0 == one_class.one :: 'a bit0
  minus_bit0 == minus :: 'a bit0 => 'a bit0 => 'a bit0
  zero_bit1 == zero_class.zero :: 'a bit1
  uminus_bit1 == uminus :: 'a bit1 => 'a bit1
  times_bit1 == times :: 'a bit1 => 'a bit1 => 'a bit1
  plus_bit1 == plus :: 'a bit1 => 'a bit1 => 'a bit1
  one_bit1 == one_class.one :: 'a bit1
  minus_bit1 == minus :: 'a bit1 => 'a bit1 => 'a bit1
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
instantiation
  bit0 :: (finite) linorder
  bit1 :: (finite) linorder
  less_eq_bit0 == less_eq :: 'a bit0 => 'a bit0 => bool
  less_bit0 == less :: 'a bit0 => 'a bit0 => bool
  less_eq_bit1 == less_eq :: 'a bit1 => 'a bit1 => bool
  less_bit1 == less :: 'a bit1 => 'a bit1 => bool
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
instantiation
  num0 :: equal
  equal_num0 == equal_class.equal :: num0 => num0 => bool
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  num1 :: equal
  equal_num1 == equal_class.equal :: num1 => num1 => bool
instantiation
  num1 :: enum
  enum_num1 == enum_class.enum :: num1 list
  enum_all_num1 == enum_class.enum_all :: (num1 => bool) => bool
  enum_ex_num1 == enum_class.enum_ex :: (num1 => bool) => bool
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
instantiation
  num0 :: card_UNIV
  num1 :: card_UNIV
  card_UNIV_num0 == card_UNIV_class.card_UNIV :: (num0, nat) phantom
  finite_UNIV_num0 == finite_UNIV :: (num0, bool) phantom
  card_UNIV_num1 == card_UNIV_class.card_UNIV :: (num1, nat) phantom
  finite_UNIV_num1 == finite_UNIV :: (num1, bool) phantom
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) equal
  bit1 :: (finite) equal
  equal_bit0 == equal_class.equal :: 'a bit0 => 'a bit0 => bool
  equal_bit1 == equal_class.equal :: 'a bit1 => 'a bit1 => bool
instantiation
  bit0 :: (finite) enum
  enum_bit0 == enum_class.enum :: 'a bit0 list
  enum_all_bit0 == enum_class.enum_all :: ('a bit0 => bool) => bool
  enum_ex_bit0 == enum_class.enum_ex :: ('a bit0 => bool) => bool
instantiation
  bit1 :: (finite) enum
  enum_bit1 == enum_class.enum :: 'a bit1 list
  enum_all_bit1 == enum_class.enum_all :: ('a bit1 => bool) => bool
  enum_ex_bit1 == enum_class.enum_ex :: ('a bit1 => bool) => bool
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  bit0 :: (finite) finite_UNIV
  bit1 :: (finite) finite_UNIV
  finite_UNIV_bit0 == finite_UNIV :: ('a bit0, bool) phantom
  finite_UNIV_bit1 == finite_UNIV :: ('a bit1, bool) phantom
instantiation
  bit0 :: ({card_UNIV,finite}) card_UNIV
  bit1 :: ({card_UNIV,finite}) card_UNIV
  card_UNIV_bit0 == card_UNIV_class.card_UNIV :: ('a bit0, nat) phantom
  card_UNIV_bit1 == card_UNIV_class.card_UNIV :: ('a bit1, nat) phantom
### theory "HOL-Library.Numeral_Type"
### 1.064s elapsed time, 3.981s cpu time, 1.255s GC time
Loading theory "HOL-Analysis.Metric_Arith" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
### theory "HOL-Library.Countable"
### 1.529s elapsed time, 5.829s cpu time, 1.458s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms")
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Tree"
### 2.427s elapsed time, 9.362s cpu time, 1.845s GC time
Loading theory "Draft.Templates" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.256s cpu time, 0.000s GC time
Loading theory "Cauchy.CauchysMeanTheorem" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Sqrt_Babylonian.Sqrt_Babylonian" via "Sqrt_Babylonian.NthRoot_Impl")
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
### theory "HOL-Library.Countable_Set"
### 0.489s elapsed time, 1.919s cpu time, 0.226s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
signature METRIC_ARITH =
  sig
    val argo_timeout: real Config.T
    val metric_arith_tac: Proof.context -> int -> tactic
    val trace: bool Config.T
  end
structure Metric_Arith: METRIC_ARITH
### theory "HOL-Analysis.Metric_Arith"
### 0.655s elapsed time, 2.582s cpu time, 0.226s GC time
Loading theory "HOL-Library.Set_Idioms" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
### theory "Cauchy.CauchysMeanTheorem"
### 0.291s elapsed time, 1.133s cpu time, 0.217s GC time
Loading theory "HOL-Analysis.Inner_Product" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Analysis.Euclidean_Space")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
### theory "HOL-Library.Set_Idioms"
### 0.277s elapsed time, 1.081s cpu time, 0.235s GC time
Loading theory "HOL-Analysis.Abstract_Topology" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2")
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
### theory "HOL-Library.Multiset"
### 4.538s elapsed time, 17.391s cpu time, 3.813s GC time
Loading theory "HOL-Computational_Algebra.Factorial_Ring" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Real_Impl.Real_Impl_Auxiliary" via "HOL-Computational_Algebra.Primes" via "HOL-Computational_Algebra.Euclidean_Algorithm")
class real_inner = dist_norm + real_vector + sgn_div_norm +
  uniformity_dist + open_uniformity +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. inner x y = inner y x"
    and "inner_add_left": "!!x y z. inner (x + y) z = inner x z + inner y z"
    and
    "inner_scaleR_left": "!!r x y. inner (r *\<^sub>R x) y = r * inner x y"
    and "inner_ge_zero": "!!x. 0 <= inner x x"
    and "inner_eq_zero_iff": "!!x. (inner x x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (inner x x)"
instantiation
  real :: real_inner
  inner_real == inner :: real => real => real
instantiation
  complex :: real_inner
  inner_complex == inner :: complex => complex => real
bundle inner_syntax
bundle no_inner_syntax
### theory "HOL-Analysis.Inner_Product"
### 1.101s elapsed time, 4.473s cpu time, 0.484s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Miscellaneous" via "HOL-Analysis.Determinants")
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
class normalization_semidom = algebraic_semidom +
  semidom_divide_unit_factor +
  fixes normalize :: "'a => 'a"
  assumes
    "unit_factor_mult_normalize": "!!a. unit_factor a * normalize a = a"
    and "normalize_0": "normalize (0::'a) = (0::'a)"
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Complete_Lattices"
### 2.293s elapsed time, 9.186s cpu time, 1.134s GC time
Loading theory "HOL-Analysis.L2_Norm" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Analysis.Euclidean_Space")
### theory "HOL-Combinatorics.Permutations"
### 0.995s elapsed time, 3.938s cpu time, 0.543s GC time
Loading theory "HOL-Analysis.Operator_Norm" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
### theory "HOL-Analysis.L2_Norm"
### 0.088s elapsed time, 0.352s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Product_Vector" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
### theory "HOL-Analysis.Operator_Norm"
### 0.099s elapsed time, 0.399s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.ExtrEqs")
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
locale module_prod
  fixes s1 :: "'a => 'b => 'b"
    and s2 :: "'a => 'c => 'c"
  assumes "module_prod s1 s2"
locale vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
  assumes "vector_space_prod (*a) (*b)"
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (real_vector, real_vector) real_vector
  scaleR_prod == scaleR :: real => 'a * 'b => 'a * 'b
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (metric_space, metric_space) dist
  dist_prod == dist :: 'a * 'b => 'a * 'b => real
Proofs for inductive predicate(s) "generate_topology_on"
instantiation
  prod :: (uniformity, uniformity) uniformity
  uniformity_prod == uniformity :: (('a * 'b) * 'a * 'b) filter
  Proving monotonicity ...
instantiation
  prod :: (uniform_space, uniform_space) uniform_space
instantiation
  prod :: (metric_space, metric_space) uniformity_dist
instantiation
  prod :: (metric_space, metric_space) metric_space
instantiation
  prod :: (real_normed_vector, real_normed_vector) real_normed_vector
  sgn_prod == sgn :: 'a * 'b => 'a * 'b
  norm_prod == norm :: 'a * 'b => real
### theory "HOL-Analysis.Abstract_Topology"
### 2.753s elapsed time, 11.015s cpu time, 1.256s GC time
Loading theory "HOL-Analysis.Abstract_Limits" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Function_Topology")
### theory "HOL-Library.BigO"
### 0.872s elapsed time, 3.448s cpu time, 0.496s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates")
locale finite_dimensional_vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and B1 :: "'b set"
    and B2 :: "'c set"
  assumes "finite_dimensional_vector_space_prod (*a) (*b) B1 B2"
### theory "HOL-Analysis.Product_Vector"
### 0.992s elapsed time, 3.929s cpu time, 0.496s GC time
Loading theory "HOL-Analysis.Elementary_Topology" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Analysis.Abstract_Limits"
### 0.253s elapsed time, 0.999s cpu time, 0.139s GC time
Loading theory "HOL-Analysis.Euclidean_Space" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.677s elapsed time, 2.683s cpu time, 0.225s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
class topological_space = open +
  assumes "open_UNIV": "open UNIV"
  assumes "open_Int": "!!S T. [| open S; open T |] ==> open (S Int T)"
  assumes "open_Union": "!!K. Ball K open ==> open (\<Union> K)"
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
locale countable_basis
  fixes p :: "'a set => bool"
    and B :: "'a set set"
  assumes "countable_basis p B"
### theory "HOL-Library.Discrete"
### 0.149s elapsed time, 0.593s cpu time, 0.000s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2")
class euclidean_space = real_inner +
  fixes Basis :: "'a set"
  assumes "nonempty_Basis": "Basis ~= {}"
  assumes "finite_Basis": "finite Basis"
  assumes
    "inner_Basis":
      "!!u v.
          [| u : Basis; v : Basis |]
          ==> inner u v = (if u = v then 1 else 0)"
  assumes
    "euclidean_all_zero_iff":
      "!!x. (ALL u:Basis. inner x u = 0) = (x = (0::'a))"
class second_countable_topology = topological_space +
  assumes
    "ex_countable_subbasis":
      "EX B. countable B & open = generate_topology B"
### theory "HOL-Library.Indicator_Function"
### 0.426s elapsed time, 1.680s cpu time, 0.184s GC time
Loading theory "HOL-Library.Liminf_Limsup" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
class factorial_semiring_gcd = factorial_semiring + Gcd +
  assumes "gcd_eq_gcd_factorial": "!!a b. gcd a b = gcd_factorial a b"
    and "lcm_eq_lcm_factorial": "!!a b. lcm a b = lcm_factorial a b"
    and "Gcd_eq_Gcd_factorial": "!!A. Gcd A = Gcd_factorial A"
    and "Lcm_eq_Lcm_factorial": "!!A. Lcm A = Lcm_factorial A"
instantiation
  real :: euclidean_space
  Basis_real == Basis :: real set
instantiation
  complex :: euclidean_space
  Basis_complex == Basis :: complex set
instantiation
  prod :: (real_inner, real_inner) real_inner
  inner_prod == inner :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (euclidean_space, euclidean_space) euclidean_space
  Basis_prod == Basis :: ('a * 'b) set
### Cannot skip proof of schematic goal statement
### theory "HOL-Library.Liminf_Limsup"
### 0.497s elapsed time, 1.963s cpu time, 0.208s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat")
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Euclidean_Space"
### 1.679s elapsed time, 6.652s cpu time, 0.616s GC time
Loading theory "HOL-Analysis.Finite_Cartesian_Product" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space")
### theory "HOL-Analysis.Elementary_Topology"
### 1.985s elapsed time, 7.856s cpu time, 0.785s GC time
Loading theory "HOL-Analysis.Linear_Algebra" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space")
### theory "HOL-Library.Order_Continuity"
### 0.603s elapsed time, 2.391s cpu time, 0.259s GC time
Loading theory "HOL-Analysis.Abstract_Topology_2" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
class real_inner = real_normed_vector +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. x \<bullet> y = y \<bullet> x"
    and
    "inner_add_left":
      "!!x y z. (x + y) \<bullet> z = x \<bullet> z + y \<bullet> z"
    and
    "inner_scaleR_left":
      "!!r x y. r *\<^sub>R x \<bullet> y = r * (x \<bullet> y)"
    and "inner_ge_zero": "!!x. 0 <= x \<bullet> x"
    and "inner_eq_zero_iff": "!!x. (x \<bullet> x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (x \<bullet> x)"
bundle vec_syntax
bundle no_vec_syntax
instantiation
  vec :: (zero, finite) zero
  zero_vec == zero_class.zero :: ('a, 'b) vec
instantiation
  vec :: (plus, finite) plus
  plus_vec == plus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (minus, finite) minus
  minus_vec == minus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (uminus, finite) uminus
  uminus_vec == uminus :: ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (times, finite) times
  times_vec == times :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (one, finite) one
  one_vec == one_class.one :: ('a, 'b) vec
instantiation
  vec :: (ord, finite) ord
  less_eq_vec == less_eq :: ('a, 'b) vec => ('a, 'b) vec => bool
  less_vec == less :: ('a, 'b) vec => ('a, 'b) vec => bool
instantiation
  vec :: (real_vector, finite) real_vector
  scaleR_vec == scaleR :: real => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (topological_space, finite) topological_space
  open_vec == open :: ('a, 'b) vec set => bool
instantiation
  vec :: (metric_space, finite) dist
  dist_vec == dist :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (metric_space, finite) uniformity_dist
  uniformity_vec == uniformity :: (('a, 'b) vec * ('a, 'b) vec) filter
instantiation
  vec :: (metric_space, finite) metric_space
instantiation
  vec :: (real_normed_vector, finite) real_normed_vector
  sgn_vec == sgn :: ('a, 'b) vec => ('a, 'b) vec
  norm_vec == norm :: ('a, 'b) vec => real
instantiation
  vec :: (real_inner, finite) real_inner
  inner_vec == inner :: ('a, 'b) vec => ('a, 'b) vec => real
### theory "HOL-Analysis.Linear_Algebra"
### 0.995s elapsed time, 3.940s cpu time, 0.380s GC time
Loading theory "HOL-Analysis.Affine" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Line_Segment" via "HOL-Analysis.Convex")
instantiation
  vec :: (euclidean_space, finite) euclidean_space
  Basis_vec == Basis :: ('a, 'b) vec set
### theory "HOL-Analysis.Finite_Cartesian_Product"
### 1.716s elapsed time, 6.779s cpu time, 0.794s GC time
Loading theory "HOL-Analysis.Cartesian_Space" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
### theory "HOL-Analysis.Affine"
### 0.514s elapsed time, 2.018s cpu time, 0.381s GC time
Loading theory "HOL-Analysis.Convex" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Line_Segment")
### theory "HOL-Analysis.Abstract_Topology_2"
### 2.182s elapsed time, 8.330s cpu time, 3.529s GC time
Loading theory "HOL-Analysis.Connected" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
### theory "HOL-Analysis.Connected"
### 0.367s elapsed time, 1.451s cpu time, 0.146s GC time
Loading theory "HOL-Analysis.Function_Topology" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
### theory "HOL-Computational_Algebra.Factorial_Ring"
### 7.674s elapsed time, 30.166s cpu time, 5.805s GC time
Loading theory "HOL-Computational_Algebra.Euclidean_Algorithm" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Real_Impl.Real_Impl_Auxiliary" via "HOL-Computational_Algebra.Primes")
instantiation
  fun :: (type, topological_space) topological_space
  open_fun == open :: ('a => 'b) set => bool
### theory "HOL-Analysis.Convex"
### 1.788s elapsed time, 6.796s cpu time, 3.242s GC time
Loading theory "HOL-Analysis.Elementary_Metric_Spaces" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
locale linear_first_finite_dimensional_vector_space
  fixes scaleB :: "'a => 'b => 'b"  (infixr \<open>*b\<close> 75)
    and scaleC :: "'a => 'c => 'c"  (infixr \<open>*c\<close> 75)
    and BasisB :: "'b set"
    and f :: "'b => 'c"
  assumes "linear_first_finite_dimensional_vector_space (*b) (*c) BasisB f"
### theory "HOL-Analysis.Function_Topology"
### 0.716s elapsed time, 2.833s cpu time, 0.409s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
### theory "HOL-Analysis.Cartesian_Space"
### 2.424s elapsed time, 9.311s cpu time, 3.497s GC time
Loading theory "HOL-Analysis.Determinants" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Miscellaneous")
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.723s elapsed time, 2.859s cpu time, 0.311s GC time
Loading theory "HOL-Library.Extended_Real" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
class heine_borel = metric_space +
  assumes
    "bounded_imp_convergent_subsequence":
      "!!f. bounded (range f) ==>
            EX l r. strict_mono r & (f o r) \<longlonglongrightarrow> l"
instantiation
  enat :: linorder_topology
  open_enat == open :: enat set => bool
### theory "HOL-Analysis.Determinants"
### 0.974s elapsed time, 3.839s cpu time, 0.441s GC time
Loading theory "HOL-Library.Sum_of_Squares" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Norm_Arith")
instantiation
  ereal :: uminus
  uminus_ereal == uminus :: ereal => ereal
Found termination order: "{}"
instantiation
  ereal :: infinity
  infinity_ereal == infinity :: ereal
instantiation
  ereal :: abs
  abs_ereal == abs :: ereal => ereal
class euclidean_semiring_gcd = normalization_euclidean_semiring + Gcd +
  assumes "gcd_eucl": "normalization_euclidean_semiring_class.gcd = gcd"
    and "lcm_eucl": "normalization_euclidean_semiring_class.lcm = lcm"
  assumes "Gcd_eucl": "normalization_euclidean_semiring_class.Gcd = Gcd"
    and "Lcm_eucl": "normalization_euclidean_semiring_class.Lcm = Lcm"
### theory "HOL-Analysis.Elementary_Metric_Spaces"
### 1.924s elapsed time, 7.586s cpu time, 0.951s GC time
Loading theory "HOL-Analysis.Elementary_Normed_Spaces" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space")
instantiation
  ereal :: {comm_monoid_add,zero_neq_one}
  one_ereal == one_class.one :: ereal
  zero_ereal == zero_class.zero :: ereal
  plus_ereal == plus :: ereal => ereal => ereal
instantiation
  ereal :: linorder
  less_eq_ereal == less_eq :: ereal => ereal => bool
  less_ereal == less :: ereal => ereal => bool
instantiation
  ereal :: {comm_monoid_mult,sgn}
  sgn_ereal == sgn :: ereal => ereal
  times_ereal == times :: ereal => ereal => ereal
### ML warning (line 261 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_abs) has not been referenced.
### ML warning (line 265 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_max) has not been referenced.
### ML warning (line 269 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_min) has not been referenced.
### ML warning (line 379 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Pattern is not exhaustive.
signature FUNC =
  sig
    exception DUP of key
    exception SAME
    exception UNDEF of key
    val apply: 'a table -> key -> 'a
    val applyd: 'a table -> (key -> 'a) -> key -> 'a
    val build: ('a table -> 'a table) -> 'a table
    val choose: 'a table -> key * 'a
    val combine:
       ('a -> 'a -> 'a) -> ('a -> bool) -> 'a table -> 'a table -> 'a table
    val cons_list: key * 'a -> 'a list table -> 'a list table
    val default: key * 'a -> 'a table -> 'a table
    val defined: 'a table -> key -> bool
    val delete: key -> 'a table -> 'a table
    val delete_safe: key -> 'a table -> 'a table
    val dest: 'a table -> (key * 'a) list
    val dest_list: 'a list table -> (key * 'a) list
    val dom: 'a table -> key list
    val empty: 'a table
    val exists: (key * 'a -> bool) -> 'a table -> bool
    val fold: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val fold_rev: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val forall: (key * 'a -> bool) -> 'a table -> bool
    val get_first: (key * 'a -> 'b option) -> 'a table -> 'b option
    val insert: ('a * 'a -> bool) -> key * 'a -> 'a table -> 'a table
    val insert_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val insert_set: key -> set -> set
    val is_empty: 'a table -> bool
    val is_single: 'a table -> bool
    val join: (key -> 'a * 'a -> 'a) -> 'a table * 'a table -> 'a table
    type key
    val keys: 'a table -> key list
    val lookup: 'a table -> key -> 'a option
    val lookup_key: 'a table -> key -> (key * 'a) option
    val lookup_list: 'a list table -> key -> 'a list
    val make: (key * 'a) list -> 'a table
    val make_list: (key * 'a) list -> 'a list table
    val make_set: key list -> set
    val map: (key -> 'a -> 'b) -> 'a table -> 'b table
    val map_default: key * 'a -> ('a -> 'a) -> 'a table -> 'a table
    val map_entry: key -> ('a -> 'a) -> 'a table -> 'a table
    val max: 'a table -> (key * 'a) option
    val member: ('a * 'b -> bool) -> 'b table -> key * 'a -> bool
    val merge: ('a * 'a -> bool) -> 'a table * 'a table -> 'a table
    val merge_list:
       ('a * 'a -> bool) -> 'a list table * 'a list table -> 'a list table
    val min: 'a table -> (key * 'a) option
    val onefunc: key * 'a -> 'a table
    val remove: ('a * 'b -> bool) -> key * 'a -> 'b table -> 'b table
    val remove_list:
       ('a * 'b -> bool) -> key * 'a -> 'b list table -> 'b list table
    val remove_set: key -> set -> set
    type set = unit table
    type 'a table
    val tryapplyd: 'a table -> key -> 'a -> 'a
    val update: key * 'a -> 'a table -> 'a table
    val update_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val update_new: key * 'a -> 'a table -> 'a table
    val updatep: (key * 'a -> bool) -> key * 'a -> 'a table -> 'a table
  end
functor FuncFun (Key: KEY): FUNC
signature REAL_ARITH =
  sig
    type cert_conv = cterm -> thm * pss_tree
    val cterm_of_rat: Rat.rat -> cterm
    val dest_ratconst: cterm -> Rat.rat
    val gen_gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * conv * conv * prover
           -> cert_conv
    val gen_prover_real_arith: Proof.context -> prover -> cert_conv
    val gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * prover
           -> cert_conv
    val is_ratconst: cterm -> bool
    datatype positivstellensatz
    =
         Axiom_eq of int
       | Axiom_le of int
       | Axiom_lt of int
       | Eqmul of FuncUtil.poly * positivstellensatz
       | Product of positivstellensatz * positivstellensatz
       | Rational_eq of Rat.rat
       | Rational_le of Rat.rat
       | Rational_lt of Rat.rat
       | Square of FuncUtil.poly
       | Sum of positivstellensatz * positivstellensatz
    type prover =
       tree_choice list ->
         (thm list * thm list * thm list -> positivstellensatz -> thm) ->
           thm list * thm list * thm list -> thm * pss_tree
    datatype pss_tree
    = Branch of pss_tree * pss_tree | Cert of positivstellensatz | Trivial
    val real_linear_prover:
       (thm list * thm list * thm list -> positivstellensatz -> thm) ->
         thm list * thm list * thm list -> thm * pss_tree
    datatype tree_choice = Left | Right
  end
structure FuncUtil:
  sig
    structure Ctermfunc: FUNC
    structure Intfunc: FUNC
    structure Intpairfunc: FUNC
    structure Monomialfunc: FUNC
    structure Ratfunc: FUNC
    structure Symfunc: FUNC
    structure Termfunc: FUNC
    val dest_monomial: 'a Ctermfunc.table -> (cterm * 'a) list
    type monomial = int Ctermfunc.table
    val monomial_ord: int Ctermfunc.table * int Ctermfunc.table -> order
    val monomial_order: int Ctermfunc.table * int Ctermfunc.table -> order
    type poly = Rat.rat Monomialfunc.table
  end
structure RealArith: REAL_ARITH
signature POSITIVSTELLENSATZ_TOOLS =
  sig
    val print_cert: RealArith.pss_tree -> string
    val read_cert: Proof.context -> string -> RealArith.pss_tree
  end
structure Positivstellensatz_Tools: POSITIVSTELLENSATZ_TOOLS
instantiation
  ereal :: minus
  minus_ereal == minus :: ereal => ereal => ereal
instantiation
  ereal :: inverse
  inverse_ereal == inverse :: ereal => ereal
  divide_ereal == divide :: ereal => ereal => ereal
signature SUM_OF_SQUARES =
  sig
    exception Failure of string
    val debug: bool Config.T
    val debug_message: Proof.context -> (unit -> string) -> unit
    datatype proof_method
    = Certificate of RealArith.pss_tree | Prover of string -> string
    val sos_tac:
       (RealArith.pss_tree -> unit) ->
         proof_method -> Proof.context -> int -> tactic
    val trace: bool Config.T
    val trace_message: Proof.context -> (unit -> string) -> unit
  end
structure Sum_of_Squares: SUM_OF_SQUARES
signature SOS_WRAPPER =
  sig val sos_tac: Proof.context -> string option -> int -> tactic end
structure SOS_Wrapper: SOS_WRAPPER
### theory "HOL-Library.Sum_of_Squares"
### 1.357s elapsed time, 5.320s cpu time, 0.564s GC time
Loading theory "HOL-Analysis.Norm_Arith" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Topology_Euclidean_Space")
instantiation
  ereal :: lattice
  inf_ereal == inf :: ereal => ereal => ereal
  sup_ereal == sup :: ereal => ereal => ereal
instantiation
  ereal :: complete_lattice
  Inf_ereal == Inf :: ereal set => ereal
  Sup_ereal == Sup :: ereal set => ereal
  bot_ereal == bot :: ereal
  top_ereal == top :: ereal
instantiation
  ereal :: linear_continuum_topology
  open_ereal == open :: ereal set => bool
### ML warning (line 103 of "~~/src/HOL/Analysis/normarith.ML"):
### Matches are not exhaustive.
signature NORM_ARITH =
  sig
    val norm_arith: Proof.context -> conv
    val norm_arith_tac: Proof.context -> int -> tactic
  end
structure NormArith: NORM_ARITH
### theory "HOL-Analysis.Norm_Arith"
### 0.313s elapsed time, 1.224s cpu time, 0.170s GC time
Loading theory "Sqrt_Babylonian.Sqrt_Babylonian_Auxiliary" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Sqrt_Babylonian.Sqrt_Babylonian")
### theory "HOL-Analysis.Elementary_Normed_Spaces"
### 1.393s elapsed time, 5.458s cpu time, 0.549s GC time
Loading theory "HOL-Analysis.Topology_Euclidean_Space" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
class linordered_idom = ring_char_0 + idom_abs_sgn +
  linordered_ring_strict + linordered_semidom +
  linordered_semiring_1_strict + ordered_comm_ring + ordered_ring_abs +
  assumes
    "sgn_if":
      "!!x. sgn x =
            (if x = (0::'a) then 0::'a
             else if (0::'a) < x then 1::'a else - (1::'a))"
### theory "Sqrt_Babylonian.Sqrt_Babylonian_Auxiliary"
### 1.572s elapsed time, 5.865s cpu time, 4.183s GC time
Loading theory "Sqrt_Babylonian.Log_Impl" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Sqrt_Babylonian.Sqrt_Babylonian" via "Sqrt_Babylonian.NthRoot_Impl")
### theory "HOL-Library.Extended_Real"
### 4.031s elapsed time, 15.523s cpu time, 5.218s GC time
Loading theory "HOL-Library.Extended_Nonnegative_Real" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Analysis.Extended_Real_Limits")
### theory "Sqrt_Babylonian.Log_Impl"
### 0.255s elapsed time, 1.006s cpu time, 0.087s GC time
Loading theory "Sqrt_Babylonian.NthRoot_Impl" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Sqrt_Babylonian.Sqrt_Babylonian")
locale fixed_root
  fixes p :: "nat"
    and pm :: "nat"
  assumes "fixed_root p pm"
locale fixed_root
  fixes p :: "nat"
    and pm :: "nat"
  assumes "fixed_root p pm"
instantiation
  ennreal :: complete_linorder
  Inf_ennreal == Inf :: ennreal set => ennreal
  Sup_ennreal == Sup :: ennreal set => ennreal
  bot_ennreal == bot :: ennreal
  sup_ennreal == sup :: ennreal => ennreal => ennreal
  top_ennreal == top :: ennreal
  inf_ennreal == inf :: ennreal => ennreal => ennreal
  less_eq_ennreal == less_eq :: ennreal => ennreal => bool
  less_ennreal == less :: ennreal => ennreal => bool
### theory "Sqrt_Babylonian.NthRoot_Impl"
### 0.540s elapsed time, 2.133s cpu time, 0.195s GC time
Loading theory "Sqrt_Babylonian.Sqrt_Babylonian" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product")
instantiation
  ennreal :: infinity
  infinity_ennreal == infinity :: ennreal
instantiation
  ennreal :: {comm_semiring_1,semiring_1_no_zero_divisors}
  zero_ennreal == zero_class.zero :: ennreal
  plus_ennreal == plus :: ennreal => ennreal => ennreal
  one_ennreal == one_class.one :: ennreal
  times_ennreal == times :: ennreal => ennreal => ennreal
instantiation
  ennreal :: minus
  minus_ennreal == minus :: ennreal => ennreal => ennreal
instantiation
  ennreal :: inverse
  inverse_ennreal == inverse :: ennreal => ennreal
  divide_ennreal == divide :: ennreal => ennreal => ennreal
locale sqrt_approximation
  fixes \<epsilon> :: "'a"
    and n :: "'a"
  assumes "sqrt_approximation \<epsilon> n"
structure Cancel_Ennreal_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
### theory "Sqrt_Babylonian.Sqrt_Babylonian"
### 0.299s elapsed time, 1.181s cpu time, 0.085s GC time
Loading theory "Real_Impl.Real_Impl" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl")
instantiation
  ennreal :: linear_continuum_topology
  open_ennreal == open :: ennreal set => bool
### Code generator: dropping subsumed code equation
### 0 == Ratreal 0
### Code generator: dropping subsumed code equation
### 1 == Ratreal 1
### Code generator: dropping subsumed code equation
### Ratreal ?x <= Ratreal ?y == ?x <= ?y
### Code generator: dropping subsumed code equation
### Ratreal ?x < Ratreal ?y == ?x < ?y
### Code generator: dropping subsumed code equation
### Ratreal ?x / Ratreal ?y == Ratreal (?x / ?y)
### Code generator: dropping subsumed code equation
### Ratreal ?x - Ratreal ?y == Ratreal (?x - ?y)
### theory "Real_Impl.Real_Impl"
### 0.544s elapsed time, 2.140s cpu time, 0.243s GC time
Loading theory "Rank_Nullity_Theorem.Dual_Order" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type")
### Abstraction on left hand side of equation, in theorem:
### linorder.Min (%x y. y <= x) (set (?x # ?xs)) ==
### fold dual_wellorder.min ?xs ?x
### Abstraction on left hand side of equation, in theorem:
### linorder.Max (%x y. y <= x) (set (?x # ?xs)) ==
### fold dual_wellorder.max ?xs ?x
### Abstraction on left hand side of equation, in theorem:
### dual_wellorder.sorted [] == True
### Abstraction on left hand side of equation, in theorem:
### dual_wellorder.sorted [?x] == True
### Abstraction on left hand side of equation, in theorem:
### dual_wellorder.sorted (?x # ?y # ?zs) ==
### ?y <= ?x & dual_wellorder.sorted (?y # ?zs)
### Abstraction on left hand side of equation, in theorem:
### dual_wellorder.sorted_list_of_set (set ?xs) ==
### dual_wellorder.sort (remdups ?xs)
### theory "HOL-Library.Extended_Nonnegative_Real"
### 1.622s elapsed time, 6.388s cpu time, 0.710s GC time
Loading theory "Show.Show" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Show.Show_Instances")
### theory "HOL-Analysis.Topology_Euclidean_Space"
### 3.254s elapsed time, 12.505s cpu time, 4.793s GC time
Loading theory "HOL-Analysis.Convex_Euclidean_Space" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative")
### theory "Rank_Nullity_Theorem.Dual_Order"
### 0.356s elapsed time, 1.400s cpu time, 0.192s GC time
Loading theory "HOL-Analysis.Extended_Real_Limits" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
class show = type +
  fixes shows_prec :: "nat => 'a => char list => char list"
    and shows_list :: "'a list => char list => char list"
  assumes
    "shows_prec_append":
      "!!p x r s. shows_prec p x (r @ s) = shows_prec p x r @ s"
    and
    "shows_list_append":
      "!!xs r s. shows_list xs (r @ s) = shows_list xs r @ s"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
instantiation
  char :: show
  shows_prec_char == shows_prec :: nat => char => char list => char list
  shows_list_char == shows_list :: char list => char list => char list
signature SHOW_GENERATOR =
  sig
    val generate_showsp: string -> local_theory -> local_theory
    val register_foreign_partial_and_full_showsp:
       string ->
         int ->
           term ->
             term ->
               thm option ->
                 term ->
                   thm option ->
                     bool list -> thm -> local_theory -> local_theory
    val register_foreign_showsp:
       typ -> term -> thm -> local_theory -> local_theory
    val show_instance: string -> theory -> theory
  end
structure Show_Generator: SHOW_GENERATOR
instantiation
  list :: (show) show
  shows_prec_list == shows_prec :: nat => 'a list => char list => char list
  shows_list_list == shows_list :: 'a list list => char list => char list
instantiation
  String.literal :: show
  shows_prec_literal == shows_prec ::
    nat => String.literal => char list => char list
  shows_list_literal == shows_list ::
    String.literal list => char list => char list
### theory "Show.Show"
### 0.881s elapsed time, 3.451s cpu time, 0.439s GC time
Loading theory "HOL-Analysis.Line_Segment" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative")
### theory "HOL-Analysis.Convex_Euclidean_Space"
### 1.109s elapsed time, 4.348s cpu time, 0.574s GC time
Loading theory "Show.Show_Instances" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl")
### theory "HOL-Analysis.Extended_Real_Limits"
### 1.120s elapsed time, 4.408s cpu time, 0.566s GC time
Loading theory "HOL-Analysis.Summation_Tests" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit")
consts
  showsp_bool :: "nat => bool => char list => char list"
consts
  pshowsp_prod ::
    "nat
     => (char list => char list) * (char list => char list)
        => char list => char list"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Analysis.Line_Segment"
### 1.008s elapsed time, 3.955s cpu time, 0.538s GC time
Loading theory "Show.Show_Real" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl")
deriving "show" instance for type "Option.option"
generating show function for type "Option.option"
deriving "show" instance for type "Sum_Type.sum"
generating show function for type "Sum_Type.sum"
deriving "show" instance for type "Product_Type.prod"
deriving "show" instance for type "Product_Type.unit"
deriving "show" instance for type "HOL.bool"
deriving "show" instance for type "Nat.nat"
deriving "show" instance for type "Int.int"
deriving "show" instance for type "Rat.rat"
deriving "show" instance for type "Real.real"
### theory "Show.Show_Real"
### 0.285s elapsed time, 1.118s cpu time, 0.113s GC time
### theory "HOL-Analysis.Summation_Tests"
### 0.897s elapsed time, 3.534s cpu time, 0.324s GC time
Loading theory "HOL-Analysis.Uniform_Limit" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
### theory "Show.Show_Instances"
### 1.134s elapsed time, 4.458s cpu time, 0.474s GC time
"{False, True}"
  :: "bool set"
"{False, True}"
  :: "bool set"
"{a\<^sub>1, a\<^sub>2}"
  :: "Enum.finite_2 set"
"{a\<^sub>1, a\<^sub>2}"
  :: "Enum.finite_2 set"
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
"{a\<^sub>1, a\<^sub>2, a\<^sub>3, a\<^sub>4, a\<^sub>5}"
  :: "Enum.finite_5 set"
"- \<infinity>"
  :: "ereal"
"\<infinity>"
  :: "ereal"
"True"
  :: "bool"
"True"
  :: "bool"
"ereal (13 / 4)"
  :: "ereal"
### theory "HOL-Analysis.Uniform_Limit"
### 0.654s elapsed time, 2.559s cpu time, 0.220s GC time
Loading theory "HOL-Analysis.Bounded_Linear_Function" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative")
### theory "HOL-Computational_Algebra.Euclidean_Algorithm"
### 10.847s elapsed time, 42.342s cpu time, 8.259s GC time
Loading theory "HOL-Computational_Algebra.Primes" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product" via "Real_Impl.Real_Impl_Auxiliary")
### theory "HOL-Computational_Algebra.Primes"
### 0.286s elapsed time, 1.115s cpu time, 0.135s GC time
Loading theory "Real_Impl.Real_Impl_Auxiliary" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl" via "Real_Impl.Prime_Product")
### theory "Real_Impl.Real_Impl_Auxiliary"
### 0.032s elapsed time, 0.132s cpu time, 0.000s GC time
Loading theory "Real_Impl.Prime_Product" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Real_Impl.Real_Unique_Impl")
instantiation
  blinfun :: (real_normed_vector, real_normed_vector) real_normed_vector
  uminus_blinfun == uminus ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  zero_blinfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>L 'b
  minus_blinfun == minus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  plus_blinfun == plus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  sgn_blinfun == sgn ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  norm_blinfun == norm :: 'a \<Rightarrow>\<^sub>L 'b => real
  scaleR_blinfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  dist_blinfun == dist ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b => real
  uniformity_blinfun == uniformity ::
    ('a \<Rightarrow>\<^sub>L 'b * 'a \<Rightarrow>\<^sub>L 'b) filter
  open_blinfun == open :: ('a \<Rightarrow>\<^sub>L 'b) set => bool
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
### theory "Real_Impl.Prime_Product"
### 0.680s elapsed time, 2.661s cpu time, 0.296s GC time
Loading theory "Real_Impl.Real_Unique_Impl" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic")
### theory "HOL-Analysis.Bounded_Linear_Function"
### 1.931s elapsed time, 7.581s cpu time, 0.688s GC time
Loading theory "HOL-Analysis.Derivative" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type" via "HOL-Analysis.Cartesian_Euclidean_Space")
"857"
  :: "int"
### Code generator: dropping subsumed code equation
### Ratreal == real_of o ma_of_rat
overloading
  show_real \<equiv> show_real :: real => char list
### Code generator: dropping subsumed code equation
### 0 == real_of (ma_of_rat 0)
### Code generator: dropping subsumed code equation
### 1 == real_of (ma_of_rat 1)
### theory "Real_Impl.Real_Unique_Impl"
### 2.799s elapsed time, 10.625s cpu time, 5.949s GC time
"(215912063945802350977 / 152672884556058511392,
  1104427674243920646305299201 / 23309009678667569523128057147486993777664,
  True)"
  :: "rat * rat * bool"
"857"
  :: "int"
### theory "HOL-Analysis.Derivative"
### 20.446s elapsed time, 68.691s cpu time, 60.778s GC time
Loading theory "HOL-Analysis.Cartesian_Euclidean_Space" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref" via "Rank_Nullity_Theorem.Mod_Type")
"False"
  :: "bool"
### theory "HOL-Analysis.Cartesian_Euclidean_Space"
### 0.355s elapsed time, 1.380s cpu time, 0.111s GC time
Loading theory "Rank_Nullity_Theorem.Mod_Type" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref")
"True"
  :: "bool"
"(False, True)"
  :: "bool * bool"
class mod_type = times + neg_numeral + wellorder +
  fixes Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "type": "type_definition Rep Abs {0..<int CARD('a)}"
    and "size1": "1 < int CARD('a)"
    and "zero_def": "(0::'a) = Abs 0"
    and "one_def": "(1::'a) = Abs 1"
    and "add_def": "!!x y. x + y = Abs ((Rep x + Rep y) mod int CARD('a))"
    and "mult_def": "!!x y. x * y = Abs (Rep x * Rep y mod int CARD('a))"
    and "diff_def": "!!x y. x - y = Abs ((Rep x - Rep y) mod int CARD('a))"
    and "minus_def": "!!x. - x = Abs (- Rep x mod int CARD('a))"
    and "strict_mono_Rep": "strict_mono Rep"
instantiation
  bit0 :: (finite) mod_type
  bit1 :: (finite) mod_type
  Rep_bit0 == Rep :: 'a bit0 => int
  Abs_bit0 == Abs :: int => 'a bit0
  Rep_bit1 == Rep :: 'a bit1 => int
  Abs_bit1 == Abs :: int => 'a bit1
### theory "Rank_Nullity_Theorem.Mod_Type"
### 2.004s elapsed time, 7.973s cpu time, 0.202s GC time
Loading theory "Rank_Nullity_Theorem.Miscellaneous" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rref")
locale Vector_Spaces.linear
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and f :: "'b => 'c"
  assumes "Vector_Spaces.linear (*a) (*b) f"
locale finite_dimensional_vector_space
  fixes scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
    and Basis :: "'b set"
  assumes "finite_dimensional_vector_space (*s) Basis"
locale Vector_Spaces.linear
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and f :: "'b => 'c"
  assumes "linear (*a) (*b) f"
instantiation
  fun :: (real_vector, real_vector) real_vector
  scaleR_fun == scaleR :: real => ('a => 'b) => 'a => 'b
instantiation
  vec :: (type, finite) equal
  equal_vec == equal_class.equal :: ('a, 'b) vec => ('a, 'b) vec => bool
"857"
  :: "int"
### theory "Rank_Nullity_Theorem.Miscellaneous"
### 1.302s elapsed time, 5.130s cpu time, 0.422s GC time
Loading theory "Gauss_Jordan.Code_Matrix" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Elementary_Operations")
"857"
  :: "int"
Loading theory "Gauss_Jordan.Rref" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan")
### theory "Gauss_Jordan.Code_Matrix"
### 0.449s elapsed time, 1.762s cpu time, 0.081s GC time
Loading theory "Rank_Nullity_Theorem.Fundamental_Subspaces" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Elementary_Operations")
"False"
  :: "bool"
### theory "Rank_Nullity_Theorem.Fundamental_Subspaces"
### 0.146s elapsed time, 0.570s cpu time, 0.038s GC time
Loading theory "Gauss_Jordan.Elementary_Operations" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan")
### theory "Gauss_Jordan.Rref"
### 0.317s elapsed time, 1.243s cpu time, 0.072s GC time
Loading theory "Rank_Nullity_Theorem.Dim_Formula" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan" via "Gauss_Jordan.Rank")
locale vector_space
  fixes scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
  assumes "vector_space (*s)"
locale finite_dimensional_vector_space
  fixes scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
    and Basis :: "'b set"
  assumes "finite_dimensional_vector_space (*s) Basis"
locale vector_space
  fixes scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
  assumes "vector_space (*s)"
locale finite_dimensional_vector_space
  fixes scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
    and Basis :: "'b set"
  assumes "finite_dimensional_vector_space (*s) Basis"
### theory "Rank_Nullity_Theorem.Dim_Formula"
### 0.207s elapsed time, 0.820s cpu time, 0.071s GC time
Loading theory "Gauss_Jordan.Rank" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA" via "Gauss_Jordan.Gauss_Jordan")
### theory "Gauss_Jordan.Rank"
### 0.088s elapsed time, 0.342s cpu time, 0.033s GC time
"True"
  :: "bool"
### theory "Gauss_Jordan.Elementary_Operations"
### 0.671s elapsed time, 2.642s cpu time, 0.244s GC time
Loading theory "Gauss_Jordan.Gauss_Jordan" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA")
"''3033/5*sqrt(2)''"
  :: "char list"
"(False, True)"
  :: "bool * bool"
consts
  row_add_iterate ::
    "(('a, 'n) vec, 'm) vec => nat => 'm => 'n => (('a, 'n) vec, 'm) vec"
### theory "Gauss_Jordan.Gauss_Jordan"
### 1.213s elapsed time, 3.011s cpu time, 0.369s GC time
Loading theory "Gauss_Jordan.Linear_Maps" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2" via "Gauss_Jordan.Gauss_Jordan_PA")
locale invertible_lf
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and f :: "'b => 'c"
  assumes "invertible_lf (*a) (*b) f"
### theory "Gauss_Jordan.Linear_Maps"
### 0.463s elapsed time, 0.576s cpu time, 0.152s GC time
Loading theory "Gauss_Jordan.Gauss_Jordan_PA" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.Determinants2")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
### theory "Gauss_Jordan.Gauss_Jordan_PA"
### 0.408s elapsed time, 0.416s cpu time, 0.000s GC time
Loading theory "Gauss_Jordan.Bases_Of_Fundamental_Subspaces" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" via "Gauss_Jordan.System_Of_Equations")
Loading theory "Gauss_Jordan.Determinants2" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract")
Loading theory "Gauss_Jordan.Inverse" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract")
### theory "Gauss_Jordan.Inverse"
### 0.123s elapsed time, 0.394s cpu time, 0.103s GC time
### theory "Gauss_Jordan.Bases_Of_Fundamental_Subspaces"
### 0.152s elapsed time, 0.451s cpu time, 0.103s GC time
Loading theory "Gauss_Jordan.System_Of_Equations" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR" via "Gauss_Jordan.Examples_Gauss_Jordan_Abstract")
### theory "Gauss_Jordan.Determinants2"
### 0.275s elapsed time, 0.694s cpu time, 0.103s GC time
### theory "Gauss_Jordan.System_Of_Equations"
### 0.329s elapsed time, 0.542s cpu time, 0.125s GC time
Loading theory "Gauss_Jordan.Examples_Gauss_Jordan_Abstract" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt" via "Draft.Miscellaneous_QR")
### Ignoring duplicate rewrite rule:
### int_of_integer (- 1) == - 1
### Ignoring duplicate rewrite rule:
### real_of_rat (- 1) == - 1
### theory "Gauss_Jordan.Examples_Gauss_Jordan_Abstract"
### 0.706s elapsed time, 0.737s cpu time, 0.000s GC time
Loading theory "Draft.Miscellaneous_QR" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt")
locale vector_space
  fixes scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
  assumes "vector_space (*s)"
### theory "Draft.Miscellaneous_QR"
### 0.159s elapsed time, 0.620s cpu time, 0.057s GC time
Loading theory "Draft.Projections" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition" via "Draft.Gram_Schmidt")
### theory "Draft.Projections"
### 0.106s elapsed time, 0.418s cpu time, 0.000s GC time
Loading theory "Draft.Gram_Schmidt" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic" via "Draft.QR_Decomposition")
### theory "Draft.Gram_Schmidt"
### 0.337s elapsed time, 1.329s cpu time, 0.129s GC time
Loading theory "Draft.QR_Decomposition" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates" via "Draft.Examples_QR_Abstract_Symbolic")
### theory "Draft.QR_Decomposition"
### 0.270s elapsed time, 1.078s cpu time, 0.084s GC time
Loading theory "Draft.Examples_QR_Abstract_Symbolic" (required by "Draft.Examples_QR_Abstract_SymbolicMoreTemplates")
"[[1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1 / 4],
  [0, 0, 0, 0, 0, 0]]"
  :: "real list list"
"[[1, 0, 0, 1, 1], [0, 0, 1, 0, 0]]"
  :: "bit list list"
"True"
  :: "bool"
"[[1, - 2, 0, - 1, 0], [0, 0, 1, - 2, 0]]"
  :: "rat list list"
"5"
  :: "nat"
"5"
  :: "nat"
"2"
  :: "nat"
"20"
  :: "nat"
"[[Complex 1 0, Complex 0 0, Complex 1 1],
  [Complex 0 0, Complex 1 0, Complex 1 (- 1)]]"
  :: "complex list list"
"4"
  :: "nat"
"4"
  :: "nat"
"4"
  :: "nat"
"4"
  :: "nat"
"4"
  :: "nat"
"1"
  :: "nat"
"2"
  :: "nat"
"[[- (16 / 35), 9 / 35, 13 / 35, 1 / 35, 1 / 35, - (8 / 35), 1 / 35],
  [0, - (1 / 2), 0, 0, 0, 1 / 2, 0],
  [3 / 70, 1 / 140, - (9 / 70), 1 / 35, 1 / 35, 3 / 140, 1 / 35],
  [3 / 35, 1 / 70, - (1 / 140), - (27 / 140), 2 / 35, 3 / 70, 2 / 35],
  [12 / 175, 2 / 175, - (1 / 175), 8 / 175, - (27 / 175), 6 / 175, 8 / 175],
  [4 / 105, 2 / 315, - (1 / 315), 8 / 315, 8 / 315, - (29 / 315), 8 / 315],
  [3 / 70, 1 / 140, - (1 / 280), 1 / 35, 1 / 35, 3 / 140, - (27 / 280)]]"
  :: "real list list"
"Some (vec_lambda _)"
  :: "((real, 7) vec, 7) vec option"
"[[- (16 / 35), 9 / 35, 13 / 35, 1 / 35, 1 / 35, - (8 / 35), 1 / 35],
  [0, - (1 / 2), 0, 0, 0, 1 / 2, 0],
  [3 / 70, 1 / 140, - (9 / 70), 1 / 35, 1 / 35, 3 / 140, 1 / 35],
  [3 / 35, 1 / 70, - (1 / 140), - (27 / 140), 2 / 35, 3 / 70, 2 / 35],
  [12 / 175, 2 / 175, - (1 / 175), 8 / 175, - (27 / 175), 6 / 175, 8 / 175],
  [4 / 105, 2 / 315, - (1 / 315), 8 / 315, 8 / 315, - (29 / 315), 8 / 315],
  [3 / 70, 1 / 140, - (1 / 280), 1 / 35, 1 / 35, 3 / 140, - (27 / 280)]]"
  :: "real list list"
"[[1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0],
  [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0],
  [0, 0, 0, 0, 0, 0, 1]]"
  :: "real list list"
"None"
  :: "((real, 7) vec, 7) vec option"
"[[Complex (101 / 232) (- (35 / 232)), Complex (- (1 / 8)) (- (1 / 8)),
   Complex (5 / 29) (2 / 29)],
  [Complex (81 / 232) (15 / 232), Complex (- (1 / 8)) (1 / 8),
   Complex (2 / 29) (- (5 / 29))],
  [Complex (- (1 / 8)) 0, Complex (1 / 8) 0, Complex 0 0]]"
  :: "complex list list"
"- 3837"
  :: "real"
"1"
  :: "real"
See theory exports
### theory "Draft.Examples_QR_Abstract_Symbolic"
### 6.904s elapsed time, 27.298s cpu time, 1.232s GC time
Loading theory "Draft.Examples_QR_Abstract_SymbolicMoreTemplates"
"6240"
  :: "rat"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Examples_QR_Abstract_SymbolicMoreTemplates"
### 1.416s elapsed time, 5.601s cpu time, 0.328s GC time
"{[1, 3, 0, 4, 2, 0], [0, 0, 1, 2, 0, 0], [0, 0, 0, 0, 0, 1]}"
  :: "real list set"
"{[1, 0, 10, 0], [0, 1, - 5, 0], [0, 0, 0, 1]}"
  :: "real list set"
"{[1, 0, 0, 1], [0, 1, 0, 1], [0, 0, 1, 1]}"
  :: "real list set"
"{[1, 0, 0, 1 / 4], [0, 1, 0, 1], [0, 0, 1, 3 / 4]}"
  :: "real list set"
"{[- 4, 0, - 2, 1, 0, 0], [- 2, 0, 0, 0, 1, 0], [- 3, 1, 0, 0, 0, 0]}"
  :: "real list set"
"{[- 1, - 1, - 1, 1]}"
  :: "real list set"
"{[- 10, 5, 1, 0]}"
  :: "real list set"
"{[- (1 / 4), - 1, - (3 / 4), 1]}"
  :: "real list set"
"True"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
"Some ([- (17 / 15), 32 / 15, - (4 / 15)], {})"
  :: "(real list * real list set) option"
"None"
  :: "(real list * real list set) option"
"Some ([4, - 3, 0], {[1, - 1, 1]})"
  :: "(real list * real list set) option"
"Some
  ([63 / 5, 57 / 5, 0, 0], {[2, 2, 1, 0], [- (26 / 5), - (24 / 5), 0, 1]})"
  :: "(real list * real list set) option"
"Some
  ([0, 0, 0, 0, 0],
   {[- (2 / 3), 1, 0, 0, 0], [- (2 / 3), 0, 0, 1, 0],
    [8 / 3, 0, - 3, 0, 1]})"
  :: "(real list * real list set) option"
[| is_basis (columns ?A); card (columns ?A) = ncols ?A |]
==> rank ?A = ncols ?A
"[[5, - 5, - 3, - 4], [- (13 / 3), 4 / 3, 3, - (28 / 3)],
  [11 / 14, 1 / 7, 15 / 14, 0]]"
  :: "real list list"
"[[4, 50 / 77, 15 / 13, 0], [- 6, - (75 / 77), 10 / 13, 0],
  [5, - (130 / 77), 0, 0]]"
  :: "real list list"
"[[4, - 2, - 1, 2], [2, - 1, 2, - 4], [- 1, - 2, - 4, - 2]]"
  :: "real list list"
"[[''1/82*sqrt(82)'', ''1/5*sqrt(5)'', ''4/41*sqrt(41)''],
  [''9/82*sqrt(82)'', ''2/5*sqrt(5)'', ''5/41*sqrt(41)''],
  [''0'', ''0'', ''0'']]"
  :: "char list list list"
"[[''sqrt(82)'', ''19/41*sqrt(82)'', ''49/82*sqrt(82)''],
  [''0'', ''7/41*sqrt(82)'', ''31/82*sqrt(82)''], [''0'', ''0'', ''4'']]"
  :: "char list list list"
"[[''1'', ''2'', ''4''], [''9'', ''4'', ''5''], [''0'', ''0'', ''4'']]"
  :: "char list list list"
"[[''1/82*sqrt(82)'', ''9/82*sqrt(82)'', ''0''],
  [''9/82*sqrt(82)'', ''-1/82*sqrt(82)'', ''0''], [''0'', ''0'', ''1'']]"
  :: "char list list list"
"[[''1'', ''2'', ''4''], [''9'', ''4'', ''5''], [''0'', ''0'', ''4''],
  [''3'', ''5'', ''4'']]"
  :: "char list list list"
"[[''1'', ''2'', ''1''], [''9'', ''4'', ''9''], [''2'', ''0'', ''2''],
  [''0'', ''5'', ''0'']]"
  :: "char list list list"
"[[''1/86*sqrt(86)'', ''67/52159*sqrt(52159)'', ''0''],
  [''9/86*sqrt(86)'', ''1/52159*sqrt(52159)'', ''0''],
  [''1/43*sqrt(86)'', ''-38/52159*sqrt(52159)'', ''0''],
  [''0'', ''5/1213*sqrt(52159)'', ''0'']]"
  :: "char list list list"
"[''1/86*sqrt(86)'', ''9/86*sqrt(86)'', ''1/43*sqrt(86)'', ''0'']"
  :: "char list list"
"[''67/52159*sqrt(52159)'', ''1/52159*sqrt(52159)'',
  ''-38/52159*sqrt(52159)'', ''5/1213*sqrt(52159)'']"
  :: "char list list"
"[[''sqrt(86)'', ''19/43*sqrt(86)'', ''sqrt(86)''],
  [''0'', ''1/43*sqrt(52159)'', ''0''], [''0'', ''0'', ''0'']]"
  :: "char list list list"
"[[''1'', ''2'', ''1''], [''9'', ''4'', ''9'']]"
  :: "char list list list"
"[[''1/82*sqrt(82)'', ''9/82*sqrt(82)'', ''0''],
  [''9/82*sqrt(82)'', ''-1/82*sqrt(82)'', ''0'']]"
  :: "char list list list"
"[[''sqrt(82)'', ''19/41*sqrt(82)'', ''sqrt(82)''],
  [''0'', ''7/41*sqrt(82)'', ''0''], [''0'', ''0'', ''0'']]"
  :: "char list list list"
val it = (): unit
