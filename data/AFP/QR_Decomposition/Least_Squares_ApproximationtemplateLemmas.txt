   [("Least_Squares_Approximation.null_space_orthogonal_complement_row_space",
     "null_space ?A = orthogonal_complement (row_space ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Least_Squares_Approximation.left_null_space_orthogonal_complement_col_space",
     "left_null_space ?A = orthogonal_complement (col_space ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Least_Squares_Approximation.in_set_least_squares_approximation",
     "?A *v ?x - ?b : orthogonal_complement (col_space ?A) ==>
      ?x : set_least_squares_approximation ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)),
                  template_var 0)),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Least_Squares_Approximation.norm_least_squares",
     "EX x. ALL x'. norm (?b - ?A *v x) <= norm (?b - ?A *v x')",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Least_Squares_Approximation.in_set_least_squares_approximation_eq",
     "(?x : set_least_squares_approximation ?A ?b) =
      (Finite_Cartesian_Product.transpose ?A ** ?A *v ?x =
       Finite_Cartesian_Product.transpose ?A *v ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("Least_Squares_Approximation.least_squares_approximation4'",
     "subspace ?S ==>
      EX! p. p : ?S & (ALL y:?S. norm (?v - p) <= norm (?v - y))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Least_Squares_Approximation.set_least_squares_approximation_unique_solution",
     "rank ?A = ncols ?A ==>
      set_least_squares_approximation ?A ?b =
      {matrix_inv (Finite_Cartesian_Product.transpose ?A ** ?A) **
       Finite_Cartesian_Product.transpose ?A *v
       ?b}",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 1)),
                         template_var 1))),
                   template_app (template_hole 1, template_var 1))),
               template_var 0)),
           template_hole 0)))),
    ("Least_Squares_Approximation.set_least_squares_approximation_unique_solution_QR",
     "rank ?A = ncols ?A ==>
      set_least_squares_approximation ?A ?b =
      {matrix_inv (snd (QR_decomposition ?A)) **
       Finite_Cartesian_Product.transpose (fst (QR_decomposition ?A)) *v
       ?b}",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 1),
          template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_var 1)))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 3, template_var 1))))),
               template_var 0)),
           template_hole 0)))),
    ("Least_Squares_Approximation.in_set_least_squares_approximation_eq_full_rank",
     "rank ?A = ncols ?A ==>
      (?x : set_least_squares_approximation ?A ?b) =
      (?x =
       matrix_inv (Finite_Cartesian_Product.transpose ?A ** ?A) **
       Finite_Cartesian_Product.transpose ?A *v
       ?b)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app (template_hole 9, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0))
              )],
         template_equation
          (template_var 1,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 2)),
                       template_var 2))),
                 template_app (template_hole 0, template_var 2))),
             template_var 0))))),
    ("Least_Squares_Approximation.in_set_least_squares_approximation_eq_full_rank_QR",
     "rank ?A = ncols ?A ==>
      (?x : set_least_squares_approximation ?A ?b) =
      (snd (QR_decomposition ?A) *v ?x =
       Finite_Cartesian_Product.transpose (fst (QR_decomposition ?A)) *v
       ?b)",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 0))
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_var 2)))),
             template_var 0))))),
    ("Least_Squares_Approximation.least_squares_approximation4",
     "subspace ?S ==>
      EX! p. p : ?S & (ALL y:?S - {p}. norm (?v - p) < norm (?v - y))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Least_Squares_Approximation.least_squares_approximation3",
     "subspace ?S ==>
      EX p:?S.
         ALL y:?S.
            norm (?v - p) <= norm (?v - y) &
            ?v - p : orthogonal_complement ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1), t_empty)
           ))),
    ("Least_Squares_Approximation.in_set_least_squares_approximation_eq_full_rank_QR2",
     "rank ?A = ncols ?A ==>
      (?x : set_least_squares_approximation ?A ?b) =
      (?x =
       matrix_inv (snd (QR_decomposition ?A)) **
       Finite_Cartesian_Product.transpose (fst (QR_decomposition ?A)) *v
       ?b)",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 2),
          template_app (template_hole 11, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 0))
              )],
         template_equation
          (template_var 1,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 2)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 2, template_var 2))))),
             template_var 0))))),
    ("Least_Squares_Approximation.least_squares_approximation2",
     "[| subspace ?S; ?y : ?S |]
      ==> EX p:?S.
             norm (?v - p) <= norm (?v - ?y) &
             ?v - p : orthogonal_complement ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2), t_empty)
           ))),
    ("Least_Squares_Approximation.least_squares_approximation5'",
     "subspace ?S ==>
      EX! p.
         p : ?S &
         (ALL y:?S.
             norm (?v - p) <= norm (?v - y) &
             ?v - p : orthogonal_complement ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Least_Squares_Approximation.least_squares_approximation6",
     "[| subspace ?S; ?p : ?S; ALL y:?S. norm (?v - ?p) <= norm (?v - y) |]
      ==> ?v - ?p : orthogonal_complement ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Least_Squares_Approximation.least_squares_approximation7",
     "[| subspace ?S; ?v - ?p : orthogonal_complement ?S; ?p : ?S;
         ?y : ?S |]
      ==> norm (?v - ?p) <= norm (?v - ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 3)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("Least_Squares_Approximation.least_squares_approximation5",
     "subspace ?S ==>
      EX! p.
         p : ?S &
         (ALL y:?S - {p}.
             norm (?v - p) < norm (?v - y) &
             ?v - p : orthogonal_complement ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Least_Squares_Approximation.least_squares_approximation",
     "[| subspace ?S; independent ?X; ?X <= ?S; ?S <= span ?X;
         pairwise orthogonal ?X; proj_onto ?v ?X ~= ?y; ?y : ?S |]
      ==> norm (?v - proj_onto ?v ?X) < norm (?v - ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 10, template_var 2))
            ),
        template_inequation (less_equals, template_var 2, template_var 3),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)))))]
