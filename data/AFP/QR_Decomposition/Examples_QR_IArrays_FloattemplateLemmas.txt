### theory "Draft.Examples_QR_IArrays_FloatMoreTemplates"
### 1.418s elapsed time, 5.612s cpu time, 0.439s GC time
"[[Complex (101 / 232) (- (35 / 232)), Complex (- (1 / 8)) (- (1 / 8)),
   Complex (5 / 29) (2 / 29)],
  [Complex (81 / 232) (15 / 232), Complex (- (1 / 8)) (1 / 8),
   Complex (2 / 29) (- (5 / 29))],
  [Complex (- (1 / 8)) 0, Complex (1 / 8) 0, Complex 0 0]]"
  :: "complex list list"
"- 3837"
  :: "real"
"1"
  :: "real"
"6240"
  :: "rat"
"{[- 4, 0, - 2, 1, 0, 0], [- 2, 0, 0, 0, 1, 0], [- 3, 1, 0, 0, 0, 0]}"
  :: "real list set"
"{[1, 0, 0, 1], [0, 1, 0, 1], [0, 0, 1, 1]}"
  :: "real list set"
"{[1, 3, 0, 4, 2, 0], [0, 0, 1, 2, 0, 0], [0, 0, 0, 0, 0, 1]}"
  :: "real list set"
"{[1, 0, 10, 0], [0, 1, - 5, 0], [0, 0, 0, 1]}"
  :: "real list set"
"{[1, 0, 0, 1 / 4], [0, 1, 0, 1], [0, 0, 1, 3 / 4]}"
  :: "real list set"
"{[- 10, 5, 1, 0]}"
  :: "real list set"
"{[- (1 / 4), - 1, - (3 / 4), 1]}"
  :: "real list set"
"{[- 1, - 1, - 1, 1]}"
  :: "real list set"
"True"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
"Some ([- (17 / 15), 32 / 15, - (4 / 15)], {})"
  :: "(real list * real list set) option"
"None"
  :: "(real list * real list set) option"
"Some ([4, - 3, 0], {[1, - 1, 1]})"
  :: "(real list * real list set) option"
"Some
  ([0, 0, 0, 0, 0],
   {[- (2 / 3), 1, 0, 0, 0], [- (2 / 3), 0, 0, 1, 0],
    [8 / 3, 0, - 3, 0, 1]})"
  :: "(real list * real list set) option"
"Some
  ([63 / 5, 57 / 5, 0, 0], {[2, 2, 1, 0], [- (26 / 5), - (24 / 5), 0, 1]})"
  :: "(real list * real list set) option"
[| is_basis (columns ?A); card (columns ?A) = ncols ?A |]
==> rank ?A = ncols ?A
"[[5, - 5, - 3, - 4], [- (13 / 3), 4 / 3, 3, - (28 / 3)],
  [11 / 14, 1 / 7, 15 / 14, 0]]"
  :: "real list list"
"[[4, 313 / 81], [8, - (103 / 81)], [- 1, 428 / 81]]"
  :: "real list list"
"[[4, - 2, - 1, 2], [2, - 1, 2, - 4], [- 1, - 2, - 4, - 2]]"
  :: "real list list"
"[[4, 50 / 77, 15 / 13, 0], [- 6, - (75 / 77), 10 / 13, 0],
  [5, - (130 / 77), 0, 0]]"
  :: "real list list"
"[[4, 313 / 81], [8, - (103 / 81)], [- 1, 428 / 81]]"
  :: "real list list"
val it = (): uni
