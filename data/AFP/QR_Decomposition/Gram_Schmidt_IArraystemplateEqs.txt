   [("Gram_Schmidt_IArrays.minus_zero_iarray", "?A - 0 = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Gram_Schmidt_IArrays.matrix_to_iarray_Gram_Schmidt_matrix",
     "matrix_to_iarray (Gram_Schmidt_matrix ?A) =
      Gram_Schmidt_matrix_iarrays (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Gram_Schmidt_IArrays.vec_to_iarray_inner",
     "?a \<bullet> ?b = vec_to_iarray ?a \<bullet>i vec_to_iarray ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Gram_Schmidt_IArrays.vec_to_iarray_scaleR",
     "vec_to_iarray (?a *\<^sub>R ?x) = ?a *\<^sub>R vec_to_iarray ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Gram_Schmidt_IArrays.length_plus_iarray",
     "IArray.length (?A + ?B) = max (IArray.length ?A) (IArray.length ?B)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0))))]
