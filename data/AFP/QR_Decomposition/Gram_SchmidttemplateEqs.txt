   [("Gram_Schmidt.Gram_Schmidt_column_k_code",
     "($) (Gram_Schmidt_column_k ?A ?k) = Gram_Schmidt_column_k_row ?A ?k",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Gram_Schmidt.span_Gram_Schmidt_matrix",
     "span (columns ?A) = span (columns (Gram_Schmidt_matrix ?A))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Gram_Schmidt.columns_eq_cols_upt_k",
     "cols_upt_k ?A (ncols ?A - 1) = columns ?A",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Gram_Schmidt.Gram_Schmidt_cons",
     "Gram_Schmidt (?a # ?xs) = Gram_Schmidt_step ?a (Gram_Schmidt ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Gram_Schmidt.Gram_Schmidt_upt_k_suc",
     "Gram_Schmidt_upt_k ?A (Suc ?k) =
      Gram_Schmidt_column_k (Gram_Schmidt_upt_k ?A ?k) (Suc ?k)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Gram_Schmidt.set_columns_Gram_Schmidt_matrix",
     "{column i (Gram_Schmidt_matrix ?A) |i. i < ?k} =
      {column i (Gram_Schmidt_upt_k ?A (mod_type_class.to_nat ?k)) |i.
       i < ?k}",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app (template_hole 8, t_empty))),
    ("Gram_Schmidt.column_Gram_Schmidt_matrix2",
     "column ?k ?A =
      column ?k (Gram_Schmidt_matrix ?A) +
      (SUM x:{column i (Gram_Schmidt_matrix ?A) |i. i < ?k}.
          (x \<bullet> column ?k ?A / (x \<bullet> x)) *\<^sub>R x)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_app (template_hole 8, template_var 0))),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 3, t_empty))))),
    ("Gram_Schmidt.column_Gram_Schmidt_matrix",
     "column ?k (Gram_Schmidt_matrix ?A) =
      column ?k ?A -
      (SUM x:{column i (Gram_Schmidt_matrix ?A) |i. i < ?k}.
          (x \<bullet> column ?k ?A / (x \<bullet> x)) *\<^sub>R x)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 3, t_empty))))),
    ("Gram_Schmidt.columns_Gram_Schmidt_matrix_rw",
     "{column i (Gram_Schmidt_matrix ?A) |i. i : UNIV} =
      {column i (Gram_Schmidt_upt_k ?A (ncols ?A - 1)) |i.
       mod_type_class.to_nat i <= ncols ?A - 1}",
     template_equation
      (template_app (template_hole 13, t_empty),
       template_app (template_hole 13, t_empty))),
    ("Gram_Schmidt.column_Gram_Schmidt_column_k",
     "column ?k (Gram_Schmidt_column_k ?A (mod_type_class.to_nat ?k)) =
      column ?k ?A -
      (SUM x:{column i ?A |i. i < ?k}.
          (x \<bullet> column ?k ?A / (x \<bullet> x)) *\<^sub>R x)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app
          (template_app (template_hole 10, template_var 0),
           template_app (template_hole 9, template_var 1))),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 11, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 3, t_empty))))),
    ("Gram_Schmidt.Gram_Schmidt_column_k_row_code",
     "($) (Gram_Schmidt_column_k_row ?A ?k ?a) =
      (%b. (if b = mod_type_class.from_nat ?k
            then column b ?A -
                 (SUM x:{column i ?A |i. i < b}.
                     (column b ?A \<bullet> x / (x \<bullet> x)) *\<^sub>R
                     x)
            else column b ?A) $
           ?a)",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app
            (template_app (template_hole 15, template_var 2),
             template_var 1),
           template_var 0)),
       t_empty))]
