   [("Miscellaneous_QR.card_columns_le_ncols",
     "card (columns ?A) <= ncols ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Miscellaneous_QR.invertible_transpose",
     "invertible ?A ==> invertible (Finite_Cartesian_Product.transpose ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Miscellaneous_QR.orthogonal_matrix_is_orthogonal",
     "orthogonal_matrix ?A ==> pairwise orthogonal (columns ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Miscellaneous_QR.orthogonal_matrix'",
     "orthogonal_matrix ?Q =
      (?Q ** Finite_Cartesian_Product.transpose ?Q = mat 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Miscellaneous_QR.norm_mult_vec",
     "norm (?x \<bullet> ?x) = norm ?x * norm ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous_QR.orthogonal_matrix_card",
     "orthogonal_matrix ?A ==> card (columns ?A) = ncols ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous_QR.orthogonal_matrix_norm",
     "orthogonal_matrix ?A ==> norm (column ?i ?A) = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Miscellaneous_QR.orthogonal_mult",
     "orthogonal ?a ?b ==> orthogonal (?x *\<^sub>R ?a) (?y *\<^sub>R ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Miscellaneous_QR.full_col_rank_imp_independent_columns",
     "rank ?A = ncols ?A ==> vec.independent (columns ?A)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Miscellaneous_QR.invertible_transpose_mult",
     "rank ?A = ncols ?A ==>
      invertible (Finite_Cartesian_Product.transpose ?A ** ?A)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 0))
           ))),
    ("Miscellaneous_QR.matrix_vector_right_distrib_minus",
     "?A *v (?b - ?c) = ?A *v ?b - ?A *v ?c",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Miscellaneous_QR.norm_equivalence",
     "(Finite_Cartesian_Product.transpose ?A *v (?A *v ?x) = 0) =
      (?A *v ?x = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 0))),
    ("Miscellaneous_QR.inv_matrix_vector_mul_left",
     "invertible ?A ==> (?A *v ?x = ?A *v ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Miscellaneous_QR.full_rank_eq_is_basis",
     "(is_basis (columns ?A) & card (columns ?A) = ncols ?A) =
      (rank ?A = ncols ?A)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 4, template_var 0))),
               template_app (template_hole 1, template_var 0)))
           ),
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 1, template_var 0)))),
    ("Miscellaneous_QR.from_nat_le",
     "[| mod_type_class.to_nat ?i < ?k; ?k < CARD(?'a) |]
      ==> ?i < mod_type_class.from_nat ?k",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_hole 2))],
       template_inequation
        (less_than, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous_QR.full_rank_imp_is_basis",
     "rank ?A = ncols ?A ==>
      is_basis (columns ?A) & card (columns ?A) = ncols ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 4, template_var 0)))
           ))),
    ("Miscellaneous_QR.matrix_inv_mult",
     "[| invertible ?A; invertible ?B |]
      ==> matrix_inv (?A ** ?B) = matrix_inv ?B ** matrix_inv ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 1))))),
    ("Miscellaneous_QR.is_basis_imp_full_rank",
     "[| is_basis (columns ?A); card (columns ?A) = ncols ?A |]
      ==> rank ?A = ncols ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            ),
        template_equation
         (template_app
           (template_hole 2,
            template_app (template_hole 4, template_var 0)),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 1, template_var 0)))),
    ("Miscellaneous_QR.orthogonal_matrix2",
     "orthogonal_matrix ?A =
      (pairwise orthogonal (columns ?A) &
       (ALL i. norm (column i ?A) = 1) & card (columns ?A) = ncols ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app (template_hole 8, template_var 0))),
             template_app
              (template_app
                (template_hole 11, template_app (template_hole 7, t_empty)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 8, template_var 0))),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Miscellaneous_QR.basis_orthogonal",
     "finite ?B ==>
      EX C. finite C &
            card C <= card ?B & span C = span ?B & pairwise orthogonal C",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Miscellaneous_QR.orthogonal_matrix_intro",
     "[| pairwise orthogonal (columns ?A); ALL i. norm (column i ?A) = 1;
         card (columns ?A) = ncols ?A |]
      ==> orthogonal_matrix ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app (template_hole 9, template_var 0))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app
           (template_hole 2,
            template_app (template_hole 9, template_var 0)),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous_QR.orthogonal_matrix_intro2",
     "[| pairwise orthogonal (rows ?A); ALL i. norm (row i ?A) = 1;
         card (rows ?A) = nrows ?A |]
      ==> orthogonal_matrix ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app (template_hole 9, template_var 0))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app
           (template_hole 2,
            template_app (template_hole 9, template_var 0)),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous_QR.full_rank_imp_is_basis2",
     "rank ?A = ncols ?A ==>
      vec.independent (columns ?A) &
      vec.span (columns ?A) = col_space ?A & card (columns ?A) = ncols ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 0)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 5),
                       template_app (template_hole 4, template_var 0))),
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 0))),
                 template_app (template_hole 9, template_var 0))))
           )))]
