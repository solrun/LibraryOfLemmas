   [("BinDag.le_dag_refl", "?x <= ?x",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("BinDag.less_dag_Tip", "~ ?x < Tip",
     template_negation
      (template_inequation (less_than, template_var 0, template_hole 0))),
    ("BinDag.Dag_Null", "Dag Null ?l ?r ?t = (?t = Tip)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("BinDag.subdag_neq", "subdag ?t ?s ==> ?t ~= ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("BinDag.Dag_is_DAG", "Dag ?p ?l ?r ?t ==> DAG ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("BinDag.subdag_size", "subdag ?t ?s ==> size ?s < size ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("BinDag.less_dag_set_of", "?x < ?y ==> set_of ?x <= set_of ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("BinDag.le_dag_set_of", "?x <= ?y ==> set_of ?x <= set_of ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("BinDag.DAG_less", "[| DAG ?y; ?x < ?y |] ==> DAG ?x",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("BinDag.subdag_not_sym", "[| subdag ?s ?t; subdag ?t ?s |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            )],
       template_predicate (template_var 0))),
    ("BinDag.dag_less_le", "(?x < ?y) = (?x <= ?y & ?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("BinDag.Null_notin_Dag", "Dag ?p ?l ?r ?t ==> Null ~: set_of ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("BinDag.Dag_dag", "Dag ?p ?l ?r ?t ==> dag ?p ?l ?r = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("BinDag.Dag_root_not_in_subdag_l",
     "Dag (?l ?p) ?l ?r ?t ==> ?p ~: set_of ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 3, template_var 2)),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("BinDag.Dag_root_not_in_subdag_r",
     "Dag (?r ?p) ?l ?r ?t ==> ?p ~: set_of ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 3, template_var 2)),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("BinDag.subdag_trans",
     "[| subdag ?t ?s; subdag ?s ?r |] ==> subdag ?t ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BinDag.le_dag_antisym", "[| ?x <= ?y; ?y <= ?x |] ==> ?x = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 1, template_var 0))),
    ("BinDag.le_dag_trans", "[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("BinDag.less_dag_Node",
     "(?x < dag.Node ?l ?a ?r) = (?x <= ?l | ?x <= ?r)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("BinDag.Dag_unique1", "Dag ?p ?l ?r ?t ==> EX! t. Dag ?p ?l ?r t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("BinDag.less_DAG_set_of",
     "[| ?x < ?y; DAG ?y |] ==> set_of ?x < set_of ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("BinDag.Dag_upd_same_r_lemma",
     "?p ~= Null ==> ~ Dag ?p ?l (?r(?p := ?p)) ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3),
                     template_var 3)),
                 template_var 0)
               )
           ))),
    ("BinDag.Dag_upd_same_l_lemma",
     "?p ~= Null ==> ~ Dag ?p (?l(?p := ?p)) ?r ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 3),
                       template_var 3)),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("BinDag.subdag_NodeD",
     "subdag ?t (dag.Node ?lt ?a ?rt) ==> subdag ?t ?lt & subdag ?t ?rt",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))
           ))),
    ("BinDag.less_Node_dag", "dag.Node ?l ?a ?r < ?x ==> ?l < ?x & ?r < ?x",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("BinDag.Dag_upd_same_r",
     "Dag ?p ?l (?r(?p := ?p)) ?t = (?p = Null & ?t = Tip)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 3),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("BinDag.Dag_upd_same_l",
     "Dag ?p (?l(?p := ?p)) ?r ?t = (?p = Null & ?t = Tip)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 3),
                    template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("BinDag.Dag_conv_isDag_dag",
     "Dag ?p ?l ?r ?t = (isDag ?p ?l ?r & ?t = dag ?p ?l ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)))
           ))),
    ("BinDag.Dag_unique",
     "[| Dag ?p ?l ?r ?t1.0; Dag ?p ?l ?r ?t2.0 |] ==> ?t1.0 = ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("BinDag.Dag_subdag",
     "[| Dag ?p ?l ?r ?t; subdag ?t ?s |] ==> EX q. Dag q ?l ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("BinDag.Dag_unique_all_impl_simp",
     "Dag ?p ?l ?r ?t ==> (ALL t. Dag ?p ?l ?r t --> ?P t) = ?P ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_var 0, template_var 1)))),
    ("BinDag.Dag_unique_ex_conj_simp",
     "Dag ?p ?l ?r ?t ==> (EX t. Dag ?p ?l ?r t & ?P t) = ?P ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_var 0, template_var 1)))),
    ("BinDag.notin_Dag_update_r",
     "?q ~: set_of ?t ==> Dag ?p ?l (?r(?q := ?y)) ?t = Dag ?p ?l ?r ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 5),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 4)))),
    ("BinDag.notin_Dag_update_l",
     "?q ~: set_of ?t ==> Dag ?p (?l(?q := ?y)) ?r ?t = Dag ?p ?l ?r ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("BinDag.in_set_of_decomp",
     "(?p : set_of ?t) =
      (EX l r. ?t = dag.Node l ?p r | subdag ?t (dag.Node l ?p r))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("BinDag.less_dag_Node'",
     "(?x < dag.Node ?l ?a ?r) = (?x = ?l | ?x = ?r | ?x < ?l | ?x < ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 0))))
           ))),
    ("BinDag.Dag_update_rI",
     "[| Dag ?p ?l ?r ?t; ?q ~: set_of ?t |]
      ==> Dag ?p ?l (?r(?q := ?y)) ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("BinDag.Dag_update_lI",
     "[| Dag ?p ?l ?r ?t; ?q ~: set_of ?t |]
      ==> Dag ?p (?l(?q := ?y)) ?r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1),
                   template_var 0)),
               template_var 3),
             template_var 2)
           ))),
    ("BinDag.Dag_update_r_new",
     "set_of ?t <= set ?alloc ==>
      Dag ?p ?l (?r(new (set ?alloc) := ?x)) ?t = Dag ?p ?l ?r ?t",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 5),
          template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_var 4))),
               template_var 0)),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 5)))),
    ("BinDag.Dag_update_l_new",
     "set_of ?t <= set ?alloc ==>
      Dag ?p (?l(new (set ?alloc) := ?x)) ?r ?t = Dag ?p ?l ?r ?t",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 5),
          template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 4))),
                 template_var 1)),
             template_var 0),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0),
           template_var 5)))),
    ("BinDag.heaps_eq_Dag_eq",
     "ALL x:set_of ?t. ?l x = ?l' x & ?r x = ?r' x ==>
      Dag ?p ?l ?r ?t = Dag ?p ?l' ?r' ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 5)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 2),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1),
           template_var 5)))),
    ("BinDag.heaps_eq_DagI1",
     "[| Dag ?p ?l ?r ?t; ALL x:set_of ?t. ?l x = ?l' x & ?r x = ?r' x |]
      ==> Dag ?p ?l' ?r' ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("BinDag.heaps_eq_DagI2",
     "[| Dag ?p ?l' ?r' ?t; ALL x:set_of ?t. ?l x = ?l' x & ?r x = ?r' x |]
      ==> Dag ?p ?l ?r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("BinDag.Dags_eq_hp_eq",
     "[| Dag ?p ?l ?r ?t; Dag ?p' ?l' ?r' ?t |]
      ==> ?p' = ?p & (ALL no:set_of ?t. ?l' no = ?l no & ?r' no = ?r no)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 6)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               t_empty))
           ))),
    ("BinDag.Dag_Ref",
     "?p ~= Null ==>
      Dag ?p ?l ?r ?t =
      (EX lt rt.
          ?t = dag.Node lt ?p rt &
          Dag (?l ?p) ?l ?r lt & Dag (?r ?p) ?l ?r rt)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 3, t_empty))))]
