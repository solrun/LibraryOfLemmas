   [("Submonoids.dec_emp", "Dec ?G \<epsilon> = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Submonoids.basis_of_hull", "\<BB> ?G = \<BB> \<langle>?G\<rangle>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Submonoids.free_hull_idem",
     "\<langle>\<langle>?G\<rangle>\<^sub>F\<rangle>\<^sub>F =
      \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.hull_gen_free_hull",
     "\<langle>\<langle>?G\<rangle>\<rangle>\<^sub>F =
      \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Submonoids.basis_gen_hull",
     "\<langle>\<BB> ?G\<rangle> = \<langle>?G\<rangle>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Submonoids.basis_gen_hull_free",
     "\<langle>\<BB>\<^sub>F ?G\<rangle> = \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.free_hull_hull",
     "\<langle>\<langle>?G\<rangle>\<^sub>F\<rangle> =
      \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.self_gen",
     "\<langle>\<langle>?G\<rangle>\<rangle> = \<langle>?G\<rangle>",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.hull_concat_lists",
     "\<langle>?G\<rangle> = concat ` lists ?G",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.basis_gen_hull'",
     "\<langle>\<BB> \<langle>?G\<rangle>\<rangle> = \<langle>?G\<rangle>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 1, template_var 0))),
    ("Submonoids.basisdef", "\<BB> ?G = {x.  x \<in>B ?G }",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Submonoids.hull_drop_one",
     "\<langle>?G\<rangle> = \<langle>?G\<^sub>+\<rangle>",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Submonoids.rev_hull",
     "rev ` \<langle>?G\<rangle> = \<langle>rev ` ?G\<rangle>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Submonoids.basis_drop_emp", "\<BB> ?G\<^sub>+ = \<BB> ?G",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)),
       template_app (template_hole 3, template_var 0))),
    ("Submonoids.in_lists_conv_set_subset",
     "(set ?ws <= ?G) = (?ws : lists ?G)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.free_hullp_free_hull_eq",
     "free_hullp (%x. x : ?G) = (%x. x : \<langle>?G\<rangle>\<^sub>F)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Submonoids.hullp_hull_eq",
     "hullp (%x. x : ?G) = (%x. x : \<langle>?G\<rangle>)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Submonoids.emp_basis_iff", "(\<BB> ?G = {}) = (?G\<^sub>+ = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 3)),
         template_hole 3))),
    ("Submonoids.free_hull_inter",
     "\<langle>?G\<rangle>\<^sub>F =
      \<Inter> {M. ?G <= M & M = \<langle>M\<rangle>\<^sub>F}",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Submonoids.emp_gen_iff",
     "(?G\<^sub>+ = {}) = (\<langle>?G\<rangle> = {\<epsilon>})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)))),
    ("Submonoids.sings_gen_lists", "\<langle>sings ?B\<rangle> = lists ?B",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.sings_image", "sings ?B = (%x. [x]) ` ?B",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Submonoids.hulls_inter",
     "\<langle>\<Inter> {\<langle>G\<rangle> |G. G : ?S}\<rangle> =
      \<Inter> {\<langle>G\<rangle> |G. G : ?S}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty))))]
