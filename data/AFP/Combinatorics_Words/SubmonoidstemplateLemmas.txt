   [("Submonoids.free_basis_code", "code (\<BB>\<^sub>F ?G)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Submonoids.emp_nonsimp", "~  \<epsilon> \<in>B ?G ",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)
             )
         )),
    ("Submonoids.genset_sub_free", "?G <= \<langle>?G\<rangle>\<^sub>F",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.genset_sub", "?G <= \<langle>?G\<rangle>",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.basis_sub", "\<BB> ?G <= ?G",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_var 0)),
    ("Submonoids.dec_emp", "Dec ?G \<epsilon> = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Submonoids.hull_in_free_hull",
     "\<langle>?G\<rangle> <= \<langle>?G\<rangle>\<^sub>F",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.basis_of_hull", "\<BB> ?G = \<BB> \<langle>?G\<rangle>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Submonoids.free_hull_idem",
     "\<langle>\<langle>?G\<rangle>\<^sub>F\<rangle>\<^sub>F =
      \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.hull_gen_free_hull",
     "\<langle>\<langle>?G\<rangle>\<rangle>\<^sub>F =
      \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Submonoids.basis_gen_hull",
     "\<langle>\<BB> ?G\<rangle> = \<langle>?G\<rangle>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Submonoids.basis_gen_hull_free",
     "\<langle>\<BB>\<^sub>F ?G\<rangle> = \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.free_hull_hull",
     "\<langle>\<langle>?G\<rangle>\<^sub>F\<rangle> =
      \<langle>?G\<rangle>\<^sub>F",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.self_gen",
     "\<langle>\<langle>?G\<rangle>\<rangle> = \<langle>?G\<rangle>",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.hull_concat_lists",
     "\<langle>?G\<rangle> = concat ` lists ?G",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.basis_gen_hull'",
     "\<langle>\<BB> \<langle>?G\<rangle>\<rangle> = \<langle>?G\<rangle>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 1, template_var 0))),
    ("Submonoids.basisdef", "\<BB> ?G = {x.  x \<in>B ?G }",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Submonoids.code_free_basis", "code ?C ==> ?C = \<BB>\<^sub>F ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 0)))),
    ("Submonoids.simp_el_el", " ?b \<in>B ?G  ==> ?b : ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Submonoids.hull_drop_one",
     "\<langle>?G\<rangle> = \<langle>?G\<^sub>+\<rangle>",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Submonoids.rev_hull",
     "rev ` \<langle>?G\<rangle> = \<langle>rev ` ?G\<rangle>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Submonoids.basis_drop_emp", "\<BB> ?G\<^sub>+ = \<BB> ?G",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)),
       template_app (template_hole 3, template_var 0))),
    ("Submonoids.in_lists_conv_set_subset",
     "(set ?ws <= ?G) = (?ws : lists ?G)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.basis_gen", "?w : ?G --> ?w : \<langle>\<BB> ?G\<rangle>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Submonoids.code_free_basis_hull",
     "code ?C ==> ?C = \<BB>\<^sub>F \<langle>?C\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Submonoids.code_gen_free_hull",
     "code ?C ==> \<langle>?C\<rangle>\<^sub>F = \<langle>?C\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.gen_in", "?w : ?G ==> ?w : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.simp_el_indecomp", " ?b \<in>B ?G  ==> ?b ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Submonoids.simp_el_hull",
     " ?b \<in>B ?G  ==>  ?b \<in>B \<langle>?G\<rangle> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.basisI", " ?x \<in>B ?G  ==> ?x : \<BB> ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.basisD", "?x : \<BB> ?G ==>  ?x \<in>B ?G ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Submonoids.simp_el_hull'",
     " ?b \<in>B \<langle>?G\<rangle>  ==>  ?b \<in>B ?G ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Submonoids.hull_mon",
     "?A <= ?B ==> \<langle>?A\<rangle> <= \<langle>?B\<rangle>",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.free_hull_mono",
     "?G <= ?H ==>
      \<langle>?G\<rangle>\<^sub>F <= \<langle>?H\<rangle>\<^sub>F",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Submonoids.emp_not_basis", "?x : \<BB> ?G ==> ?x ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Submonoids.free_hullp_free_hull_eq",
     "free_hullp (%x. x : ?G) = (%x. x : \<langle>?G\<rangle>\<^sub>F)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Submonoids.hullp_hull_eq",
     "hullp (%x. x : ?G) = (%x. x : \<langle>?G\<rangle>)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Submonoids.concat_in_hull",
     "set ?ws <= ?G ==> concat ?ws : \<langle>?G\<rangle>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.concat_in_hull'",
     "?ws : lists ?G ==> concat ?ws : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.sing_gen", "?w : \<langle>{?z}\<rangle> ==> ?w \<in> ?z*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Submonoids.emp_basis_iff", "(\<BB> ?G = {}) = (?G\<^sub>+ = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 3)),
         template_hole 3))),
    ("Submonoids.decI",
     "?u : \<langle>?G\<rangle> ==> concat (Dec ?G ?u) = ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Submonoids.dec_dom'",
     "?u : \<langle>?G\<rangle> ==> Dec ?G ?u : lists ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.hull_closed_lists",
     "?us : lists \<langle>?G\<rangle> ==>
      concat ?us : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Submonoids.concat_tl",
     "?x # ?xs : lists ?G ==> concat ?xs : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.free_hull_inter",
     "\<langle>?G\<rangle>\<^sub>F =
      \<Inter> {M. ?G <= M & M = \<langle>M\<rangle>\<^sub>F}",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Submonoids.emp_gen_iff",
     "(?G\<^sub>+ = {}) = (\<langle>?G\<rangle> = {\<epsilon>})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)))),
    ("Submonoids.code_sings", "code (sings ?B)",
     template_predicate
      (
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))
         )),
    ("Submonoids.hull_concat_lists0",
     "?w : \<langle>?G\<rangle> ==> EX ws:lists ?G. concat ws = ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty)
           ))),
    ("Submonoids.power_in",
     "?x : \<langle>?G\<rangle> ==> ?x \<^sup>@ ?k : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app (template_hole 3, template_var 1))
           ))),
    ("Submonoids.ref",
     "?us : lists \<langle>?G\<rangle> ==>
      concat (Ref ?G ?us) = concat ?us",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("Submonoids.rev_hull0",
     "?x : rev ` \<langle>?G\<rangle> ==> ?x : \<langle>rev ` ?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)))
           ))),
    ("Submonoids.rev_hull1",
     "?x : \<langle>rev ` ?G\<rangle> ==> ?x : rev ` \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Submonoids.concat_tl_basis",
     "?x # ?xs : lists \<BB> ?G ==> concat ?xs : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.free_hull_min",
     "[| code ?C; ?G <= \<langle>?C\<rangle> |]
      ==> \<langle>?G\<rangle>\<^sub>F <= \<langle>?C\<rangle>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 1, template_var 1)))),
    ("Submonoids.decI'",
     "?u : \<langle>?G\<rangle> ==> Dec ?G ?u : lists ?G\<^sub>+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))))
           ))),
    ("Submonoids.bin_code_code",
     "?u \<cdot> ?v ~= ?v \<cdot> ?u ==> code {?u, ?v}",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Submonoids.dec_nemp",
     "?u : \<langle>?G\<rangle>\<^sub>+ ==> Dec ?G ?u ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_hole 4)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("Submonoids.sings_gen_lists", "\<langle>sings ?B\<rangle> = lists ?B",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Submonoids.ref_in",
     "?us : lists \<langle>?G\<rangle> ==> Ref ?G ?us : lists ?G\<^sub>+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))))
           ))),
    ("Submonoids.sing_gen_power",
     "?u : \<langle>{?x}\<rangle> ==> EX k. ?u = ?x \<^sup>@ k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Submonoids.basis_sets",
     "[| \<BB> ?G <= ?S; ?S <= \<langle>?G\<rangle> |]
      ==> \<BB> ?G = \<BB> ?S",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Submonoids.gen_sets",
     "[| \<BB> ?G <= ?S; ?S <= \<langle>?G\<rangle> |]
      ==> \<langle>?S\<rangle> = \<langle>?G\<rangle>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 1, template_var 1)))),
    ("Submonoids.dec_nemp'",
     "[| ?u ~= \<epsilon>; ?u : \<langle>?G\<rangle> |]
      ==> Dec ?G ?u ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("Submonoids.dec_hd",
     "[| ?u ~= \<epsilon>; ?u : \<langle>?G\<rangle> |]
      ==> hd (Dec ?G ?u) : ?G",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_var 0)
           ))),
    ("Submonoids.hull_closed",
     "[| ?w1.0 : \<langle>?G\<rangle>; ?w2.0 : \<langle>?G\<rangle> |]
      ==> ?w1.0 \<cdot> ?w2.0 : \<langle>?G\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Submonoids.lists_gen_to_hull",
     "?us : lists ?G\<^sub>+ ==> ?us : lists \<langle>?G\<rangle>\<^sub>+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 0, template_var 0)),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1))))
           ))),
    ("Submonoids.ref_ex",
     "[| ?Q <= \<langle>?G\<rangle>; ?us : lists ?Q |]
      ==> concat (Ref ?G ?us) = concat ?us",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Submonoids.sings_image", "sings ?B = (%x. [x]) ` ?B",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Submonoids.non_gen_dec",
     "[| ?u : \<langle>?G\<rangle>; ?u ~: ?G |] ==> Dec ?G ?u ~= [?u]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Submonoids.dec_ex",
     "?u : \<langle>?G\<rangle> ==>
      EX us. us : lists ?G\<^sub>+ & concat us = ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Submonoids.nemp_concat_hull",
     "[| ?us ~= \<epsilon>; ?us : lists ?G\<^sub>+ |]
      ==> concat ?us ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2))))
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 1),
             template_hole 3)
           ))),
    ("Submonoids.nemp_concat_hull",
     "[| ?us ~= \<epsilon>; ?us : lists ?G\<^sub>+ |]
      ==> concat ?us : \<langle>?G\<rangle>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Submonoids.ref_gen",
     "[| ?us : lists ?B; ?B <= \<langle>?G\<rangle> |]
      ==> Ref ?G ?us : \<langle>decompose ?G ` ?B\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))
           ))),
    ("Submonoids.emp_ref",
     "[| ?us : lists \<langle>?G\<rangle>\<^sub>+;
         Ref ?G ?us = \<epsilon> |]
      ==> ?us = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Submonoids.ref_ex",
     "[| ?Q <= \<langle>?G\<rangle>; ?us : lists ?Q |]
      ==> Ref ?G ?us : lists ?G\<^sub>+",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))))
           ))),
    ("Submonoids.nonsimp",
     "[| ?us : lists ?G\<^sub>+;  concat ?us \<in>B ?G  |]
      ==> ?us = [concat ?us]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_hole 0)))),
    ("Submonoids.sing_ref_sing",
     "[| ?us : lists \<langle>?G\<rangle>\<^sub>+; Ref ?G ?us = [?b] |]
      ==> ?us = [?b]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 0))],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Submonoids.simp_elD",
     "[|  ?b \<in>B ?G ; ?us : lists ?G\<^sub>+; concat ?us = ?b |]
      ==> \<^bold>|?us\<^bold>| = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5))))
            ),
        template_equation
         (template_app (template_hole 3, template_var 0), template_var 2)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Submonoids.ref_pop_hd",
     "[| ?us ~= \<epsilon>; ?us : lists \<langle>?G\<rangle> |]
      ==> Ref ?G ?us = (Dec ?G hd ?us) \<cdot> Ref ?G tl ?us",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Submonoids.simp_el_sing",
     "[|  ?b \<in>B ?G ; ?us : lists ?G\<^sub>+; concat ?us = ?b |]
      ==> ?us = [?b]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5))))
            ),
        template_equation
         (template_app (template_hole 3, template_var 0), template_var 2)],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("Submonoids.basis_no_fact",
     "[| ?u : \<langle>?G\<rangle>; ?v : \<langle>?G\<rangle>;
          ?u \<cdot> ?v \<in>B ?G  |]
      ==> ?u = \<epsilon> | ?v = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Submonoids.map_sings",
     "?xs : lists ?B ==> map (%x. [x]) ?xs : lists (sings ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, t_empty), template_var 1)),
             template_app
              (template_hole 5, template_app (template_hole 4, t_empty)))
           ))),
    ("Submonoids.lists_sing_map_concat_ident",
     "?xs : lists (sings ?B) ==> ?xs = map (%x. [x]) (concat ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10, template_app (template_hole 9, t_empty)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("Submonoids.ref_morph",
     "[| ?us : lists \<langle>?G\<rangle>;
         ?vs : lists \<langle>?G\<rangle> |]
      ==> Ref ?G ?us \<cdot> ?vs = (Ref ?G ?us) \<cdot> Ref ?G ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Submonoids.basis_dec",
     "[| ?p : \<langle>?G\<rangle>; ?s : \<langle>?G\<rangle>;
         ?p \<cdot> ?s : \<BB> ?G |]
      ==> ?p = \<epsilon> | ?s = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Submonoids.hulls_inter",
     "\<langle>\<Inter> {\<langle>G\<rangle> |G. G : ?S}\<rangle> =
      \<Inter> {\<langle>G\<rangle> |G. G : ?S}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Submonoids.dec_sings",
     "?xs : lists ?B ==> Dec sings ?B ?xs = map (%x. [x]) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_var 1),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Submonoids.free_basis_dec_morph",
     "[| ?u : \<langle>?G\<rangle>\<^sub>F;
         ?v : \<langle>?G\<rangle>\<^sub>F |]
      ==> Dec \<BB>\<^sub>F ?G ?u \<cdot> ?v =
          (Dec \<BB>\<^sub>F ?G ?u) \<cdot> (Dec \<BB>\<^sub>F ?G ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0))))),
    ("Submonoids.set_concat_len",
     "[| ?us : lists ?G\<^sub>+; 1 < \<^bold>|?us\<^bold>|; ?u : set ?us |]
      ==> \<^bold>|?u\<^bold>| < \<^bold>|concat ?us\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_hole 7))))
            ),
        template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("Submonoids.simp_el_indecomp",
     " ?b \<in>B ?G  ==>
      ALL u v.
         u ~= \<epsilon> &
         u : \<langle>?G\<rangle> &
         v ~= \<epsilon> & v : \<langle>?G\<rangle> -->
         u \<cdot> v ~= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Submonoids.ref_morph_plus",
     "[| ?us : lists \<langle>?G\<rangle>\<^sub>+;
         ?vs : lists \<langle>?G\<rangle>\<^sub>+ |]
      ==> Ref ?G ?us \<cdot> ?vs = (Ref ?G ?us) \<cdot> Ref ?G ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Submonoids.non_simp_fac'",
     "[| ?w ~: \<BB> ?G; ?w ~= \<epsilon>; ?w : \<langle>?G\<rangle> |]
      ==> EX us.
             us : lists ?G\<^sub>+ &
             ?w = concat us & \<^bold>|us\<^bold>| ~= 1",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_app (template_hole 14, template_var 0))
                )
            ),
        template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 11, template_var 0))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Submonoids.no_comm_bin_code",
     "[| ?u\<^sub>0 \<cdot> ?u\<^sub>1 ~= ?u\<^sub>1 \<cdot> ?u\<^sub>0;
         ?us : lists {?u\<^sub>0, ?u\<^sub>1};
         ?vs : lists {?u\<^sub>0, ?u\<^sub>1}; concat ?us = concat ?vs |]
      ==> ?us = ?vs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_hole 2))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_hole 2))))
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Submonoids.simp_elI",
     "[| ?b : ?G; ?b ~= \<epsilon>;
         ALL u v.
            u ~= \<epsilon> &
            u : \<langle>?G\<rangle> &
            v ~= \<epsilon> & v : \<langle>?G\<rangle> -->
            u \<cdot> v ~= ?b |]
      ==>  ?b \<in>B ?G ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Submonoids.non_simp_dec",
     "[| ?w ~: \<BB> ?G; ?w ~= \<epsilon>; ?w : ?G;
         !!us. [| us : lists ?G\<^sub>+; 1 < \<^bold>|us\<^bold>|;
                  concat us = ?w |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_app (template_hole 12, template_var 1))
                )
            ),
        template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Submonoids.hull_induct",
     "[| ?x : \<langle>?G\<rangle>; ?P \<epsilon>; !!w. w : ?G ==> ?P w;
         !!w1 w2.
            [| w1 : \<langle>?G\<rangle>; ?P w1; w2 : \<langle>?G\<rangle>;
               ?P w2 |]
            ==> ?P (w1 \<cdot> w2) |]
      ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_var 0, template_hole 2)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("Submonoids.non_simp_fac",
     "[| ?w ~= \<epsilon>; ?w : \<langle>?G\<rangle>; ?w ~: \<BB> ?G;
         !!us. [| 1 < \<^bold>|us\<^bold>|; us ~= \<epsilon>;
                  us : lists \<BB> ?G; hd us ~= \<epsilon>;
                  hd us : \<langle>?G\<rangle>;
                  concat (tl us) ~= \<epsilon>;
                  concat (tl us) : \<langle>?G\<rangle>;
                  ?w = hd us \<cdot> concat (tl us) |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 15)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app (template_hole 13, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app (template_hole 12, template_var 1))
                )
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]
