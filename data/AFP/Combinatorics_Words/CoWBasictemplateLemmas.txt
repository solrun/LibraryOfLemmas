   [("CoWBasic.conjug_refl", "?u \<sim> ?u",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("CoWBasic.comp_refl", "?u \<bowtie> ?u",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("CoWBasic.empty_all_roots", "\<epsilon> \<in> ?r*",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("CoWBasic.self_root", "?u \<in> ?u*",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("CoWBasic.emp_pref", "\<epsilon> \<le>p ?u",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("CoWBasic.self_pref", "?a \<le>p ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("CoWBasic.prim_sing", "primitive [?a]",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("CoWBasic.emp_no_periodN", "~ periodN \<epsilon> ?n",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)
             )
         )),
    ("CoWBasic.zero_not_per", "~ periodN ?w 0",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("CoWBasic.emp_not_per", "~ ?x \<le>p \<epsilon>\<^sup>\<omega>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("CoWBasic.rev_morph_idemp", "rev_morph (rev_morph ?f) = ?f",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("CoWBasic.lq_emp", "\<epsilon>\<inverse>\<^sup>>?u = ?u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CoWBasic.lq_code", "\<epsilon>\<inverse>\<^sup>>?v = ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CoWBasic.lq_self", "?u\<inverse>\<^sup>>?u = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("CoWBasic.rq_emp", "?u\<^sup><\<inverse>\<epsilon>  = ?u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CoWBasic.rq_sefl", "?u\<^sup><\<inverse>?u  = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("CoWBasic.mult_1_left", "\<epsilon> \<cdot> ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CoWBasic.mult_1_right", "?a \<cdot> \<epsilon> = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CoWBasic.lcp_simps", "\<epsilon> \<and>\<^sub>p ?uv = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("CoWBasic.lcp_simps", "?uu \<and>\<^sub>p \<epsilon> = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("CoWBasic.lcp_self", "?w \<and>\<^sub>p ?w = ?w",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("CoWBasic.triv_pref", "?r \<le>p ?r \<cdot> ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("CoWBasic.lcp_pref", "?xs \<and>\<^sub>p ?ys \<le>p ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("CoWBasic.lcp_pref'", "?xs \<and>\<^sub>p ?ys \<le>p ?ys",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("CoWBasic.triv_suf", "?u \<le>s ?v \<cdot> ?u",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("CoWBasic.sing_len", "\<^bold>|[?a]\<^bold>| = 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("CoWBasic.prim_rev_iff", "primitive (rev ?u) = primitive ?u",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("CoWBasic.concat_sing'", "concat [?r] = ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("CoWBasic.take_self", "take \<^bold>|?w\<^bold>| ?w = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("CoWBasic.conjugI'", "?r \<cdot> ?s \<sim> ?s \<cdot> ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("CoWBasic.rootI", "?r \<^sup>@ ?k \<in> ?r*",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("CoWBasic.prim_rotate_conv", "primitive ?w = primitive (rotate ?n ?w)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.lcp_sym", "?u \<and>\<^sub>p ?v = ?v \<and>\<^sub>p ?u",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("CoWBasic.lq_triv", "?u\<inverse>\<^sup>>(?u \<cdot> ?z) = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CoWBasic.rq_triv", "(?z \<cdot> ?u)\<^sup><\<inverse>?u  = ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 1)),
    ("CoWBasic.emp_pow", "\<epsilon> \<^sup>@ ?n = \<epsilon>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_hole 1),
         template_var 0),
       template_hole 1)),
    ("CoWBasic.power_one_right", "?a \<^sup>@ 1 = ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_hole 0),
       template_var 0)),
    ("CoWBasic.pow_one_id", "?u \<^sup>@ 1 = ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_hole 0),
       template_var 0)),
    ("CoWBasic.pow_zero", "?u \<^sup>@ 0 = \<epsilon>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_hole 0),
       template_hole 2)),
    ("CoWBasic.pref_len'",
     "\<^bold>|?u\<^bold>| <= \<^bold>|?u \<cdot> ?z\<^bold>|",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.suf_len'",
     "\<^bold>|?u\<^bold>| <= \<^bold>|?z \<cdot> ?u\<^bold>|",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.concat_take_is_prefix",
     "concat (take ?n ?ws) \<le>p concat ?ws",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app (template_hole 1, template_var 0))
         )),
    ("CoWBasic.facI", "?u \<le>f ?p \<cdot> ?u \<cdot> ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))
         )),
    ("CoWBasic.periodN_rev_conv", "periodN (rev ?w) ?n = periodN ?w ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.non_comp_parallel",
     "(~ ?u \<bowtie> ?v) = (?u \<parallel> ?v)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.rev_morph_arg", "rev_morph ?f ?u = rev (?f (rev ?u))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.rev_morph_arg_rev", "rev_morph ?f (rev ?u) = rev (?f ?u)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("CoWBasic.rev_sing", "rev [?x] = [?x]",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("CoWBasic.drop_pref", "drop \<^bold>|?u\<^bold>| (?u \<cdot> ?w) = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CoWBasic.power_Suc0_right", "?a \<^sup>@ Suc 0 = ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("CoWBasic.replicate_in_lists", "replicate ?k ?z : lists {?z}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("CoWBasic.prim_nemp", "primitive ?u ==> ?u ~= \<epsilon>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("CoWBasic.prim_self_root", "primitive ?x ==> \<rho> ?x = ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("CoWBasic.borderD_pref", "?x \<le>b ?w ==> ?x \<le>p ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.borderD_spref", "?x \<le>b ?w ==> ?x <p ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.borderD_ssuf", "?x \<le>b ?w ==> ?x <s ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.borderD_suf", "?x \<le>b ?w ==> ?x \<le>s ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.conjug_sym", "?u \<sim> ?v ==> ?v \<sim> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.npD", "?u \<le>np ?v ==> ?u \<le>p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.nsD", "?u \<le>ns ?v ==> ?u \<le>s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.pref_comp_sym", "?u \<bowtie> ?v ==> ?v \<bowtie> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.prim_rootD", "?x \<in>\<^sub>p ?r * ==> ?x \<in> ?r*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.suf_comp_sym",
     "?u \<bowtie>\<^sub>s ?v ==> ?v \<bowtie>\<^sub>s ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.pref_emp", "?a \<le>p \<epsilon> ==> ?a = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("CoWBasic.pref_fac", "?xs \<le>p ?ys ==> ?xs \<le>f ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.sprefD1", "?a <p ?b ==> ?a \<le>p ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.ssufD1", "?a <s ?b ==> ?a \<le>s ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.suf_emp", "?a \<le>s \<epsilon> ==> ?a = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("CoWBasic.suf_fac", "?xs \<le>s ?ys ==> ?xs \<le>f ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.swap_len",
     "\<^bold>|?u \<cdot> ?v\<^bold>| = \<^bold>|?v \<cdot> ?u\<^bold>|",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.npref_rev_suf_iff",
     "(?s \<le>np ?w) = rev ?s \<le>ns rev ?w",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.nsuf_rev_pref_iff",
     "?s \<le>ns ?w = (rev ?s \<le>np rev ?w)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.pref_rev_suf_iff", "(?u \<le>p ?v) = rev ?u \<le>s rev ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.spref_rev_suf_iff", "(?s <p ?w) = (rev ?s <s rev ?w)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.ssuf_rev_pref_iff", "(?xs <s ?ys) = (rev ?xs <p rev ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.suf_rev_pref_iff",
     "?xs \<le>s ?ys = (rev ?xs \<le>p rev ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.border_rev_conv", "rev ?x \<le>b rev ?w = ?x \<le>b ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.conjug_rev_conv", "rev ?u \<sim> rev ?v = ?u \<sim> ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.suf_comp_rev_pref_comp",
     "(rev ?w \<bowtie> rev ?v) = (?w \<bowtie>\<^sub>s ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.prim_root_rev_conv",
     "rev ?x \<in>\<^sub>p rev ?r * = ?x \<in>\<^sub>p ?r *",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.root_rev_iff", "rev ?u \<in> rev ?t* = ?u \<in> ?t*",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.add_root", "?z \<cdot> ?w \<in> ?z* = ?w \<in> ?z*",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("CoWBasic.pref_comp_rev_suf_comp",
     "(rev ?w \<bowtie>\<^sub>s rev ?v) = (?w \<bowtie> ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.lcp_pref_conv",
     "(?u \<and>\<^sub>p ?v = ?u) = (?u \<le>p ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.rev_fac", "rev ?u \<le>f rev ?v = ?u \<le>f ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.hd_word", "?a # ?ws = [?a] \<cdot> ?ws",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("CoWBasic.takedrop", "take ?n ?xs \<cdot> drop ?n ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CoWBasic.concat_map_sing_ident", "concat (map (%x. [x]) ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_var 0)),
    ("CoWBasic.fac_len'",
     "\<^bold>|?w\<^bold>| <= \<^bold>|?u \<cdot> ?w \<cdot> ?v\<^bold>|",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 2),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CoWBasic.borderD_nemp", "?x \<le>b ?w ==> ?x ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("CoWBasic.borderD_neq", "?x \<le>b ?w ==> ?x ~= ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("CoWBasic.border_len", "?x \<le>b ?w ==> 1 < \<^bold>|?w\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.border_len", "?x \<le>b ?w ==> 0 < \<^bold>|?x\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 1)))),
    ("CoWBasic.npD'", "?u \<le>np ?v ==> ?u ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("CoWBasic.nsD'", "?u \<le>ns ?v ==> ?u ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("CoWBasic.periodN_D2", "periodN ?w ?n ==> ?n ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("CoWBasic.per_nemp", "periodN ?w ?n ==> ?w ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("CoWBasic.periodN_rev", "periodN ?w ?p ==> periodN (rev ?w) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("CoWBasic.per_rootD'",
     "?u \<le>p ?r\<^sup>\<omega> ==> ?r ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("CoWBasic.primroot_unique", "?u \<in>\<^sub>p ?r * ==> \<rho> ?u = ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.sprefD2", "?x <p ?y ==> ?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("CoWBasic.ssufD2", "?x <s ?y ==> ?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("CoWBasic.emp_any_per",
     "?r ~= \<epsilon> ==> \<epsilon> \<le>p ?r\<^sup>\<omega>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0)
           ))),
    ("CoWBasic.emp_spref", "?u ~= \<epsilon> ==> \<epsilon> <p ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0)
           ))),
    ("CoWBasic.emp_ssuf", "?u ~= \<epsilon> ==> \<epsilon> <s ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0)
           ))),
    ("CoWBasic.root_self",
     "?w ~= \<epsilon> ==> ?w \<le>p ?w\<^sup>\<omega>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 0)
           ))),
    ("CoWBasic.primroot_prim", "?x ~= \<epsilon> ==> primitive (\<rho> ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.npos_len", "\<^bold>|?u\<^bold>| <= 0 ==> ?u = \<epsilon>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.takeWhile_sing_root",
     "takeWhile (%x. x = ?a) ?w \<in> [?a]*",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))
         )),
    ("CoWBasic.sing_pow_len", "\<^bold>|[?r] \<^sup>@ ?l\<^bold>| = ?l",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 2)),
           template_var 0)),
       template_var 0)),
    ("CoWBasic.pref_take_conv",
     "(take \<^bold>|?r\<^bold>| ?w = ?r) = (?r \<le>p ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.lq_rev_rq",
     "rev ?v\<inverse>\<^sup>>rev ?u = rev (?u\<^sup><\<inverse>?v )",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.rq_rev_lq",
     "rev ?v\<^sup><\<inverse>rev ?u  = rev (?u\<inverse>\<^sup>>?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.concat_morph",
     "concat ?xs \<cdot> concat ?ys = concat (?xs \<cdot> ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.pow_is_concat_replicate",
     "?u \<^sup>@ ?n = concat (replicate ?n ?u)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.border_lq_comp",
     "?x \<le>b ?w ==> ?w\<^sup><\<inverse>?x  \<bowtie> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 1)
           ))),
    ("CoWBasic.border_lq_suf_comp",
     "?x \<le>b ?w ==> ?x\<inverse>\<^sup>>?w \<bowtie>\<^sub>s ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("CoWBasic.border_len",
     "?x \<le>b ?w ==> \<^bold>|?x\<^bold>| < \<^bold>|?w\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.conjug_len",
     "?u \<sim> ?v ==> \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.per_rootD",
     "?u \<le>p ?r\<^sup>\<omega> ==> ?u \<le>p ?r \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.comp_monotone'",
     "?w \<bowtie> ?r ==> ?w \<and>\<^sub>p ?w' \<bowtie> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("CoWBasic.root_len_dvd",
     "?u \<in> ?t* ==> \<^bold>|?t\<^bold>| dvd \<^bold>|?u\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("CoWBasic.lenarg",
     "?u = ?v ==> \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.lq_suf_suf",
     "?r \<le>p ?s ==> ?r\<inverse>\<^sup>>?s \<le>s ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("CoWBasic.pref_ext", "?xs \<le>p ?ys ==> ?xs \<le>p ?ys \<cdot> ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.pref_concat_pref",
     "?us \<le>p ?ws ==> concat ?us \<le>p concat ?ws",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.spref_ext", "?r <p ?u ==> ?r <p ?u \<cdot> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.ssuf_ext", "?r <s ?u ==> ?r <s ?v \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.fac_len",
     "?u \<le>f ?v ==> \<^bold>|?u\<^bold>| <= \<^bold>|?v\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.rq_suf_suf",
     "?r \<le>s ?s ==> ?s\<^sup><\<inverse>?r  \<le>p ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("CoWBasic.suf_ext", "?xs \<le>s ?ys ==> ?xs \<le>s ?zs \<cdot> ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.nconjug_neq", "~ ?u \<sim> ?v ==> ?u ~= ?v",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("CoWBasic.nemp_pos_len",
     "?r ~= \<epsilon> ==> 1 <= \<^bold>|?r\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.primroot_is_primroot",
     "?x ~= \<epsilon> ==> ?x \<in>\<^sub>p \<rho> ?x *",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.primroot_is_root",
     "?x ~= \<epsilon> ==> ?x \<in> \<rho> ?x*",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.prefI'", "?ys = ?xs \<cdot> ?zs ==> ?xs \<le>p ?ys",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("CoWBasic.prefI", "?p \<cdot> ?s = ?w ==> ?p \<le>p ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.sufI", "?p \<cdot> ?s = ?w ==> ?s \<le>s ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.ruler_pref", "?w \<le>p ?v \<cdot> ?z ==> ?w \<bowtie> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("CoWBasic.pref_lcp_pref",
     "?w \<le>p ?u \<and>\<^sub>p ?v ==> ?w \<le>p ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("CoWBasic.pref_lcp_pref'",
     "?w \<le>p ?u \<and>\<^sub>p ?v ==> ?w \<le>p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("CoWBasic.ruler_suf",
     "?w \<le>s ?z \<cdot> ?v ==> ?w \<bowtie>\<^sub>s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.pow_len",
     "\<^bold>|?u \<^sup>@ ?k\<^bold>| = ?k * \<^bold>|?u\<^bold>|",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 4, template_var 1)))),
    ("CoWBasic.conjug_rotate_iff",
     "?u \<sim> ?v = (EX n. ?v = rotate n ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("CoWBasic.pref_compIff",
     "(?u \<bowtie> ?v) = (?u \<le>p ?v | ?v \<le>p ?u)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.comp_ext",
     "(?z \<cdot> ?w1.0 \<bowtie> ?z \<cdot> ?w2.0) =
      (?w1.0 \<bowtie> ?w2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.suf_comp_ext",
     "(?w1.0 \<cdot> ?z \<bowtie>\<^sub>s ?w2.0 \<cdot> ?z) =
      (?w1.0 \<bowtie>\<^sub>s ?w2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("CoWBasic.cancel", "(?xs \<cdot> ?ys = ?xs \<cdot> ?zs) = (?ys = ?zs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.cancel_right",
     "(?ys \<cdot> ?xs = ?zs \<cdot> ?xs) = (?ys = ?zs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_equation (template_var 2, template_var 0))),
    ("CoWBasic.pref_cancel_conv",
     "(?xs \<cdot> ?ys \<le>p ?xs \<cdot> ?zs) = (?ys \<le>p ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.suf_cancel_eq",
     "?ys \<cdot> ?xs \<le>s ?zs \<cdot> ?xs = ?ys \<le>s ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("CoWBasic.del_emp_concat",
     "concat ?us = concat (filter (%x. x ~= \<epsilon>) ?us)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("CoWBasic.rev_morph_sing", "rev_morph ?f [?a] = rev (?f [?a])",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 0,
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("CoWBasic.lassoc",
     "?xs \<cdot> ?ys \<cdot> ?zs = (?xs \<cdot> ?ys) \<cdot> ?zs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.mult_assoc",
     "(?a \<cdot> ?b) \<cdot> ?c = ?a \<cdot> ?b \<cdot> ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.rassoc",
     "(?xs \<cdot> ?ys) \<cdot> ?zs = ?xs \<cdot> ?ys \<cdot> ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.lq_triv'",
     "?u \<cdot> ?u\<inverse>\<^sup>>(?u \<cdot> ?z) = ?u \<cdot> ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.rq_triv'",
     "(?z \<cdot> ?u)\<^sup><\<inverse>?u  \<cdot> ?u = ?z \<cdot> ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.power2_eq_square", "CoWBasic.power2 ?a = ?a \<cdot> ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app (template_hole 3, template_var 0), template_var 0))),
    ("CoWBasic.pow2_list", "CoWBasic.power2 ?u = ?u \<cdot> ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app (template_hole 3, template_var 0), template_var 0))),
    ("CoWBasic.drop_len",
     "\<^bold>|?u \<cdot> ?w\<^bold>|
      <= \<^bold>|?u \<cdot> ?v \<cdot> ?w\<^bold>|",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("CoWBasic.border_lq_nemp",
     "?x \<le>b ?w ==> ?x\<inverse>\<^sup>>?w ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("CoWBasic.border_rq_nemp",
     "?x \<le>b ?w ==> ?w\<^sup><\<inverse>?x  ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("CoWBasic.drop_per_pref",
     "?w \<le>p ?u\<^sup>\<omega> ==>
      drop \<^bold>|?u\<^bold>| ?w \<le>p ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_var 1)
           ))),
    ("CoWBasic.pref_take",
     "?p \<le>p ?w ==> take \<^bold>|?p\<^bold>| ?w = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 1))),
    ("CoWBasic.spref_take",
     "?p <p ?w ==> take \<^bold>|?p\<^bold>| ?w = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 1))),
    ("CoWBasic.lq_spref",
     "?u <p ?v ==> ?u\<inverse>\<^sup>>?v ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("CoWBasic.rq_ssuf",
     "?u <s ?v ==> ?v\<^sup><\<inverse>?u  ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("CoWBasic.triv_spref", "?s ~= \<epsilon> ==> ?r <p ?r \<cdot> ?s",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.nemp_len", "?u ~= \<epsilon> ==> \<^bold>|?u\<^bold>| ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("CoWBasic.primroot_nemp",
     "?x ~= \<epsilon> ==> \<rho> ?x ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 0),
             template_hole 1)
           ))),
    ("CoWBasic.concat_hd_pref",
     "?ws ~= \<epsilon> ==> hd ?ws \<le>p concat ?ws",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.concat_last_suf",
     "?ws ~= \<epsilon> ==> last ?ws \<le>s concat ?ws",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.concat_len_one",
     "\<^bold>|?us\<^bold>| = 1 ==> concat ?us = hd ?us",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.long_list_tl",
     "1 < \<^bold>|?us\<^bold>| ==> tl ?us ~= \<epsilon>",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("CoWBasic.tl_lists", "?us : lists ?A ==> tl ?us : lists ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("CoWBasic.rev_sing_power", "?x \<in> [?a]* ==> rev ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 1))),
    ("CoWBasic.tl_set", "?x : set (tl ?a) ==> ?x : set ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))
           ))),
    ("CoWBasic.prim_conjug",
     "[| primitive ?u; ?u \<sim> ?v |] ==> primitive ?v",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("CoWBasic.border_conjug",
     "?x \<le>b ?w ==>
      ?w\<^sup><\<inverse>?x  \<sim> ?x\<inverse>\<^sup>>?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.border_per",
     "?x \<le>b ?w ==>
      periodN ?w (\<^bold>|?w\<^bold>| - \<^bold>|?x\<^bold>|)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("CoWBasic.border_per_root",
     "?x \<le>b ?w ==> ?w \<le>p ?w\<^sup><\<inverse>?x  \<cdot> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 0))
           ))),
    ("CoWBasic.conjug_nemp_iff",
     "?u \<sim> ?v ==> (?u = \<epsilon>) = (?v = \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_bimplication
        (template_equation (template_var 1, template_hole 0),
         template_equation (template_var 0, template_hole 0)))),
    ("CoWBasic.periodN_D3",
     "periodN ?w ?n ==> ?w \<le>p take ?n ?w \<cdot> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 1))
           ))),
    ("CoWBasic.root_pow_root", "?v \<in> ?u* ==> ?v \<^sup>@ ?n \<in> ?u*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("CoWBasic.zero_exp", "?n = 0 ==> ?r \<^sup>@ ?n = \<epsilon>",
     template_implication
      ([template_equation (template_var 1, template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 1),
         template_hole 1))),
    ("CoWBasic.pow_non_prim", "1 < ?k ==> ~ primitive (?w \<^sup>@ ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 0),
                     template_var 0),
                   template_var 1))
               )
           ))),
    ("CoWBasic.le_suf_drop", "?i <= ?j ==> drop ?j ?w \<le>s drop ?i ?w",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.le_take_is_prefix",
     "?k <= ?n ==> take ?k ?ws \<le>p take ?n ?ws",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.prefD", "?u \<le>p ?v ==> EX z. ?v = ?u \<cdot> z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("CoWBasic.lq_pref",
     "?u \<le>p ?v ==> ?u \<cdot> ?u\<inverse>\<^sup>>?v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("CoWBasic.pref_cancel'",
     "?u \<le>p ?v ==> ?z \<cdot> ?u \<le>p ?z \<cdot> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.pref_drop", "?u \<le>p ?v ==> drop ?p ?u \<le>p drop ?p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.sufD", "?u \<le>s ?v ==> EX z. z \<cdot> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("CoWBasic.rq_suf",
     "?u \<le>s ?v ==> ?v\<^sup><\<inverse>?u  \<cdot> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("CoWBasic.suf_cancel'",
     "?u \<le>s ?w ==> ?u \<cdot> ?v \<le>s ?w \<cdot> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.incomp_neq",
     "~ ?u \<bowtie> ?v ==> mismatch_pair ?u ?v ~: Id",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)
               )
           ))),
    ("CoWBasic.pref_nemp",
     "?u ~= \<epsilon> ==> ?u \<cdot> ?v ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("CoWBasic.primroot_shorter_eq",
     "?u ~= \<epsilon> ==>
      \<^bold>|\<rho> ?u\<^bold>| <= \<^bold>|?u\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("CoWBasic.suf_nemp",
     "?v ~= \<epsilon> ==> ?u \<cdot> ?v ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_hole 1)
           ))),
    ("CoWBasic.hd_pref", "?w ~= \<epsilon> ==> [hd ?w] \<le>p ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_hole 3)),
             template_var 0)
           ))),
    ("CoWBasic.sing_word", "\<^bold>|?us\<^bold>| = 1 ==> [hd ?us] = ?us",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0),
         template_var 0))),
    ("CoWBasic.sing_word_concat",
     "\<^bold>|?us\<^bold>| = 1 ==> [concat ?us] = ?us",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0),
         template_var 0))),
    ("CoWBasic.take_len",
     "?p <= \<^bold>|?w\<^bold>| ==> \<^bold>|take ?p ?w\<^bold>| = ?p",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("CoWBasic.per_one", "?w \<le>p [?a]\<^sup>\<omega> ==> ?w \<in> [?a]*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))
           ))),
    ("CoWBasic.rotate_comp_eq",
     "?w \<bowtie> rotate ?n ?w ==> rotate ?n ?w = ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_var 1))),
    ("CoWBasic.per_one'",
     "?w \<in> [?a]* ==> ?w \<le>p [?a]\<^sup>\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))
           ))),
    ("CoWBasic.lqI", "?u \<cdot> ?z = ?v ==> ?u\<inverse>\<^sup>>?v = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("CoWBasic.rqI", "?z \<cdot> ?u = ?v ==> ?v\<^sup><\<inverse>?u  = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("CoWBasic.per_drop_exp",
     "?u \<le>p ?r \<^sup>@ ?m\<^sup>\<omega> ==>
      ?u \<le>p ?r\<^sup>\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 1)
           ))),
    ("CoWBasic.comp_prefs_comp",
     "?u \<cdot> ?z \<bowtie> ?v \<cdot> ?w ==> ?u \<bowtie> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3), template_var 1)
           ))),
    ("CoWBasic.comp_cancel",
     "?z \<cdot> ?u \<bowtie> ?z \<cdot> ?v ==> ?u \<bowtie> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("CoWBasic.comp_sufs_comp",
     "?z \<cdot> ?u \<bowtie>\<^sub>s ?w \<cdot> ?v ==>
      ?u \<bowtie>\<^sub>s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("CoWBasic.conjugI1", "?u \<cdot> ?r = ?r \<cdot> ?v ==> ?u \<sim> ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.eqd_comp",
     "?x \<cdot> ?y = ?u \<cdot> ?v ==> ?x \<bowtie> ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("CoWBasic.facI'", "?a \<cdot> ?u \<cdot> ?b = ?w ==> ?u \<le>f ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.fac_triv",
     "?p \<cdot> ?x \<cdot> ?q = ?x ==> ?p = \<epsilon>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_var 1)],
       template_equation (template_var 2, template_hole 0))),
    ("CoWBasic.fac_triv'",
     "?p \<cdot> ?x \<cdot> ?q = ?x ==> ?q = \<epsilon>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_var 1)],
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.lcp_len",
     "\<^bold>|?u\<^bold>| <= \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ==>
      ?u \<le>p ?v",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.drop_emp_nel", "?u : ?S\<^sub>+ ==> ?u : ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), template_var 0)
           ))),
    ("CoWBasic.pref_cancel",
     "?z \<cdot> ?u \<le>p ?z \<cdot> ?v ==> ?u \<le>p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("CoWBasic.take_pp_less", "take ?k ?ws <p take ?n ?ws ==> ?k < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("CoWBasic.suf_cancel",
     "?u \<cdot> ?v \<le>s ?w \<cdot> ?v ==> ?u \<le>s ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("CoWBasic.morph_compose",
     "[| morphism ?f; morphism ?g |] ==> morphism (?f o ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.prim_triv_root",
     "[| primitive ?u; ?u \<in> ?t* |] ==> ?t = ?u",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("CoWBasic.funpow_times_power",
     "(\<cdot>) ?x ^^ ?f ?x = (\<cdot>) (?x \<^sup>@ ?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 0),
           template_app (template_var 1, template_var 0))))),
    ("CoWBasic.sing_pow_empty",
     "([?a] \<^sup>@ ?n = \<epsilon>) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 4)),
           template_var 0),
         template_hole 4),
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.rev_pow", "rev (?x \<^sup>@ ?m) = rev ?x \<^sup>@ ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("CoWBasic.lcp_take_eq",
     "take \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ?u =
      take \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("CoWBasic.power3_eq_cube",
     "?a \<^sup>@ 3 = (?a \<cdot> ?a) \<cdot> ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 0)),
         template_var 0))),
    ("CoWBasic.lcp_ext_left",
     "?z \<cdot> ?u \<and>\<^sub>p ?z \<cdot> ?v =
      ?z \<cdot> (?u \<and>\<^sub>p ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("CoWBasic.unbordered_border",
     "bordered ?w ==> EX x. x \<le>b ?w & ~ bordered x",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CoWBasic.lq_drop",
     "?u \<le>p ?v ==>
      ?u\<inverse>\<^sup>>?v = drop \<^bold>|?u\<^bold>| ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("CoWBasic.sprefD", "?u <p ?v ==> ?u \<le>p ?v & ?u ~= ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("CoWBasic.ssufD", "?u <s ?v ==> ?u \<le>s ?v & ?u ~= ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("CoWBasic.bij_lists",
     "bij_betw ?f ?X ?Y ==> bij_betw (map ?f) (lists ?X) (lists ?Y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.hd_pref'", "?w ~= \<epsilon> ==> [?w ! 0] \<le>p ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_hole 4)),
             template_var 0)
           ))),
    ("CoWBasic.lcp_len'",
     "~ ?u \<le>p ?v ==>
      \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| < \<^bold>|?u\<^bold>|",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("CoWBasic.len_le_concat",
     "\<epsilon> ~: set ?ws ==>
      \<^bold>|?ws\<^bold>| <= \<^bold>|concat ?ws\<^bold>|",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.lcp_distinct_hd",
     "hd ?u ~= hd ?v ==> ?u \<and>\<^sub>p ?v = \<epsilon>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("CoWBasic.concat_sing", "?s = [hd ?s] ==> concat ?s = hd ?s",
     template_implication
      ([template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0)),
            template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 3, template_var 0)))),
    ("CoWBasic.drop_emp_nel", "?u : ?S\<^sub>+ ==> ?u ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_hole 2)))
            )],
       template_negation
        (template_equation (template_var 1, template_hole 3)))),
    ("CoWBasic.border_trans",
     "[| ?t \<le>b ?x; ?x \<le>b ?w |] ==> ?t \<le>b ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.conjug_trans",
     "[| ?u \<sim> ?v; ?v \<sim> ?w |] ==> ?u \<sim> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.per_root_same_prefix",
     "[| ?w \<le>p ?r\<^sup>\<omega>; ?w' \<le>p ?r\<^sup>\<omega> |]
      ==> ?w \<bowtie> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 2)
           ))),
    ("CoWBasic.per_root_trans",
     "[| ?w \<le>p ?u\<^sup>\<omega>; ?u \<in> ?t* |]
      ==> ?w \<le>p ?t\<^sup>\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("CoWBasic.comp_monotone",
     "[| ?w \<bowtie> ?r; ?u \<le>p ?w |] ==> ?u \<bowtie> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("CoWBasic.root_trans",
     "[| ?v \<in> ?u*; ?u \<in> ?t* |] ==> ?v \<in> ?t*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.pref_antisym",
     "[| ?a \<le>p ?b; ?b \<le>p ?a |] ==> ?a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.pref_trans",
     "[| ?a \<le>p ?b; ?b \<le>p ?c |] ==> ?a \<le>p ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.pref_suf_fac",
     "[| ?r \<le>p ?v; ?u \<le>s ?r |] ==> ?u \<le>f ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.ruler'",
     "[| ?xs\<^sub>1 \<le>p ?ys; ?xs\<^sub>2 \<le>p ?ys |]
      ==> ?xs\<^sub>1 \<bowtie> ?xs\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.suf_trans",
     "[| ?a \<le>s ?b; ?b \<le>s ?c |] ==> ?a \<le>s ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.suf_pref_fac",
     "[| ?r \<le>s ?v; ?u \<le>p ?r |] ==> ?u \<le>f ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.suf_pref_eq", "[| ?s \<le>s ?p; ?p \<le>p ?s |] ==> ?p = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 0, template_var 1))),
    ("CoWBasic.power_Suc2",
     "?a \<^sup>@ Suc ?n = ?a \<^sup>@ ?n \<cdot> ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 1),
             template_var 0)),
         template_var 1))),
    ("CoWBasic.pow_Suc_list",
     "?u \<^sup>@ Suc ?n = ?u \<cdot> ?u \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.pow_Suc2_list",
     "?u \<^sup>@ Suc ?n = ?u \<^sup>@ ?n \<cdot> ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 1),
             template_var 0)),
         template_var 1))),
    ("CoWBasic.concat_sing_pow",
     "concat ([?a] \<^sup>@ ?k) = ?a \<^sup>@ ?k",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 5)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0))),
    ("CoWBasic.rotate_root_self",
     "rotate \<^bold>|?r\<^bold>| (?r \<^sup>@ ?k) = ?r \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0))),
    ("CoWBasic.per_exp",
     "?u \<le>p ?r\<^sup>\<omega> ==> ?u \<le>p ?r \<^sup>@ ?k \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_hole 2),
                     template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("CoWBasic.root_len",
     "?u \<in> ?q* ==>
      EX k. \<^bold>|?u\<^bold>| = k * \<^bold>|?q\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CoWBasic.fac_pref_suf",
     "?u \<le>f ?v ==> EX p. p \<le>p ?v & ?u \<le>s p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CoWBasic.fac_suf_pref",
     "?u \<le>f ?v ==> EX p. p \<le>s ?v & ?u \<le>p p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CoWBasic.incomp_ext",
     "~ ?w1.0 \<bowtie> ?w2.0 ==>
      ~ ?w1.0 \<cdot> ?z \<bowtie> ?w2.0 \<cdot> ?z'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))
               )
           ))),
    ("CoWBasic.suf_incomp_ext",
     "~ ?w1.0 \<bowtie>\<^sub>s ?w2.0 ==>
      ~ ?z \<cdot> ?w1.0 \<bowtie>\<^sub>s ?z' \<cdot> ?w2.0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))
               )
           ))),
    ("CoWBasic.long_pow_exp",
     "?r ~= \<epsilon> ==> ?m <= \<^bold>|?r \<^sup>@ ?m\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 4),
                 template_hole 0),
               template_var 1),
             template_var 0))))),
    ("CoWBasic.primroot_take",
     "?u ~= \<epsilon> ==> \<rho> ?u = take \<^bold>|\<rho> ?u\<^bold>| ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0))),
           template_var 0)))),
    ("CoWBasic.root_conjug",
     "?u \<le>p ?r \<cdot> ?u ==>
      ?u\<inverse>\<^sup>>(?r \<cdot> ?u) \<sim> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 1))),
             template_var 0)
           ))),
    ("CoWBasic.len_after_drop",
     "?p + ?q <= \<^bold>|?w\<^bold>| ==>
      ?q <= \<^bold>|drop ?p ?w\<^bold>|",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CoWBasic.lcp_eq",
     "\<^bold>|?u\<^bold>| = \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ==>
      ?u = ?u \<and>\<^sub>p ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("CoWBasic.conj_len",
     "?p \<cdot> ?x = ?x \<cdot> ?s ==>
      \<^bold>|?p\<^bold>| = \<^bold>|?s\<^bold>|",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.pref_prod_pref'",
     "?u \<le>p ?z \<cdot> ?u \<cdot> ?w ==> ?u \<le>p ?z \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("CoWBasic.pref_prod_root",
     "?u \<le>p ?r \<^sup>@ ?k ==> ?u \<le>p ?r \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("CoWBasic.suf_prod_suf'",
     "?u \<le>s ?w \<cdot> ?u \<cdot> ?z ==> ?u \<le>s ?u \<cdot> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.suf_prod_root",
     "?u \<le>s ?r \<^sup>@ ?k ==> ?u \<le>s ?u \<cdot> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("CoWBasic.incomp_cancel",
     "~ ?p \<cdot> ?u \<bowtie> ?p \<cdot> ?v ==> ~ ?u \<bowtie> ?v",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)
               )
           ))),
    ("CoWBasic.nemp_pow", "?t \<^sup>@ ?m ~= \<epsilon> ==> ?m ~= 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2),
                  template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("CoWBasic.nemp_pow'",
     "?t \<^sup>@ ?m ~= \<epsilon> ==> ?t ~= \<epsilon>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 1)))),
    ("CoWBasic.lists_drop_emp", "?us : lists ?C\<^sub>+ ==> ?us : lists ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 4, template_var 0))
           ))),
    ("CoWBasic.concat_pp_less",
     "concat (take ?k ?ws) <p concat (take ?n ?ws) ==> ?k < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)))
            )],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("CoWBasic.pref_comp_not_pref",
     "[| ?u \<bowtie> ?v; ~ ?v \<le>p ?u |] ==> ?u <p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.pref_comp_not_spref",
     "[| ?u \<bowtie> ?v; ~ ?u <p ?v |] ==> ?v \<le>p ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.suf_comp_not_ssuf",
     "[| ?u \<bowtie>\<^sub>s ?v; ~ ?u <s ?v |] ==> ?v \<le>s ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.suf_comp_not_suf",
     "[| ?u \<bowtie>\<^sub>s ?v; ~ ?v \<le>s ?u |] ==> ?u <s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.npI",
     "[| ?u ~= \<epsilon>; ?u \<le>p ?v |] ==> ?u \<le>np ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.nsI",
     "[| ?u ~= \<epsilon>; ?u \<le>s ?v |] ==> ?u \<le>ns ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.power_commutes",
     "?a \<^sup>@ ?n \<cdot> ?a = ?a \<cdot> ?a \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.pow_commutes_list",
     "?u \<^sup>@ ?n \<cdot> ?u = ?u \<cdot> ?u \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.rotate_pow_comm",
     "rotate ?n (?u \<^sup>@ ?k) = rotate ?n ?u \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.sing_pow_lists", "?a : ?A ==> [?a] \<^sup>@ ?n : lists ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_hole 3)),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("CoWBasic.lq_len",
     "?r \<le>p ?s ==>
      \<^bold>|?r\<^bold>| + \<^bold>|?r\<inverse>\<^sup>>?s\<^bold>| =
      \<^bold>|?s\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 1, template_var 0)))),
    ("CoWBasic.rev_lq'",
     "?r \<le>p ?s ==>
      rev (?r\<inverse>\<^sup>>?s) = rev ?s\<^sup><\<inverse>rev ?r ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("CoWBasic.add_nth_pref",
     "?u <p ?w ==> ?u \<cdot> [?w ! \<^bold>|?u\<^bold>|] \<le>p ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_app (template_hole 1, template_var 1))),
                   template_hole 0))),
             template_var 0)
           ))),
    ("CoWBasic.rq_len",
     "?r \<le>s ?s ==>
      \<^bold>|?r\<^bold>| + \<^bold>|?s\<^sup><\<inverse>?r \<^bold>| =
      \<^bold>|?s\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app (template_hole 1, template_var 0)))),
    ("CoWBasic.hd_pow", "?n ~= 0 ==> hd (?u \<^sup>@ ?n) = hd ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("CoWBasic.hd_prod",
     "?u ~= \<epsilon> ==> (?u \<cdot> ?v) ! 0 = ?u ! 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_hole 0)))),
    ("CoWBasic.primroot_rotate_comm",
     "?w ~= \<epsilon> ==> \<rho> (rotate ?n ?w) = rotate ?n (\<rho> ?w)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 1, template_var 1))))),
    ("CoWBasic.hd_word'", "?w ~= \<epsilon> ==> [hd ?w] \<cdot> tl ?w = ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 4)),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("CoWBasic.hd_concat_tl",
     "?ws ~= \<epsilon> ==> hd ?ws \<cdot> concat (tl ?ws) = concat ?ws",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 1, template_var 0)))),
    ("CoWBasic.concat_butlast_last",
     "?ws ~= \<epsilon> ==>
      concat (butlast ?ws) \<cdot> last ?ws = concat ?ws",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("CoWBasic.short_take_append",
     "?n <= \<^bold>|?u\<^bold>| ==> take ?n (?u \<cdot> ?v) = take ?n ?u",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("CoWBasic.drop_take_inv",
     "?n <= \<^bold>|?u\<^bold>| ==> drop ?n (take ?n ?u \<cdot> ?w) = ?w",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_var 0))),
    ("CoWBasic.lcp_first_letters",
     "?u ! 0 ~= ?v ! 0 ==> ?u \<and>\<^sub>p ?v = \<epsilon>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("CoWBasic.sing_pow_palindrom", "?w = [?a] \<^sup>@ ?k ==> rev ?w = ?w",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_hole 3)),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 2))),
    ("CoWBasic.rotate_back",
     "(!!m. rotate m (rotate ?n ?u) = ?u ==> ?thesis) ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.root_is_take",
     "[| ?w \<le>p ?r\<^sup>\<omega>;
         \<^bold>|?r\<^bold>| <= \<^bold>|?w\<^bold>| |]
      ==> ?r \<le>p ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.pref_comp_eq",
     "[| ?u \<bowtie> ?v; \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.pcomp_shorter",
     "[| ?v \<bowtie> ?w; \<^bold>|?v\<^bold>| <= \<^bold>|?w\<^bold>| |]
      ==> ?v \<le>p ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.add_roots",
     "[| ?w \<in> ?z*; ?w' \<in> ?z* |] ==> ?w \<cdot> ?w' \<in> ?z*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("CoWBasic.sub_lists_mono",
     "[| ?A <= ?B; ?x : lists ?A |] ==> ?x : lists ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("CoWBasic.pref_pref_lcp",
     "[| ?ps \<le>p ?xs; ?ps \<le>p ?ys |]
      ==> ?ps \<le>p ?xs \<and>\<^sub>p ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.pref_same_len",
     "[| ?u \<le>p ?v; \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.sprefI2",
     "[| ?u \<le>p ?v; \<^bold>|?u\<^bold>| < \<^bold>|?v\<^bold>| |]
      ==> ?u <p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.long_pref",
     "[| ?u \<le>p ?v; \<^bold>|?v\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.fac_len_eq",
     "[| ?u \<le>f ?v; \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.suf_same_len",
     "[| ?u \<le>s ?v; \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.ssufI2",
     "[| ?u \<le>s ?v; \<^bold>|?u\<^bold>| < \<^bold>|?v\<^bold>| |]
      ==> ?u <s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.long_suf",
     "[| ?u \<le>s ?v; \<^bold>|?v\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.root_nemp",
     "[| ?u ~= \<epsilon>; ?u \<in> ?r* |] ==> ?r ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 1)))),
    ("CoWBasic.root_periodN",
     "[| ?w ~= \<epsilon>; ?w \<le>p ?r\<^sup>\<omega> |]
      ==> periodN ?w \<^bold>|?r\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.all_long_pers",
     "[| ?w ~= \<epsilon>; \<^bold>|?w\<^bold>| <= ?n |] ==> periodN ?w ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.root_pref_cancel'",
     "[| ?x \<cdot> ?y \<in> ?t*; ?x \<in> ?t* |] ==> ?y \<in> ?t*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("CoWBasic.all_set_sing_pow",
     "(ALL b. b : set ?w --> b = ?a) = ?w \<in> [?a]*",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CoWBasic.lq_code",
     "(?a # ?u)\<inverse>\<^sup>>(?b # ?v) =
      (if ?a = ?b then ?u\<inverse>\<^sup>>?v else undefined)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("CoWBasic.power4_eq_xxxx",
     "?x \<^sup>@ 4 = ((?x \<cdot> ?x) \<cdot> ?x) \<cdot> ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_hole 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 0)),
             template_var 0)),
         template_var 0))),
    ("CoWBasic.rotate_pow_self",
     "rotate (?l * \<^bold>|?u\<^bold>|) (?u \<^sup>@ ?k) = ?u \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0))),
    ("CoWBasic.border_conjug_eq",
     "?x \<le>b ?w ==>
      ?w\<^sup><\<inverse>?x  \<cdot> ?w =
      ?w \<cdot> ?x\<inverse>\<^sup>>?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("CoWBasic.conjug_add_exp",
     "?u \<sim> ?v ==> ?u \<^sup>@ ?k \<sim> ?v \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.sing_pow", "?i < ?m ==> ([?a] \<^sup>@ ?m) ! ?i = ?a",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 2)),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("CoWBasic.pref_exps_pow",
     "?k <= ?l ==> ?r \<^sup>@ ?k \<le>p ?r \<^sup>@ ?l",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.suf_exps_pow",
     "?k <= ?l ==> ?r \<^sup>@ ?k \<le>s ?r \<^sup>@ ?l",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.lq_the",
     "?u \<le>p ?v ==> ?u\<inverse>\<^sup>>?v = (THE z. ?u \<cdot> z = ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("CoWBasic.lq_reassoc",
     "?u \<le>p ?v ==>
      ?u\<inverse>\<^sup>>?v \<cdot> ?w =
      ?u\<inverse>\<^sup>>(?v \<cdot> ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("CoWBasic.rq_take",
     "?u \<le>s ?v ==>
      ?v\<^sup><\<inverse>?u  =
      take (\<^bold>|?v\<^bold>| - \<^bold>|?u\<^bold>|) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("CoWBasic.rq_reassoc",
     "?u \<le>s ?v ==>
      ?w \<cdot> ?v\<^sup><\<inverse>?u  =
      (?w \<cdot> ?v)\<^sup><\<inverse>?u ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("CoWBasic.incomp_lcp_len",
     "~ ?u \<bowtie> ?v ==>
      \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|
      < min \<^bold>|?u\<^bold>| \<^bold>|?v\<^bold>|",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("CoWBasic.hd_sing_power", "?k ~= 0 ==> hd ([?a] \<^sup>@ ?k) = ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 2)),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.take_root",
     "?k ~= 0 ==> ?r = take \<^bold>|?r\<^bold>| (?r \<^sup>@ ?k)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0),
             template_var 1))))),
    ("CoWBasic.long_power",
     "?r ~= \<epsilon> ==>
      \<^bold>|?x\<^bold>|
      <= \<^bold>|?r \<^sup>@ \<^bold>|?x\<^bold>|\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 5),
                 template_hole 0),
               template_var 1),
             template_app (template_hole 3, template_var 0)))))),
    ("CoWBasic.per_exp_pref",
     "?u \<le>p ?r \<cdot> ?u ==> ?u \<le>p ?r \<^sup>@ ?k \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_hole 2),
                     template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("CoWBasic.per_exp_suf",
     "?u \<le>s ?u \<cdot> ?r ==> ?u \<le>s ?u \<cdot> ?r \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("CoWBasic.conjug_lq",
     "?x \<cdot> ?z = ?z \<cdot> ?y ==>
      ?y = ?z\<inverse>\<^sup>>(?x \<cdot> ?z)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("CoWBasic.conjug_rq",
     "?z \<cdot> ?x = ?y \<cdot> ?z ==>
      ?y = (?z \<cdot> ?x)\<^sup><\<inverse>?z ",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 2))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 2)))),
    ("CoWBasic.suf_sing_power",
     "?w \<le>s [?a] \<^sup>@ ?m ==> ?w \<in> [?a]*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 3)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 3))
           ))),
    ("CoWBasic.prim_exp_one",
     "[| primitive ?u; ?r \<^sup>@ ?k = ?u |] ==> ?k = 1",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_var 1),
            template_var 0),
          template_var 2)],
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.prim_exp_eq",
     "[| primitive ?u; ?r \<^sup>@ ?k = ?u |] ==> ?u = ?r",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0),
              template_var 1),
            template_var 0),
          template_var 2)],
       template_equation (template_var 2, template_var 1))),
    ("CoWBasic.conjug_prim_root",
     "[| ?u \<sim> ?v; ?u ~= \<epsilon> |] ==> \<rho> ?u \<sim> \<rho> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.root_divisor",
     "[| periodN ?w ?k; ?k dvd \<^bold>|?w\<^bold>| |]
      ==> ?w \<in> take ?k ?w*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.per_mult",
     "[| periodN ?w ?n; ?m ~= 0 |] ==> periodN ?w (?m * ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.periodN_drop",
     "[| periodN ?w ?p; ?p < \<^bold>|?w\<^bold>| |]
      ==> periodN (drop ?p ?w) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("CoWBasic.pref_ext_nemp",
     "[| ?r \<le>p ?u; ?v ~= \<epsilon> |] ==> ?r <p ?u \<cdot> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.pref_hd_eq",
     "[| ?u \<le>p ?v; ?u ~= \<epsilon> |] ==> hd ?u = hd ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.suf_ext_nem",
     "[| ?r \<le>s ?u; ?v ~= \<epsilon> |] ==> ?r <s ?v \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.primroot_root",
     "[| ?u ~= \<epsilon>; ?u \<in> ?q* |] ==> \<rho> ?q = \<rho> ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("CoWBasic.root_shorter_eq",
     "[| ?u ~= \<epsilon>; ?u \<in> ?r* |]
      ==> \<^bold>|?r\<^bold>| <= \<^bold>|?u\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("CoWBasic.lists_hd",
     "[| ?us ~= \<epsilon>; ?us : lists ?Q |] ==> hd ?us : ?Q",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("CoWBasic.per_sing_one",
     "[| ?w ~= \<epsilon>; ?w \<le>p [?a]\<^sup>\<omega> |]
      ==> periodN ?w 1",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)
           ))),
    ("CoWBasic.sprefI1",
     "[| ?v = ?u \<cdot> ?z; ?z ~= \<epsilon> |] ==> ?u <p ?v",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("CoWBasic.ssufI1",
     "[| ?u \<cdot> ?v = ?w; ?u ~= \<epsilon> |] ==> ?v <s ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.sprefI1'",
     "[| ?u \<cdot> ?z = ?v; ?z ~= \<epsilon> |] ==> ?u <p ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.per_rootI",
     "[| ?u \<le>p ?r \<cdot> ?u; ?r ~= \<epsilon> |]
      ==> ?u \<le>p ?r\<^sup>\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.sing_pow_hd_tl",
     "?c # ?w \<in> [?a]* = (?c = ?a & ?w \<in> [?a]*)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))
           ))),
    ("CoWBasic.rotate_class_rotate'",
     "(EX n. rotate n ?w = ?u) = (EX n. rotate n (rotate ?l ?w) = ?u)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("CoWBasic.comm_root",
     "(?x \<cdot> ?y = ?y \<cdot> ?x) = (EX t. ?x \<in> t* & ?y \<in> t*)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app (template_hole 2, t_empty))),
    ("CoWBasic.power_mult",
     "?a \<^sup>@ (?m * ?n) = (?a \<^sup>@ ?m) \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.pow_mult_list",
     "?u \<^sup>@ (?m * ?n) = (?u \<^sup>@ ?m) \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.mismatch_pair_lcp",
     "mismatch_pair ?u ?v =
      (?u ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|,
       ?v ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("CoWBasic.mismatch_ext_left",
     "~ ?u \<bowtie> ?v ==>
      mismatch_pair ?u ?v = mismatch_pair (?p \<cdot> ?u) (?p \<cdot> ?v)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("CoWBasic.mismatch_ext_right",
     "~ ?u \<bowtie> ?v ==>
      mismatch_pair ?u ?v = mismatch_pair (?u \<cdot> ?z) (?v \<cdot> ?w)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CoWBasic.nonzero_pow_emp",
     "?m ~= 0 ==> (?u \<^sup>@ ?m = \<epsilon>) = (?u = \<epsilon>)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0),
             template_var 1),
           template_hole 1),
         template_equation (template_var 0, template_hole 1)))),
    ("CoWBasic.long_power'",
     "?r ~= \<epsilon> ==>
      \<^bold>|?x\<^bold>|
      < \<^bold>|?r \<^sup>@ Suc \<^bold>|?x\<^bold>|\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_inequation
        (less_than, template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 6),
                 template_hole 1),
               template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0))))))),
    ("CoWBasic.nemp_emp_power",
     "?u ~= \<epsilon> ==> (?u \<^sup>@ ?m = \<epsilon>) = (?m = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 5),
                 template_hole 2),
               template_var 1),
             template_var 0),
           template_hole 5),
         template_equation (template_var 0, template_hole 0)))),
    ("CoWBasic.add_nth",
     "?n < \<^bold>|?w\<^bold>| ==> take ?n ?w \<cdot> [?w ! ?n] \<le>p ?w",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 1)),
                   template_hole 0))),
             template_var 0)
           ))),
    ("CoWBasic.sing_pow_exp",
     "?w \<in> [?a]* ==> ?w = [?a] \<^sup>@ \<^bold>|?w\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 4),
               template_hole 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4)),
           template_app (template_hole 0, template_var 1))))),
    ("CoWBasic.concat_sing_list_pow'",
     "?ws : lists {?u} ==> concat ?ws = ?u \<^sup>@ \<^bold>|?ws\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 6)))
            )],
       template_equation
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("CoWBasic.pref_pow_take",
     "?u \<le>p ?r \<^sup>@ ?k ==>
      ?u \<le>p take \<^bold>|?r\<^bold>| ?u \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 2)),
               template_var 2))
           ))),
    ("CoWBasic.pref_pow_ext",
     "?x \<le>p ?r \<^sup>@ ?k ==> ?x \<le>p ?r \<^sup>@ Suc ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("CoWBasic.suf_pow_ext",
     "?x \<le>s ?r \<^sup>@ ?k ==> ?x \<le>s ?r \<^sup>@ Suc ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("CoWBasic.commD",
     "[| ?x \<in> ?t*; ?y \<in> ?t* |] ==> ?x \<cdot> ?y = ?y \<cdot> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("CoWBasic.suf_lq_pref_rq",
     "[| ?s \<le>p ?u; ?r \<le>s ?s\<inverse>\<^sup>>?u |]
      ==> ?s \<le>p ?u\<^sup><\<inverse>?r ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.pref_lq",
     "[| ?u \<le>p ?v; ?v \<le>p ?w |]
      ==> ?u\<inverse>\<^sup>>?v \<le>p ?u\<inverse>\<^sup>>?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.spref_lq",
     "[| ?u \<le>p ?v; ?v <p ?w |]
      ==> ?u\<inverse>\<^sup>>?v <p ?u\<inverse>\<^sup>>?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.pref_pref_lcp'",
     "[| ?w \<le>p ?r; ?w' \<le>p ?s |]
      ==> ?w \<and>\<^sub>p ?w' \<le>p ?r \<and>\<^sub>p ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.ruler",
     "[| ?xs\<^sub>1 \<le>p ?ys; ?xs\<^sub>2 \<le>p ?ys |]
      ==> ?xs\<^sub>1 \<le>p ?xs\<^sub>2 | ?xs\<^sub>2 \<le>p ?xs\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))
           ))),
    ("CoWBasic.pref_rq_suf_lq",
     "[| ?s \<le>s ?u; ?r \<le>p ?u\<^sup><\<inverse>?s  |]
      ==> ?s \<le>s ?r\<inverse>\<^sup>>?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.ssuf_rq",
     "[| ?u \<le>s ?v; ?v <s ?w |]
      ==> ?v\<^sup><\<inverse>?u  <s ?w\<^sup><\<inverse>?u ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("CoWBasic.suf_rq",
     "[| ?u \<le>s ?v; ?v \<le>s ?w |]
      ==> ?v\<^sup><\<inverse>?u  \<le>s ?w\<^sup><\<inverse>?u ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("CoWBasic.suf_ruler",
     "[| ?xs\<^sub>1 \<le>s ?ys; ?xs\<^sub>2 \<le>s ?ys |]
      ==> ?xs\<^sub>1 \<le>s ?xs\<^sub>2 | ?xs\<^sub>2 \<le>s ?xs\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))
           ))),
    ("CoWBasic.primroot_shorter_root",
     "[| ?u ~= \<epsilon>; ?u \<in> ?q* |]
      ==> \<^bold>|\<rho> ?u\<^bold>| <= \<^bold>|?q\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("CoWBasic.flatten_lists",
     "[| ?G <= lists ?B; ?xs : lists ?G |] ==> concat ?xs : lists ?B",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 4, template_var 1))
           ))),
    ("CoWBasic.sing_fac_pow",
     "[| ?w \<in> [?a]*; ?v \<le>f ?w |] ==> ?v \<in> [?a]*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))
           ))),
    ("CoWBasic.conjugI",
     "[| ?r \<cdot> ?s = ?u; ?s \<cdot> ?r = ?v |] ==> ?u \<sim> ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.pref_keeps_root",
     "[| ?u \<le>p ?r \<cdot> ?u; ?v \<le>p ?u |]
      ==> ?v \<le>p ?r \<cdot> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.pref_equal",
     "[| ?u \<le>p ?v \<cdot> ?w;
         \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 2, template_var 1))),
    ("CoWBasic.pref_prod_short'",
     "[| ?u \<le>p ?v \<cdot> ?w;
         \<^bold>|?u\<^bold>| < \<^bold>|?v\<^bold>| |]
      ==> ?u <p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("CoWBasic.pref_prod_short",
     "[| ?u \<le>p ?v \<cdot> ?w;
         \<^bold>|?u\<^bold>| <= \<^bold>|?v\<^bold>| |]
      ==> ?u \<le>p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 1)
           ))),
    ("CoWBasic.pref_prod_long",
     "[| ?u \<le>p ?v \<cdot> ?w;
         \<^bold>|?v\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?v \<le>p ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 2)
           ))),
    ("CoWBasic.pref_prod_pref",
     "[| ?u \<le>p ?z \<cdot> ?w; ?u \<le>p ?w |]
      ==> ?u \<le>p ?z \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("CoWBasic.pref_prolong",
     "[| ?w \<le>p ?z \<cdot> ?r; ?r \<le>p ?s |]
      ==> ?w \<le>p ?z \<cdot> ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.suf_keeps_root",
     "[| ?u \<le>s ?u \<cdot> ?r; ?v \<le>s ?u |]
      ==> ?v \<le>s ?v \<cdot> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.suf_prod_short'",
     "[| ?u \<le>s ?w \<cdot> ?v;
         \<^bold>|?u\<^bold>| < \<^bold>|?v\<^bold>| |]
      ==> ?u <s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.suf_prod_short",
     "[| ?u \<le>s ?w \<cdot> ?v;
         \<^bold>|?u\<^bold>| <= \<^bold>|?v\<^bold>| |]
      ==> ?u \<le>s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("CoWBasic.suf_prod_long",
     "[| ?u \<le>s ?w \<cdot> ?v;
         \<^bold>|?v\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?v \<le>s ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 2)
           ))),
    ("CoWBasic.suf_prod_suf",
     "[| ?u \<le>s ?w \<cdot> ?z; ?u \<le>s ?w |]
      ==> ?u \<le>s ?u \<cdot> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.suf_prolong",
     "[| ?w \<le>s ?r \<cdot> ?z; ?r \<le>s ?s |]
      ==> ?w \<le>s ?s \<cdot> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.per_pref",
     "?x \<le>p ?r\<^sup>\<omega> =
      ((EX k. ?x \<le>p ?r \<^sup>@ k) & ?r ~= \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 3)))
           ))),
    ("CoWBasic.rotate_pow_mod",
     "rotate ?n (?u \<^sup>@ ?k) =
      rotate (?n mod \<^bold>|?u\<^bold>|) (?u \<^sup>@ ?k)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.lcp_simps",
     "?x # ?xs \<and>\<^sub>p ?y # ?ys =
      (if ?x = ?y then ?x # (?xs \<and>\<^sub>p ?ys) else \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0))),
             template_hole 0)
           ))),
    ("CoWBasic.rotate_conj_pow",
     "rotate \<^bold>|?u\<^bold>| ((?u \<cdot> ?v) \<^sup>@ ?k) =
      (?v \<cdot> ?u) \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("CoWBasic.get_pow_exp",
     "?z <p ?t ==>
      ?m =
      \<^bold>|?t \<^sup>@ ?m \<cdot> ?z\<^bold>| div \<^bold>|?t\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_hole 2),
                       template_var 1),
                     template_var 0)),
                 template_var 2))),
           template_app (template_hole 3, template_var 1))))),
    ("CoWBasic.suf_take",
     "?u \<le>s ?v ==>
      take (\<^bold>|?u\<^bold>| - ?p) ?u \<le>s
      take (\<^bold>|?v\<^bold>| - ?p) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 0)),
               template_var 1))
           ))),
    ("CoWBasic.one_generated_list_power",
     "?u : lists {?x} ==> EX k. concat ?u = ?x \<^sup>@ k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 6)))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("CoWBasic.pref_pow_ext'",
     "?u \<le>p ?r \<^sup>@ ?k ==> ?u \<le>p ?r \<cdot> ?r \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0),
                   template_var 1),
                 template_var 0)))
           ))),
    ("CoWBasic.suf_pow_ext'",
     "?u \<le>s ?r \<^sup>@ ?k ==> ?u \<le>s ?r \<^sup>@ ?k \<cdot> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 0),
                     template_var 1),
                   template_var 0)),
               template_var 1))
           ))),
    ("CoWBasic.ext_per_left",
     "[| periodN ?w ?p; ?p <= \<^bold>|?w\<^bold>| |]
      ==> periodN (take ?p ?w \<cdot> ?w) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 1)),
             template_var 0)
           ))),
    ("CoWBasic.per_add_exp",
     "[| ?u \<le>p ?r\<^sup>\<omega>; ?m ~= 0 |]
      ==> ?u \<le>p ?r \<^sup>@ ?m\<^sup>\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.common_root_len_gcd",
     "[| ?u \<in> ?t*; ?v \<in> ?t* |]
      ==> \<^bold>|?t\<^bold>| dvd
          gcd \<^bold>|?u\<^bold>| \<^bold>|?v\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("CoWBasic.nemp_elem_setI",
     "[| ?u : ?S; ?u ~= \<epsilon> |] ==> ?u : ?S\<^sub>+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 3),
                 template_hole 0)))
           ))),
    ("CoWBasic.pref_share_take",
     "[| ?u \<le>p ?v; ?q <= \<^bold>|?u\<^bold>| |]
      ==> take ?q ?u = take ?q ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.pref_index",
     "[| ?u \<le>p ?w; ?i < \<^bold>|?u\<^bold>| |] ==> ?u ! ?i = ?w ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.nel_drop_emp",
     "[| ?u ~= \<epsilon>; ?u : ?S |] ==> ?u : ?S\<^sub>+",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 4),
                 template_hole 0)))
           ))),
    ("CoWBasic.nsI'",
     "[| ?u ~= \<epsilon>; EX z. z \<cdot> ?u = ?v |] ==> ?u \<le>ns ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.npI'",
     "[| ?u ~= \<epsilon>; EX z. ?u \<cdot> z = ?v |] ==> ?u \<le>np ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.take_nemp",
     "[| ?w ~= \<epsilon>; ?n ~= 0 |] ==> take ?n ?w ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_hole 3)
           ))),
    ("CoWBasic.set_nemp_concat_nemp",
     "[| ?ws ~= \<epsilon>; \<epsilon> ~: set ?ws |]
      ==> concat ?ws ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 0),
             template_hole 3)
           ))),
    ("CoWBasic.append_in_lists",
     "[| ?u : lists ?A; ?v : lists ?A |] ==> ?u \<cdot> ?v : lists ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("CoWBasic.sing_power'",
     "[| ?w \<in> [?a]*; ?i < \<^bold>|?w\<^bold>| |] ==> ?w ! ?i = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("CoWBasic.nonsing_concat_len",
     "[| \<^bold>|?us\<^bold>| ~= 1; concat ?us ~= \<epsilon> |]
      ==> 1 < \<^bold>|?us\<^bold>|",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_inequation
        (less_than, template_hole 4,
         template_app (template_hole 5, template_var 0)))),
    ("CoWBasic.periodN_fac",
     "[| periodN (?u \<cdot> ?w \<cdot> ?v) ?p; ?w ~= \<epsilon> |]
      ==> periodN ?w ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("CoWBasic.per_rootI'",
     "[| ?u \<le>p ?r \<^sup>@ ?k; ?r ~= \<epsilon> |]
      ==> ?u \<le>p ?r\<^sup>\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("CoWBasic.primrootI1",
     "[| ?u = ?r \<^sup>@ Suc ?k; primitive ?r |] ==> \<rho> ?u = ?r",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              template_var 1),
            template_app (template_hole 2, template_var 0))),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("CoWBasic.ruler_comp",
     "[| ?u \<le>p ?v; ?u' \<le>p ?v'; ?v \<bowtie> ?v' |]
      ==> ?u \<bowtie> ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("CoWBasic.suf_ruler_comp",
     "[| ?u \<le>s ?v; ?u' \<le>s ?v'; ?v \<bowtie>\<^sub>s ?v' |]
      ==> ?u \<bowtie>\<^sub>s ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("CoWBasic.prim_rootI",
     "[| ?u ~= \<epsilon>; ?u \<in> ?r*; primitive ?r |]
      ==> ?u \<in>\<^sub>p ?r *",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.last_no_split",
     "(?xs \<le>p ?ys \<cdot> [?y]) =
      (?xs = ?ys \<cdot> [?y] | ?xs \<le>p ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)))),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))
           ))),
    ("CoWBasic.dropWhile_sing_pow",
     "(dropWhile (%x. x = ?a) ?w = \<epsilon>) =
      (?w = [?a] \<^sup>@ \<^bold>|?w\<^bold>|)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_var 0),
         template_hole 4),
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 4),
               template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 4)),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.takeWhile_sing_pow",
     "(takeWhile (%x. x = ?a) ?w = ?w) =
      (?w = [?a] \<^sup>@ \<^bold>|?w\<^bold>|)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_var 0),
         template_var 0),
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 3)),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.comm_rev_iff",
     "(rev ?u \<cdot> rev ?v = rev ?v \<cdot> rev ?u) =
      (?u \<cdot> ?v = ?v \<cdot> ?u)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("CoWBasic.power_add",
     "?a \<^sup>@ (?m + ?n) = ?a \<^sup>@ ?m \<cdot> ?a \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 2),
           template_var 0)))),
    ("CoWBasic.pow_add_list",
     "?x \<^sup>@ (?a + ?b) = ?x \<^sup>@ ?a \<cdot> ?x \<^sup>@ ?b",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 2),
           template_var 0)))),
    ("CoWBasic.power_numeral_even",
     "?z \<^sup>@ numeral (num.Bit0 ?w) =
      (let w = ?z \<^sup>@ numeral ?w in w \<cdot> w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_var 0))),
         t_empty))),
    ("CoWBasic.shift_pow",
     "(?u \<cdot> ?v) \<^sup>@ ?k \<cdot> ?u =
      ?u \<cdot> (?v \<cdot> ?u) \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_var 2),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("CoWBasic.lcp_first_mismatch'",
     "?a ~= ?b ==> ?u \<cdot> [?a] \<and>\<^sub>p ?u \<cdot> [?b] = ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("CoWBasic.pref_pow_root_ext",
     "?x \<le>p ?r \<^sup>@ ?k ==> ?r \<cdot> ?x \<le>p ?r \<^sup>@ Suc ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("CoWBasic.suf_pow_root_ext",
     "?x \<le>s ?r \<^sup>@ ?k ==> ?x \<cdot> ?r \<le>s ?r \<^sup>@ Suc ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("CoWBasic.pow_lists",
     "[| 0 < ?k; ?u \<^sup>@ ?k : lists ?B |] ==> ?u : lists ?B",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_hole 1),
                    template_var 1),
                  template_var 2)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.mismatch_lexord",
     "[| ~ ?u \<bowtie> ?v; mismatch_pair ?u ?v : ?r |]
      ==> (?u, ?v) : lexord ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CoWBasic.sing_pow_fac'",
     "[| ?a ~= ?b; ?w \<in> [?a]* |] ==> ~ [?b] \<le>f ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_var 0)
               )
           ))),
    ("CoWBasic.take_nemp_len",
     "[| ?u ~= \<epsilon>; ?r ~= \<epsilon> |]
      ==> take \<^bold>|?r\<^bold>| ?u ~= \<epsilon>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1),
             template_hole 4)
           ))),
    ("CoWBasic.per_border",
     "[| ?n < \<^bold>|?w\<^bold>|; periodN ?w ?n |]
      ==> take (\<^bold>|?w\<^bold>| - ?n) ?w \<le>b ?w",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 0)),
                     template_var 1)),
                 template_var 0)),
             template_var 0)
           ))),
    ("CoWBasic.sing_pow_set",
     "[| ?u \<in> [?a]*; ?u ~= \<epsilon> |] ==> set ?u = {?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CoWBasic.fac_pow_len_conjug",
     "[| \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|;
         ?u \<le>f ?v \<^sup>@ ?k |]
      ==> ?v \<sim> ?u",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("CoWBasic.conjug_emp_emp",
     "[| ?p \<le>p ?u \<cdot> ?p;
         ?p\<inverse>\<^sup>>(?u \<cdot> ?p) = \<epsilon> |]
      ==> ?u = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.conjug_emp_emp'",
     "[| ?p \<le>s ?p \<cdot> ?u;
         (?p \<cdot> ?u)\<^sup><\<inverse>?p  = \<epsilon> |]
      ==> ?u = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0)),
            template_var 1),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.emp_concat_emp",
     "[| ?us : lists ?S\<^sub>+; concat ?us = \<epsilon> |]
      ==> ?us = \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4))))
            ),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 5)],
       template_equation (template_var 1, template_hole 0))),
    ("CoWBasic.periodN_fac'",
     "[| periodN ?v ?p; ?u \<le>f ?v; ?u ~= \<epsilon> |]
      ==> periodN ?u ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), template_var 1)
           ))),
    ("CoWBasic.per_pref'",
     "[| ?u ~= \<epsilon>; periodN ?v ?k; ?u \<le>p ?v |]
      ==> periodN ?u ?k",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("CoWBasic.primroot_of_root",
     "[| ?x ~= \<epsilon>; ?x \<in> ?u*; ?u \<in>\<^sub>p ?r * |]
      ==> ?x \<in>\<^sub>p ?r *",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("CoWBasic.periodN_pref",
     "periodN ?w ?n =
      (EX k r. ?w \<le>np r \<^sup>@ k & \<^bold>|r\<^bold>| = ?n)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("CoWBasic.power_eq_if",
     "?p \<^sup>@ ?m =
      (if ?m = 0 then \<epsilon> else ?p \<cdot> ?p \<^sup>@ (?m - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 6),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_hole 5),
                   template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("CoWBasic.pow_eq_if_list'",
     "?p \<^sup>@ ?m =
      (if ?m = 0 then \<epsilon> else ?p \<^sup>@ (?m - 1) \<cdot> ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_hole 5),
                     template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_var 1))
           ))),
    ("CoWBasic.pow_slide",
     "?u \<cdot> (?v \<cdot> ?u) \<^sup>@ ?n \<cdot> ?v =
      (?u \<cdot> ?v) \<^sup>@ Suc ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 3),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2)),
               template_var 0)),
           template_var 1)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.power_minus_mult",
     "0 < ?n ==> ?a \<^sup>@ (?n - 1) \<cdot> ?a = ?a \<^sup>@ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 4),
                 template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 4),
             template_var 0),
           template_var 1)))),
    ("CoWBasic.lcp_mismatch'",
     "~ ?u \<bowtie> ?v ==>
      ?u ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ~=
      ?v ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("CoWBasic.concat_take_suc",
     "?j < \<^bold>|?ws\<^bold>| ==>
      concat (take ?j ?ws) \<cdot> ?ws ! ?j = concat (take (Suc ?j) ?ws)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("CoWBasic.lists_drop_emp'",
     "?us : lists ?C ==>
      filter (%x. x ~= \<epsilon>) ?us : lists ?C\<^sub>+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 6, t_empty), template_var 1)),
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_hole 3),
                   template_hole 0))))
           ))),
    ("CoWBasic.left_right_inverse_power",
     "?x \<cdot> ?y = \<epsilon> ==>
      ?x \<^sup>@ ?n \<cdot> ?y \<^sup>@ ?n = \<epsilon>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_hole 1),
                   template_hole 2),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_hole 1),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("CoWBasic.eq_len_iff_less",
     "?x \<cdot> ?y = ?u \<cdot> ?v ==>
      (\<^bold>|?x\<^bold>| < \<^bold>|?u\<^bold>|) =
      (\<^bold>|?v\<^bold>| < \<^bold>|?y\<^bold>|)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("CoWBasic.eq_len_iff",
     "?x \<cdot> ?y = ?u \<cdot> ?v ==>
      (\<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>|) =
      (\<^bold>|?v\<^bold>| <= \<^bold>|?y\<^bold>|)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("CoWBasic.primI",
     "(!!r k. r \<^sup>@ k = ?u ==> k = 1) ==> primitive ?u",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.conjugE1",
     "[| ?u \<sim> ?v; !!r. ?u \<cdot> r = r \<cdot> ?v ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.per_root_spref_powE",
     "[| ?u \<le>p ?r\<^sup>\<omega>;
         !!k. ?u <p ?r \<^sup>@ k ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.rootE",
     "[| ?u \<in> ?r*; !!k. ?r \<^sup>@ k = ?u ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pow_per",
     "[| ?y ~= \<epsilon>; ?k ~= 0 |]
      ==> periodN (?y \<^sup>@ ?k) \<^bold>|?y\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 6),
                     template_hole 1),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("CoWBasic.comm_prim",
     "[| primitive ?r; primitive ?s; ?r \<cdot> ?s = ?s \<cdot> ?r |]
      ==> ?r = ?s",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.borders_compare",
     "[| ?x \<le>b ?w; ?x' \<le>b ?w;
         \<^bold>|?x'\<^bold>| < \<^bold>|?x\<^bold>| |]
      ==> ?x' \<le>b ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 2)
           ))),
    ("CoWBasic.unbordered_border_shortest",
     "[| ?x \<le>b ?w; ~ bordered ?x; ?y \<le>b ?w |]
      ==> \<^bold>|?x\<^bold>| <= \<^bold>|?y\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.ruler_le",
     "[| ?ps \<le>p ?xs; ?qs \<le>p ?xs;
         \<^bold>|?ps\<^bold>| <= \<^bold>|?qs\<^bold>| |]
      ==> ?ps \<le>p ?qs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("CoWBasic.ruler_equal",
     "[| ?u \<le>p ?w; ?v \<le>p ?w;
         \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("CoWBasic.pref_comp_len_trans",
     "[| ?w \<le>p ?v; ?u \<bowtie> ?v;
         \<^bold>|?w\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?w \<le>p ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("CoWBasic.suf_ruler_le",
     "[| ?ps \<le>s ?xs; ?qs \<le>s ?xs;
         \<^bold>|?ps\<^bold>| <= \<^bold>|?qs\<^bold>| |]
      ==> ?ps \<le>s ?qs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("CoWBasic.suf_ruler_equal",
     "[| ?u \<le>s ?w; ?v \<le>s ?w;
         \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("CoWBasic.rotate_class_rotate",
     "{u. EX n. rotate n ?w = u} = {u. EX n. rotate n (rotate ?l ?w) = u}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("CoWBasic.power_numeral_odd",
     "?z \<^sup>@ numeral (num.Bit1 ?w) =
      (let w = ?z \<^sup>@ numeral ?w in (?z \<cdot> w) \<cdot> w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_var 0))),
         t_empty))),
    ("CoWBasic.power_even_eq",
     "?a \<^sup>@ (2 * ?n) = CoWBasic.power2 (?a \<^sup>@ ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("CoWBasic.concat_take_sing",
     "?k <= ?l ==> concat (take ?k ([?r] \<^sup>@ ?l)) = ?r \<^sup>@ ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 5)),
               template_var 1))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2)))),
    ("CoWBasic.pop_pow_one",
     "?m ~= 0 ==> ?r \<^sup>@ ?m = ?r \<cdot> ?r \<^sup>@ (?m - 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("CoWBasic.pop_pow_one'",
     "?m ~= 0 ==> ?r \<^sup>@ ?m = ?r \<^sup>@ (?m - 1) \<cdot> ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2),
                 template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_var 0)))),
    ("CoWBasic.eq_pow_exp",
     "?u ~= \<epsilon> ==> (?u \<^sup>@ ?k = ?u \<^sup>@ ?m) = (?k = ?m)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 4),
                 template_hole 1),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 4),
                 template_hole 1),
               template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("CoWBasic.pref_pow_ext_take",
     "?u \<le>p ?r \<^sup>@ ?k ==>
      ?u \<le>p take \<^bold>|?r\<^bold>| ?u \<cdot> ?r \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("CoWBasic.pref_sing_power",
     "?w \<le>p [?a] \<^sup>@ ?m ==>
      ?w = [?a] \<^sup>@ \<^bold>|?w\<^bold>|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 4)),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 4)),
           template_app (template_hole 0, template_var 2))))),
    ("CoWBasic.index_per_root_mod",
     "[| ?w \<le>p ?r\<^sup>\<omega>; ?i < \<^bold>|?w\<^bold>| |]
      ==> ?w ! ?i = ?r ! (?i mod \<^bold>|?r\<^bold>|)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 3, template_var 1)))))),
    ("CoWBasic.lcp_rulers",
     "[| ?r \<le>p ?s; ?r' \<le>p ?s' |]
      ==> ?r \<bowtie> ?r' | ?r \<and>\<^sub>p ?r' = ?s \<and>\<^sub>p ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("CoWBasic.lq_trans",
     "[| ?u \<le>p ?v; ?v \<le>p ?w |]
      ==> ?u\<inverse>\<^sup>>?v \<cdot> ?v\<inverse>\<^sup>>?w =
          ?u\<inverse>\<^sup>>?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("CoWBasic.lq_rq_reassoc_suf",
     "[| ?u \<le>p ?z; ?u \<le>s ?w |]
      ==> ?w \<cdot> ?u\<inverse>\<^sup>>?z =
          ?w\<^sup><\<inverse>?u  \<cdot> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("CoWBasic.last_no_split'",
     "[| ?u <p ?w; ?w \<le>p ?u \<cdot> [?a] |] ==> ?w = ?u \<cdot> [?a]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("CoWBasic.rq_trans",
     "[| ?u \<le>s ?v; ?v \<le>s ?w |]
      ==> ?w\<^sup><\<inverse>?v  \<cdot> ?v\<^sup><\<inverse>?u  =
          ?w\<^sup><\<inverse>?u ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("CoWBasic.rq_lq_reassoc_suf",
     "[| ?u \<le>s ?z; ?u \<le>p ?w |]
      ==> ?z\<^sup><\<inverse>?u  \<cdot> ?w =
          ?z \<cdot> ?u\<inverse>\<^sup>>?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CoWBasic.per_shift",
     "[| ?w ~= \<epsilon>; ?n ~= 0 |]
      ==> periodN ?w ?n = (drop ?n ?w \<le>p ?w)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("CoWBasic.lq_ne",
     "[| ?p \<le>p ?u \<cdot> ?p; ?u ~= \<epsilon> |]
      ==> ?p\<inverse>\<^sup>>(?u \<cdot> ?p) ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("CoWBasic.pref_prolong_comp",
     "[| ?u \<le>p ?w \<cdot> ?z; ?v \<cdot> ?u \<bowtie> ?z |]
      ==> ?u \<le>p ?w \<cdot> ?v \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 3)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3)))
           ))),
    ("CoWBasic.pref_prolong'",
     "[| ?u \<le>p ?w \<cdot> ?z; ?v \<cdot> ?u \<le>p ?z |]
      ==> ?u \<le>p ?w \<cdot> ?v \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 3)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("CoWBasic.rq_ne",
     "[| ?p \<le>s ?p \<cdot> ?u; ?u ~= \<epsilon> |]
      ==> (?p \<cdot> ?u)\<^sup><\<inverse>?p  ~= \<epsilon>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_var 1),
             template_hole 1)
           ))),
    ("CoWBasic.suf_prolong_comp",
     "[| ?u \<le>s ?z \<cdot> ?w; ?u \<cdot> ?v \<bowtie>\<^sub>s ?z |]
      ==> ?u \<le>s ?u \<cdot> ?v \<cdot> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)))
           ))),
    ("CoWBasic.suf_prolong'",
     "[| ?u \<le>s ?z \<cdot> ?w; ?u \<cdot> ?v \<le>s ?z |]
      ==> ?u \<le>s ?u \<cdot> ?v \<cdot> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("CoWBasic.prim_no_rotate",
     "[| primitive ?w; 0 < ?n; ?n < \<^bold>|?w\<^bold>| |]
      ==> rotate ?n ?w ~= ?w",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_hole 4, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 1)
           ))),
    ("CoWBasic.lcp_ruler",
     "[| ?r \<bowtie> ?w1.0; ?r \<bowtie> ?w2.0; ~ ?w1.0 \<bowtie> ?w2.0 |]
      ==> ?r \<le>p ?w1.0 \<and>\<^sub>p ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.pref_hd_eq'",
     "[| ?p \<le>p ?u; ?p \<le>p ?v; ?p ~= \<epsilon> |] ==> hd ?u = hd ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.suf_last_eq",
     "[| ?p \<le>s ?u; ?p \<le>s ?v; ?p ~= \<epsilon> |]
      ==> last ?u = last ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.primroot_shortest_root",
     "?u ~= \<epsilon> ==>
      \<^bold>|\<rho> ?u\<^bold>| =
      (LEAST d. EX r. ?u \<in> r* & \<^bold>|r\<^bold>| = d)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("CoWBasic.comm_common_power",
     "?r \<cdot> ?u = ?u \<cdot> ?r ==>
      ?r \<^sup>@ \<^bold>|?u\<^bold>| = ?u \<^sup>@ \<^bold>|?r\<^bold>|",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 3),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 3),
             template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("CoWBasic.pow_comm_comm'",
     "?u \<^sup>@ Suc ?k = ?v \<^sup>@ Suc ?l ==>
      ?u \<cdot> ?v = ?v \<cdot> ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 3),
            template_app (template_hole 0, template_var 2)),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 1),
            template_app (template_hole 0, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 3)))),
    ("CoWBasic.periodN_indeces",
     "[| periodN ?w ?n; ?i + ?n < \<^bold>|?w\<^bold>| |]
      ==> ?w ! ?i = ?w ! (?i + ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))))),
    ("CoWBasic.ext_per_left_power",
     "[| periodN ?w ?p; ?p <= \<^bold>|?w\<^bold>| |]
      ==> periodN (take ?p ?w \<^sup>@ ?k \<cdot> ?w) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_hole 3),
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 2)),
                     template_var 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("CoWBasic.facE",
     "[| ?u \<le>f ?v; !!p s. ?v = p \<cdot> ?u \<cdot> s ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.facE'",
     "[| ?u \<le>f ?v; !!p s. p \<cdot> ?u \<cdot> s = ?v ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.lexord_mismatch",
     "[| ~ ?u \<bowtie> ?v; irrefl ?r |]
      ==> (mismatch_pair ?u ?v : ?r) = ((?u, ?v) : lexord ?r)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.per_drop_exp'",
     "[| ?i ~= 0; ?p \<le>p ?e \<^sup>@ ?i \<cdot> ?p |]
      ==> ?p \<le>p ?e \<cdot> ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_hole 0),
                        template_hole 2),
                      template_var 0),
                    template_var 2)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.per_drop_exp_rev",
     "[| ?i ~= 0; ?p \<le>s ?p \<cdot> ?e \<^sup>@ ?i |]
      ==> ?p \<le>s ?p \<cdot> ?e",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_hole 2),
                    template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.conjug_prim_root_iff",
     "[| ?u ~= \<epsilon>; \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> \<rho> ?u \<sim> \<rho> ?v = ?u \<sim> ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("CoWBasic.pref_exp_le",
     "[| ?u ~= \<epsilon>; ?u \<^sup>@ ?m \<le>p ?u \<^sup>@ ?n |]
      ==> ?m <= ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_hole 4),
                      template_hole 1),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 4),
                    template_hole 1),
                  template_var 2),
                template_var 0))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("CoWBasic.suf_exp_le",
     "[| ?u ~= \<epsilon>; ?u \<^sup>@ ?m \<le>s ?u \<^sup>@ ?n |]
      ==> ?m <= ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_hole 4),
                      template_hole 1),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 4),
                    template_hole 1),
                  template_var 2),
                template_var 0))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("CoWBasic.pref_not_idem",
     "[| ?z ~= \<epsilon>; ?z ~= ?x |] ==> ?z \<cdot> ?x \<^sup>@ ?k ~= ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_hole 2),
                     template_hole 1),
                   template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("CoWBasic.suf_not_idem",
     "[| ?z ~= \<epsilon>; ?z ~= ?x |] ==> ?x \<^sup>@ ?k \<cdot> ?z ~= ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_hole 2),
                       template_hole 1),
                     template_var 1),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("CoWBasic.concat_sing_list_pow",
     "[| ?ws : lists {?u}; \<^bold>|?ws\<^bold>| = ?k |]
      ==> concat ?ws = ?u \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 7)))
            ),
        template_equation
         (template_app (template_hole 5, template_var 2), template_var 0)],
       template_equation
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.long_border_bordered",
     "[| \<^bold>|?w\<^bold>| < \<^bold>|?x\<^bold>| + \<^bold>|?x\<^bold>|;
         ?x \<le>b ?w |]
      ==> ?w\<^sup><\<inverse>?x \<inverse>\<^sup>>?x \<le>b ?x",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 4, template_var 0)),
            template_app (template_hole 4, template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 0)),
             template_var 0)
           ))),
    ("CoWBasic.pow_eq_eq",
     "[| ?u \<^sup>@ ?k = ?v \<^sup>@ ?k; ?k ~= 0 |] ==> ?u = ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              template_var 2),
            template_var 1),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              template_var 0),
            template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_equation (template_var 2, template_var 0))),
    ("CoWBasic.comp_hd_eq",
     "[| ?u \<bowtie> ?v; ?u ~= \<epsilon>; ?v ~= \<epsilon> |]
      ==> hd ?u = hd ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.suf_comp_last_eq",
     "[| ?u \<bowtie>\<^sub>s ?v; ?u ~= \<epsilon>; ?v ~= \<epsilon> |]
      ==> last ?u = last ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.root_shorter",
     "[| ?u ~= \<epsilon>; ?u \<in> ?r*; ?u ~= ?r |]
      ==> \<^bold>|?r\<^bold>| < \<^bold>|?u\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("CoWBasic.rotate_per_root",
     "[| ?w ~= \<epsilon>; ?n ~= 0; ?w = rotate ?n ?w |] ==> periodN ?w ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.pow_comm",
     "?t \<^sup>@ ?k \<cdot> ?t \<^sup>@ ?m =
      ?t \<^sup>@ ?m \<cdot> ?t \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 2),
           template_var 1)))),
    ("CoWBasic.lcp_first_mismatch",
     "?a ~= ?b ==>
      ?w \<cdot> [?a] \<cdot> ?u \<and>\<^sub>p ?w \<cdot> [?b] \<cdot> ?v =
      ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_hole 0)),
                 template_var 1))),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_hole 0)),
               template_var 0))),
         template_var 2))),
    ("CoWBasic.primroot_take_shortest",
     "?u ~= \<epsilon> ==>
      \<rho> ?u =
      take (LEAST d. EX r. ?u \<in> r* & \<^bold>|r\<^bold>| = d) ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_var 0)))),
    ("CoWBasic.unique_letter_word",
     "ALL c. c : set ?w --> c = ?a ==> EX k. ?w = [?a] \<^sup>@ k",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("CoWBasic.rq_lq_assoc",
     "[| ?s \<le>p ?u; ?r \<le>s ?s\<inverse>\<^sup>>?u |]
      ==> ?s\<inverse>\<^sup>>?u\<^sup><\<inverse>?r  =
          (?s\<inverse>\<^sup>>?u)\<^sup><\<inverse>?r ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("CoWBasic.lq_rq_assoc",
     "[| ?s \<le>s ?u; ?r \<le>p ?u\<^sup><\<inverse>?s  |]
      ==> (?r\<inverse>\<^sup>>?u)\<^sup><\<inverse>?s  =
          ?r\<inverse>\<^sup>>?u\<^sup><\<inverse>?s ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("CoWBasic.prim_root_power",
     "[| ?x ~= \<epsilon>; !!i. \<rho> ?x \<^sup>@ Suc i = ?x ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.eqd_equal",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| = \<^bold>|?u\<^bold>| |]
      ==> ?x = ?u & ?y = ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.eqd_equal_suf",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?y\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?x = ?u & ?y = ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.eqd_pref1",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?x \<cdot> ?x\<inverse>\<^sup>>?u = ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 1))),
    ("CoWBasic.eqd_suf2",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?x \<cdot> ?y\<^sup><\<inverse>?v  = ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("CoWBasic.eqd_pref2",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?x\<inverse>\<^sup>>?u \<cdot> ?v = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_var 2))),
    ("CoWBasic.eqd_suf1",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?y\<^sup><\<inverse>?v  \<cdot> ?v = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 0),
         template_var 2))),
    ("CoWBasic.prim_comm_short_emp",
     "[| primitive ?p; ?u \<cdot> ?p = ?p \<cdot> ?u;
         \<^bold>|?u\<^bold>| < \<^bold>|?p\<^bold>| |]
      ==> ?u = \<epsilon>",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.two_periodsN",
     "[| periodN ?w ?p; periodN ?w ?q; ?p + ?q <= \<^bold>|?w\<^bold>| |]
      ==> periodN ?w (gcd ?p ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CoWBasic.double_ruler",
     "[| ?w \<bowtie> ?r; ?w' \<bowtie> ?r'; ~ ?r \<bowtie> ?r' |]
      ==> ?w \<and>\<^sub>p ?w' \<le>p ?r \<and>\<^sub>p ?r'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.power_odd_eq",
     "?a \<^sup>@ Suc (2 * ?n) =
      ?a \<cdot> CoWBasic.power2 (?a \<^sup>@ ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_hole 5),
           template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 0))),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("CoWBasic.pop_pow",
     "?m <= ?k ==>
      ?u \<^sup>@ ?m \<cdot> ?u \<^sup>@ (?k - ?m) = ?u \<^sup>@ ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 3),
                 template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 3),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 3),
             template_var 0),
           template_var 1)))),
    ("CoWBasic.pop_pow'",
     "?m <= ?k ==>
      ?u \<^sup>@ (?k - ?m) \<cdot> ?u \<^sup>@ ?m = ?u \<^sup>@ ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 3),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 3),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 3),
             template_var 0),
           template_var 1)))),
    ("CoWBasic.comm_add_exp",
     "?u \<cdot> ?v = ?v \<cdot> ?u ==>
      ?u \<^sup>@ ?n \<cdot> ?v = ?v \<cdot> ?u \<^sup>@ ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 0))))),
    ("CoWBasic.power_commuting_commutes",
     "?x \<cdot> ?y = ?y \<cdot> ?x ==>
      ?x \<^sup>@ ?n \<cdot> ?y = ?y \<cdot> ?x \<^sup>@ ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 0))))),
    ("CoWBasic.conjug_pow",
     "?x \<cdot> ?z = ?z \<cdot> ?y ==>
      ?x \<^sup>@ ?k \<cdot> ?z = ?z \<cdot> ?y \<^sup>@ ?k",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 1),
             template_var 0))))),
    ("CoWBasic.index_pow_mod",
     "?i < \<^bold>|?r \<^sup>@ ?k\<^bold>| ==>
      (?r \<^sup>@ ?k) ! ?i = ?r ! (?i mod \<^bold>|?r\<^bold>|)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3),
                template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 6, template_var 1)))))),
    ("CoWBasic.root_suf_cancel",
     "?y \<cdot> ?t \<^sup>@ ?m = ?t \<^sup>@ ?k ==>
      ?y = ?t \<^sup>@ (?k - ?m)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 3),
                template_var 2),
              template_var 1)),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("CoWBasic.root_pref_cancel",
     "?t \<^sup>@ ?m \<cdot> ?y = ?t \<^sup>@ ?k ==>
      ?y = ?t \<^sup>@ (?k - ?m)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 3),
                  template_var 3),
                template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 3),
              template_var 3),
            template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 3),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("CoWBasic.sprefE",
     "[| ?u <p ?v;
         !!z. [| ?u \<cdot> z = ?v; z ~= \<epsilon> |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.suf_share_take",
     "[| ?u \<le>s ?v; ?q <= \<^bold>|?u\<^bold>| |]
      ==> drop (\<^bold>|?u\<^bold>| - ?q) ?u =
          drop (\<^bold>|?v\<^bold>| - ?q) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 2)),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 1)),
               template_var 0)),
           template_var 1)))),
    ("CoWBasic.concat_morph_power",
     "[| ?xs : lists ?B; ?xs = ?ts \<^sup>@ ?k |]
      ==> concat ?ts \<^sup>@ ?k = concat ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_hole 5),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("CoWBasic.lcp_same_len",
     "[| \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|; ?u ~= ?v |]
      ==> ?u \<and>\<^sub>p ?v =
          ?u \<cdot> ?w \<and>\<^sub>p ?v \<cdot> ?w'",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 4, template_var 2)),
        template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CoWBasic.take_after_drop",
     "[| \<^bold>|?u\<^bold>| + ?q <= \<^bold>|?w\<^bold>|;
         ?w \<le>p ?u\<^sup>\<omega> |]
      ==> take ?q (drop \<^bold>|?u\<^bold>| ?w) = take ?q ?w",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("CoWBasic.lexord_cancel_right",
     "[| (?u \<cdot> ?z, ?v \<cdot> ?w) : lexord ?r; ~ ?u \<bowtie> ?v |]
      ==> (?u, ?v) : lexord ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_app (template_hole 2, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("CoWBasic.periodN_I",
     "[| ?w ~= \<epsilon>; ?n ~= 0; ?w \<le>p take ?n ?w \<cdot> ?w |]
      ==> periodN ?w ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 0),
                    template_var 1)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.comm_primroots",
     "[| ?u ~= \<epsilon>; ?v ~= \<epsilon> |]
      ==> (?u \<cdot> ?v = ?v \<cdot> ?u) = (\<rho> ?u = \<rho> ?v)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.mismatch_incopm",
     "[| \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|; ?x ~= ?y |]
      ==> ~ ?u \<cdot> [?x] \<bowtie> ?v \<cdot> [?y]",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_hole 0))),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)))
               )
           ))),
    ("CoWBasic.mismatch_suf_incopm",
     "[| \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|; ?x ~= ?y |]
      ==> ~ [?x] \<cdot> ?u \<bowtie>\<^sub>s [?y] \<cdot> ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_hole 0)),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0)),
                   template_var 2))
               )
           ))),
    ("CoWBasic.unique_letter_wordE'",
     "[| set ?w <= {?a}; !!k. ?w = [?a] \<^sup>@ k ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.lcp_ext_right",
     "[| ?r \<bowtie> ?r' ==> ?thesis;
         ?r \<cdot> ?u \<and>\<^sub>p ?r' \<cdot> ?v =
         ?r \<and>\<^sub>p ?r' ==>
         ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 2)),
        template_implication
         ([template_equation
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3))],
          template_predicate (template_var 2))],
       template_predicate (template_var 2))),
    ("CoWBasic.comm_rootE",
     "[| ?x \<cdot> ?y = ?y \<cdot> ?x;
         !!t. [| ?x \<in> t*; ?y \<in> t* |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.index_pref_pow_mod",
     "[| ?w \<le>p ?r \<^sup>@ ?k; ?i < \<^bold>|?w\<^bold>| |]
      ==> ?w ! ?i = ?r ! (?i mod \<^bold>|?r\<^bold>|)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5),
                  template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 3, template_var 2)))))),
    ("CoWBasic.per_root_border",
     "[| \<^bold>|?r\<^bold>| < \<^bold>|?w\<^bold>|; ?r ~= \<epsilon>;
         ?w \<le>p ?r \<cdot> ?w |]
      ==> ?r\<inverse>\<^sup>>?w \<le>b ?w",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("CoWBasic.borderI",
     "[| ?x \<le>p ?w; ?x \<le>s ?w; ?x ~= ?w; ?x ~= \<epsilon> |]
      ==> ?x \<le>b ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.per_eq",
     "?x \<le>p ?r\<^sup>\<omega> =
      ((EX k z. ?r \<^sup>@ k \<cdot> z = ?x & z \<le>p ?r) &
       ?r ~= \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 2)))
           ))),
    ("CoWBasic.prim_iff_rotate",
     "?w ~= \<epsilon> ==>
      primitive ?w =
      (ALL n. 0 < n & n < \<^bold>|?w\<^bold>| --> rotate n ?w ~= ?w)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app (template_hole 6, t_empty)))),
    ("CoWBasic.primroot_ex",
     "?x ~= \<epsilon> ==>
      EX r k. ?x \<in>\<^sub>p r * & k ~= 0 & ?x = r \<^sup>@ k",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("CoWBasic.lq_conjug_pow",
     "?p \<le>p ?x \<cdot> ?p ==>
      ?p\<inverse>\<^sup>>(?x \<^sup>@ ?k \<cdot> ?p) =
      (?p\<inverse>\<^sup>>(?x \<cdot> ?p)) \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 4),
                   template_var 1),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 4),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2))),
           template_var 0)))),
    ("CoWBasic.rq_conjug_pow",
     "?p \<le>s ?p \<cdot> ?x ==>
      (?p \<cdot> ?x \<^sup>@ ?k)\<^sup><\<inverse>?p  =
      ((?p \<cdot> ?x)\<^sup><\<inverse>?p ) \<^sup>@ ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 4),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1)),
               template_var 2)),
           template_var 0)))),
    ("CoWBasic.border_short_dec",
     "[| ?x \<le>b ?w;
         \<^bold>|?x\<^bold>| + \<^bold>|?x\<^bold>|
         <= \<^bold>|?w\<^bold>| |]
      ==> ?x \<cdot>
          ?x\<inverse>\<^sup>>?w\<^sup><\<inverse>?x  \<cdot> ?x =
          ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 4, template_var 1)),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.take_several_pers",
     "[| periodN ?w ?n; ?m * ?n <= \<^bold>|?w\<^bold>| |]
      ==> take ?n ?w \<^sup>@ ?m = take (?m * ?n) ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 0), template_var 1),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("CoWBasic.per_pref_ex",
     "[| ?u \<le>p ?r\<^sup>\<omega>;
         !!n. [| ?u \<le>p ?r \<^sup>@ n; n ~= 0 |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.primrootE",
     "[| ?x \<in>\<^sub>p ?r *;
         !!k. [| k ~= 0; ?r \<^sup>@ k = ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.index_pref",
     "[| \<^bold>|?u\<^bold>| <= \<^bold>|?w\<^bold>|;
         ALL i<\<^bold>|?u\<^bold>|. ?u ! i = ?w ! i |]
      ==> ?u \<le>p ?w",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.pow_comm_comm",
     "[| ?x \<^sup>@ ?j = ?y \<^sup>@ ?k; ?j ~= 0 |]
      ==> ?x \<cdot> ?y = ?y \<cdot> ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              template_var 3),
            template_var 2),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 3)))),
    ("CoWBasic.comm_non_prim",
     "[| ?u ~= \<epsilon>; ?v ~= \<epsilon>;
         ?u \<cdot> ?v = ?v \<cdot> ?u |]
      ==> ~ primitive (?u \<cdot> ?v)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))
               )
           ))),
    ("CoWBasic.pref_prod_pref_short",
     "[| ?u \<le>p ?z \<cdot> ?w; ?v \<le>p ?w;
         \<^bold>|?u\<^bold>| <= \<^bold>|?z \<cdot> ?v\<^bold>| |]
      ==> ?u \<le>p ?z \<cdot> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 3),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.pref_prod_longer",
     "[| ?u \<le>p ?z \<cdot> ?w; ?v \<le>p ?w;
         \<^bold>|?z \<cdot> ?v\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?z \<cdot> ?v \<le>p ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)),
          template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 3)
           ))),
    ("CoWBasic.comm_ruler",
     "[| ?r \<cdot> ?s \<le>p ?w1.0; ?s \<cdot> ?r \<le>p ?w2.0;
         ?w1.0 \<bowtie> ?w2.0 |]
      ==> ?r \<cdot> ?s = ?s \<cdot> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 3)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 3)))),
    ("CoWBasic.fac_Cons_E",
     "[| ?u \<le>f ?a # ?v; ?u \<le>p ?a # ?v ==> ?thesis;
         ?u \<le>f ?v ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("CoWBasic.suf_prod_suf_short",
     "[| ?u \<le>s ?w \<cdot> ?z; ?v \<le>s ?w;
         \<^bold>|?u\<^bold>| <= \<^bold>|?v \<cdot> ?z\<^bold>| |]
      ==> ?u \<le>s ?v \<cdot> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 3),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))
           ))),
    ("CoWBasic.suf_prod_longer",
     "[| ?u \<le>s ?w \<cdot> ?z; ?v \<le>s ?w;
         \<^bold>|?v \<cdot> ?z\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?v \<cdot> ?z \<le>s ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)),
          template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_var 3)
           ))),
    ("CoWBasic.comm_suf_ruler",
     "[| ?s \<cdot> ?r \<le>s ?w1.0; ?r \<cdot> ?s \<le>s ?w2.0;
         ?w1.0 \<bowtie>\<^sub>s ?w2.0 |]
      ==> ?s \<cdot> ?r = ?r \<cdot> ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 3)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 3)))),
    ("CoWBasic.comp_hd_eq'",
     "[| ?u \<cdot> ?r \<bowtie> ?v \<cdot> ?s; ?u ~= \<epsilon>;
         ?v ~= \<epsilon> |]
      ==> hd ?u = hd ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 3, template_hole 2)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 1)))),
    ("CoWBasic.suf_comp_last_eq'",
     "[| ?r \<cdot> ?u \<bowtie>\<^sub>s ?s \<cdot> ?v; ?u ~= \<epsilon>;
         ?v ~= \<epsilon> |]
      ==> last ?u = last ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.pref_pow_conv",
     "(EX k. ?x \<le>p ?r \<^sup>@ k) =
      (EX k z. ?r \<^sup>@ k \<cdot> z = ?x & z \<le>p ?r)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 7, t_empty))),
    ("CoWBasic.bordered_dec",
     "[| bordered ?w;
         !!u v.
            [| u \<cdot> v \<cdot> u = ?w; u ~= \<epsilon> |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.conjugE",
     "[| ?u \<sim> ?v;
         !!r s. [| r \<cdot> s = ?u; s \<cdot> r = ?v |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.per_all_exps",
     "[| ?m ~= 0; ?k ~= 0 |]
      ==> ?u \<le>p ?r \<^sup>@ ?m\<^sup>\<omega> =
          ?u \<le>p ?r \<^sup>@ ?k\<^sup>\<omega>",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0),
             template_var 2))))),
    ("CoWBasic.lq_prod",
     "[| ?u \<le>p ?v \<cdot> ?u; ?u \<le>p ?w |]
      ==> ?u\<inverse>\<^sup>>(?v \<cdot> ?u) \<cdot>
          ?u\<inverse>\<^sup>>?w =
          ?u\<inverse>\<^sup>>(?v \<cdot> ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("CoWBasic.rq_prod",
     "[| ?u \<le>s ?u \<cdot> ?v; ?u \<le>s ?w |]
      ==> ?w\<^sup><\<inverse>?u  \<cdot>
          (?u \<cdot> ?v)\<^sup><\<inverse>?u  =
          (?w \<cdot> ?v)\<^sup><\<inverse>?u ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("CoWBasic.two_pers",
     "[| ?w \<le>p ?u\<^sup>\<omega>; ?w \<le>p ?v\<^sup>\<omega>;
         \<^bold>|?u\<^bold>| + \<^bold>|?v\<^bold>|
         <= \<^bold>|?w\<^bold>| |]
      ==> ?u \<cdot> ?v = ?v \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_app (template_hole 2, template_var 0)),
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.primroot_len_mult",
     "[| ?u ~= \<epsilon>; ?u \<in> ?q*;
         !!k. \<^bold>|?q\<^bold>| = k * \<^bold>|\<rho> ?u\<^bold>| ==>
              ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.prim_root_cases",
     "[| ?u = \<epsilon> ==> ?thesis; primitive ?u ==> ?thesis;
         \<^bold>|\<rho> ?u\<^bold>| < \<^bold>|?u\<^bold>| ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 1))],
          template_predicate (template_var 0)),
        template_implication
         ([template_inequation
            (less_than,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("CoWBasic.index_mod_per_root",
     "[| ?r ~= \<epsilon>;
         ALL i<\<^bold>|?w\<^bold>|.
            ?w ! i = ?r ! (i mod \<^bold>|?r\<^bold>|) |]
      ==> ?w \<le>p ?r\<^sup>\<omega>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("CoWBasic.long_pow_ex",
     "[| ?r ~= \<epsilon>;
         !!n. [| ?m <= \<^bold>|?r \<^sup>@ n\<^bold>|; n ~= 0 |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.lcp_mismatch_shorter",
     "[| \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>|; ?x ~= ?y |]
      ==> ?u \<cdot> [?x] \<and>\<^sub>p ?v \<cdot> [?y] =
          ?u \<and>\<^sub>p ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 2)))),
    ("CoWBasic.mismatch_iff_lexord",
     "[| rotate ?n ?w ~= ?w; irrefl ?r |]
      ==> (mismatch_pair ?w (rotate ?n ?w) : ?r) =
          ((?w, rotate ?n ?w) : lexord ?r)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1))),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.prim_comm_exp",
     "[| primitive ?v; ?v \<cdot> ?u = ?u \<cdot> ?v;
         !!k. ?u = ?v \<^sup>@ k ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.comm",
     "(?x \<cdot> ?y = ?y \<cdot> ?x) =
      (EX t m k. ?x = t \<^sup>@ k & ?y = t \<^sup>@ m)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 0), template_var 1)),
       template_app (template_hole 4, t_empty))),
    ("CoWBasic.get_pow_remainder",
     "?z <p ?t ==>
      ?z =
      drop
       (\<^bold>|?t \<^sup>@ ?m \<cdot> ?z\<^bold>| div
        \<^bold>|?t\<^bold>| *
        \<^bold>|?t\<^bold>|)
       (?t \<^sup>@ ?m \<cdot> ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 1, template_hole 0),
                                 template_hole 2),
                               template_var 1),
                             template_var 0)),
                         template_var 2))),
                   template_app (template_hole 3, template_var 1))),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2),
                   template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("CoWBasic.period_rootE",
     "[| ?u \<le>p ?t\<^sup>\<omega>;
         !!n r. [| r <p ?t; ?t \<^sup>@ n \<cdot> r = ?u |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.no_rotate_prim",
     "[| ?w ~= \<epsilon>;
         !!n. [| 0 < n; n < \<^bold>|?w\<^bold>| |] ==> rotate n ?w ~= ?w |]
      ==> primitive ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.conjug_trans'",
     "[| ?u \<cdot> ?r = ?r \<cdot> ?v; ?v \<cdot> ?s = ?s \<cdot> ?w |]
      ==> ?u \<cdot> ?r \<cdot> ?s = (?r \<cdot> ?s) \<cdot> ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("CoWBasic.eqd",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> EX t. ?x \<cdot> t = ?u & t \<cdot> ?v = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("CoWBasic.fac_pow_pref_conjug",
     "[| ?u \<le>f ?t \<^sup>@ ?k;
         !!t'. [| ?t \<sim> t'; ?u \<le>p t' \<^sup>@ ?k |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.fac_pow_suf_conjug",
     "[| ?u \<le>f ?t \<^sup>@ ?k;
         !!t'. [| ?t \<sim> t'; ?u \<le>s t' \<^sup>@ ?k |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.unique_letter_wordE",
     "[| ALL c. c : set ?w --> c = ?a;
         !!k. ?w = [?a] \<^sup>@ k ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.per_fac",
     "[| ?y ~= \<epsilon>; ?v ~= \<epsilon>;
         ?y \<^sup>@ ?k = ?u \<cdot> ?v \<cdot> ?w |]
      ==> periodN ?v \<^bold>|?y\<^bold>|",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 4)),
        template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_hole 4),
                template_hole 2),
              template_var 4),
            template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 4))
           ))),
    ("CoWBasic.distinct_letter_in_suf",
     "~ ?w \<in> [?a]* ==>
      EX m b. [b] \<cdot> [?a] \<^sup>@ m \<le>s ?w & b ~= ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_app (template_hole 8, template_var 0),
                    template_hole 7))
                )
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("CoWBasic.comm_drop_exp",
     "[| ?m ~= 0; ?u \<cdot> ?r \<^sup>@ ?m = ?r \<^sup>@ ?m \<cdot> ?u |]
      ==> ?r \<cdot> ?u = ?u \<cdot> ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_hole 2),
                template_var 0),
              template_var 2)),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_hole 0),
                    template_hole 2),
                  template_var 0),
                template_var 2)),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("CoWBasic.distinct_first",
     "[| ?w ~= \<epsilon>; ?z ~= \<epsilon>; ?w ! 0 ~= ?z ! 0 |]
      ==> ?w \<cdot> ?w' ~= ?z \<cdot> ?z'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_hole 1),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CoWBasic.fac_snoc_E",
     "[| ?u \<le>f ?v \<cdot> [?a]; ?u \<le>s ?v \<cdot> [?a] ==> ?thesis;
         ?u \<le>f ?v ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("CoWBasic.eqd_pref",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?x \<cdot> ?x\<inverse>\<^sup>>?u = ?u &
          ?x\<inverse>\<^sup>>?u \<cdot> ?v = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1))),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)),
                   template_var 0)),
               template_var 2))
           ))),
    ("CoWBasic.eqd_suf",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>| |]
      ==> ?y\<^sup><\<inverse>?v  \<cdot> ?v = ?y &
          ?x \<cdot> ?y\<^sup><\<inverse>?v  = ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 0)),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_var 1))
           ))),
    ("CoWBasic.two_pers'",
     "[| ?w \<le>p ?u \<cdot> ?w; ?w \<le>p ?v \<cdot> ?w;
         \<^bold>|?u\<^bold>| + \<^bold>|?v\<^bold>|
         <= \<^bold>|?w\<^bold>| |]
      ==> ?u \<cdot> ?v = ?v \<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1)),
            template_app (template_hole 1, template_var 0)),
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("CoWBasic.comm_trans",
     "[| ?u \<cdot> ?v = ?v \<cdot> ?u; ?w \<cdot> ?v = ?v \<cdot> ?w;
         ?v ~= \<epsilon> |]
      ==> ?u \<cdot> ?w = ?w \<cdot> ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("CoWBasic.comm_add_exps",
     "?r \<cdot> ?u = ?u \<cdot> ?r ==>
      ?r \<^sup>@ ?m \<cdot> ?u \<^sup>@ ?k =
      ?u \<^sup>@ ?k \<cdot> ?r \<^sup>@ ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 3),
             template_var 1))))),
    ("CoWBasic.lcp_mismatch",
     "[| \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| < \<^bold>|?u\<^bold>|;
         \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| < \<^bold>|?v\<^bold>| |]
      ==> ?u ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ~=
          ?v ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))))
           ))),
    ("CoWBasic.primroot_exE",
     "[| ?x ~= \<epsilon>;
         !!r k. [| primitive r; k ~= 0; ?x = r \<^sup>@ k |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pop_pow_cancel'",
     "[| ?v \<cdot> ?u \<^sup>@ ?k = ?w \<cdot> ?u \<^sup>@ ?m; ?m <= ?k |]
      ==> ?v \<cdot> ?u \<^sup>@ (?k - ?m) = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 4),
                template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 4),
                template_var 3),
              template_var 0))),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 4),
               template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_var 1))),
    ("CoWBasic.pop_pow_cancel",
     "[| ?u \<^sup>@ ?k \<cdot> ?v = ?u \<^sup>@ ?m \<cdot> ?w; ?m <= ?k |]
      ==> ?u \<^sup>@ (?k - ?m) \<cdot> ?v = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 4),
                  template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 4),
                  template_var 4),
                template_var 1)),
            template_var 0)),
        template_inequation (less_equals, template_var 1, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 4),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))),
           template_var 2),
         template_var 0))),
    ("CoWBasic.pref_power",
     "[| ?t ~= \<epsilon>; ?u \<le>p ?t \<^sup>@ ?k |]
      ==> EX m. ?t \<^sup>@ m \<le>p ?u & ?u <p ?t \<^sup>@ m \<cdot> ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 6),
                    template_hole 3),
                  template_var 2),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("CoWBasic.suf_power",
     "[| ?t ~= \<epsilon>; ?u \<le>s ?t \<^sup>@ ?k |]
      ==> EX m. ?t \<^sup>@ m \<le>s ?u & ?u <s ?t \<cdot> ?t \<^sup>@ m",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 6),
                    template_hole 3),
                  template_var 2),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("CoWBasic.pref_power'",
     "[| ?u ~= \<epsilon>; ?u \<le>p ?t \<^sup>@ ?k |]
      ==> EX m. ?t \<^sup>@ m <p ?u & ?u \<le>p ?t \<^sup>@ m \<cdot> ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 6),
                    template_hole 3),
                  template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("CoWBasic.lcp_lenI",
     "[| ?i < min \<^bold>|?u\<^bold>| \<^bold>|?v\<^bold>|;
         take ?i ?u = take ?i ?v; ?u ! ?i ~= ?v ! ?i |]
      ==> ?i = \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 7, template_var 0))),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 2))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("CoWBasic.suf_mod_list'",
     "[| ?s \<le>ns concat ?ws; ?ws ~= \<epsilon> |]
      ==> EX j r.
             j < \<^bold>|?ws\<^bold>| &
             r \<cdot> concat (drop (Suc j) ?ws) = ?s & r \<le>ns ?ws ! j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app (template_hole 13, template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("CoWBasic.indeces_periodN",
     "[| ?w ~= \<epsilon>; ?n ~= 0;
         !!i. i + ?n < \<^bold>|?w\<^bold>| ==> ?w ! i = ?w ! (i + ?n) |]
      ==> periodN ?w ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CoWBasic.eqdE'",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?v\<^bold>| <= \<^bold>|?y\<^bold>|;
         !!t. [| ?x \<cdot> t = ?u; t \<cdot> ?v = ?y |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 3)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.eqdE",
     "[| ?x \<cdot> ?y = ?u \<cdot> ?v;
         \<^bold>|?x\<^bold>| <= \<^bold>|?u\<^bold>|;
         !!t. [| ?x \<cdot> t = ?u; t \<cdot> ?v = ?y |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 4),
          template_app (template_hole 1, template_var 2)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pref_mod_list'",
     "[| ?u \<le>np concat ?ws;
         !!j r.
            [| j < \<^bold>|?ws\<^bold>|; r \<le>np ?ws ! j;
               concat (take j ?ws) \<cdot> r = ?u |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pref_mod_list",
     "[| ?u <p concat ?ws;
         !!j r.
            [| j < \<^bold>|?ws\<^bold>|; r <p ?ws ! j;
               concat (take j ?ws) \<cdot> r = ?u |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.commE",
     "[| ?x \<cdot> ?y = ?y \<cdot> ?x;
         !!t m k. [| ?x = t \<^sup>@ k; ?y = t \<^sup>@ m |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.lcp_prefs",
     "[| \<^bold>|?u \<cdot> ?w \<and>\<^sub>p ?v \<cdot> ?w'\<^bold>|
         < \<^bold>|?u\<^bold>|;
         \<^bold>|?u \<cdot> ?w \<and>\<^sub>p ?v \<cdot> ?w'\<^bold>|
         < \<^bold>|?v\<^bold>| |]
      ==> ?u \<and>\<^sub>p ?v =
          ?u \<cdot> ?w \<and>\<^sub>p ?v \<cdot> ?w'",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))),
          template_app (template_hole 3, template_var 3)),
        template_inequation
         (less_than,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("CoWBasic.pref_mod_list_suf",
     "[| ?u \<le>np concat ?ws;
         !!j s.
            [| j < \<^bold>|?ws\<^bold>|; s <s ?ws ! j;
               concat (take (Suc j) ?ws) = ?u \<cdot> s |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pref_mod_power'",
     "[| ?u \<le>np ?w \<^sup>@ ?l;
         !!k z.
            [| k < ?l; z \<le>np ?w; ?w \<^sup>@ k \<cdot> z = ?u |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pref_mod_power",
     "[| ?u <p ?w \<^sup>@ ?l;
         !!k z.
            [| k < ?l; z <p ?w; ?w \<^sup>@ k \<cdot> z = ?u |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pref_comp_ruler",
     "[| ?w \<bowtie> ?u \<cdot> [?x]; ?w \<bowtie> ?v \<cdot> [?y];
         ?x ~= ?y; \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?w \<le>p ?u & ?w \<le>p ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 6)))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1))
           ))),
    ("CoWBasic.suf_comp_ruler",
     "[| ?w \<bowtie>\<^sub>s [?x] \<cdot> ?u;
         ?w \<bowtie>\<^sub>s [?y] \<cdot> ?v; ?x ~= ?y;
         \<^bold>|?u\<^bold>| = \<^bold>|?v\<^bold>| |]
      ==> ?w \<le>s ?u & ?w \<le>s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_hole 6)),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_hole 6)),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("CoWBasic.split_list_long",
     "[| 1 < \<^bold>|?us\<^bold>|; ?u : set ?us;
         !!xs ys.
            [| ?us = xs \<cdot> [?u] \<cdot> ys;
               xs \<cdot> ys ~= \<epsilon> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.distinct_letter_in",
     "[| ~ ?w \<in> [?a]*;
         !!m b q.
            [| [?a] \<^sup>@ m \<cdot> [b] \<cdot> q = ?w; b ~= ?a |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.pow_conjug",
     "[| ?t \<^sup>@ ?i \<cdot> ?r \<cdot> ?u = ?t \<^sup>@ ?k;
         ?r \<cdot> ?s = ?t |]
      ==> ?u \<cdot> ?t \<^sup>@ ?i \<cdot> ?r =
          (?s \<cdot> ?r) \<^sup>@ ?k",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_hole 0),
                    template_hole 2),
                  template_var 5),
                template_var 4)),
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_hole 2),
              template_var 5),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 0),
          template_var 5)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2),
                   template_var 5),
                 template_var 4)),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3)),
           template_var 1)))),
    ("CoWBasic.pref_powerE",
     "[| ?t ~= \<epsilon>; ?u \<le>p ?t \<^sup>@ ?k;
         !!m. [| ?t \<^sup>@ m \<le>p ?u; ?u <p ?t \<^sup>@ m \<cdot> ?t |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 5),
                    template_hole 2),
                  template_var 3),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.suf_powerE",
     "[| ?t ~= \<epsilon>; ?u \<le>s ?t \<^sup>@ ?k;
         !!m. [| ?t \<^sup>@ m \<le>s ?u; ?u <s ?t \<cdot> ?t \<^sup>@ m |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 5),
                    template_hole 2),
                  template_var 3),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.comm_pow_roots",
     "[| ?m ~= 0; ?k ~= 0 |]
      ==> (?u \<^sup>@ ?m \<cdot> ?v \<^sup>@ ?k =
           ?v \<^sup>@ ?k \<cdot> ?u \<^sup>@ ?m) =
          (?u \<cdot> ?v = ?v \<cdot> ?u)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2),
                   template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 2),
                 template_var 1),
               template_var 3))),
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("CoWBasic.pref_prod_cancel",
     "[| ?u \<le>p ?p \<cdot> ?w \<cdot> ?q;
         \<^bold>|?p\<^bold>| <= \<^bold>|?u\<^bold>|;
         \<^bold>|?u\<^bold>| <= \<^bold>|?p \<cdot> ?w\<^bold>|;
         !!r. [| ?u = ?p \<cdot> r; r \<le>p ?w |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 4),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2))),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.suf_prod_cancel",
     "[| ?u \<le>s (?q \<cdot> ?w) \<cdot> ?p;
         \<^bold>|?p\<^bold>| <= \<^bold>|?u\<^bold>|;
         \<^bold>|?u\<^bold>| <= \<^bold>|?w \<cdot> ?p\<^bold>|;
         !!r. [| ?u = r \<cdot> ?p; r \<le>s ?w |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 4),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.conjugation",
     "[| ?x \<cdot> ?z = ?z \<cdot> ?y; ?x ~= \<epsilon> |]
      ==> EX u v k.
             u \<cdot> v = ?x &
             v \<cdot> u = ?y & (u \<cdot> v) \<^sup>@ k \<cdot> u = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CoWBasic.non_prim",
     "[| ~ primitive ?w; ?w ~= \<epsilon>;
         !!r k.
            [| r ~= \<epsilon>; 1 < k; r \<^sup>@ k = ?w; ?w ~= r |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 1))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.mismatchI",
     "[| ~ ?u \<bowtie> ?v;
         ?i < min \<^bold>|?u\<^bold>| \<^bold>|?v\<^bold>|;
         take ?i ?u = take ?i ?v; ?u ! ?i ~= ?v ! ?i |]
      ==> mismatch_pair ?u ?v = (?u ! ?i, ?v ! ?i)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)
                )
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 7, template_var 1))),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("CoWBasic.lcp_letter_power",
     "[| ?w ~= \<epsilon>; ?w \<in> [?a]*;
         [?a] \<^sup>@ ?m \<cdot> [?b] \<le>p ?z; ?a ~= ?b |]
      ==> ?w \<cdot> ?z \<and>\<^sub>p ?z \<cdot> ?w = [?a] \<^sup>@ ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_hole 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 2, template_hole 7),
                          template_hole 3),
                        template_app
                         (template_app (template_hole 5, template_var 3),
                          template_hole 7)),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_hole 7))),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 4)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 7),
               template_hole 3),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_hole 7)),
           template_var 2)))),
    ("CoWBasic.pref_prod_cancel'",
     "[| ?u \<le>p ?p \<cdot> ?w \<cdot> ?q;
         \<^bold>|?p\<^bold>| < \<^bold>|?u\<^bold>|;
         \<^bold>|?u\<^bold>| <= \<^bold>|?p \<cdot> ?w\<^bold>|;
         !!r. [| ?u = ?p \<cdot> r; r \<le>p ?w; r ~= \<epsilon> |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 3),
          template_app (template_hole 5, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 4),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.suf_prod_cancel'",
     "[| ?u \<le>s (?q \<cdot> ?w) \<cdot> ?p;
         \<^bold>|?p\<^bold>| < \<^bold>|?u\<^bold>|;
         \<^bold>|?u\<^bold>| <= \<^bold>|?w \<cdot> ?p\<^bold>|;
         !!r. [| ?u = r \<cdot> ?p; r \<le>s ?w; r ~= \<epsilon> |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 4),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.distinct_letter_in_hd",
     "[| ~ ?w \<in> [hd ?w]*;
         !!m b q.
            [| [hd ?w] \<^sup>@ m \<cdot> [b] \<cdot> q = ?w; b ~= hd ?w;
               m ~= 0 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 10, template_var 1)),
                    template_hole 9))
                )
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.conjug_eqE",
     "[| ?x \<cdot> ?z = ?z \<cdot> ?y; ?x ~= \<epsilon>;
         !!u v k.
            [| u \<cdot> v = ?x; v \<cdot> u = ?y;
               (u \<cdot> v) \<^sup>@ k \<cdot> u = ?z; v ~= \<epsilon> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 3, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CoWBasic.rev_induct2",
     "[| ?P \<epsilon> \<epsilon>; !!x xs. ?P (xs \<cdot> [x]) \<epsilon>;
         !!y ys. ?P \<epsilon> (ys \<cdot> [y]);
         !!x xs y ys. ?P xs ys ==> ?P (xs \<cdot> [x]) (ys \<cdot> [y]) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("CoWBasic.conjug_eq_prim_root",
     "[| ?x \<cdot> ?z = ?z \<cdot> ?y; ?x ~= \<epsilon> |]
      ==> EX r s i n.
             (r \<cdot> s) \<^sup>@ Suc i = ?x &
             (s \<cdot> r) \<^sup>@ Suc i = ?y &
             (r \<cdot> s) \<^sup>@ n \<cdot> r = ?z &
             s ~= \<epsilon> & primitive (r \<cdot> s)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("CoWBasic.conjug_eq_prim_rootE",
     "[| ?x \<cdot> ?z = ?z \<cdot> ?y; ?x ~= \<epsilon>;
         !!r s i n.
            [| (r \<cdot> s) \<^sup>@ Suc i = ?x;
               (s \<cdot> r) \<^sup>@ Suc i = ?y;
               (r \<cdot> s) \<^sup>@ n \<cdot> r = ?z; s ~= \<epsilon>;
               primitive (r \<cdot> s) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 7, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]
