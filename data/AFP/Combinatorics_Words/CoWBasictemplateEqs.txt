   [("CoWBasic.rev_morph_idemp", "rev_morph (rev_morph ?f) = ?f",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("CoWBasic.lq_emp", "\<epsilon>\<inverse>\<^sup>>?u = ?u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CoWBasic.lq_code", "\<epsilon>\<inverse>\<^sup>>?v = ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CoWBasic.lq_self", "?u\<inverse>\<^sup>>?u = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("CoWBasic.rq_emp", "?u\<^sup><\<inverse>\<epsilon>  = ?u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CoWBasic.rq_sefl", "?u\<^sup><\<inverse>?u  = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("CoWBasic.mult_1_left", "\<epsilon> \<cdot> ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CoWBasic.mult_1_right", "?a \<cdot> \<epsilon> = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CoWBasic.lcp_simps", "\<epsilon> \<and>\<^sub>p ?uv = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("CoWBasic.lcp_simps", "?uu \<and>\<^sub>p \<epsilon> = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("CoWBasic.lcp_self", "?w \<and>\<^sub>p ?w = ?w",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("CoWBasic.sing_len", "\<^bold>|[?a]\<^bold>| = 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("CoWBasic.prim_rev_iff", "primitive (rev ?u) = primitive ?u",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("CoWBasic.concat_sing'", "concat [?r] = ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("CoWBasic.take_self", "take \<^bold>|?w\<^bold>| ?w = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("CoWBasic.prim_rotate_conv", "primitive ?w = primitive (rotate ?n ?w)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.lcp_sym", "?u \<and>\<^sub>p ?v = ?v \<and>\<^sub>p ?u",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("CoWBasic.lq_triv", "?u\<inverse>\<^sup>>(?u \<cdot> ?z) = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CoWBasic.rq_triv", "(?z \<cdot> ?u)\<^sup><\<inverse>?u  = ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 1)),
    ("CoWBasic.emp_pow", "\<epsilon> \<^sup>@ ?n = \<epsilon>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_hole 1),
         template_var 0),
       template_hole 1)),
    ("CoWBasic.power_one_right", "?a \<^sup>@ 1 = ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_hole 0),
       template_var 0)),
    ("CoWBasic.pow_one_id", "?u \<^sup>@ 1 = ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_hole 0),
       template_var 0)),
    ("CoWBasic.pow_zero", "?u \<^sup>@ 0 = \<epsilon>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_hole 0),
       template_hole 2)),
    ("CoWBasic.periodN_rev_conv", "periodN (rev ?w) ?n = periodN ?w ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.non_comp_parallel",
     "(~ ?u \<bowtie> ?v) = (?u \<parallel> ?v)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.rev_morph_arg", "rev_morph ?f ?u = rev (?f (rev ?u))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.rev_morph_arg_rev", "rev_morph ?f (rev ?u) = rev (?f ?u)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("CoWBasic.rev_sing", "rev [?x] = [?x]",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("CoWBasic.drop_pref", "drop \<^bold>|?u\<^bold>| (?u \<cdot> ?w) = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CoWBasic.power_Suc0_right", "?a \<^sup>@ Suc 0 = ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("CoWBasic.swap_len",
     "\<^bold>|?u \<cdot> ?v\<^bold>| = \<^bold>|?v \<cdot> ?u\<^bold>|",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.npref_rev_suf_iff",
     "(?s \<le>np ?w) = rev ?s \<le>ns rev ?w",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.nsuf_rev_pref_iff",
     "?s \<le>ns ?w = (rev ?s \<le>np rev ?w)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.pref_rev_suf_iff", "(?u \<le>p ?v) = rev ?u \<le>s rev ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.spref_rev_suf_iff", "(?s <p ?w) = (rev ?s <s rev ?w)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.ssuf_rev_pref_iff", "(?xs <s ?ys) = (rev ?xs <p rev ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.suf_rev_pref_iff",
     "?xs \<le>s ?ys = (rev ?xs \<le>p rev ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.border_rev_conv", "rev ?x \<le>b rev ?w = ?x \<le>b ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.conjug_rev_conv", "rev ?u \<sim> rev ?v = ?u \<sim> ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.suf_comp_rev_pref_comp",
     "(rev ?w \<bowtie> rev ?v) = (?w \<bowtie>\<^sub>s ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.prim_root_rev_conv",
     "rev ?x \<in>\<^sub>p rev ?r * = ?x \<in>\<^sub>p ?r *",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.root_rev_iff", "rev ?u \<in> rev ?t* = ?u \<in> ?t*",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.add_root", "?z \<cdot> ?w \<in> ?z* = ?w \<in> ?z*",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("CoWBasic.pref_comp_rev_suf_comp",
     "(rev ?w \<bowtie>\<^sub>s rev ?v) = (?w \<bowtie> ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.lcp_pref_conv",
     "(?u \<and>\<^sub>p ?v = ?u) = (?u \<le>p ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.rev_fac", "rev ?u \<le>f rev ?v = ?u \<le>f ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.hd_word", "?a # ?ws = [?a] \<cdot> ?ws",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("CoWBasic.takedrop", "take ?n ?xs \<cdot> drop ?n ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("CoWBasic.concat_map_sing_ident", "concat (map (%x. [x]) ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_var 0)),
    ("CoWBasic.sing_pow_len", "\<^bold>|[?r] \<^sup>@ ?l\<^bold>| = ?l",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 2)),
           template_var 0)),
       template_var 0)),
    ("CoWBasic.pref_take_conv",
     "(take \<^bold>|?r\<^bold>| ?w = ?r) = (?r \<le>p ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CoWBasic.lq_rev_rq",
     "rev ?v\<inverse>\<^sup>>rev ?u = rev (?u\<^sup><\<inverse>?v )",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.rq_rev_lq",
     "rev ?v\<^sup><\<inverse>rev ?u  = rev (?u\<inverse>\<^sup>>?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.concat_morph",
     "concat ?xs \<cdot> concat ?ys = concat (?xs \<cdot> ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.pow_is_concat_replicate",
     "?u \<^sup>@ ?n = concat (replicate ?n ?u)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.pow_len",
     "\<^bold>|?u \<^sup>@ ?k\<^bold>| = ?k * \<^bold>|?u\<^bold>|",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 4, template_var 1)))),
    ("CoWBasic.conjug_rotate_iff",
     "?u \<sim> ?v = (EX n. ?v = rotate n ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("CoWBasic.pref_compIff",
     "(?u \<bowtie> ?v) = (?u \<le>p ?v | ?v \<le>p ?u)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CoWBasic.comp_ext",
     "(?z \<cdot> ?w1.0 \<bowtie> ?z \<cdot> ?w2.0) =
      (?w1.0 \<bowtie> ?w2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.suf_comp_ext",
     "(?w1.0 \<cdot> ?z \<bowtie>\<^sub>s ?w2.0 \<cdot> ?z) =
      (?w1.0 \<bowtie>\<^sub>s ?w2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("CoWBasic.cancel", "(?xs \<cdot> ?ys = ?xs \<cdot> ?zs) = (?ys = ?zs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("CoWBasic.cancel_right",
     "(?ys \<cdot> ?xs = ?zs \<cdot> ?xs) = (?ys = ?zs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_equation (template_var 2, template_var 0))),
    ("CoWBasic.pref_cancel_conv",
     "(?xs \<cdot> ?ys \<le>p ?xs \<cdot> ?zs) = (?ys \<le>p ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.suf_cancel_eq",
     "?ys \<cdot> ?xs \<le>s ?zs \<cdot> ?xs = ?ys \<le>s ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("CoWBasic.del_emp_concat",
     "concat ?us = concat (filter (%x. x ~= \<epsilon>) ?us)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("CoWBasic.rev_morph_sing", "rev_morph ?f [?a] = rev (?f [?a])",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 0,
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("CoWBasic.lassoc",
     "?xs \<cdot> ?ys \<cdot> ?zs = (?xs \<cdot> ?ys) \<cdot> ?zs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.mult_assoc",
     "(?a \<cdot> ?b) \<cdot> ?c = ?a \<cdot> ?b \<cdot> ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.rassoc",
     "(?xs \<cdot> ?ys) \<cdot> ?zs = ?xs \<cdot> ?ys \<cdot> ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CoWBasic.lq_triv'",
     "?u \<cdot> ?u\<inverse>\<^sup>>(?u \<cdot> ?z) = ?u \<cdot> ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.rq_triv'",
     "(?z \<cdot> ?u)\<^sup><\<inverse>?u  \<cdot> ?u = ?z \<cdot> ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("CoWBasic.power2_eq_square", "CoWBasic.power2 ?a = ?a \<cdot> ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app (template_hole 3, template_var 0), template_var 0))),
    ("CoWBasic.pow2_list", "CoWBasic.power2 ?u = ?u \<cdot> ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app (template_hole 3, template_var 0), template_var 0))),
    ("CoWBasic.funpow_times_power",
     "(\<cdot>) ?x ^^ ?f ?x = (\<cdot>) (?x \<^sup>@ ?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 0),
           template_app (template_var 1, template_var 0))))),
    ("CoWBasic.sing_pow_empty",
     "([?a] \<^sup>@ ?n = \<epsilon>) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 4)),
           template_var 0),
         template_hole 4),
       template_equation (template_var 0, template_hole 0))),
    ("CoWBasic.rev_pow", "rev (?x \<^sup>@ ?m) = rev ?x \<^sup>@ ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("CoWBasic.lcp_take_eq",
     "take \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ?u =
      take \<^bold>|?u \<and>\<^sub>p ?v\<^bold>| ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("CoWBasic.power3_eq_cube",
     "?a \<^sup>@ 3 = (?a \<cdot> ?a) \<cdot> ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 0)),
         template_var 0))),
    ("CoWBasic.lcp_ext_left",
     "?z \<cdot> ?u \<and>\<^sub>p ?z \<cdot> ?v =
      ?z \<cdot> (?u \<and>\<^sub>p ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("CoWBasic.power_Suc2",
     "?a \<^sup>@ Suc ?n = ?a \<^sup>@ ?n \<cdot> ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 1),
             template_var 0)),
         template_var 1))),
    ("CoWBasic.pow_Suc_list",
     "?u \<^sup>@ Suc ?n = ?u \<cdot> ?u \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.pow_Suc2_list",
     "?u \<^sup>@ Suc ?n = ?u \<^sup>@ ?n \<cdot> ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 1),
             template_var 0)),
         template_var 1))),
    ("CoWBasic.concat_sing_pow",
     "concat ([?a] \<^sup>@ ?k) = ?a \<^sup>@ ?k",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 5)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0))),
    ("CoWBasic.rotate_root_self",
     "rotate \<^bold>|?r\<^bold>| (?r \<^sup>@ ?k) = ?r \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0))),
    ("CoWBasic.power_commutes",
     "?a \<^sup>@ ?n \<cdot> ?a = ?a \<cdot> ?a \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.pow_commutes_list",
     "?u \<^sup>@ ?n \<cdot> ?u = ?u \<cdot> ?u \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.rotate_pow_comm",
     "rotate ?n (?u \<^sup>@ ?k) = rotate ?n ?u \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.all_set_sing_pow",
     "(ALL b. b : set ?w --> b = ?a) = ?w \<in> [?a]*",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CoWBasic.lq_code",
     "(?a # ?u)\<inverse>\<^sup>>(?b # ?v) =
      (if ?a = ?b then ?u\<inverse>\<^sup>>?v else undefined)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("CoWBasic.power4_eq_xxxx",
     "?x \<^sup>@ 4 = ((?x \<cdot> ?x) \<cdot> ?x) \<cdot> ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_hole 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 0)),
             template_var 0)),
         template_var 0))),
    ("CoWBasic.rotate_pow_self",
     "rotate (?l * \<^bold>|?u\<^bold>|) (?u \<^sup>@ ?k) = ?u \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0))),
    ("CoWBasic.sing_pow_hd_tl",
     "?c # ?w \<in> [?a]* = (?c = ?a & ?w \<in> [?a]*)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_dunno)),
    ("CoWBasic.rotate_class_rotate'",
     "(EX n. rotate n ?w = ?u) = (EX n. rotate n (rotate ?l ?w) = ?u)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("CoWBasic.comm_root",
     "(?x \<cdot> ?y = ?y \<cdot> ?x) = (EX t. ?x \<in> t* & ?y \<in> t*)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app (template_hole 2, t_empty))),
    ("CoWBasic.power_mult",
     "?a \<^sup>@ (?m * ?n) = (?a \<^sup>@ ?m) \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.pow_mult_list",
     "?u \<^sup>@ (?m * ?n) = (?u \<^sup>@ ?m) \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("CoWBasic.mismatch_pair_lcp",
     "mismatch_pair ?u ?v =
      (?u ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|,
       ?v ! \<^bold>|?u \<and>\<^sub>p ?v\<^bold>|)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("CoWBasic.per_pref",
     "?x \<le>p ?r\<^sup>\<omega> =
      ((EX k. ?x \<le>p ?r \<^sup>@ k) & ?r ~= \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("CoWBasic.rotate_pow_mod",
     "rotate ?n (?u \<^sup>@ ?k) =
      rotate (?n mod \<^bold>|?u\<^bold>|) (?u \<^sup>@ ?k)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("CoWBasic.lcp_simps",
     "?x # ?xs \<and>\<^sub>p ?y # ?ys =
      (if ?x = ?y then ?x # (?xs \<and>\<^sub>p ?ys) else \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("CoWBasic.rotate_conj_pow",
     "rotate \<^bold>|?u\<^bold>| ((?u \<cdot> ?v) \<^sup>@ ?k) =
      (?v \<cdot> ?u) \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("CoWBasic.last_no_split",
     "(?xs \<le>p ?ys \<cdot> [?y]) =
      (?xs = ?ys \<cdot> [?y] | ?xs \<le>p ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_hole 2)))
            )],
       template_dunno)),
    ("CoWBasic.dropWhile_sing_pow",
     "(dropWhile (%x. x = ?a) ?w = \<epsilon>) =
      (?w = [?a] \<^sup>@ \<^bold>|?w\<^bold>|)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_var 0),
         template_hole 4),
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 4),
               template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 4)),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.takeWhile_sing_pow",
     "(takeWhile (%x. x = ?a) ?w = ?w) =
      (?w = [?a] \<^sup>@ \<^bold>|?w\<^bold>|)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_var 0),
         template_var 0),
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 3)),
           template_app (template_hole 0, template_var 0))))),
    ("CoWBasic.comm_rev_iff",
     "(rev ?u \<cdot> rev ?v = rev ?v \<cdot> rev ?u) =
      (?u \<cdot> ?v = ?v \<cdot> ?u)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("CoWBasic.power_add",
     "?a \<^sup>@ (?m + ?n) = ?a \<^sup>@ ?m \<cdot> ?a \<^sup>@ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 2),
           template_var 0)))),
    ("CoWBasic.pow_add_list",
     "?x \<^sup>@ (?a + ?b) = ?x \<^sup>@ ?a \<cdot> ?x \<^sup>@ ?b",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 2),
           template_var 0)))),
    ("CoWBasic.power_numeral_even",
     "?z \<^sup>@ numeral (num.Bit0 ?w) =
      (let w = ?z \<^sup>@ numeral ?w in w \<cdot> w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_var 0))),
         t_empty))),
    ("CoWBasic.shift_pow",
     "(?u \<cdot> ?v) \<^sup>@ ?k \<cdot> ?u =
      ?u \<cdot> (?v \<cdot> ?u) \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_var 2),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("CoWBasic.periodN_pref",
     "periodN ?w ?n =
      (EX k r. ?w \<le>np r \<^sup>@ k & \<^bold>|r\<^bold>| = ?n)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("CoWBasic.power_eq_if",
     "?p \<^sup>@ ?m =
      (if ?m = 0 then \<epsilon> else ?p \<cdot> ?p \<^sup>@ (?m - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("CoWBasic.pow_eq_if_list'",
     "?p \<^sup>@ ?m =
      (if ?m = 0 then \<epsilon> else ?p \<^sup>@ (?m - 1) \<cdot> ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("CoWBasic.pow_slide",
     "?u \<cdot> (?v \<cdot> ?u) \<^sup>@ ?n \<cdot> ?v =
      (?u \<cdot> ?v) \<^sup>@ Suc ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 3),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2)),
               template_var 0)),
           template_var 1)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("CoWBasic.rotate_class_rotate",
     "{u. EX n. rotate n ?w = u} = {u. EX n. rotate n (rotate ?l ?w) = u}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("CoWBasic.power_numeral_odd",
     "?z \<^sup>@ numeral (num.Bit1 ?w) =
      (let w = ?z \<^sup>@ numeral ?w in (?z \<cdot> w) \<cdot> w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_var 0))),
         t_empty))),
    ("CoWBasic.power_even_eq",
     "?a \<^sup>@ (2 * ?n) = CoWBasic.power2 (?a \<^sup>@ ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("CoWBasic.pow_comm",
     "?t \<^sup>@ ?k \<cdot> ?t \<^sup>@ ?m =
      ?t \<^sup>@ ?m \<cdot> ?t \<^sup>@ ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 2),
           template_var 1)))),
    ("CoWBasic.power_odd_eq",
     "?a \<^sup>@ Suc (2 * ?n) =
      ?a \<cdot> CoWBasic.power2 (?a \<^sup>@ ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_hole 5),
           template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 0))),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("CoWBasic.per_eq",
     "?x \<le>p ?r\<^sup>\<omega> =
      ((EX k z. ?r \<^sup>@ k \<cdot> z = ?x & z \<le>p ?r) &
       ?r ~= \<epsilon>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("CoWBasic.pref_pow_conv",
     "(EX k. ?x \<le>p ?r \<^sup>@ k) =
      (EX k z. ?r \<^sup>@ k \<cdot> z = ?x & z \<le>p ?r)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 7, t_empty))),
    ("CoWBasic.comm",
     "(?x \<cdot> ?y = ?y \<cdot> ?x) =
      (EX t m k. ?x = t \<^sup>@ k & ?y = t \<^sup>@ m)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 0), template_var 1)),
       template_app (template_hole 4, t_empty)))]
