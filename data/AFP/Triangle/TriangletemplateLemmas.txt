   [("Triangle.eval_power", "?x ^ numeral ?n = ?x * ?x ^ pred_numeral ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Triangle.gather_squares", "?a * (?a * ?b) = ?a\<^sup>2 * ?b",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))),
         template_var 0))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?a1.0 ?b1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?a1.0 ?c1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?b1.0 ?a1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?b1.0 ?a1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?b1.0 ?c1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?c1.0 ?a1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?c1.0 ?a1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?c1.0 ?b1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      dist ?c1.0 ?b1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Triangle.isosceles_triangle",
     "dist ?a ?c = dist ?b ?c ==> angle ?b ?a ?c = angle ?a ?b ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?a1.0 ?b1.0 ?c1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?a1.0 ?c1.0 ?b1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?a1.0 ?c1.0 ?b1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?b1.0 ?a1.0 ?c1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?b1.0 ?c1.0 ?a1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?c1.0 ?a1.0 ?b1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?c1.0 ?a1.0 ?b1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?c1.0 ?b1.0 ?a1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangleD",
     "congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0 ==>
      angle ?c1.0 ?b1.0 ?a1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2)))),
    ("Triangle.sine_law_triangle",
     "sin (angle ?a ?b ?c) * dist ?b ?c =
      sin (angle ?b ?a ?c) * dist ?a ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Triangle.isosceles_triangle_orthogonal_on_midpoint",
     "dist ?C ?A = dist ?C ?B ==>
      orthogonal (?C - midpoint ?A ?B) (?A - midpoint ?A ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Triangle.thales",
     "dist ?B (midpoint ?A ?C) = dist ?A ?C / 2 ==>
      orthogonal (?A - ?B) (?C - ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0)),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Triangle.sine_law_triangle'",
     "?b ~= ?c ==>
      sin (angle ?a ?b ?c) =
      sin (angle ?b ?a ?c) * dist ?a ?c / dist ?b ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 0),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Triangle.sine_law_triangle''",
     "?b ~= ?c ==>
      sin (angle ?c ?b ?a) =
      sin (angle ?b ?a ?c) * dist ?a ?c / dist ?b ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 0),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Triangle.isosceles_triangle_converse",
     "[| angle ?a ?b ?c = angle ?b ?a ?c; ~ collinear {?a, ?b, ?c} |]
      ==> dist ?a ?c = dist ?b ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_app
           (template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_app
                       (template_app (template_hole 2, template_var 0),
                        template_hole 1))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Triangle.Pythagoras",
     "orthogonal (?A - ?C) (?B - ?C) ==>
      (dist ?B ?C)\<^sup>2 + (dist ?C ?A)\<^sup>2 = (dist ?A ?B)\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Triangle.angle_sum_triangle",
     "?a ~= ?b | ?b ~= ?c | ?a ~= ?c ==>
      angle ?c ?a ?b + angle ?a ?b ?c + angle ?b ?c ?a = pi",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0))),
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_hole 0))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?a1.0 ?b1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?a1.0 ?c1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?b1.0 ?a1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?b1.0 ?a1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?b1.0 ?c1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?c1.0 ?a1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?c1.0 ?a1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?c1.0 ?b1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> dist ?c1.0 ?b1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangleI_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 1),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sss",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0 |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?a1.0 ?b1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 5), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?a1.0 ?c1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 5), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?b1.0 ?a1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?b1.0 ?a1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?b1.0 ?c1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?c1.0 ?a1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 5),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?c1.0 ?a1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 5),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?c1.0 ?b1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> dist ?c1.0 ?b1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangleI_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 1),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Triangle.cosine_law_vector",
     "(norm (?u - ?v))\<^sup>2 =
      (norm ?u)\<^sup>2 + (norm ?v)\<^sup>2 -
      2 * norm ?u * norm ?v * cos (vangle ?u ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 0))),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_var 1)),
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_hole 6)))),
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 0)),
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6))))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 7, template_hole 6))),
                   template_app (template_hole 10, template_var 1))),
               template_app (template_hole 10, template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_sas",
     "[| dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0 |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 3)))),
    ("Triangle.cosine_law_triangle''",
     "cos (angle ?b ?a ?c) =
      ((dist ?a ?b)\<^sup>2 + (dist ?a ?c)\<^sup>2 - (dist ?b ?c)\<^sup>2) /
      (2 * dist ?a ?b * dist ?a ?c)",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_var 2)),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_hole 2))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 2))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))))),
    ("Triangle.cosine_law_triangle",
     "(dist ?b ?c)\<^sup>2 =
      (dist ?a ?b)\<^sup>2 + (dist ?a ?c)\<^sup>2 -
      2 * dist ?a ?b * dist ?a ?c * cos (angle ?b ?a ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_var 2)),
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_hole 6)))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_var 1)),
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6))))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 7, template_hole 6))),
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)))))),
    ("Triangle.cosine_law_triangle'",
     "2 * dist ?a ?b * dist ?a ?c * cos (angle ?b ?a ?c) =
      (dist ?a ?b)\<^sup>2 + (dist ?a ?c)\<^sup>2 - (dist ?b ?c)\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 7))),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 2),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_hole 7)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 8, template_hole 7))))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app (template_hole 8, template_hole 7)))))),
    ("Triangle.similar_triangle_aa",
     "[| ?b1.0 ~= ?c1.0; ?b2.0 ~= ?c2.0;
         angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0 |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4)),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5),
            template_var 4),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?b1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?c1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?a1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?a1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?c1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?a1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?a1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?b1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?b1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangleI_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_hole 1))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?b1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?a1.0 ?c1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 5), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?a1.0 = dist ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?a1.0 = dist ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?b1.0 ?c1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?a1.0 = dist ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?a1.0 = dist ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 5),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?b1.0 = dist ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> dist ?c1.0 ?b1.0 = dist ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangleI_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> congruent_triangle ?a1.0 ?b1.0 ?c1.0 ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_hole 1))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 3),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 3),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_asa",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 5),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?b1.0 ?c1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 3),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?a1.0 ?c1.0 ?b1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_var 3),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?a1.0 ?c1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?a2.0 ?c2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?b2.0 ?a2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?a1.0 ?b1.0 = angle ?c2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?a2.0 ?b2.0 ?c2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Triangle.congruent_triangle_aas",
     "[| angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0;
         angle ?b1.0 ?c1.0 ?a1.0 = angle ?b2.0 ?c2.0 ?a2.0;
         dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;
         ~ collinear {?a1.0, ?b1.0, ?c1.0} |]
      ==> angle ?c1.0 ?b1.0 ?a1.0 = angle ?c2.0 ?b2.0 ?a2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_hole 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1),
           template_var 2))))]
