   [("Angles.vangle_nonneg", "0 <= vangle ?u ?v",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Angles.vangle_le_pi", "vangle ?u ?v <= pi",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_hole 0)),
    ("Angles.angle_nonneg", "0 <= angle ?a ?b ?c",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Angles.sin_vangle_nonneg", "0 <= sin (vangle ?u ?v)",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Angles.angle_le_pi", "angle ?a ?b ?c <= pi",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Angles.vangle_commute", "vangle ?u ?v = vangle ?v ?u",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Angles.sin_angle_nonneg", "0 <= sin (angle ?a ?b ?c)",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Angles.collinear_translate_iff",
     "collinear ((+) ?a ` ?A) = collinear ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Angles.vangle_0_left", "vangle (0::?'a) ?v = pi / 2",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5), template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Angles.vangle_0_right", "vangle ?u (0::?'b) = pi / 2",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 0), template_hole 5),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Angles.angle_commute", "angle ?a ?b ?c = angle ?c ?b ?a",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Angles.angle_refl", "angle ?a ?a ?b = pi / 2",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Angles.angle_refl", "angle ?a ?b ?b = pi / 2",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Angles.vangle_inverse",
     "vangle (- ?v\<^sub>1) ?v\<^sub>2 = pi - vangle ?v\<^sub>1 ?v\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Angles.vangle_refl", "?u ~= (0::?'a) ==> vangle ?u ?u = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Angles.angle_refl_mid", "?a ~= ?b ==> angle ?a ?b ?a = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Angles.orthogonal_iff_vangle",
     "orthogonal ?u ?v = (vangle ?u ?v = pi / 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Angles.cos_vangle",
     "cos (vangle ?u ?v) = ?u \<bullet> ?v / (norm ?u * norm ?v)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Angles.vangle_scales",
     "0 < ?c ==>
      vangle (?c *\<^sub>R ?v\<^sub>1) ?v\<^sub>2 =
      vangle ?v\<^sub>1 ?v\<^sub>2",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Angles.sin_vangle_zero_iff",
     "(sin (vangle ?u ?v) = 0) = (vangle ?u ?v : {0, pi})",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Angles.vangle_eq_0D",
     "vangle ?u ?v = 0 ==> norm ?u *\<^sub>R ?v = norm ?v *\<^sub>R ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Angles.sin_angle_zero_iff",
     "(sin (angle ?a ?b ?c) = 0) = (angle ?a ?b ?c : {0, pi})",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1),
               template_var 0))),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Angles.orthogonal_iff_angle",
     "orthogonal (?A - ?B) (?C - ?B) = (angle ?A ?B ?C = pi / 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Angles.vangle_eq_piD",
     "vangle ?u ?v = pi ==>
      norm ?u *\<^sub>R ?v + norm ?v *\<^sub>R ?u = (0::?'a)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 0),
          template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 1)),
         template_hole 0))),
    ("Angles.not_collinear_vangle",
     "~ collinear {0::?'a, ?u, ?v} ==> vangle ?u ?v : {0<..<pi}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_hole 5))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("Angles.cos_vangle_eqD",
     "cos (vangle ?u ?v) = cos (vangle ?w ?x) ==>
      vangle ?u ?v = vangle ?w ?x",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Angles.angle_eq_pi_imp_dist_additive",
     "angle ?a ?b ?c = pi ==> dist ?a ?c = dist ?a ?b + dist ?b ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Angles.not_collinear_angle",
     "~ collinear {?a, ?b, ?c} ==> angle ?a ?b ?c : {0<..<pi}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_app
                       (template_app (template_hole 6, template_var 0),
                        template_hole 5))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("Angles.vangle_collinear",
     "vangle ?u ?v : {0, pi} ==> collinear {0::?'a, ?u, ?v}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 7, template_hole 5),
                  template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 0))))
           ))),
    ("Angles.angle_collinear",
     "angle ?a ?b ?c : {0, pi} ==> collinear {?a, ?b, ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_app (template_hole 6, template_hole 4),
                  template_hole 3)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Angles.angle_altdef",
     "angle ?a ?b ?c =
      arccos ((?a - ?b) \<bullet> (?c - ?b) / (dist ?a ?b * dist ?c ?b))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Angles.cos_angle",
     "cos (angle ?a ?b ?c) =
      (?a - ?b) \<bullet> (?c - ?b) / (dist ?a ?b * dist ?c ?b)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Angles.inner_conv_angle",
     "(?a - ?b) \<bullet> (?c - ?b) =
      dist ?a ?b * dist ?c ?b * cos (angle ?a ?b ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Angles.cos_angle_eqD",
     "cos (angle ?a ?b ?c) = cos (angle ?d ?e ?f) ==>
      angle ?a ?b ?c = angle ?d ?e ?f",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4),
              template_var 3)),
          template_app
           (template_hole 2,
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Angles.cos_minus1_imp_pi",
     "[| cos ?x = - 1; 0 <= ?x; ?x < 3 * pi |] ==> ?x = pi",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_hole 8)),
        template_inequation (less_equals, template_hole 6, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_hole 1))),
            template_hole 0))],
       template_equation (template_var 0, template_hole 0))),
    ("Angles.strictly_between_implies_angle_eq_pi",
     "[| between (?A, ?C) ?B; ?A ~= ?B; ?B ~= ?C |]
      ==> angle ?A ?B ?C = pi",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Angles.dist_triangle_eq",
     "(dist ?a ?c = dist ?a ?b + dist ?b ?c) =
      (dist ?a ?b *\<^sub>R (?c - ?b) + dist ?b ?c *\<^sub>R (?a - ?b) =
       (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1))),
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("Angles.angle_inverse",
     "[| between (?A, ?C) ?B; ?A ~= ?B; ?B ~= ?C |]
      ==> angle ?A ?B ?D = pi - angle ?C ?B ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Angles.vangle_eqI",
     "[| ?u ~= (0::?'a); ?v ~= (0::?'a); ?w ~= (0::?'b); ?x ~= (0::?'b);
         ?u \<bullet> ?v * norm ?w * norm ?x =
         ?w \<bullet> ?x * norm ?u * norm ?v |]
      ==> vangle ?u ?v = vangle ?w ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 10)),
        template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (template_equation (template_var 0, template_hole 8)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2)),
                template_app (template_hole 4, template_var 1))),
            template_app (template_hole 4, template_var 0)),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0)),
                template_app (template_hole 2, template_var 3))),
            template_app (template_hole 2, template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Angles.angle_eqI",
     "[| ?a ~= ?b; ?a ~= ?c; ?d ~= ?e; ?d ~= ?f;
         (?b - ?a) \<bullet> (?c - ?a) * dist ?d ?e * dist ?d ?f =
         (?e - ?d) \<bullet> (?f - ?d) * dist ?a ?b * dist ?a ?c |]
      ==> angle ?b ?a ?c = angle ?e ?d ?f",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4)),
        template_negation
         (template_equation (template_var 5, template_var 3)),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 5)),
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 5))),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1))),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 1),
                        template_var 2)),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 2))),
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4))),
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 3)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0))))]
