   [("Wasm_Checker_Types.ct_list_eq_refl", "ct_list_eq ?xs ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Wasm_Checker_Types.ct_prefix_nil", "ct_prefix [] ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Wasm_Checker_Types.ct_suffix_nil", "ct_suffix [] ?ts",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Wasm_Checker_Types.ct_suffix_refl", "ct_suffix ?ts ?ts",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Wasm_Checker_Types.c_types_agree_top1",
     "c_types_agree (TopType []) ?ts",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)
         )),
    ("Wasm_Checker_Types.c_types_agree_id", "c_types_agree (Type ?ts) ?ts",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Wasm_Checker_Types.ct_prefix_code", "ct_prefix [] ?xs = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Wasm_Checker_Types.ct_suffix_cons_it", "ct_suffix ?xs (?xs' @ ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Wasm_Checker_Types.ct_list_eq_exists",
     "EX ys. ct_list_eq ?xs (to_ct_list ys)",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Wasm_Checker_Types.ct_suffix_exists",
     "EX ts_c. ct_suffix ?x1.0 (to_ct_list ts_c)",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Wasm_Checker_Types.ct_prefix_nil", "~ ct_prefix (?x # ?xs) []",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)
             )
         )),
    ("Wasm_Checker_Types.produce_nil", "produce ?ts (Type []) = ?ts",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Wasm_Checker_Types.ct_prefix_code", "ct_prefix (?x # ?xs) [] = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Wasm_Checker_Types.ct_suffix_singleton_any", "ct_suffix [TAny] [?t]",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))
         )),
    ("Wasm_Checker_Types.ct_eq_commute", "ct_eq ?x ?y ==> ct_eq ?y ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Wasm_Checker_Types.ct_list_eq_commute",
     "ct_list_eq ?xs ?ys ==> ct_list_eq ?ys ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Wasm_Checker_Types.ct_suffix_to_ct_prefix",
     "ct_suffix ?xs ?ys = ct_prefix (rev ?xs) (rev ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Wasm_Checker_Types.ct_list_eq_ts_conv_eq",
     "ct_list_eq (to_ct_list ?ts) (to_ct_list ?ts') = (?ts = ?ts')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Wasm_Checker_Types.ct_suffix_ts_conv_suffix",
     "ct_suffix (to_ct_list ?ts) (to_ct_list ?ts') = suffix ?ts ?ts'",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Wasm_Checker_Types.type_update_empty",
     "type_update ?ts ?cons (Type []) = consume ?ts ?cons",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Wasm_Checker_Types.ct_list_eq_length",
     "ct_list_eq ?xs ?ys ==> length ?xs = length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Wasm_Checker_Types.ct_suffix_length",
     "ct_suffix ?ts ?ts' ==> length ?ts <= length ?ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Wasm_Checker_Types.ct_suffix_less",
     "ct_suffix (?xs @ ?xs') ?ys ==> ct_suffix ?xs' ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Wasm_Checker_Types.c_types_agree_not_bot_exists",
     "?ts ~= Bot ==> EX ts_c. c_types_agree ?ts ts_c",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Types.ct_suffix_singleton",
     "0 < length ?cts ==> ct_suffix [TAny] ?cts",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Wasm_Checker_Types.ct_list_eq_take",
     "ct_list_eq ?xs ?ys ==> ct_list_eq (take ?n ?xs) (take ?n ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Wasm_Checker_Types.c_types_agree_top2",
     "ct_list_eq ?ts (to_ct_list ?ts'') ==>
      c_types_agree (TopType ?ts) (?ts' @ ?ts'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Wasm_Checker_Types.type_update_select_top_exists",
     "type_update_select ?xs = TopType ?tm ==> EX tn. ?xs = TopType tn",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Wasm_Checker_Types.ct_suffix_imp_ct_list_eq",
     "ct_suffix ?xs ?ys ==>
      ct_list_eq (drop (length ?ys - length ?xs) ?ys) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 0)),
                     template_app (template_hole 0, template_var 1))),
                 template_var 0)),
             template_var 1)
           ))),
    ("Wasm_Checker_Types.to_ct_list_append",
     "to_ct_list ?ts = ?as @ ?bs ==> EX as'. to_ct_list as' = ?as",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Wasm_Checker_Types.to_ct_list_append",
     "to_ct_list ?ts = ?as @ ?bs ==> EX bs'. to_ct_list bs' = ?bs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Wasm_Checker_Types.consume_type_type",
     "consume ?xs ?cons = Type ?t_int ==> EX tn. ?xs = Type tn",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Wasm_Checker_Types.produce_type_type",
     "produce ?xs ?cons = Type ?tm ==> EX tn. ?xs = Type tn",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Wasm_Checker_Types.ct_eq_common_tsome",
     "ct_eq ?x ?y = (EX t. ct_eq ?x (TSome t) & ct_eq (TSome t) ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Wasm_Checker_Types.ct_list_eq_common_tsome_list",
     "ct_list_eq ?xs ?ys =
      (EX zs.
          ct_list_eq ?xs (to_ct_list zs) & ct_list_eq (to_ct_list zs) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Wasm_Checker_Types.Cons_ct_prefix_Cons",
     "ct_prefix (?x # ?xs) (?y # ?ys) = (ct_eq ?x ?y & ct_prefix ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Wasm_Checker_Types.ct_list_eq_shared",
     "[| ct_list_eq ?xs (to_ct_list ?as); ct_list_eq ?ys (to_ct_list ?as) |]
      ==> ct_list_eq ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_hole 0, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Wasm_Checker_Types.ct_prefixI",
     "[| ?ys = ?as @ ?zs; ct_list_eq ?as ?xs |] ==> ct_prefix ?xs ?ys",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Wasm_Checker_Types.ct_suffixI",
     "[| ?ys = ?as @ ?zs; ct_list_eq ?zs ?xs |] ==> ct_suffix ?xs ?ys",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Wasm_Checker_Types.ct_suffix_ct_list_eq_exists",
     "ct_suffix ?x1.0 ?x2.0 ==>
      EX ts_c.
         ct_suffix ?x1.0 (to_ct_list ts_c) &
         ct_list_eq (to_ct_list ts_c) ?x2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Wasm_Checker_Types.ct_list_eq_concat",
     "[| ct_list_eq ?xs ?ys; ct_list_eq ?xs' ?ys' |]
      ==> ct_list_eq (?xs @ ?xs') (?ys @ ?ys')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Wasm_Checker_Types.ct_suffix_extend_ct_list_eq",
     "[| ct_suffix ?xs ?ys; ct_list_eq ?xs' ?ys' |]
      ==> ct_suffix (?xs @ ?xs') (?ys @ ?ys')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Wasm_Checker_Types.ct_suffix_extend_any1",
     "[| ct_suffix ?xs ?ys; length ?xs < length ?ys |]
      ==> ct_suffix (TAny # ?xs) ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("Wasm_Checker_Types.ct_suffix_cons2",
     "[| ct_suffix ?xs (?ys @ ?zs); length ?xs = length ?zs |]
      ==> ct_list_eq ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Wasm_Checker_Types.ct_suffix_take",
     "ct_suffix ?ts ?ts' ==>
      ct_suffix (take (length ?ts - ?n) ?ts)
       (take (length ?ts' - ?n) ?ts')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 0)),
               template_var 1))
           ))),
    ("Wasm_Checker_Types.ct_prefix_snoc",
     "ct_prefix ?xs (?ys @ [?y]) =
      (ct_list_eq ?xs (?ys @ [?y]) | ct_prefix ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 1)))),
    ("Wasm_Checker_Types.ct_suffix_unfold_one",
     "ct_suffix (?xs @ [?x]) (?ys @ [?y]) =
      (ct_eq ?x ?y & ct_suffix ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 3),
           template_var 1)))),
    ("Wasm_Checker_Types.ct_suffix_shared",
     "[| ct_suffix ?cts (to_ct_list ?ts);
         ct_suffix ?cts' (to_ct_list ?ts) |]
      ==> ct_suffix ?cts ?cts' | ct_suffix ?cts' ?cts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2))
           ))),
    ("Wasm_Checker_Types.c_types_agree_imp_ct_list_eq",
     "c_types_agree (TopType ?cts) ?ts ==>
      EX ts' ts''. ?ts = ts' @ ts'' & ct_list_eq ?cts (to_ct_list ts'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Wasm_Checker_Types.consume_weaken_type",
     "consume (Type ?tn) ?cons = Type ?t_int ==>
      consume (Type (?ts @ ?tn)) ?cons = Type (?ts @ ?t_int)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 3)),
            template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3))),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Wasm_Checker_Types.produce_weaken_type",
     "produce (Type ?tn) ?cons = Type ?tm ==>
      produce (Type (?ts @ ?tn)) ?cons = Type (?ts @ ?tm)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 3)),
            template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3))),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Wasm_Checker_Types.select_return_top_exists",
     "[| select_return_top ?cts ?c1.0 ?c2.0 = ?ctm; ?ctm ~= Bot |]
      ==> EX xs. ?ctm = TopType xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Types.ct_list_eq_cons_ct_list1",
     "ct_list_eq (to_ct_list ?as) (?xs @ to_ct_list ?ys) ==>
      EX bs. ?as = bs @ ?ys & ct_list_eq (to_ct_list bs) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 5, template_var 0)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Wasm_Checker_Types.ct_suffix_cons_ct_list1",
     "ct_suffix (?xs @ to_ct_list ?ys) (to_ct_list ?zs) ==>
      EX as. ?zs = as @ ?ys & ct_suffix ?xs (to_ct_list as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Wasm_Checker_Types.type_update_top_top",
     "[| type_update (TopType ?ts) (to_ct_list ?cons) (Type ?prods) =
         TopType ?ts';
         c_types_agree (TopType ?ts') ?t_ag |]
      ==> ct_suffix (to_ct_list ?prods) ?ts'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)),
              template_app (template_hole 3, template_var 3)),
            template_app (template_hole 2, template_var 2)),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             template_var 1)
           ))),
    ("Wasm_Checker_Types.type_update_select_type_length3",
     "type_update_select (Type ?tn) = Type ?tm ==>
      EX t ts'. ?tn = ts' @ [t, t, T_i32]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 1)),
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Wasm_Checker_Types.ct_prefixE",
     "[| ct_prefix ?xs ?ys;
         !!as zs. [| ?ys = as @ zs; ct_list_eq as ?xs |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Wasm_Checker_Types.ct_suffixE",
     "[| ct_suffix ?xs ?ys;
         !!as zs. [| ?ys = as @ zs; ct_list_eq zs ?xs |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Wasm_Checker_Types.consume_c_types_agree",
     "[| consume (Type ?ts) ?cts = Type ?ts'; c_types_agree ?ctn ?ts |]
      ==> EX c_t'. consume ?ctn ?cts = c_t' & c_types_agree c_t' ?ts'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3)),
            template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Types.type_update_select_length1",
     "[| type_update_select (TopType ?cts) = ?tm; length ?cts = 1;
         ?tm ~= Bot |]
      ==> ?tm = TopType [TAny]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1)),
          template_var 0),
        template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Wasm_Checker_Types.type_update_select_length1",
     "[| type_update_select (TopType ?cts) = ?tm; length ?cts = 1;
         ?tm ~= Bot |]
      ==> ct_list_eq ?cts [TSome T_i32]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 11,
            template_app (template_hole 10, template_var 1)),
          template_var 0),
        template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)),
               template_hole 0))
           ))),
    ("Wasm_Checker_Types.type_update_select_length0",
     "[| type_update_select (TopType ?cts) = ?tm; length ?cts = 0;
         ?tm ~= Bot |]
      ==> ?tm = TopType [TAny]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1)),
          template_var 0),
        template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Wasm_Checker_Types.consume_top_leq",
     "[| consume (TopType ?ts) ?ts' = ?c_t; length ?ts <= length ?ts';
         ?c_t ~= Bot |]
      ==> ?c_t = TopType []",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2)),
            template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_var 0, template_app (template_hole 5, template_hole 0)))),
    ("Wasm_Checker_Types.ct_list_eq_cons_ct_list",
     "ct_list_eq (to_ct_list ?as) (?xs @ ?ys) ==>
      EX bs bs'.
         ?as = bs @ bs' &
         ct_list_eq (to_ct_list bs) ?xs & ct_list_eq (to_ct_list bs') ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Wasm_Checker_Types.ct_suffix_cons_ct_list",
     "ct_suffix (?xs @ ?ys) (to_ct_list ?zs) ==>
      EX as bs.
         ?zs = as @ bs &
         ct_list_eq ?ys (to_ct_list bs) & ct_suffix ?xs (to_ct_list as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Wasm_Checker_Types.consume_type",
     "[| consume (Type ?ts) ?ts' = ?c_t; ?c_t ~= Bot |]
      ==> EX ts''.
             ct_list_eq (to_ct_list ?ts) (to_ct_list ts'' @ ?ts') &
             ?c_t = Type ts''",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Wasm_Checker_Types.type_update_top_top",
     "[| type_update (TopType ?ts) (to_ct_list ?cons) (Type ?prods) =
         TopType ?ts';
         c_types_agree (TopType ?ts') ?t_ag |]
      ==> EX t_ag'.
             ?t_ag = t_ag' @ ?prods &
             c_types_agree (TopType ?ts) (t_ag' @ ?cons)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 4)),
              template_app (template_hole 6, template_var 3)),
            template_app (template_hole 5, template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 7, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Wasm_Checker_Types.type_update_select_conv_select_return_top",
     "[| ct_suffix [TSome T_i32] ?cts; 3 <= length ?cts |]
      ==> type_update_select (TopType ?cts) =
          select_return_top ?cts (?cts ! (length ?cts - 2))
           (?cts ! (length ?cts - 3))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 13)),
                  template_hole 12)),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_hole 8)),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 7, template_var 0)),
                 template_app
                  (template_hole 10,
                   template_app (template_hole 0, template_hole 8))))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 7, template_var 0)),
               template_app
                (template_hole 10,
                 template_app (template_hole 9, template_hole 8)))))))),
    ("Wasm_Checker_Types.consume_top_geq",
     "[| consume (TopType ?ts) ?ts' = ?c_t; length ?ts' <= length ?ts;
         ?c_t ~= Bot |]
      ==> EX as bs. ?ts = as @ bs & ct_list_eq bs ?ts' & ?c_t = TopType as",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Wasm_Checker_Types.type_update_select_length3",
     "[| type_update_select (TopType ?cts) = TopType ?ctm;
         3 <= length ?cts |]
      ==> EX cts' ct1 ct2 ct3.
             ?cts = cts' @ [ct1, ct2, ct3] & ct_eq ct3 (TSome T_i32)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app (template_hole 15, template_var 1)),
          template_app (template_hole 15, template_var 0)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app (template_hole 12, template_hole 11)),
          template_app (template_hole 10, template_var 1))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Wasm_Checker_Types.type_update_select_length2",
     "[| type_update_select (TopType ?cts) = ?tm; length ?cts = 2;
         ?tm ~= Bot |]
      ==> EX t1 t2.
             ?cts = [t1, t2] & ct_eq t2 (TSome T_i32) & ?tm = TopType [t1]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app (template_hole 15, template_var 1)),
          template_var 0),
        template_equation
         (template_app (template_hole 13, template_var 1),
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_hole 10))),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Wasm_Checker_Types.type_update_type",
     "[| type_update (Type ?ts) (to_ct_list ?cons) ?prods = ?ts';
         ?ts' ~= Bot |]
      ==> ?ts' = ?prods & (EX ts_c. ?prods = TopType ts_c) |
          (EX ts_a ts_b.
              ?prods = Type ts_a &
              ?ts = ts_b @ ?cons & ?ts' = Type (ts_b @ ts_a))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 3)),
              template_app (template_hole 9, template_var 2)),
            template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 12, template_var 0),
                     template_var 1)),
                 template_app (template_hole 4, t_empty))),
             template_app (template_hole 2, t_empty))
           ))),
    ("Wasm_Checker_Types.select_return_top_ct_eq",
     "[| select_return_top ?cts ?c1.0 ?c2.0 = TopType ?ctm;
         3 <= length ?cts; c_types_agree (TopType ?ctm) ?cm |]
      ==> EX c' cm'.
             ?cm = cm' @ [c'] &
             ct_suffix (take (length ?cts - 3) ?cts) (to_ct_list cm') &
             ct_eq ?c1.0 (TSome c') & ct_eq ?c2.0 (TSome c')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 20, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 19, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 17,
            template_app (template_hole 16, template_hole 15)),
          template_app (template_hole 14, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 19, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 12, t_empty))))]
