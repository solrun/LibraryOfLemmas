   [("Wasm_Base_Defs.int_float_disjoint", "is_int_t ?t = - is_float_t ?t",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Wasm_Base_Defs.to_e_list_1", "[$?a] = $* [?a]",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 4),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Wasm_Base_Defs.is_float_t_exists",
     "is_float_t ?t ==> ?t = T_f32 | ?t = T_f64",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("Wasm_Base_Defs.is_int_t_exists",
     "is_int_t ?t ==> ?t = T_i32 | ?t = T_i64",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("Wasm_Base_Defs.n_zeros_typeof",
     "n_zeros ?ts = ?vs ==> ?ts = map typeof ?vs",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Wasm_Base_Defs.v_exists_b_e", "EX ves. $$* ?vs = $* ves",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Wasm_Base_Defs.Lfilled_exact_imp_Lfilled",
     "Lfilled_exact ?n ?lholed ?es ?LI ==> Lfilled ?n ?lholed ?es ?LI",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Wasm_Base_Defs.to_e_list_2", "[$?a, $?b] = $* [?a, ?b]",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_hole 3)),
       template_app
        (template_app (template_hole 2, template_hole 4),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Wasm_Base_Defs.to_e_list_3", "[$?a, $?b, $?c] = $* [?a, ?b, ?c]",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_hole 3))),
       template_app
        (template_app (template_hole 2, template_hole 4),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Wasm_Base_Defs.Lfilled_exact_app_imp_exists_Lfilled",
     "[| const_list ?ves; Lfilled_exact ?n ?lholed (?ves @ ?es) ?LI |]
      ==> EX lholed'. Lfilled ?n lholed' ?es ?LI",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Base_Defs.Lfilled_imp_exists_Lfilled_exact",
     "Lfilled ?n ?lholed ?es ?LI ==>
      EX lholed' ves es_c.
         const_list ves & Lfilled_exact ?n lholed' (ves @ ?es @ es_c) ?LI",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Wasm_Base_Defs.stab_unfold",
     "stab ?s ?i ?j = Some ?cl ==>
      EX k. inst.tab (inst ?s ! ?i) = Some k &
            ?j < length (s.tab ?s ! k) & s.tab ?s ! k ! ?j = Some ?cl",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 12, template_var 0))],
       template_predicate (template_app (template_hole 11, t_empty))))]
