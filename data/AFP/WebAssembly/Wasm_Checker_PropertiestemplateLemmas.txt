   [("Wasm_Checker_Properties.check_bot", "check ?\<C> ?es Bot = Bot",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Wasm_Checker_Properties.b_e_typing_equiv_b_e_type_checker",
     "?\<C> \<turnstile> ?es : ?tn _> ?tm =
      b_e_type_checker ?\<C> ?es (?tn _> ?tm)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Wasm_Checker_Properties.b_e_type_checker_complete",
     "?\<C> \<turnstile> ?es : ?tn _> ?tm ==>
      b_e_type_checker ?\<C> ?es (?tn _> ?tm)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Wasm_Checker_Properties.b_e_type_checker_sound",
     "b_e_type_checker ?\<C> ?es (?tn _> ?tm) ==>
      ?\<C> \<turnstile> ?es : ?tn _> ?tm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Wasm_Checker_Properties.b_e_check_single_type_type",
     "check_single ?\<C> ?e ?xs = Type ?tm ==> EX tn. ?xs = Type tn",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Wasm_Checker_Properties.b_e_type_checker_weaken",
     "b_e_type_checker ?\<C> ?es (?t1s _> ?t2s) ==>
      b_e_type_checker ?\<C> ?es (?ts @ ?t1s _> ?ts @ ?t2s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Wasm_Checker_Properties.b_e_check_weaken_top",
     "check ?\<C> ?es (Type ?tn) = TopType ?tm ==>
      check ?\<C> ?es (Type (?ts @ ?tn)) = TopType ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3),
            template_app (template_hole 2, template_var 2)),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app (template_hole 1, template_var 1)))),
    ("Wasm_Checker_Properties.b_e_check_single_weaken_top",
     "check_single ?\<C> ?e (Type ?tn) = TopType ?tm ==>
      check_single ?\<C> ?e (Type (?ts @ ?tn)) = TopType ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3),
            template_app (template_hole 2, template_var 2)),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app (template_hole 1, template_var 1)))),
    ("Wasm_Checker_Properties.check_neq_bot_snoc",
     "check ?\<C> (?es @ [?e]) ?ts ~= Bot ==> check ?\<C> ?es ?ts ~= Bot",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_hole 1))),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_var 0),
             template_hole 0)
           ))),
    ("Wasm_Checker_Properties.b_e_check_weaken_type",
     "check ?\<C> ?es (Type ?tn) = Type ?tm ==>
      check ?\<C> ?es (Type (?ts @ ?tn)) = Type (?ts @ ?tm)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_app (template_hole 1, template_var 2)),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Wasm_Checker_Properties.b_e_check_single_weaken_type",
     "check_single ?\<C> ?e (Type ?tn) = Type ?tm ==>
      check_single ?\<C> ?e (Type (?ts @ ?tn)) = Type (?ts @ ?tm)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_app (template_hole 1, template_var 2)),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Wasm_Checker_Properties.check_equiv_fold",
     "check ?\<C> ?es ?ts =
      foldl (%ts e. case ts of Bot => Bot | _ => check_single ?\<C> e ts)
       ?ts ?es",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_var 1))),
    ("Wasm_Checker_Properties.check_unfold_snoc",
     "check ?\<C> ?es ?ts ~= Bot ==>
      check ?\<C> (?es @ [?e]) ?ts =
      check_single ?\<C> ?e (check ?\<C> ?es ?ts)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1))),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1))))),
    ("Wasm_Checker_Properties.b_e_type_checker_compose",
     "[| b_e_type_checker ?\<C> ?es (?t1s _> ?t2s);
         b_e_type_checker ?\<C> [?e] (?t2s _> ?t3s) |]
      ==> b_e_type_checker ?\<C> (?es @ [?e]) (?t1s _> ?t3s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1))),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0))
           ))),
    ("Wasm_Checker_Properties.b_e_check_single_top_not_bot_sound",
     "[| type_update ?ts (to_ct_list ?t_in) (TopType []) = ?ts'; ?ts ~= Bot;
         ?ts' ~= Bot |]
      ==> EX tn. c_types_agree ?ts tn & suffix ?t_in tn",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1)),
            template_app (template_hole 7, template_hole 6)),
          template_var 0),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Wasm_Checker_Properties.check_single_imp_weakening",
     "[| check_single ?\<C> ?e (Type ?t1s) = ?ctm; ?ctm ~= Bot;
         c_types_agree ?ctn ?t1s; c_types_agree ?ctm ?t2s |]
      ==> EX ctm'.
             check_single ?\<C> ?e ?ctn = ctm' & c_types_agree ctm' ?t2s",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_app (template_hole 5, template_var 3)),
          template_var 2),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Properties.check_single_imp",
     "[| check_single ?\<C> ?e ?ctn = ?ctm; ?ctm ~= Bot |]
      ==> check_single ?\<C> ?e = id |
          check_single ?\<C> ?e = type_update_select |
          (EX cons prods.
              check_single ?\<C> ?e = (%ctn. type_update ctn cons prods))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 9, template_var 3),
                     template_var 2)),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 9, template_var 3),
                       template_var 2)),
                   t_empty)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Wasm_Checker_Properties.b_e_check_single_top_sound",
     "[| type_update (TopType ?x1.0) (to_ct_list ?t_in) (Type ?t_out) =
         TopType ?x2.0;
         c_types_agree (TopType ?x2.0) ?tm;
         ?\<C> \<turnstile> [?e] : ?t_in _> ?t_out |]
      ==> EX tn.
             c_types_agree (TopType ?x1.0) tn &
             ?\<C> \<turnstile> [?e] : tn _> ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 6)),
              template_app (template_hole 8, template_var 5)),
            template_app (template_hole 7, template_var 4)),
          template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 9, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Properties.b_e_check_single_type_sound",
     "[| type_update (Type ?x1.0) (to_ct_list ?t_in) (Type ?t_out) =
         Type ?x2.0;
         c_types_agree (Type ?x2.0) ?tm;
         ?\<C> \<turnstile> [?e] : ?t_in _> ?t_out |]
      ==> EX tn.
             c_types_agree (Type ?x1.0) tn &
             ?\<C> \<turnstile> [?e] : tn _> ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 6)),
              template_app (template_hole 7, template_var 5)),
            template_app (template_hole 8, template_var 4)),
          template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 8, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Properties.b_e_check_single_type_not_bot_sound",
     "[| type_update ?ts (to_ct_list ?t_in) (Type ?t_out) = ?ts';
         ?ts ~= Bot; ?ts' ~= Bot; c_types_agree ?ts' ?tm;
         ?\<C> \<turnstile> [?e] : ?t_in _> ?t_out |]
      ==> EX tn.
             c_types_agree ?ts tn & ?\<C> \<turnstile> [?e] : tn _> ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 6),
              template_app (template_hole 10, template_var 5)),
            template_app (template_hole 9, template_var 4)),
          template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 7)),
        template_negation
         (template_equation (template_var 3, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Wasm_Checker_Properties.b_e_check_single_sound_binop_relop",
     "[| check_single ?\<C> ?e ?tn' = ?tm';
         ?e = Binop_i ?t ?iop & is_int_t ?t |
         ?e = Binop_f ?t ?fop & is_float_t ?t |
         ?e = Relop_i ?t ?irop & is_int_t ?t |
         ?e = Relop_f ?t ?frop & is_float_t ?t;
         c_types_agree ?tm' ?tm; ?tn' ~= Bot; ?tm' ~= Bot |]
      ==> EX tn.
             c_types_agree ?tn' tn & ?\<C> \<turnstile> [?e] : tn _> ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 17, template_var 9),
              template_var 8),
            template_var 7),
          template_var 6),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app (template_hole 14, template_var 8),
                      template_app
                       (template_app (template_hole 13, template_var 5),
                        template_var 4))),
                  template_app (template_hole 12, template_var 5))),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_var 8),
                        template_app
                         (template_app (template_hole 11, template_var 5),
                          template_var 3))),
                    template_app (template_hole 10, template_var 5))),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_app (template_hole 14, template_var 8),
                          template_app
                           (template_app (template_hole 9, template_var 5),
                            template_var 2))),
                      template_app (template_hole 12, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_var 8),
                        template_app
                         (template_app (template_hole 8, template_var 5),
                          template_var 1))),
                    template_app (template_hole 10, template_var 5)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 7, template_hole 5)),
        template_negation
         (template_equation (template_var 6, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Wasm_Checker_Properties.b_e_check_single_sound_unop_testop_cvtop",
     "[| check_single ?\<C> ?e ?tn' = ?tm';
         (?e = Unop_i ?t ?uu | ?e = Testop ?t ?uv) & is_int_t ?t |
         ?e = Unop_f ?t ?uw & is_float_t ?t |
         ?e = Cvtop ?t1.0 Convert ?t ?sx & convert_cond ?t1.0 ?t ?sx |
         ?e = Cvtop ?t1.0 Reinterpret ?t ?sx &
         ?t1.0 ~= ?t & t_length ?t1.0 = t_length ?t & ?sx = None;
         c_types_agree ?tm' ?tm; ?tn' ~= Bot; ?tm' ~= Bot |]
      ==> EX tn.
             c_types_agree ?tn' tn & ?\<C> \<turnstile> [?e] : tn _> ?tm",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 25, template_var 10),
              template_var 9),
            template_var 8),
          template_var 7),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 24,
                        template_app
                         (template_app (template_hole 22, template_var 9),
                          template_app
                           (template_app (template_hole 21, template_var 6),
                            template_var 5))),
                      template_app
                       (template_app (template_hole 22, template_var 9),
                        template_app
                         (template_app (template_hole 20, template_var 6),
                          template_var 4)))),
                  template_app (template_hole 19, template_var 6))),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 22, template_var 9),
                        template_app
                         (template_app (template_hole 18, template_var 6),
                          template_var 3))),
                    template_app (template_hole 17, template_var 6))),
                template_app
                 (template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_var 9),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 16, template_var 2),
                                template_hole 15),
                              template_var 6),
                            template_var 1))),
                      template_app
                       (template_app
                         (template_app (template_hole 14, template_var 2),
                          template_var 6),
                        template_var 1))),
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 22, template_var 9),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 16, template_var 2),
                              template_hole 13),
                            template_var 6),
                          template_var 1))),
                    template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_hole 12,
                          template_app
                           (template_app (template_hole 11, template_var 2),
                            template_var 6))),
                      template_app
                       (template_app
                         (template_hole 23,
                          template_app
                           (template_app
                             (template_hole 10,
                              template_app
                               (template_hole 9, template_var 2)),
                            template_app
                             (template_hole 9, template_var 6))),
                        template_app
                         (template_app (template_hole 8, template_var 1),
                          template_hole 7)))))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 7),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 8, template_hole 5)),
        template_negation
         (template_equation (template_var 7, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty))))]
