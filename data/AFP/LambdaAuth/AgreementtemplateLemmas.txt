   [("Agreement.agree_weakening_env",
     "{$$} \<turnstile> ?e, ?eP, ?eV : ?\<tau> ==>
      ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_hole 0),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Agreement.agree_empty_fresh",
     "{$$} \<turnstile> ?e, ?eP, ?eV : ?\<tau> ==>
      {atom ?a} \<sharp>* {?e, ?eP, ?eV}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0))))
           ))),
    ("Agreement.agree_fresh_env_fresh_term",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : ?\<tau>;
         atom ?a \<sharp> ?\<Gamma> |]
      ==> atom ?a \<sharp> (?e, ?eP, ?eV)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)))
           ))),
    ("Agreement.agree_weakening_2",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : ?\<tau>;
         atom ?y \<sharp> ?\<Gamma> |]
      ==> ?\<Gamma>(?y $$:= ?\<tau>') \<turnstile> ?e, ?eP, ?eV : ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0),
                       template_var 6)),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("Agreement.agree_weakening_1",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : ?\<tau>; atom ?y \<sharp> ?e;
         atom ?y \<sharp> ?eP; atom ?y \<sharp> ?eV |]
      ==> ?\<Gamma>(?y $$:= ?\<tau>') \<turnstile> ?e, ?eP, ?eV : ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0),
                       template_var 6)),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("Agreement.a_HashI_inv",
     "[| ?\<Gamma> \<turnstile> ?v, Hashed (hash \<lparr>?vP\<rparr>)
                                     ?vP, Hash
     (hash \<lparr>?vP\<rparr>) : AuthT ?\<tau>;
         [| {$$} \<turnstile> ?v, ?vP, \<lparr>?vP\<rparr> : ?\<tau>;
            Syntax.value ?v; Syntax.value ?vP |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 2))),
                    template_var 2)),
                template_app
                 (template_hole 3,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)))),
              template_app (template_hole 2, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_hole 1),
                       template_var 3),
                     template_var 2),
                   template_app (template_hole 4, template_var 2)),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (template_app (template_hole 0, template_var 3))],
            template_implication
             ([template_predicate
                (template_app (template_hole 0, template_var 2))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Agreement.a_Inj1_inv_V",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, Inj1
    ?eV : Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2;
         !!e eP.
            [| ?e = Inj1 e; ?eP = Inj1 eP;
               ?\<Gamma> \<turnstile> e, eP, ?eV : ?\<tau>\<^sub>1 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Inj2_inv_V",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, Inj2
    ?eV : Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2;
         !!e eP.
            [| ?e = Inj2 e; ?eP = Inj2 eP;
               ?\<Gamma> \<turnstile> e, eP, ?eV : ?\<tau>\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Inj1_inv_P",
     "[| ?\<Gamma> \<turnstile> ?e, Inj1
                                     ?eP, ?eV : Syntax.Sum ?\<tau>\<^sub>1
           ?\<tau>\<^sub>2;
         !!e eV.
            [| ?e = Inj1 e; ?eV = Inj1 eV;
               ?\<Gamma> \<turnstile> e, ?eP, eV : ?\<tau>\<^sub>1 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_app (template_hole 3, template_var 4)),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Inj2_inv_P",
     "[| ?\<Gamma> \<turnstile> ?e, Inj2
                                     ?eP, ?eV : Syntax.Sum ?\<tau>\<^sub>1
           ?\<tau>\<^sub>2;
         !!e eV.
            [| ?e = Inj2 e; ?eV = Inj2 eV;
               ?\<Gamma> \<turnstile> e, ?eP, eV : ?\<tau>\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_app (template_hole 3, template_var 4)),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Inj1_inv_I",
     "[| ?\<Gamma> \<turnstile> Inj1
                                 ?e, ?eP, ?eV : Syntax.Sum ?\<tau>\<^sub>1
           ?\<tau>\<^sub>2;
         !!eP eV.
            [| ?eP = Inj1 eP; ?eV = Inj1 eV;
               ?\<Gamma> \<turnstile> ?e, eP, eV : ?\<tau>\<^sub>1 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app (template_hole 3, template_var 5)),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Inj2_inv_I",
     "[| ?\<Gamma> \<turnstile> Inj2
                                 ?e, ?eP, ?eV : Syntax.Sum ?\<tau>\<^sub>1
           ?\<tau>\<^sub>2;
         !!eP eV.
            [| ?eP = Inj2 eP; ?eV = Inj2 eV;
               ?\<Gamma> \<turnstile> ?e, eP, eV : ?\<tau>\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app (template_hole 3, template_var 5)),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Roll_inv_V",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, Roll ?eV' : Mu ?\<alpha> ?\<tau>;
         !!e' eP'.
            [| ?e = Roll e'; ?eP = Roll eP';
               ?\<Gamma> \<turnstile> e', eP', ?eV' : subst_type ?\<tau>
                 (Mu ?\<alpha> ?\<tau>) ?\<alpha> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app (template_hole 4, template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Roll_inv_P",
     "[| ?\<Gamma> \<turnstile> ?e, Roll ?eP', ?eV : Mu ?\<alpha> ?\<tau>;
         !!e' eV'.
            [| ?e = Roll e'; ?eV = Roll eV';
               ?\<Gamma> \<turnstile> e', ?eP', eV' : subst_type ?\<tau>
                 (Mu ?\<alpha> ?\<tau>) ?\<alpha> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_app (template_hole 4, template_var 4)),
                template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Roll_inv_I",
     "[| ?\<Gamma> \<turnstile> Roll ?e', ?eP, ?eV : Mu ?\<alpha> ?\<tau>;
         !!eP' eV'.
            [| ?eP = Roll eP'; ?eV = Roll eV';
               ?\<Gamma> \<turnstile> ?e', eP', eV' : subst_type ?\<tau>
                 (Mu ?\<alpha> ?\<tau>) ?\<alpha> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_app (template_hole 4, template_var 5)),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Lam_inv_V",
     "[| {$$} \<turnstile> ?v, ?vP, Lam ?x
                                     ?vV' : Fun ?\<tau>\<^sub>1
       ?\<tau>\<^sub>2;
         !!v' vP'.
            [| ?v = Lam ?x v'; ?vP = Lam ?x vP';
               {$$}(?x $$:= ?\<tau>\<^sub>1) \<turnstile> v', vP', ?vV' : ?\<tau>\<^sub>2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Lam_inv_P",
     "[| {$$} \<turnstile> ?v, Lam ?x
                                ?vP', ?vV : Fun ?\<tau>\<^sub>1
       ?\<tau>\<^sub>2;
         !!v' vV'.
            [| ?v = Lam ?x v'; ?vV = Lam ?x vV';
               {$$}(?x $$:= ?\<tau>\<^sub>1) \<turnstile> v', ?vP', vV' : ?\<tau>\<^sub>2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4)),
                template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_AuthT_value_inv",
     "[| {$$} \<turnstile> ?v, ?vP, ?vV : AuthT ?\<tau>; Syntax.value ?v;
         Syntax.value ?vP; Syntax.value ?vV;
         !!vP'.
            [| ?vP = Hashed (hash \<lparr>vP'\<rparr>) vP';
               ?vV = Hash (hash \<lparr>vP'\<rparr>); Syntax.value vP' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Lam_inv_I",
     "[| ?\<Gamma> \<turnstile> Lam ?x
                                 ?e', ?eP, ?eV : Fun ?\<tau>\<^sub>1
            ?\<tau>\<^sub>2;
         atom ?x \<sharp> ?\<Gamma>;
         !!eP' eV'.
            [| ?eP = Lam ?x eP'; ?eV = Lam ?x eV';
               ?\<Gamma>(?x $$:= ?\<tau>\<^sub>1) \<turnstile> ?e', eP', eV' : ?\<tau>\<^sub>2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 7),
                    template_app
                     (template_app (template_hole 6, template_var 6),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 6)),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Pair_inv_P",
     "[| ?\<Gamma> \<turnstile> ?e, Syntax.Pair ?eP\<^sub>1
                                     ?eP\<^sub>2, ?eV : Syntax.Prod
                   ?\<tau>\<^sub>1 ?\<tau>\<^sub>2;
         !!e\<^sub>1 eV\<^sub>1 e\<^sub>2 eV\<^sub>2.
            [| ?e = Syntax.Pair e\<^sub>1 e\<^sub>2;
               ?eV = Syntax.Pair eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, ?eP\<^sub>1, eV\<^sub>1 : ?\<tau>\<^sub>1;
               ?\<Gamma> \<turnstile> e\<^sub>2, ?eP\<^sub>2, eV\<^sub>2 : ?\<tau>\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 6),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4)),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Pair_inv_I",
     "[| ?\<Gamma> \<turnstile> Syntax.Pair ?e\<^sub>1
                                 ?e\<^sub>2, ?eP, ?eV : Syntax.Prod
                   ?\<tau>\<^sub>1 ?\<tau>\<^sub>2;
         !!eP\<^sub>1 eV\<^sub>1 eP\<^sub>2 eV\<^sub>2.
            [| ?eP = Syntax.Pair eP\<^sub>1 eP\<^sub>2;
               ?eV = Syntax.Pair eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> ?e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : ?\<tau>\<^sub>1;
               ?\<Gamma> \<turnstile> ?e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : ?\<tau>\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.Abs_lst_eq_3tuple",
     "[| [[atom ?x]]lst. ?e = [[atom ?x']]lst. ?e';
         [[atom ?x]]lst. ?eP = [[atom ?x']]lst. ?eP';
         [[atom ?x]]lst. ?eV = [[atom ?x']]lst. ?eV' |]
      ==> [[atom ?x]]lst. (?e, ?eP, ?eV) =
          [[atom ?x']]lst. (?e', ?eP', ?eV')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 7)),
                template_hole 4)),
            template_var 6),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 5)),
                template_hole 4)),
            template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 7)),
                template_hole 4)),
            template_var 3),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 5)),
                template_hole 4)),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 7)),
                template_hole 4)),
            template_var 1),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 5)),
                template_hole 4)),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 7)),
               template_hole 4)),
           template_app
            (template_app (template_hole 1, template_var 6),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 5)),
               template_hole 4)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("Agreement.a_Rec_inv_V",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, Rec ?x
    ?eV : Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2;
         atom ?x \<sharp> ?\<Gamma>;
         !!y e' eP' eV'.
            [| ?e = Rec ?x (Lam y e'); ?eP = Rec ?x (Lam y eP');
               ?eV = Lam y eV'; atom y \<sharp> (?\<Gamma>, ?x);
               ?\<Gamma>(?x $$:= Fun ?\<tau>\<^sub>1
                                  ?\<tau>\<^sub>2) \<turnstile> Lam y
                           e', Lam y
                                eP', Lam y
eV' : Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 4)),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Rec_inv_P",
     "[| ?\<Gamma> \<turnstile> ?e, Rec ?x
                                     ?eP, ?eV : Fun ?\<tau>\<^sub>1
           ?\<tau>\<^sub>2;
         atom ?x \<sharp> ?\<Gamma>;
         !!y e' eP' eV'.
            [| ?e = Rec ?x (Lam y e'); ?eP = Lam y eP';
               ?eV = Rec ?x (Lam y eV'); atom y \<sharp> (?\<Gamma>, ?x);
               ?\<Gamma>(?x $$:= Fun ?\<tau>\<^sub>1
                                  ?\<tau>\<^sub>2) \<turnstile> Lam y
                           e', Lam y
                                eP', Lam y
eV' : Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 7),
                    template_var 6),
                  template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4)),
                template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 5)),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Rec_inv_I",
     "[| ?\<Gamma> \<turnstile> Rec ?x
                                 ?e, ?eP, ?eV : Fun ?\<tau>\<^sub>1
           ?\<tau>\<^sub>2;
         atom ?x \<sharp> ?\<Gamma>;
         !!y e' eP' eV'.
            [| ?e = Lam y e'; ?eP = Rec ?x (Lam y eP');
               ?eV = Rec ?x (Lam y eV'); atom y \<sharp> (?\<Gamma>, ?x);
               ?\<Gamma>(?x $$:= Fun ?\<tau>\<^sub>1
                                  ?\<tau>\<^sub>2) \<turnstile> Lam y
                           e', Lam y
                                eP', Lam y
eV' : Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 7),
                    template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 6)),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Prod_inv",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : Syntax.Prod ?\<tau>\<^sub>1
          ?\<tau>\<^sub>2;
         !!x. [| ?e = Var x; ?eP = Var x; ?eV = Var x;
                 ?\<Gamma> $$ x =
                 Some (Syntax.Prod ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
              ==> ?P;
         !!e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = App e\<^sub>1 e\<^sub>2;
               ?eP = App eP\<^sub>1 eP\<^sub>2;
               ?eV = App eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1
                                     (Syntax.Prod ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : \<tau>\<^sub>1 |]
            ==> ?P;
         !!x e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = Syntax.Let e\<^sub>1 x e\<^sub>2;
               ?eP = Syntax.Let eP\<^sub>1 x eP\<^sub>2;
               ?eV = Syntax.Let eV\<^sub>1 x eV\<^sub>2;
               atom
                x \<sharp> (?\<Gamma>, e\<^sub>1, eP\<^sub>1, eV\<^sub>1);
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : \<tau>\<^sub>1;
               ?\<Gamma>(x $$:= \<tau>\<^sub>1) \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Syntax.Prod
                      ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1 \<tau>\<^sub>2 e\<^sub>1 eP\<^sub>1
            eV\<^sub>1 e\<^sub>2 eP\<^sub>2 eV\<^sub>2.
            [| ?e = Case e e\<^sub>1 e\<^sub>2;
               ?eP = Case eP eP\<^sub>1 eP\<^sub>2;
               ?eV = Case eV eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Sum \<tau>\<^sub>1
             \<tau>\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1
                                     (Syntax.Prod ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Fun
                                     \<tau>\<^sub>2
                                     (Syntax.Prod ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2) |]
            ==> ?P;
         !!e\<^sub>1 eP\<^sub>1 eV\<^sub>1 e\<^sub>2 eP\<^sub>2 eV\<^sub>2.
            [| ?e = Syntax.Pair e\<^sub>1 e\<^sub>2;
               ?eP = Syntax.Pair eP\<^sub>1 eP\<^sub>2;
               ?eV = Syntax.Pair eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : ?\<tau>\<^sub>1;
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>2.
            [| ?e = Prj1 e; ?eP = Prj1 eP; ?eV = Prj1 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod
             (Syntax.Prod ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) \<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1.
            [| ?e = Prj2 e; ?eP = Prj2 eP; ?eV = Prj2 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod \<tau>\<^sub>1
             (Syntax.Prod ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
            ==> ?P;
         !!\<alpha> e eP eV \<tau>.
            [| ?e = Unroll e; ?eP = Unroll eP; ?eV = Unroll eV;
               Syntax.Prod ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 =
               subst_type \<tau> (Mu \<alpha> \<tau>) \<alpha>;
               atom \<alpha> \<sharp> ?\<Gamma>;
               ?\<Gamma> \<turnstile> e, eP, eV : Mu \<alpha> \<tau> |]
            ==> ?P;
         !!e eP eV.
            [| ?e = Unauth e; ?eP = Unauth eP; ?eV = Unauth eV;
               ?\<Gamma> \<turnstile> e, eP, eV : AuthT
             (Syntax.Prod ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 32, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 31, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Mu_inv",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : Mu ?\<alpha> ?\<tau>;
         !!x. [| ?e = Var x; ?eP = Var x; ?eV = Var x;
                 ?\<Gamma> $$ x = Some (Mu ?\<alpha> ?\<tau>) |]
              ==> ?P;
         !!e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = App e\<^sub>1 e\<^sub>2;
               ?eP = App eP\<^sub>1 eP\<^sub>2;
               ?eV = App eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1 (Mu ?\<alpha> ?\<tau>);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : \<tau>\<^sub>1 |]
            ==> ?P;
         !!x e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = Syntax.Let e\<^sub>1 x e\<^sub>2;
               ?eP = Syntax.Let eP\<^sub>1 x eP\<^sub>2;
               ?eV = Syntax.Let eV\<^sub>1 x eV\<^sub>2;
               atom
                x \<sharp> (?\<Gamma>, e\<^sub>1, eP\<^sub>1, eV\<^sub>1);
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : \<tau>\<^sub>1;
               ?\<Gamma>(x $$:= \<tau>\<^sub>1) \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Mu
                      ?\<alpha> ?\<tau> |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1 \<tau>\<^sub>2 e\<^sub>1 eP\<^sub>1
            eV\<^sub>1 e\<^sub>2 eP\<^sub>2 eV\<^sub>2.
            [| ?e = Case e e\<^sub>1 e\<^sub>2;
               ?eP = Case eP eP\<^sub>1 eP\<^sub>2;
               ?eV = Case eV eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Sum \<tau>\<^sub>1
             \<tau>\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1 (Mu ?\<alpha> ?\<tau>);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Fun
                                     \<tau>\<^sub>2
                                     (Mu ?\<alpha> ?\<tau>) |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>2.
            [| ?e = Prj1 e; ?eP = Prj1 eP; ?eV = Prj1 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod
             (Mu ?\<alpha> ?\<tau>) \<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1.
            [| ?e = Prj2 e; ?eP = Prj2 eP; ?eV = Prj2 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod \<tau>\<^sub>1
             (Mu ?\<alpha> ?\<tau>) |]
            ==> ?P;
         !!\<alpha> e eP eV \<tau>.
            [| ?e = Roll e; ?eP = Roll eP; ?eV = Roll eV;
               [[atom ?\<alpha>]]lst. ?\<tau> =
               [[atom \<alpha>]]lst. \<tau>;
               atom \<alpha> \<sharp> ?\<Gamma>;
               ?\<Gamma> \<turnstile> e, eP, eV : subst_type \<tau>
             (Mu \<alpha> \<tau>) \<alpha> |]
            ==> ?P;
         !!\<alpha> e eP eV \<tau>.
            [| ?e = Unroll e; ?eP = Unroll eP; ?eV = Unroll eV;
               Mu ?\<alpha> ?\<tau> =
               subst_type \<tau> (Mu \<alpha> \<tau>) \<alpha>;
               atom \<alpha> \<sharp> ?\<Gamma>;
               ?\<Gamma> \<turnstile> e, eP, eV : Mu \<alpha> \<tau> |]
            ==> ?P;
         !!e eP eV.
            [| ?e = Unauth e; ?eP = Unauth eP; ?eV = Unauth eV;
               ?\<Gamma> \<turnstile> e, eP, eV : AuthT
             (Mu ?\<alpha> ?\<tau>) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 36, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 35, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Sum_inv",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : Syntax.Sum ?\<tau>\<^sub>1
          ?\<tau>\<^sub>2;
         !!x. [| ?e = Var x; ?eP = Var x; ?eV = Var x;
                 ?\<Gamma> $$ x =
                 Some (Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
              ==> ?P;
         !!e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = App e\<^sub>1 e\<^sub>2;
               ?eP = App eP\<^sub>1 eP\<^sub>2;
               ?eV = App eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1
                                     (Syntax.Sum ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : \<tau>\<^sub>1 |]
            ==> ?P;
         !!x e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = Syntax.Let e\<^sub>1 x e\<^sub>2;
               ?eP = Syntax.Let eP\<^sub>1 x eP\<^sub>2;
               ?eV = Syntax.Let eV\<^sub>1 x eV\<^sub>2;
               atom
                x \<sharp> (?\<Gamma>, e\<^sub>1, eP\<^sub>1, eV\<^sub>1);
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : \<tau>\<^sub>1;
               ?\<Gamma>(x $$:= \<tau>\<^sub>1) \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Syntax.Sum
                      ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV.
            [| ?e = Inj1 e; ?eP = Inj1 eP; ?eV = Inj1 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : ?\<tau>\<^sub>1 |]
            ==> ?P;
         !!e eP eV.
            [| ?e = Inj2 e; ?eP = Inj2 eP; ?eV = Inj2 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1 \<tau>\<^sub>2 e\<^sub>1 eP\<^sub>1
            eV\<^sub>1 e\<^sub>2 eP\<^sub>2 eV\<^sub>2.
            [| ?e = Case e e\<^sub>1 e\<^sub>2;
               ?eP = Case eP eP\<^sub>1 eP\<^sub>2;
               ?eV = Case eV eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Sum \<tau>\<^sub>1
             \<tau>\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1
                                     (Syntax.Sum ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Fun
                                     \<tau>\<^sub>2
                                     (Syntax.Sum ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2) |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>2.
            [| ?e = Prj1 e; ?eP = Prj1 eP; ?eV = Prj1 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod
             (Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) \<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1.
            [| ?e = Prj2 e; ?eP = Prj2 eP; ?eV = Prj2 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod \<tau>\<^sub>1
             (Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
            ==> ?P;
         !!\<alpha> e eP eV \<tau>.
            [| ?e = Unroll e; ?eP = Unroll eP; ?eV = Unroll eV;
               Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 =
               subst_type \<tau> (Mu \<alpha> \<tau>) \<alpha>;
               atom \<alpha> \<sharp> ?\<Gamma>;
               ?\<Gamma> \<turnstile> e, eP, eV : Mu \<alpha> \<tau> |]
            ==> ?P;
         !!e eP eV.
            [| ?e = Unauth e; ?eP = Unauth eP; ?eV = Unauth eV;
               ?\<Gamma> \<turnstile> e, eP, eV : AuthT
             (Syntax.Sum ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 33, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 32, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Agreement.a_Fun_inv",
     "[| ?\<Gamma> \<turnstile> ?e, ?eP, ?eV : Fun ?\<tau>\<^sub>1
          ?\<tau>\<^sub>2;
         !!x. [| ?e = Var x; ?eP = Var x; ?eV = Var x;
                 ?\<Gamma> $$ x =
                 Some (Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
              ==> ?P;
         !!x e eP eV.
            [| ?e = Lam x e; ?eP = Lam x eP; ?eV = Lam x eV;
               atom x \<sharp> ?\<Gamma>;
               ?\<Gamma>(x $$:= ?\<tau>\<^sub>1) \<turnstile> e, eP, eV : ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = App e\<^sub>1 e\<^sub>2;
               ?eP = App eP\<^sub>1 eP\<^sub>2;
               ?eV = App eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1
                                     (Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : \<tau>\<^sub>1 |]
            ==> ?P;
         !!x e\<^sub>1 eP\<^sub>1 eV\<^sub>1 \<tau>\<^sub>1 e\<^sub>2
            eP\<^sub>2 eV\<^sub>2.
            [| ?e = Syntax.Let e\<^sub>1 x e\<^sub>2;
               ?eP = Syntax.Let eP\<^sub>1 x eP\<^sub>2;
               ?eV = Syntax.Let eV\<^sub>1 x eV\<^sub>2;
               atom
                x \<sharp> (?\<Gamma>, e\<^sub>1, eP\<^sub>1, eV\<^sub>1);
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : \<tau>\<^sub>1;
               ?\<Gamma>(x $$:= \<tau>\<^sub>1) \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Fun
                      ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!x y e eP eV.
            [| ?e = Rec x (Lam y e); ?eP = Rec x (Lam y eP);
               ?eV = Rec x (Lam y eV); atom x \<sharp> ?\<Gamma>;
               atom y \<sharp> (?\<Gamma>, x);
               ?\<Gamma>(x $$:= Fun ?\<tau>\<^sub>1
                                 ?\<tau>\<^sub>2) \<turnstile> Lam y
                          e, Lam y
                              eP, Lam y
                                   eV : Fun ?\<tau>\<^sub>1
   ?\<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1 \<tau>\<^sub>2 e\<^sub>1 eP\<^sub>1
            eV\<^sub>1 e\<^sub>2 eP\<^sub>2 eV\<^sub>2.
            [| ?e = Case e e\<^sub>1 e\<^sub>2;
               ?eP = Case eP eP\<^sub>1 eP\<^sub>2;
               ?eV = Case eV eV\<^sub>1 eV\<^sub>2;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Sum \<tau>\<^sub>1
             \<tau>\<^sub>2;
               ?\<Gamma> \<turnstile> e\<^sub>1, eP\<^sub>1, eV\<^sub>1 : Fun
                                     \<tau>\<^sub>1
                                     (Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2);
               ?\<Gamma> \<turnstile> e\<^sub>2, eP\<^sub>2, eV\<^sub>2 : Fun
                                     \<tau>\<^sub>2
                                     (Fun ?\<tau>\<^sub>1
 ?\<tau>\<^sub>2) |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>2.
            [| ?e = Prj1 e; ?eP = Prj1 eP; ?eV = Prj1 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod
             (Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) \<tau>\<^sub>2 |]
            ==> ?P;
         !!e eP eV \<tau>\<^sub>1.
            [| ?e = Prj2 e; ?eP = Prj2 eP; ?eV = Prj2 eV;
               ?\<Gamma> \<turnstile> e, eP, eV : Syntax.Prod \<tau>\<^sub>1
             (Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
            ==> ?P;
         !!\<alpha> e eP eV \<tau>.
            [| ?e = Unroll e; ?eP = Unroll eP; ?eV = Unroll eV;
               Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2 =
               subst_type \<tau> (Mu \<alpha> \<tau>) \<alpha>;
               atom \<alpha> \<sharp> ?\<Gamma>;
               ?\<Gamma> \<turnstile> e, eP, eV : Mu \<alpha> \<tau> |]
            ==> ?P;
         !!e eP eV.
            [| ?e = Unauth e; ?eP = Unauth eP; ?eV = Unauth eV;
               ?\<Gamma> \<turnstile> e, eP, eV : AuthT
             (Fun ?\<tau>\<^sub>1 ?\<tau>\<^sub>2) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 35, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 34, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty))],
       template_predicate (template_var 0)))]
