   [("Nominal2_Lemmas.fresh_star_Nil", "{} \<sharp>* ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Nominal2_Lemmas.atom_not_fresh_eq",
     "~ atom ?a \<sharp> ?x ==> ?a = ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 1)),
                  template_var 0)
                )
            )],
       template_equation (template_var 1, template_var 0))),
    ("Nominal2_Lemmas.fresh_set_fresh_forall",
     "atom ?y \<sharp> ?xs = (ALL x:set ?xs. atom ?y \<sharp> x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Nominal2_Lemmas.finite_fresh_set_fresh_all",
     "finite ?S ==> atom ?a \<sharp> ?S = (ALL x:?S. atom ?a \<sharp> x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Nominal2_Lemmas.case_option_eqvt",
     "?p \<bullet> (case ?opt of None => ?a | Some x => ?b x) =
      (case ?p \<bullet> ?opt of None => ?p \<bullet> ?a
       | Some x => (?p \<bullet> ?b) x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Nominal2_Lemmas.supp_flip",
     "supp (?a \<leftrightarrow> ?b) =
      (if ?a = ?b then {} else {atom ?a, atom ?b})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_hole 2)))
           ))),
    ("Nominal2_Lemmas.Abs_lst_eq_flipI",
     "atom ?b \<sharp> ?t ==>
      [[atom ?a]]lst. ?t =
      [[atom ?b]]lst. (?a \<leftrightarrow> ?b) \<bullet> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 6, template_var 0)),
               template_hole 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 6, template_var 2)),
               template_hole 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)))))]
