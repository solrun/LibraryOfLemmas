Loading theory "ConcurrentIMP.CIMP_pred" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Case_Converter" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "HOL-Library.Simps_Case_Conv")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "ConcurrentIMP.CIMP_pred"
### 0.127s elapsed time, 0.528s cpu time, 0.039s GC time
Loading theory "ConcurrentIMP.Infinite_Sequences" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP" via "ConcurrentIMP.CIMP_lang" via "ConcurrentIMP.LTL")
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.534s cpu time, 0.039s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  stake :: "nat => (nat => 'a) => 'a list"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  shift :: "'a list => (nat => 'a) => nat => 'a"
signature CASE_CONVERTER =
  sig
    type elimination_strategy
    val keep_constructor_context: elimination_strategy
    val replace_by_type:
       (Proof.context -> string * string -> bool) -> elimination_strategy
    val to_case:
       Proof.context ->
         elimination_strategy ->
           (string * typ -> int) -> thm list -> thm list option
  end
structure Case_Converter: CASE_CONVERTER
### theory "HOL-Library.Case_Converter"
### 0.197s elapsed time, 0.812s cpu time, 0.039s GC time
Loading theory "HOL-Library.Simps_Case_Conv" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis")
Found termination order: "size_list size <*mlex*> {}"
signature SIMPS_CASE_CONV =
  sig
    val gen_to_simps: Proof.context -> thm list -> thm -> thm list
    val to_case: Proof.context -> thm list -> thm
    val to_simps: Proof.context -> thm -> thm list
  end
structure Simps_Case_Conv: SIMPS_CASE_CONV
### theory "HOL-Library.Simps_Case_Conv"
### 0.081s elapsed time, 0.312s cpu time, 0.059s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model")
### theory "ConcurrentIMP.Infinite_Sequences"
### 0.194s elapsed time, 0.769s cpu time, 0.059s GC time
Loading theory "ConcurrentIMP.LTL" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP" via "ConcurrentIMP.CIMP_lang")
### theory "HOL-Library.Nat_Bijection"
### 0.324s elapsed time, 1.303s cpu time, 0.098s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.836s cpu time, 0.059s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  prefixes :: "'a list => 'a list list"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "ConcurrentIMP.LTL"
### 0.378s elapsed time, 1.470s cpu time, 0.230s GC time
Loading theory "ConcurrentIMP.CIMP_lang" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "list_emb"
consts
  flat :: "'a list stream => 'a stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.121s elapsed time, 4.204s cpu time, 0.993s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.634s elapsed time, 6.236s cpu time, 1.197s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.833s elapsed time, 2.980s cpu time, 0.389s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.423s elapsed time, 8.464s cpu time, 2.265s GC time
Loading theory "Draft.Templates" (required by "Draft.ProofsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.138s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ProofsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.553s elapsed time, 1.178s cpu time, 0.160s GC time
Proofs for inductive predicate(s) "small_step"
  Proving monotonicity ...
Proofs for inductive predicate(s) "system_step"
  Proving monotonicity ...
consts
  atC :: "('answer, 'location, 'question, 'state) com => 'location set"
consts
  atCs ::
    "('answer, 'location, 'question, 'state) com list => 'location set"
### theory "ConcurrentIMP.CIMP_lang"
### 4.167s elapsed time, 9.987s cpu time, 2.385s GC time
Loading theory "ConcurrentIMP.CIMP_vcg" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "basic_com"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ctxtp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Proofs for inductive predicate(s) "vcg"
  Proving monotonicity ...
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
### theory "ConcurrentIMP.CIMP_vcg"
### 2.501s elapsed time, 2.885s cpu time, 0.307s GC time
Loading theory "ConcurrentIMP.CIMP_vcg_rules" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
### theory "ConcurrentIMP.CIMP_vcg_rules"
### 0.242s elapsed time, 0.270s cpu time, 0.021s GC time
Loading theory "ConcurrentIMP.CIMP" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis" via "Draft.Model")
val ss_only = fn: thm list -> Proof.context -> Proof.context
val HOL_ss_only = fn: thm list -> Proof.context -> Proof.context
signature CIMP =
  sig
    val com_locs_fold: (term * 'a -> 'a) -> 'a -> term -> 'a
    val com_locs_fold_no_response: (term * 'a -> 'a) -> 'a -> term -> 'a
    val com_locs_map: (term -> 'a) -> term -> 'a list
    val com_locs_map_no_response: (term -> 'a) -> term -> 'a list
    val def_locset: thm -> local_theory -> local_theory
    val intern_com: Facts.ref -> local_theory -> local_theory
  end
structure Cimp: CIMP
### theory "ConcurrentIMP.CIMP"
### 0.114s elapsed time, 0.114s cpu time, 0.000s GC time
Loading theory "Draft.Model" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants" via "Draft.Proofs_Basis")
locale mut_m
  fixes m :: "'mut"
locale mut_m'
  fixes m :: "'mut"
    and m' :: "'mut"
  assumes "mut_m' m m'"
locale gc
locale sys
locale sys
locale mut_m
  fixes m :: "'mut"
locale gc
locale sys
locale mut_m
  fixes m :: "'mut"
locale gc
consts
  gc_coms ::
    "'mut process_name
     => (('field, 'payload, 'ref) response, char list,
         'mut process_name * ('field, 'mut, 'payload, 'ref) request_op,
         ('field, 'mut, 'payload, 'ref) Model.local_state) com"
### theory "Draft.Model"
### 8.904s elapsed time, 12.165s cpu time, 4.400s GC time
Loading theory "Draft.Proofs_Basis" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas" via "Draft.Global_Invariants")
locale gc
locale mut_m
  fixes m :: "'mut"
locale sys
locale mut_m
  fixes m :: "'mut"
### theory "Draft.Proofs_Basis"
### 4.937s elapsed time, 5.133s cpu time, 0.257s GC time
Loading theory "Draft.Global_Invariants" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Global_Invariants_Lemmas")
Loading theory "Draft.Local_Invariants" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO" via "Draft.Local_Invariants_Lemmas")
Loading theory "Draft.Tactics" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO")
locale gc
### Cannot skip proof of schematic goal statement
locale mut_m
  fixes m :: "'mut"
consts
  mutator_phase_inv_aux ::
    "hs_phase
     => ('mut process_name
         => ('field, 'mut, 'payload, 'ref) Model.local_state)
        => bool"
consts
  sys_phase_inv_aux ::
    "hs_phase
     => ('mut process_name
         => ('field, 'mut, 'payload, 'ref) Model.local_state)
        => bool"
locale gc_system
  fixes initial_mark :: "bool"
### theory "Draft.Global_Invariants"
### 0.480s elapsed time, 1.812s cpu time, 0.118s GC time
Loading theory "Draft.Global_Invariants_Lemmas" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO")
### Rewrite rule not in simpset:
### (!!x. x = ?a ==> PROP ?P x) == PROP ?P ?a
### Rewrite rule not in simpset:
### (!!x. ?a = x ==> PROP ?P x) == PROP ?P ?a
### Simplification procedure "HOL.defined_all" not in simpset
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
locale mut_m
  fixes m :: "'mut"
signature GC_VCG =
  sig
    val loc_mem_tac: Proof.context -> int -> tactic
    val nuke_schematic_prems: Proof.context -> int -> tactic
    val thin_post_inv_tac: bool -> Proof.context -> int -> tactic
    val thin_pre_inv_tac: Proof.context -> int -> tactic
    val vcg_chainsaw_tac: bool -> thm list -> Proof.context -> int -> tactic
    val vcg_fragments_tac: Proof.context -> int -> tactic
    val vcg_inv_tac: bool -> bool -> Proof.context -> int -> tactic
    val vcg_jackhammer_tac: bool -> bool -> Proof.context -> int -> tactic
    val vcg_name_cases_tac: term list -> thm list -> context_tactic
    val vcg_sem_tac: Proof.context -> int -> tactic
  end
structure GC_VCG: GC_VCG
### theory "Draft.Tactics"
### 1.394s elapsed time, 5.430s cpu time, 0.294s GC time
locale mut_m
  fixes m :: "'mut"
locale mut_m
  fixes m :: "'mut"
locale mut_m
  fixes m :: "'mut"
### theory "Draft.Global_Invariants_Lemmas"
### 1.466s elapsed time, 5.794s cpu time, 0.233s GC time
Loading theory "Draft.Global_Noninterference" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
locale sys
### theory "Draft.Global_Noninterference"
### 0.336s elapsed time, 1.316s cpu time, 0.046s GC time
locale mut_m
  fixes m :: "'mut"
locale gc
locale mut_m
  fixes m :: "'mut"
locale gc
locale mark_object
  fixes p :: "'mut process_name"
    and l :: "char list"
    and
    p_ph_enabled ::
      "('mut process_name
        => ('field, 'mut, 'payload, 'ref) Model.local_state)
       => bool"
  assumes "mark_object p p_ph_enabled"
locale mut_m
  fixes m :: "'mut"
locale gc
locale gc
### theory "Draft.Local_Invariants"
### 87.767s elapsed time, 321.945s cpu time, 4.500s GC time
Loading theory "Draft.Local_Invariants_Lemmas" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs" via "Draft.TSO")
### Rewrite rule not in simpset:
### (!!x. x = ?a ==> PROP ?P x) == PROP ?P ?a
### Rewrite rule not in simpset:
### (!!x. ?a = x ==> PROP ?P x) == PROP ?P ?a
### Simplification procedure "HOL.defined_all" not in simpset
locale mut_m
  fixes m :: "'mut"
locale gc
locale gc
locale mark_object
  fixes p :: "'mut process_name"
    and l :: "char list"
    and
    p_ph_enabled ::
      "('mut process_name
        => ('field, 'mut, 'payload, 'ref) Model.local_state)
       => bool"
  assumes "mark_object p p_ph_enabled"
### theory "Draft.Local_Invariants_Lemmas"
### 0.288s elapsed time, 0.361s cpu time, 0.038s GC time
Loading theory "Draft.Initial_Conditions" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
Loading theory "Draft.MarkObject" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
Loading theory "Draft.Noninterference" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
Loading theory "Draft.Phases" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
locale gc_system
  fixes initial_mark :: "bool"
locale gc
locale gc_system
  fixes initial_mark :: "bool"
### theory "Draft.Initial_Conditions"
### 0.420s elapsed time, 1.659s cpu time, 0.117s GC time
Loading theory "Draft.StrongTricolour" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
locale mut_m
  fixes m :: "'mut"
locale gc
locale sys
locale gc
locale gc
locale mut_m
  fixes m :: "'mut"
locale mut_m
  fixes m :: "'mut"
### theory "Draft.MarkObject"
### 1.001s elapsed time, 3.947s cpu time, 0.350s GC time
Loading theory "Draft.TSO" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
locale gc
### theory "Draft.Noninterference"
### 1.109s elapsed time, 4.359s cpu time, 0.401s GC time
Loading theory "Draft.Valid_Refs" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
locale gc
locale gc
locale mut_m
  fixes m :: "'mut"
locale mut_m
  fixes m :: "'mut"
locale gc
locale sys
locale mut_m
  fixes m :: "'mut"
locale gc
locale gc
locale sys
locale mut_m
  fixes m :: "'mut"
### theory "Draft.Phases"
### 1.626s elapsed time, 6.390s cpu time, 0.608s GC time
Loading theory "Draft.Worklists" (required by "Draft.ProofsMoreTemplates" via "Draft.Proofs")
locale mut_m
  fixes m :: "'mut"
### theory "Draft.StrongTricolour"
### 1.279s elapsed time, 5.026s cpu time, 0.491s GC time
locale mut_m'
  fixes m :: "'mut"
    and m' :: "'mut"
  assumes "mut_m' m m'"
locale sys
### theory "Draft.TSO"
### 0.734s elapsed time, 2.864s cpu time, 0.258s GC time
### theory "Draft.Valid_Refs"
### 0.645s elapsed time, 2.482s cpu time, 0.206s GC time
### theory "Draft.Worklists"
### 0.512s elapsed time, 0.876s cpu time, 0.044s GC time
Loading theory "Draft.Proofs" (required by "Draft.ProofsMoreTemplates")
locale gc_system
  fixes initial_mark :: "bool"
### theory "Draft.Proofs"
### 0.930s elapsed time, 0.965s cpu time, 0.051s GC time
Loading theory "Draft.ProofsMoreTemplates"
val templateLemmas =
   [("Proofs_Basis.valid_null_ref_simps", "valid_null_ref None ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Proofs_Basis.reaches_refl", "(?r reaches ?r) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Proofs_Basis.eq_imp_simps", "EX x. x = ?t",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Proofs_Basis.eq_imp_simps", "EX x. ?t = x",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Proofs_Basis.eq_imp_simps", "?P ~= (~ ?P)",
     template_negation
      (
         template_equation
          (template_var 0, template_app (template_hole 1, template_var 0))
         )),
    ("Proofs_Basis.eq_imp_simps", "(~ ?P) ~= ?P",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_var 0)
         )),
    ("Proofs_Basis.eq_imp_simps", "(ALL x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(EX x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(~ ~ ?P) = ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(False & ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(True & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P & False) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P & True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(False | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(True | ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P | False) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P | True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(?x = ?x) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(True = ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P = True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(False --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(True --> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P --> True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "fst (?x1.0, ?x2.0) = ?x1.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Proofs_Basis.eq_imp_simps", "snd (?x1.0, ?x2.0) = ?x2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Proofs_Basis.eq_imp_simps", "(False = ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Proofs_Basis.eq_imp_simps", "(?P = False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Proofs_Basis.eq_imp_simps", "(?P --> False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Proofs_Basis.eq_imp_simps", "(?P & ~ ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(~ ?P & ?P) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(?P | ~ ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(~ ?P | ?P) = True",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Proofs.mut_invsL",
     "\<lbrace>I\<rbrace> mutator ?m \<lbrace>mut_m.invsL ?m'\<rbrace>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Proofs_Basis.do_store_action_prj_simps",
     "ghost_hs_in_sync (do_store_action ?w ?s) = ghost_hs_in_sync ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "hs_pending (do_store_action ?w ?s) = hs_pending ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "W (do_store_action ?w ?s) = W ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "ghost_honorary_grey (do_store_action ?w ?s) = ghost_honorary_grey ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.eq_imp_simps", "(?P --> ~ ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "hs_type (do_store_action ?w ?s) = hs_type ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "mem_lock (do_store_action ?w ?s) = mem_lock ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "ghost_hs_phase (do_store_action ?w ?s) = ghost_hs_phase ?s",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Proofs_Basis.do_load_action_simps",
     "do_load_action mr_Phase ?x = mv_Phase (phase ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Proofs_Basis.eq_imp_simps", "(ALL x. x ~= ?t) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("Proofs_Basis.eq_imp_simps", "(ALL x. ?t ~= x) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("Proofs_Basis.do_load_action_simps",
     "do_load_action mr_fA ?x = mv_Mark (Some (fA ?x))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Proofs_Basis.do_load_action_simps",
     "do_load_action mr_fM ?x = mv_Mark (Some (fM ?x))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Proofs_Basis.eq_imp_simps", "(?P ~= ?Q) = (?P = (~ ?Q))",
     template_bimplication
      (template_negation
        (template_equation (template_var 1, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Proofs_Basis.eq_imp_simps", "(?P & ?P & ?Q) = (?P & ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Proofs_Basis.eq_imp_simps", "(?P | ?P | ?Q) = (?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Proofs_Basis.eq_imp_simps", "((~ ?P) = (~ ?Q)) = (?P = ?Q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Proofs_Basis.do_store_action_simps",
     "do_store_action (mw_Phase ?x) ?xa = ?xa(| phase := ?x |)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Proofs_Basis.do_store_action_simps",
     "do_store_action (mw_fA ?x) ?xa = ?xa(| fA := ?x |)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Proofs_Basis.do_store_action_simps",
     "do_store_action (mw_fM ?x) ?xa = ?xa(| fM := ?x |)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Proofs_Basis.colours_distinct", "black ?r ?s ==> ~ grey ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Proofs_Basis.colours_distinct", "black ?r ?s ==> ~ white ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Proofs_Basis.colours_distinct", "grey ?r ?s ==> ~ black ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Proofs_Basis.colours_distinct", "white ?r ?s ==> ~ black ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Proofs_Basis.valid_null_ref_simps",
     "valid_null_ref (Some ?r) ?s = obj_at (%s. True) ?r ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0))),
    ("Proofs_Basis.obj_at_field_on_heap_eq_imp",
     "eq_imp (%_ s. sys_heap s ?r) (obj_at_field_on_heap ?P ?r ?f)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0))
         )),
    ("Proofs_Basis.eq_imp_simps", "(ALL x. x = ?t --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Proofs_Basis.eq_imp_simps", "(ALL x. ?t = x --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Proofs_Basis.eq_imp_simps", "(EX x. x = ?t & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Proofs_Basis.eq_imp_simps", "(EX x. ?t = x & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Proofs_Basis.do_load_action_simps",
     "do_load_action (mr_Mark ?x) ?xa =
      mv_Mark (map_option obj_mark (local_state.heap ?xa ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Proofs_Basis.obj_at_field_on_heap_imp_valid_ref",
     "obj_at_field_on_heap ?P ?r ?f ?s ==> valid_null_ref (Some ?r) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)
           ))),
    ("Proofs_Basis.obj_at_eq_imp",
     "eq_imp (%_ s. map_option ?P (sys_heap s ?r)) (obj_at ?P ?r)",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Proofs_Basis.Set_bind_insert",
     "Set.bind (insert ?a ?A) ?B = ?B ?a Un Set.bind ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Proofs_Basis.obj_at_field_on_heap_imp_valid_ref",
     "obj_at_field_on_heap ?P ?r ?f ?s ==> obj_at (%s. True) ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), template_var 2),
             template_var 0)
           ))),
    ("Proofs_Basis.eq_imp_simps", "(ALL x. ?P x) = (ALL a b. ?P (a, b))",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(local_state.heap (do_store_action ?w ?s) ?r = None) =
      (local_state.heap ?s ?r = None)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 0))),
    ("Proofs_Basis.valid_null_ref_eq_imp",
     "eq_imp (%_ s. Option.bind ?r (map_option (%s. True) o sys_heap s))
       (valid_null_ref ?r)",
     template_predicate
      (
         template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("Proofs.mutators_phase_inv",
     "\<lbrace>I\<rbrace> mutator
                           ?m \<lbrace>%s.
    mut_m.mutator_phase_inv_aux ?m'
     (ghost_hs_phase (s\<down> (mutator ?m'))) s\<down>\<rbrace>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 1)),
           t_empty)
         )),
    ("Proofs_Basis.eq_imp_simps",
     "(?s = ?t) = (fst ?s = fst ?t & snd ?s = snd ?t)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Proofs_Basis.p_not_sys",
     "(?p ~= sys) = (?p = gc | (EX m. ?p = mutator m))",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 4)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 2)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Proofs_Basis.do_load_action_simps",
     "do_load_action (mr_Payload ?xa ?x) ?xb =
      mv_Payload
       (Option.bind (local_state.heap ?xb ?xa) (%obj. obj_payload obj ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           t_empty)))),
    ("Proofs_Basis.do_load_action_simps",
     "do_load_action (mr_Ref ?xa ?x) ?xb =
      mv_Ref
       (Option.bind (local_state.heap ?xb ?xa) (%obj. obj_fields obj ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           t_empty)))),
    ("Proofs_Basis.reaches_eq_imp",
     "eq_imp
       (%r' s. \<Union> (ran ` obj_fields ` set_option (sys_heap s r')))
       (?x reaches ?y)",
     template_predicate
      (
         template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Proofs_Basis.eq_imp_simps",
     "(ALL x. ?P x & ?Q x) = ((ALL x. ?P x) & (ALL x. ?Q x))",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("Proofs_Basis.obj_at_simps",
     "obj_at (%obj. ?P obj & ?Q obj) ?r ?s =
      (obj_at ?P ?r ?s & obj_at ?Q ?r ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Proofs_Basis.marked_imp_black_or_grey",
     "marked ?r ?s ==> black ?r ?s | grey ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty), template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Proofs_Basis.marked_imp_black_or_grey",
     "~ white ?r ?s ==>
      ~ obj_at (%s. True) ?r ?s | black ?r ?s | grey ?r ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 3, t_empty),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Proofs_Basis.reaches_step",
     "[| (?x reaches ?y) ?s; (?y points_to ?z) ?s |]
      ==> (?x reaches ?z) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty), template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Proofs_Basis.reaches_step",
     "[| (?y reaches ?z) ?s; (?x points_to ?y) ?s |]
      ==> (?x reaches ?z) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty), template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Proofs_Basis.do_store_action_simps",
     "do_store_action (mw_Mark ?xa ?x) ?xb = ?xb
      (| heap := (local_state.heap ?xb)
           (?xa :=
              map_option (obj_mark_update (%_. ?x))
               (local_state.heap ?xb ?xa)) |)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 4, t_empty), template_var 0))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(?fl = fA (do_store_action ?w ?s)) =
      (?fl = fA ?s & ?w ~= mw_fA (~ fA ?s) | ?w = mw_fA ?fl)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_app (template_hole 6, template_var 0))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 6, template_var 0))))))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(?fl = fM (do_store_action ?w ?s)) =
      (?fl = fM ?s & ?w ~= mw_fM (~ fM ?s) | ?w = mw_fM ?fl)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_app (template_hole 6, template_var 0))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 6, template_var 0))))))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(fA (do_store_action ?w ?s) = ?fl) =
      (fA ?s = ?fl & ?w ~= mw_fA (~ fA ?s) | ?w = mw_fA ?fl)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 6, template_var 1))))))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(fM (do_store_action ?w ?s) = ?fl) =
      (fM ?s = ?fl & ?w ~= mw_fM (~ fM ?s) | ?w = mw_fM ?fl)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 6, template_var 1))))))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(?ph = phase (do_store_action ?w ?s)) =
      (?ph = phase ?s & (ALL ph'. ?w ~= mw_Phase ph') | ?w = mw_Phase ?ph)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_app (template_hole 7, template_var 0))),
                 template_app (template_hole 3, t_empty))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Proofs_Basis.do_store_action_prj_simps",
     "(phase (do_store_action ?w ?s) = ?ph) =
      (phase ?s = ?ph & (ALL ph'. ?w ~= mw_Phase ph') | ?w = mw_Phase ?ph)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 1)),
                     template_var 0)),
                 template_app (template_hole 3, t_empty))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Proofs_Basis.do_store_action_simps",
     "do_store_action (mw_Mutate ?xb ?xa ?x) ?xc = ?xc
      (| heap := (local_state.heap ?xc)
           (?xb :=
              map_option
               (%obj. obj(| obj_fields := (obj_fields obj)(?xa := ?x) |))
               (local_state.heap ?xc ?xb)) |)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 6, t_empty), template_var 0))),
    ("Proofs_Basis.do_store_action_simps",
     "do_store_action (mw_Mutate_Payload ?xb ?xa ?x) ?xc = ?xc
      (| heap := (local_state.heap ?xc)
           (?xb :=
              map_option
               (%obj. obj(| obj_payload := (obj_payload obj)(?xa := ?x) |))
               (local_state.heap ?xc ?xb)) |)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 6, t_empty), template_var 0))),
    ("Proofs_Basis.option_bind_invE",
     "[| Option.bind ?f ?g = Some ?x;
         !!a. [| ?f = Some a; ?g a = Some ?x |] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Proofs_Basis.obj_at_field_on_heap_fun_upd",
     "sys_heap (?s(?fld := ?val)) ?r = sys_heap ?s ?r ==>
      obj_at_field_on_heap ?P ?r ?f (?s(?fld := ?val)) =
      obj_at_field_on_heap ?P ?r ?f ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_hole 2)),
            template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_var 5, template_hole 2)),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 5)))),
    ("Proofs_Basis.obj_at_split",
     "?Q (obj_at ?P ?r ?s) =
      ((sys_heap ?s ?r = None --> ?Q False) &
       (ALL obj. sys_heap ?s ?r = Some obj --> ?Q (?P obj)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_var 0, template_hole 4)),
                         template_var 1)),
                     template_hole 3)),
                 template_app (template_var 3, template_hole 2))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Proofs_Basis.obj_at_fun_upd",
     "map_option ?P (sys_heap (?s(?fld := ?val)) ?r) =
      map_option ?P (sys_heap ?s ?r) ==>
      obj_at ?P ?r (?s(?fld := ?val)) = obj_at ?P ?r ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4),
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_hole 2)),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_app
             (template_app
               (template_hole 4,
                template_app (template_var 3, template_hole 2)),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0),
           template_var 3)))),
    ("Proofs_Basis.obj_at_split_asm",
     "?Q (obj_at ?P ?r ?s) =
      (~ (sys_heap ?s ?r = None & ~ ?Q False |
          (EX obj. sys_heap ?s ?r = Some obj & ~ ?Q (?P obj))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_var 0, template_hole 4)),
                             template_var 1)),
                         template_hole 3)),
                     template_app
                      (template_hole 9,
                       template_app (template_var 3, template_hole 2)))),
                 template_app (template_hole 1, t_empty))
               )
           ))),
    ("Proofs_Basis.obj_at_field_on_heap_mw_simps",
     "obj_at_field_on_heap ?P ?r ?f
       (?s(sys := ?s sys
             (| heap := (sys_heap ?s)
                  (?r' :=
                     map_option (obj_mark_update (%_. ?fl))
                      (sys_heap ?s ?r')),
                mem_store_buffers := ?sb' |))) =
      obj_at_field_on_heap ?P ?r ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_hole 6),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_var 3, template_hole 6))))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 6),
             template_var 5),
           template_var 4),
         template_var 3))),
    ("Proofs_Basis.option_bind_invE",
     "[| Option.bind ?f ?g = None;
         !!a. [| ?f = Some a; ?g a = None |] ==> ?Q; ?f = None ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Proofs_Basis.obj_at_field_on_heapE",
     "[| obj_at_field_on_heap ?P ?r ?f ?s; sys_heap ?s' ?r = sys_heap ?s ?r;
         !!r'. ?P r' ==> ?P' r' |]
      ==> obj_at_field_on_heap ?P' ?r ?f ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_var 1, template_hole 4)),
            template_var 4),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_var 2, template_hole 2)),
            template_var 4)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4),
               template_var 3),
             template_var 1)
           ))),
    ("Proofs_Basis.reaches_fields",
     "[| (?x reaches ?y) ?s';
         ALL r'.
            \<Union> (ran ` obj_fields ` set_option (sys_heap ?s' r')) =
            \<Union> (ran ` obj_fields ` set_option (sys_heap ?s r')) |]
      ==> (?x reaches ?y) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Proofs_Basis.valid_null_ref_fun_upd",
     "Option.bind ?r
       (%x. map_option (%s. True) (sys_heap (?s(?fld := ?val)) x)) =
      Option.bind ?r (%x. map_option (%s. True) (sys_heap ?s x)) ==>
      valid_null_ref ?r (?s(?fld := ?val)) = valid_null_ref ?r ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 3), t_empty),
          template_app
           (template_app (template_hole 7, template_var 3), t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("Proofs_Basis.converse_reachesE",
     "[| (?x reaches ?z) ?s; ?x = ?z ==> ?P;
         !!y. [| (?x points_to y) ?s; (y reaches ?z) ?s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 3, template_var 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Proofs_Basis.obj_at_cong",
     "[| !!obj. sys_heap ?s ?r = Some obj ==> ?P obj = ?P' obj; ?r = ?r';
         ?s = ?s' |]
      ==> obj_at ?P ?r ?s = obj_at ?P' ?r' ?s'",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_equation (template_var 4, template_var 1),
        template_equation (template_var 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 4),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Proofs_Basis.reaches_fun_upd",
     "(!!x. \<Union>
             (ran `
              obj_fields ` set_option (sys_heap (?s(?fld := ?val)) x)) =
            \<Union> (ran ` obj_fields ` set_option (sys_heap ?s x))) ==>
      (?x reaches ?y) (?s(?fld := ?val)) = (?x reaches ?y) ?s",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 4)))),
    ("Proofs_Basis.obj_at_mark_dequeue",
     "obj_at ?P ?r
       (?s(sys := ?s sys
             (| heap := (sys_heap ?s)
                  (?r' :=
                     map_option (obj_mark_update (%_. ?fl))
                      (sys_heap ?s ?r')),
                mem_store_buffers := ?wb' |))) =
      obj_at (%obj. ?P (if ?r = ?r' then obj(| obj_mark := ?fl |) else obj))
       ?r ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 5), template_var 4),
         template_app
          (template_app
            (template_app (template_hole 9, template_var 3),
             template_hole 8),
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_var 3, template_hole 8))))),
       template_app
        (template_app
          (template_app (template_hole 10, t_empty), template_var 4),
         template_var 3))),
    ("Proofs_Basis.obj_at_field_on_heap_no_pending_stores",
     "[| sys_load (mutator ?m) (mr_Ref ?r ?f) (?s sys) = mv_Ref ?opt_r';
         ALL opt_r'.
            mw_Mutate ?r ?f opt_r'
            ~: set (sys_mem_store_buffers (mutator ?m) ?s);
         obj_at (%s. True) ?r ?s |]
      ==> obj_at_field_on_heap (%r. ?opt_r' = Some r) ?r ?f ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 4)),
              template_app
               (template_app (template_hole 13, template_var 3),
                template_var 2)),
            template_app (template_var 1, template_hole 12)),
          template_app (template_hole 11, template_var 0)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty), template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Proofs_Basis.reaches_induct",
     "[| (?x reaches ?y) ?s; !!x. ?P x x;
         !!x y z.
            [| (x reaches y) ?s; ?P x y; (y points_to z) ?s |] ==> ?P x z |]
      ==> ?P ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 3), template_var 2)
           ))),
    ("Proofs_Basis.nie",
     "[| gc.sweep_loop_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc; sys_fM ?s\<down> = sys_fM ?s'\<down>;
         map_option obj_mark o sys_heap ?s\<down> =
         map_option obj_mark o sys_heap ?s'\<down> |]
      ==> gc.sweep_loop_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_hole 10),
          template_app
           (template_app (template_hole 11, template_var 0),
            template_hole 10)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 10),
          template_app
           (template_app (template_hole 8, template_var 0),
            template_hole 10)),
        template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 5)),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 5))),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_hole 1)),
            template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 8, template_var 1),
                template_hole 5))),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_hole 1)),
            template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 8, template_var 0),
                template_hole 5))))],
       template_predicate
        (template_app (template_hole 13, template_var 0)))),
    ("Proofs_Basis.nie",
     "[| gc.phase_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc;
         filter is_mw_Phase (sys_mem_store_buffers gc ?s\<down>) =
         filter is_mw_Phase (sys_mem_store_buffers gc ?s'\<down>) |]
      ==> gc.phase_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 1),
            template_hole 9),
          template_app
           (template_app (template_hole 10, template_var 0),
            template_hole 9)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 9),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 9)),
        template_equation
         (template_app
           (template_app (template_hole 5, t_empty),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 0)),
              template_hole 9)),
          template_app
           (template_app (template_hole 5, t_empty),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 0)),
              template_hole 9)))],
       template_predicate
        (template_app (template_hole 12, template_var 0)))),
    ("Proofs_Basis.obj_at_field_on_heap_cong",
     "[| !!r' obj.
            [| sys_heap ?s ?r = Some obj; obj_fields obj ?f = Some r' |]
            ==> ?P r' = ?P' r';
         ?r = ?r'; ?f = ?f'; ?s = ?s' |]
      ==> obj_at_field_on_heap ?P ?r ?f ?s =
          obj_at_field_on_heap ?P' ?r' ?f' ?s'",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_equation (template_var 6, template_var 2),
        template_equation (template_var 5, template_var 1),
        template_equation (template_var 7, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 6),
             template_var 5),
           template_var 7),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Proofs_Basis.obj_at_field_on_heap_split",
     "?Q (obj_at_field_on_heap ?P ?r ?f ?s) =
      ((sys_heap ?s ?r = None --> ?Q False) &
       (ALL obj.
           sys_heap ?s ?r = Some obj & obj_fields obj ?f = None -->
           ?Q True) &
       (ALL r' obj.
           sys_heap ?s ?r = Some obj & obj_fields obj ?f = Some r' -->
           ?Q (?P r')))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 4,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app (template_var 0, template_hole 10)),
                         template_var 2)),
                     template_hole 9)),
                 template_app (template_var 4, template_hole 8))),
             template_app
              (template_app
                (template_hole 14, template_app (template_hole 7, t_empty)),
               template_app (template_hole 1, t_empty)))
           ))),
    ("Proofs_Basis.nie",
     "[| gc.fM_fA_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc; sys_fA ?s\<down> = sys_fA ?s'\<down>;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_mem_store_buffers gc ?s\<down> =
         sys_mem_store_buffers gc ?s'\<down> |]
      ==> gc.fM_fA_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1),
            template_hole 8),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 8)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 8),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 8)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 3)),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 3))),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 3)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 3))),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 3)),
            template_hole 8),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 3)),
            template_hole 8))],
       template_predicate
        (template_app (template_hole 11, template_var 0)))),
    ("Proofs_Basis.obj_at_field_on_heap_split_asm",
     "?Q (obj_at_field_on_heap ?P ?r ?f ?s) =
      (~ (sys_heap ?s ?r = None & ~ ?Q False |
          (EX obj.
              sys_heap ?s ?r = Some obj &
              obj_fields obj ?f = None & ~ ?Q True) |
          (EX r' obj.
              sys_heap ?s ?r = Some obj &
              obj_fields obj ?f = Some r' & ~ ?Q (?P r'))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 4,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 16, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app
                            (template_app
                              (template_hole 11,
                               template_app
                                (template_var 0, template_hole 10)),
                             template_var 2)),
                         template_hole 9)),
                     template_app
                      (template_hole 15,
                       template_app (template_var 4, template_hole 8)))),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app (template_hole 7, t_empty)),
                   template_app (template_hole 1, t_empty)))
               )
           ))),
    ("Proofs_Basis.nie",
     "[| gc.gc_W_empty_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc; sys_W ?s\<down> = sys_W ?s'\<down>;
         !!b. WL b ?s\<down> = WL b ?s'\<down>;
         !!a. sys_ghost_hs_in_sync a ?s\<down> =
              sys_ghost_hs_in_sync a ?s'\<down> |]
      ==> gc.gc_W_empty_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_hole 10),
          template_app
           (template_app (template_hole 11, template_var 0),
            template_hole 10)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 10),
          template_app
           (template_app (template_hole 8, template_var 0),
            template_hole 10)),
        template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 5)),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 5))),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (template_app (template_hole 13, template_var 0)))),
    ("Proofs_Basis.nie",
     "[| gc_mark.mark_object_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc;
         sys_heap ?s\<down> = sys_heap ?s'\<down>;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_mem_store_buffers gc ?s\<down> =
         sys_mem_store_buffers gc ?s'\<down> |]
      ==> gc_mark.mark_object_invL ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_hole 12),
                t_empty),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1),
            template_hole 13),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 13)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 13),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 13)),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 4)),
            template_hole 13),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 4)),
            template_hole 13))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_hole 12),
               t_empty),
             template_var 0)
           ))),
    ("Proofs_Basis.nie",
     "[| gc.handshake_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc;
         sys_ghost_hs_phase ?s\<down> = sys_ghost_hs_phase ?s'\<down>;
         hs_pending (?s\<down> sys) = hs_pending (?s'\<down> sys);
         ghost_hs_in_sync (?s\<down> sys) =
         ghost_hs_in_sync (?s'\<down> sys);
         sys_hs_type ?s\<down> = sys_hs_type ?s'\<down> |]
      ==> gc.handshake_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_hole 10),
          template_app
           (template_app (template_hole 11, template_var 0),
            template_hole 10)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 10),
          template_app
           (template_app (template_hole 8, template_var 0),
            template_hole 10)),
        template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 5)),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 5))),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 5)),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 5))),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 5)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 5))),
        template_equation
         (template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 5)),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 5)))],
       template_predicate
        (template_app (template_hole 13, template_var 0)))),
    ("Proofs_Basis.nie",
     "[| mut_m.handshake_invL ?m ?s;
         AT ?s (mutator ?m) = AT ?s' (mutator ?m);
         ?s\<down> (mutator ?m) = ?s'\<down> (mutator ?m);
         sys_hs_type ?s\<down> = sys_hs_type ?s'\<down>;
         sys_hs_pending ?m ?s\<down> = sys_hs_pending ?m ?s'\<down>;
         sys_mem_store_buffers (mutator ?m) ?s\<down> =
         sys_mem_store_buffers (mutator ?m) ?s'\<down> |]
      ==> mut_m.handshake_invL ?m ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 1),
            template_app (template_hole 9, template_var 2)),
          template_app
           (template_app (template_hole 10, template_var 0),
            template_app (template_hole 9, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 9, template_var 2)),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_app (template_hole 9, template_var 2))),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 4)),
            template_var 2),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 4)),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 4)),
            template_app (template_hole 9, template_var 2)),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 4)),
            template_app (template_hole 9, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 2),
             template_var 0)
           ))),
    ("Proofs_Basis.obj_at_field_on_heap_mw_simps",
     "obj_at_field_on_heap ?P ?r0.0 ?f0.0
       (?s(sys := ?s sys
             (| heap := (sys_heap ?s)
                  (?r :=
                     map_option
                      (%obj. obj
                          (| obj_fields := (obj_fields obj)
                               (?f := ?opt_r') |))
                      (sys_heap ?s ?r)),
                mem_store_buffers := (mem_store_buffers (?s ?Sys))
                  (?p := ?ws) |))) =
      ((?r ~= ?r0.0 | ?f ~= ?f0.0) &
       obj_at_field_on_heap ?P ?r0.0 ?f0.0 ?s |
       ?r = ?r0.0 &
       ?f = ?f0.0 &
       obj_at (%s. True) ?r ?s &
       (case ?opt_r' of None => True | Some r'' => ?P r''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 20, template_var 9),
                  template_var 8),
                template_var 7),
              template_app
               (template_app
                 (template_app (template_hole 19, template_var 6),
                  template_hole 18),
                template_app
                 (template_app (template_hole 17, t_empty),
                  template_app
                   (template_app (template_hole 14, t_empty),
                    template_app (template_var 6, template_hole 18)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 2),
                           template_var 8))),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 7)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 20, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 8)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 7)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 2, t_empty),
                         template_var 2),
                       template_var 6)),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_hole 1),
                       t_empty),
                     template_var 0)))))
           ))),
    ("Proofs_Basis.nie",
     "[| mut_get_roots.mark_object_invL ?m ?s;
         AT ?s (mutator ?m) = AT ?s' (mutator ?m);
         ?s\<down> (mutator ?m) = ?s'\<down> (mutator ?m);
         sys_heap ?s\<down> = sys_heap ?s'\<down>;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_mem_store_buffers (mutator ?m) ?s\<down> =
         sys_mem_store_buffers (mutator ?m) ?s'\<down> |]
      ==> mut_get_roots.mark_object_invL ?m ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 2)),
                  template_hole 12),
                t_empty),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1),
            template_app (template_hole 13, template_var 2)),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_app (template_hole 13, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 13, template_var 2)),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_app (template_hole 13, template_var 2))),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 4)),
            template_app (template_hole 13, template_var 2)),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 4)),
            template_app (template_hole 13, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 2)),
                 template_hole 12),
               t_empty),
             template_var 0)
           ))),
    ("Proofs_Basis.nie",
     "[| mut_store_ins.mark_object_invL ?m ?s;
         AT ?s (mutator ?m) = AT ?s' (mutator ?m);
         ?s\<down> (mutator ?m) = ?s'\<down> (mutator ?m);
         sys_heap ?s\<down> = sys_heap ?s'\<down>;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_mem_store_buffers (mutator ?m) ?s\<down> =
         sys_mem_store_buffers (mutator ?m) ?s'\<down> |]
      ==> mut_store_ins.mark_object_invL ?m ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 2)),
                  template_hole 15),
                t_empty),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1),
            template_app (template_hole 16, template_var 2)),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_app (template_hole 16, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 16, template_var 2)),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_app (template_hole 16, template_var 2))),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 4)),
            template_app (template_hole 16, template_var 2)),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 4)),
            template_app (template_hole 16, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 17,
                   template_app (template_hole 16, template_var 2)),
                 template_hole 15),
               t_empty),
             template_var 0)
           ))),
    ("Proofs_Basis.nie",
     "[| mut_m.mark_object_invL ?m ?s;
         AT ?s (mutator ?m) = AT ?s' (mutator ?m);
         ?s\<down> (mutator ?m) = ?s'\<down> (mutator ?m);
         ALL x. sys_heap ?s\<down> x = sys_heap ?s'\<down> x;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_phase ?s\<down> = sys_phase ?s'\<down>;
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers (mutator ?m) ?s\<down>) =
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers (mutator ?m) ?s'\<down>) |]
      ==> mut_m.mark_object_invL ?m ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 22, template_var 1),
            template_app (template_hole 21, template_var 2)),
          template_app
           (template_app (template_hole 22, template_var 0),
            template_app (template_hole 21, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 1),
            template_app (template_hole 21, template_var 2)),
          template_app
           (template_app (template_hole 19, template_var 0),
            template_app (template_hole 21, template_var 2))),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 19, template_var 1),
              template_hole 15)),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 19, template_var 0),
              template_hole 15))),
        template_equation
         (template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 19, template_var 1),
              template_hole 15)),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 19, template_var 0),
              template_hole 15))),
        template_equation
         (template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 19, template_var 1),
                  template_hole 15)),
              template_app (template_hole 21, template_var 2))),
          template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 19, template_var 0),
                  template_hole 15)),
              template_app (template_hole 21, template_var 2))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 24, template_var 2),
             template_var 0)
           ))),
    ("Proofs_Basis.nie",
     "[| gc.obj_fields_marked_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc;
         ALL x.
            map_option obj_fields (sys_heap ?s\<down> x) =
            map_option obj_fields (sys_heap ?s'\<down> x);
         ALL x.
            map_option obj_mark (sys_heap ?s\<down> x) =
            map_option obj_mark (sys_heap ?s'\<down> x);
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_W ?s\<down> = sys_W ?s'\<down>;
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers gc ?s\<down>) =
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers gc ?s'\<down>) |]
      ==> gc.obj_fields_marked_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 29, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 1),
            template_hole 26),
          template_app
           (template_app (template_hole 27, template_var 0),
            template_hole 26)),
        template_equation
         (template_app
           (template_app (template_hole 24, template_var 1),
            template_hole 26),
          template_app
           (template_app (template_hole 24, template_var 0),
            template_hole 26)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 18)),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 24, template_var 0),
              template_hole 18))),
        template_equation
         (template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 18)),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 24, template_var 0),
              template_hole 18))),
        template_equation
         (template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 24, template_var 1),
                  template_hole 18)),
              template_hole 26)),
          template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 24, template_var 0),
                  template_hole 18)),
              template_hole 26)))],
       template_predicate
        (template_app (template_hole 29, template_var 0)))),
    ("Proofs_Basis.nie",
     "[| mut_store_del.mark_object_invL ?m ?s;
         AT ?s (mutator ?m) = AT ?s' (mutator ?m);
         ?s\<down> (mutator ?m) = ?s'\<down> (mutator ?m);
         sys_heap ?s\<down> = sys_heap ?s'\<down>;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_mem_store_buffers (mutator ?m) ?s\<down> =
         sys_mem_store_buffers (mutator ?m) ?s'\<down> |]
      ==> mut_store_del.mark_object_invL ?m ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 21,
                    template_app (template_hole 20, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 18, template_hole 17),
                                    template_hole 17),
                                  template_hole 16),
                                template_hole 16),
                              template_hole 17),
                            template_hole 17),
                          template_hole 17),
                        template_hole 16)),
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 18, template_hole 16),
template_hole 16),
                                    template_hole 17),
                                  template_hole 16),
                                template_hole 17),
                              template_hole 17),
                            template_hole 17),
                          template_hole 16)),
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app (template_hole 18, template_hole 17), template_hole 17),
template_hole 17),
                                    template_hole 17),
                                  template_hole 16),
                                template_hole 17),
                              template_hole 17),
                            template_hole 16)),
                        template_app
                         (template_app
                           (template_hole 19,
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app (template_hole 18, template_hole 16), template_hole 17),
  template_hole 16),
template_hole 16),
                                    template_hole 17),
                                  template_hole 17),
                                template_hole 17),
                              template_hole 16)),
                          template_app
                           (template_app
                             (template_hole 19,
                              template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app
     (template_app (template_hole 18, template_hole 17), template_hole 16),
    template_hole 17),
  template_hole 16),
template_hole 16),
                                    template_hole 17),
                                  template_hole 17),
                                template_hole 16)),
                            template_app
                             (template_app
                               (template_hole 19,
                                template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app
     (template_app
       (template_app (template_hole 18, template_hole 17),
        template_hole 17),
      template_hole 17),
    template_hole 17),
  template_hole 17),
template_hole 16),
                                    template_hole 17),
                                  template_hole 16)),
                              template_app
                               (template_app
                                 (template_hole 19,
                                  template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app
     (template_app
       (template_app
         (template_app (template_hole 18, template_hole 16),
          template_hole 16),
        template_hole 17),
      template_hole 16),
    template_hole 16),
  template_hole 17),
template_hole 17),
                                    template_hole 16)),
                                template_app
                                 (template_app
                                   (template_hole 19,
                                    template_app
                                     (template_app
 (template_app
   (template_app
     (template_app
       (template_app
         (template_app
           (template_app (template_hole 18, template_hole 17),
            template_hole 16),
          template_hole 17),
        template_hole 16),
      template_hole 16),
    template_hole 17),
  template_hole 17),
template_hole 16)),
                                  template_app
                                   (template_app
                                     (template_hole 19,
template_app
 (template_app
   (template_app
     (template_app
       (template_app
         (template_app
           (template_app
             (template_app (template_hole 18, template_hole 16),
              template_hole 16),
            template_hole 17),
          template_hole 17),
        template_hole 16),
      template_hole 17),
    template_hole 17),
  template_hole 16)),
                                    template_hole 15)))))))))),
                t_empty),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1),
            template_app (template_hole 20, template_var 2)),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_app (template_hole 20, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 20, template_var 2)),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_app (template_hole 20, template_var 2))),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 4)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 4))),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 4)),
            template_app (template_hole 20, template_var 2)),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 4)),
            template_app (template_hole 20, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 21,
                   template_app (template_hole 20, template_var 2)),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 18, template_hole 17),
                                   template_hole 17),
                                 template_hole 16),
                               template_hole 16),
                             template_hole 17),
                           template_hole 17),
                         template_hole 17),
                       template_hole 16)),
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 18, template_hole 16),
                                     template_hole 16),
                                   template_hole 17),
                                 template_hole 16),
                               template_hole 17),
                             template_hole 17),
                           template_hole 17),
                         template_hole 16)),
                     template_app
                      (template_app
                        (template_hole 19,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 18, template_hole 17), template_hole 17),
                                     template_hole 17),
                                   template_hole 17),
                                 template_hole 16),
                               template_hole 17),
                             template_hole 17),
                           template_hole 16)),
                       template_app
                        (template_app
                          (template_hole 19,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 18, template_hole 16), template_hole 17),
 template_hole 16),
                                     template_hole 16),
                                   template_hole 17),
                                 template_hole 17),
                               template_hole 17),
                             template_hole 16)),
                         template_app
                          (template_app
                            (template_hole 19,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 18, template_hole 17), template_hole 16),
   template_hole 17),
 template_hole 16),
                                     template_hole 16),
                                   template_hole 17),
                                 template_hole 17),
                               template_hole 16)),
                           template_app
                            (template_app
                              (template_hole 19,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 18, template_hole 17), template_hole 17),
     template_hole 17),
   template_hole 17),
 template_hole 17),
                                     template_hole 16),
                                   template_hole 17),
                                 template_hole 16)),
                             template_app
                              (template_app
                                (template_hole 19,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 18, template_hole 16),
         template_hole 16),
       template_hole 17),
     template_hole 16),
   template_hole 16),
 template_hole 17),
                                     template_hole 17),
                                   template_hole 16)),
                               template_app
                                (template_app
                                  (template_hole 19,
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 18, template_hole 17),
           template_hole 16),
         template_hole 17),
       template_hole 16),
     template_hole 16),
   template_hole 17),
 template_hole 17),
                                     template_hole 16)),
                                 template_app
                                  (template_app
                                    (template_hole 19,
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 18, template_hole 16),
             template_hole 16),
           template_hole 17),
         template_hole 17),
       template_hole 16),
     template_hole 17),
   template_hole 17),
 template_hole 16)),
                                   template_hole 15)))))))))),
               t_empty),
             template_var 0)
           )))]:
   (string * thm * template) list
### theory "Draft.ProofsMoreTemplates"
### 0.637s elapsed time, 0.902s cpu time, 0.068s GC time
val it = (): unit
