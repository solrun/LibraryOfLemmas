Loading theory "ConcurrentIMP.CIMP_pred" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
Loading theory "HOL-Library.Case_Converter" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "HOL-Library.Simps_Case_Conv")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.157s elapsed time, 0.645s cpu time, 0.047s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "ConcurrentIMP.CIMP_pred"
### 0.158s elapsed time, 0.654s cpu time, 0.047s GC time
Loading theory "ConcurrentIMP.Infinite_Sequences" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP" via "ConcurrentIMP.CIMP_lang" via "ConcurrentIMP.LTL")
signature CASE_CONVERTER =
  sig
    type elimination_strategy
    val keep_constructor_context: elimination_strategy
    val replace_by_type:
       (Proof.context -> string * string -> bool) -> elimination_strategy
    val to_case:
       Proof.context ->
         elimination_strategy ->
           (string * typ -> int) -> thm list -> thm list option
  end
structure Case_Converter: CASE_CONVERTER
### theory "HOL-Library.Case_Converter"
### 0.186s elapsed time, 0.763s cpu time, 0.047s GC time
Loading theory "HOL-Library.Simps_Case_Conv" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  stake :: "nat => (nat => 'a) => 'a list"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "size_list size <*mlex*> {}"
consts
  shift :: "'a list => (nat => 'a) => nat => 'a"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
signature SIMPS_CASE_CONV =
  sig
    val gen_to_simps: Proof.context -> thm list -> thm -> thm list
    val to_case: Proof.context -> thm list -> thm
    val to_simps: Proof.context -> thm -> thm list
  end
structure Simps_Case_Conv: SIMPS_CASE_CONV
### theory "HOL-Library.Simps_Case_Conv"
### 0.077s elapsed time, 0.308s cpu time, 0.000s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model")
### theory "HOL-Library.Nat_Bijection"
### 0.350s elapsed time, 1.398s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs")
### theory "ConcurrentIMP.Infinite_Sequences"
### 0.211s elapsed time, 0.832s cpu time, 0.077s GC time
Loading theory "ConcurrentIMP.LTL" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP" via "ConcurrentIMP.CIMP_lang")
### theory "HOL-Library.Set_Algebras"
### 0.245s elapsed time, 0.967s cpu time, 0.077s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  prefixes :: "'a list => 'a list list"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "ConcurrentIMP.LTL"
### 0.426s elapsed time, 1.672s cpu time, 0.297s GC time
Loading theory "ConcurrentIMP.CIMP_lang" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Stream"
### 1.140s elapsed time, 4.290s cpu time, 1.043s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.712s elapsed time, 6.536s cpu time, 1.346s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.859s elapsed time, 3.086s cpu time, 0.479s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.224s elapsed time, 7.792s cpu time, 1.647s GC time
Loading theory "Draft.Templates" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Local_Invariants_LemmasMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.827s elapsed time, 2.047s cpu time, 0.978s GC time
Proofs for inductive predicate(s) "small_step"
  Proving monotonicity ...
Proofs for inductive predicate(s) "system_step"
  Proving monotonicity ...
consts
  atC :: "('answer, 'location, 'question, 'state) com => 'location set"
consts
  atCs ::
    "('answer, 'location, 'question, 'state) com list => 'location set"
### theory "ConcurrentIMP.CIMP_lang"
### 4.441s elapsed time, 10.870s cpu time, 3.381s GC time
Loading theory "ConcurrentIMP.CIMP_vcg" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "basic_com"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ctxtp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Proofs for inductive predicate(s) "vcg"
  Proving monotonicity ...
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
### theory "ConcurrentIMP.CIMP_vcg"
### 2.587s elapsed time, 2.995s cpu time, 0.387s GC time
Loading theory "ConcurrentIMP.CIMP_vcg_rules" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model" via "ConcurrentIMP.CIMP")
### theory "ConcurrentIMP.CIMP_vcg_rules"
### 0.250s elapsed time, 0.298s cpu time, 0.050s GC time
Loading theory "ConcurrentIMP.CIMP" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis" via "Draft.Model")
val ss_only = fn: thm list -> Proof.context -> Proof.context
val HOL_ss_only = fn: thm list -> Proof.context -> Proof.context
signature CIMP =
  sig
    val com_locs_fold: (term * 'a -> 'a) -> 'a -> term -> 'a
    val com_locs_fold_no_response: (term * 'a -> 'a) -> 'a -> term -> 'a
    val com_locs_map: (term -> 'a) -> term -> 'a list
    val com_locs_map_no_response: (term -> 'a) -> term -> 'a list
    val def_locset: thm -> local_theory -> local_theory
    val intern_com: Facts.ref -> local_theory -> local_theory
  end
structure Cimp: CIMP
### theory "ConcurrentIMP.CIMP"
### 0.113s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.Model" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants" via "Draft.Proofs_Basis")
locale mut_m
  fixes m :: "'mut"
locale mut_m'
  fixes m :: "'mut"
    and m' :: "'mut"
  assumes "mut_m' m m'"
locale gc
locale sys
locale sys
locale mut_m
  fixes m :: "'mut"
locale gc
locale sys
locale mut_m
  fixes m :: "'mut"
locale gc
consts
  gc_coms ::
    "'mut process_name
     => (('field, 'payload, 'ref) response, char list,
         'mut process_name * ('field, 'mut, 'payload, 'ref) request_op,
         ('field, 'mut, 'payload, 'ref) Model.local_state) com"
### theory "Draft.Model"
### 8.028s elapsed time, 8.987s cpu time, 1.217s GC time
Loading theory "Draft.Proofs_Basis" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas" via "Draft.Local_Invariants")
locale gc
locale mut_m
  fixes m :: "'mut"
locale sys
locale mut_m
  fixes m :: "'mut"
### theory "Draft.Proofs_Basis"
### 4.873s elapsed time, 5.176s cpu time, 0.399s GC time
Loading theory "Draft.Local_Invariants" (required by "Draft.Local_Invariants_LemmasMoreTemplates" via "Draft.Local_Invariants_Lemmas")
locale gc
locale mut_m
  fixes m :: "'mut"
locale gc
locale mut_m
  fixes m :: "'mut"
locale gc
locale mark_object
  fixes p :: "'mut process_name"
    and l :: "char list"
    and
    p_ph_enabled ::
      "('mut process_name
        => ('field, 'mut, 'payload, 'ref) Model.local_state)
       => bool"
  assumes "mark_object p p_ph_enabled"
locale mut_m
  fixes m :: "'mut"
locale gc
locale gc
### theory "Draft.Local_Invariants"
### 87.834s elapsed time, 321.974s cpu time, 7.712s GC time
Loading theory "Draft.Local_Invariants_Lemmas" (required by "Draft.Local_Invariants_LemmasMoreTemplates")
### Rewrite rule not in simpset:
### (!!x. x = ?a ==> PROP ?P x) == PROP ?P ?a
### Rewrite rule not in simpset:
### (!!x. ?a = x ==> PROP ?P x) == PROP ?P ?a
### Simplification procedure "HOL.defined_all" not in simpset
locale mut_m
  fixes m :: "'mut"
locale gc
locale gc
locale mark_object
  fixes p :: "'mut process_name"
    and l :: "char list"
    and
    p_ph_enabled ::
      "('mut process_name
        => ('field, 'mut, 'payload, 'ref) Model.local_state)
       => bool"
  assumes "mark_object p p_ph_enabled"
### theory "Draft.Local_Invariants_Lemmas"
### 0.294s elapsed time, 0.372s cpu time, 0.044s GC time
Loading theory "Draft.Local_Invariants_LemmasMoreTemplates"
val templateLemmas =
   [("Local_Invariants_Lemmas.mut_m_mark_object_invL_eq_imp",
     "eq_imp
       (%r s. (AT s (mutator ?m), s\<down> (mutator ?m),
               sys_heap s\<down> r, sys_fM s\<down>, sys_phase s\<down>,
               filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
                (sys_mem_store_buffers (mutator ?m) s\<down>)))
       (mut_m.mark_object_invL ?m)",
     template_predicate
      (
         template_app
          (template_app (template_hole 23, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("Local_Invariants_Lemmas.mut_m_mark_object_invL_niE",
     "[| mut_m.mark_object_invL ?m ?s;
         AT ?s (mutator ?m) = AT ?s' (mutator ?m);
         ?s\<down> (mutator ?m) = ?s'\<down> (mutator ?m);
         ALL x. sys_heap ?s\<down> x = sys_heap ?s'\<down> x;
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_phase ?s\<down> = sys_phase ?s'\<down>;
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers (mutator ?m) ?s\<down>) =
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers (mutator ?m) ?s'\<down>) |]
      ==> mut_m.mark_object_invL ?m ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 22, template_var 1),
            template_app (template_hole 21, template_var 2)),
          template_app
           (template_app (template_hole 22, template_var 0),
            template_app (template_hole 21, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 1),
            template_app (template_hole 21, template_var 2)),
          template_app
           (template_app (template_hole 19, template_var 0),
            template_app (template_hole 21, template_var 2))),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 19, template_var 1),
              template_hole 15)),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 19, template_var 0),
              template_hole 15))),
        template_equation
         (template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 19, template_var 1),
              template_hole 15)),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 19, template_var 0),
              template_hole 15))),
        template_equation
         (template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 19, template_var 1),
                  template_hole 15)),
              template_app (template_hole 21, template_var 2))),
          template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 19, template_var 0),
                  template_hole 15)),
              template_app (template_hole 21, template_var 2))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 24, template_var 2),
             template_var 0)
           ))),
    ("Local_Invariants_Lemmas.gc_obj_fields_marked_invL_niE",
     "[| gc.obj_fields_marked_invL ?s; AT ?s gc = AT ?s' gc;
         ?s\<down> gc = ?s'\<down> gc;
         ALL x.
            map_option obj_fields (sys_heap ?s\<down> x) =
            map_option obj_fields (sys_heap ?s'\<down> x);
         ALL x.
            map_option obj_mark (sys_heap ?s\<down> x) =
            map_option obj_mark (sys_heap ?s'\<down> x);
         sys_fM ?s\<down> = sys_fM ?s'\<down>;
         sys_W ?s\<down> = sys_W ?s'\<down>;
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers gc ?s\<down>) =
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers gc ?s'\<down>) |]
      ==> gc.obj_fields_marked_invL ?s'",
     template_implication
      ([template_predicate
         (template_app (template_hole 29, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 1),
            template_hole 26),
          template_app
           (template_app (template_hole 27, template_var 0),
            template_hole 26)),
        template_equation
         (template_app
           (template_app (template_hole 24, template_var 1),
            template_hole 26),
          template_app
           (template_app (template_hole 24, template_var 0),
            template_hole 26)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 18)),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 24, template_var 0),
              template_hole 18))),
        template_equation
         (template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 18)),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 24, template_var 0),
              template_hole 18))),
        template_equation
         (template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 24, template_var 1),
                  template_hole 18)),
              template_hole 26)),
          template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 24, template_var 0),
                  template_hole 18)),
              template_hole 26)))],
       template_predicate
        (template_app (template_hole 29, template_var 0)))),
    ("Local_Invariants_Lemmas.gc_obj_fields_marked_inv_fun_upd",
     "[| gc_field_set (?s(?fld := ?val)) = gc_field_set ?s;
         gc_tmp_ref (?s(?fld := ?val)) = gc_tmp_ref ?s;
         !!x. map_option obj_fields (sys_heap (?s(?fld := ?val)) x) =
              map_option obj_fields (sys_heap ?s x);
         !!x. map_option obj_mark (sys_heap (?s(?fld := ?val)) x) =
              map_option obj_mark (sys_heap ?s x);
         sys_fM (?s(?fld := ?val)) = sys_fM ?s;
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers gc (?s(?fld := ?val))) =
         filter (%s. is_mw_Mutate s | is_mw_Mutate_Payload s)
          (sys_mem_store_buffers gc ?s) |]
      ==> gc.obj_fields_marked (?s(?fld := ?val)) =
          gc.obj_fields_marked ?s",
     template_implication
      ([template_equation
         (template_app
           (template_hole 27,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 26, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 25)),
          template_app
           (template_hole 27,
            template_app (template_var 2, template_hole 25))),
        template_equation
         (template_app
           (template_hole 23,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 26, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 25)),
          template_app
           (template_hole 23,
            template_app (template_var 2, template_hole 25))),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_equation
         (template_app
           (template_hole 12,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 26, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 17)),
          template_app
           (template_hole 12,
            template_app (template_var 2, template_hole 17))),
        template_equation
         (template_app
           (template_app (template_hole 10, t_empty),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 26, template_var 2),
                      template_var 1),
                    template_var 0),
                  template_hole 17)),
              template_hole 25)),
          template_app
           (template_app (template_hole 10, t_empty),
            template_app
             (template_app
               (template_hole 1,
                template_app (template_var 2, template_hole 17)),
              template_hole 25)))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 26, template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 2))))]:
   (string * thm * template) list
### theory "Draft.Local_Invariants_LemmasMoreTemplates"
### 0.565s elapsed time, 0.793s cpu time, 0.060s GC time
val it = (): unit
