   [("HOLCF_ROOT.wf_Integer_ge_less_than", "wf (Integer_ge_less_than ?d)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("HOLCF_ROOT.strictify_below", "strictify$?f << ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 0)
         )),
    ("HOLCF_ROOT.seq_below", "seq$?x$?y << ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0)),
           template_var 0)
         )),
    ("HOLCF_ROOT.If_cancel", "If ?b then ?x else ?x = seq$?b$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_var 1))),
    ("HOLCF_ROOT.If_then_TT", "If ?b then TT else ?e = (?b orelse ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 0),
             template_var 0)),
         template_var 1))),
    ("HOLCF_ROOT.If_else_FF", "If ?b then ?t else FF = (?b andalso ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 0),
             template_var 0)),
         template_var 1))),
    ("HOLCF_ROOT.retraction_cfcomp_strict",
     "?f oo ?g = ID ==> ?f$\<bottom> = \<bottom>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1)),
            template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_hole 0))),
    ("HOLCF_ROOT.Integer_le_both_plus_1", "le$(?m + 1)$(?n + 1) = le$?m$?n",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0))),
    ("HOLCF_ROOT.convol_simp", "(?f && ?g)$?x = (?f$?x, ?g$?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("HOLCF_ROOT.map_prod_cfst", "cfst oo (?f ** ?g) = ?f oo cfst",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app (template_hole 9, template_hole 8))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app (template_hole 1, template_hole 0)))),
    ("HOLCF_ROOT.map_prod_csnd", "csnd oo (?f ** ?g) = ?g oo csnd",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app (template_hole 9, template_hole 8))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("HOLCF_ROOT.match_Pair_csplit",
     "match_Pair$?x$?k = ?k$(cfst$?x)$(csnd$?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 1)))),
    ("HOLCF_ROOT.orelse_conv",
     "((?x orelse ?y) = \<bottom>) =
      (?x = \<bottom> | ?x = FF & ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 3)))
           ))),
    ("HOLCF_ROOT.orelse_conv",
     "((?x orelse ?y) = TT) = (?x = TT | ?x = FF & ?y = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 3)))
           ))),
    ("HOLCF_ROOT.oo_assoc", "?f oo ?g oo ?h = (?f oo ?g) oo ?h",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0))),
    ("HOLCF_ROOT.csplit_cfun2",
     "cont ?F ==> (LAM x. ?F x) = (LAM (x, y). ?F (x, y))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, t_empty))))),
    ("HOLCF_ROOT.If_distr",
     "(If ?b then ?t''' else ?e''')$?x = If ?b then ?t'''$?x else ?e'''$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 0))),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 0))),
         template_var 1))),
    ("HOLCF_ROOT.map_prod_app",
     "(?f ** ?g)$?x = (?f$(cfst$?x), ?g$(csnd$?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4)),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_var 0))))),
    ("HOLCF_ROOT.If2_cont",
     "[| cont ?i; cont ?t; cont ?e |]
      ==> cont (%x. If2 (?i x) (?t x) (?e x))",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("HOLCF_ROOT.seq_strict_distr",
     "?f$\<bottom> = \<bottom> ==> seq$?x$(?f$?y) = ?f$(seq$?x$?y)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 2),
            template_hole 7),
          template_hole 6)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0))))),
    ("HOLCF_ROOT.If_tr",
     "If ?b then ?t else ?e = (?b andalso ?t orelse neg$?b andalso ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 2),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 1),
                   template_var 0)),
               template_var 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 1),
               template_app
                (template_app (template_hole 6, template_hole 0),
                 template_var 0))),
           template_var 1)))),
    ("HOLCF_ROOT.If_andalso",
     "If ?p andalso ?q then ?t else ?e =
      If ?p then If ?q then ?t else ?e else ?e",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 3)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_var 3)),
                       template_var 2)),
                   template_var 0))),
             template_var 2)),
         template_var 1))),
    ("HOLCF_ROOT.csplit_cfun3",
     "cont ?F ==> (LAM x. ?F x) = (LAM (x, y, z). ?F (x, y, z))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app (template_hole 6, t_empty))))),
    ("HOLCF_ROOT.If2_splits",
     "?P (If2 ?Q ?x ?y) =
      ((?Q = \<bottom> --> ?P \<bottom>) &
       (?Q = TT --> ?P ?x) & (?Q = FF --> ?P ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)),
                 template_app (template_var 3, template_hole 2))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_hole 1)),
                   template_app (template_var 3, template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 0)),
                 template_app (template_var 3, template_var 0))))
           ))),
    ("HOLCF_ROOT.If_distr",
     "[| cont ?t'; cont ?e' |]
      ==> (If ?b then ?t' else ?e') ?x = If ?b then ?t' ?x else ?e' ?x",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 3)),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_app (template_var 3, template_var 0))),
               template_app (template_var 2, template_var 0))),
           template_var 1)))),
    ("HOLCF_ROOT.orelse_cong",
     "[| ?P = ?P'; ?P' = FF ==> ?Q = ?Q' |]
      ==> (?P orelse ?Q) = (?P' orelse ?Q')",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_implication
         ([template_equation (template_var 2, template_hole 3)],
          template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_var 0)))),
    ("HOLCF_ROOT.andalso_cong",
     "[| ?P = ?P'; ?P' = TT ==> ?Q = ?Q' |]
      ==> (?P andalso ?Q) = (?P' andalso ?Q')",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_implication
         ([template_equation (template_var 2, template_hole 3)],
          template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_var 0)))),
    ("HOLCF_ROOT.map_prod_cfcomp",
     "(?f ** ?m) oo (?g ** ?n) = ?f oo ?g ** ?m oo ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 17,
           template_app
            (template_app (template_hole 16, template_hole 15),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_var 3)),
               template_var 2))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 3)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_var 0)))),
    ("HOLCF_ROOT.If_distr",
     "[| ?f \<bottom> = \<bottom>; cont ?f |]
      ==> ?f (If ?b then ?t else ?e) = If ?b then ?f ?t else ?f ?e",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_hole 10), template_hole 9),
        template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_app (template_var 3, template_var 2))),
               template_app (template_var 3, template_var 1))),
           template_var 0)))),
    ("HOLCF_ROOT.plus_eq_MkI_conv",
     "(?l + ?n = MkI$?m) =
      (EX l' n'. ?l = MkI$l' & ?n = MkI$n' & ?m = l' + n')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("HOLCF_ROOT.lfp_fusion",
     "[| ?g$\<bottom> = \<bottom>; ?g oo ?f = ?h oo ?g |]
      ==> ?g$(fix$?f) = fix$?h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 2),
            template_hole 12),
          template_hole 11),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0)),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 13, template_var 2),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("HOLCF_ROOT.If_else_absorb",
     "[| ?c = \<bottom> ==> ?e = \<bottom>; ?c = TT ==> ?e = ?t |]
      ==> If ?c then ?t else ?e = ?e",
     template_implication
      ([template_implication
         ([template_equation (template_var 2, template_hole 7)],
          template_equation (template_var 1, template_hole 5)),
        template_implication
         ([template_equation (template_var 2, template_hole 4)],
          template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)),
               template_var 1)),
           template_var 2),
         template_var 1))),
    ("HOLCF_ROOT.If2_split_asm",
     "?P (If2 ?Q ?x ?y) =
      (~ (?Q = \<bottom> & ~ ?P \<bottom> |
          ?Q = TT & ~ ?P ?x | ?Q = FF & ~ ?P ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_hole 3)),
                     template_app
                      (template_hole 7,
                       template_app (template_var 3, template_hole 2)))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 2),
                           template_hole 1)),
                       template_app
                        (template_hole 7,
                         template_app (template_var 3, template_var 1)))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_hole 0)),
                     template_app
                      (template_hole 7,
                       template_app (template_var 3, template_var 0)))))
               )
           ))),
    ("HOLCF_ROOT.If_distr",
     "[| ?g \<bottom> = \<bottom>; cont ?g |]
      ==> ?g (If ?b then ?t'' else ?e'') ?y =
          If ?b then ?g ?t'' ?y else ?g ?e'' ?y",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_hole 11),
          template_hole 10),
        template_predicate
         (template_app (template_hole 9, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_var 4,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_app
                    (template_app (template_var 4, template_var 3),
                     template_var 0))),
               template_app
                (template_app (template_var 4, template_var 2),
                 template_var 0))),
           template_var 1)))),
    ("HOLCF_ROOT.predE",
     "[| ?p$\<bottom> = \<bottom> ==> ?thesis; ?p = (LAM x. FF) ==> ?thesis;
         ?p = (LAM x. TT) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 5),
             template_hole 4)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 1, template_app (template_hole 2, t_empty))],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 1, template_app (template_hole 2, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("HOLCF_ROOT.andalso_weaken_left",
     "[| ?P = TT ==> ?Q = TT; ?P = FF ==> ?Q ~= \<bottom>;
         ?P = \<bottom> ==> ?Q ~= FF |]
      ==> ?P = (?Q andalso ?P)",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 6)],
          template_equation (template_var 0, template_hole 6)),
        template_implication
         ([template_equation (template_var 1, template_hole 5)],
          template_negation
           (template_equation (template_var 0, template_hole 3))),
        template_implication
         ([template_equation (template_var 1, template_hole 3)],
          template_negation
           (template_equation (template_var 0, template_hole 5)))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 1)))),
    ("HOLCF_ROOT.If_cong",
     "[| ?b = ?b'; ?b = TT ==> ?t = ?t'; ?b = FF ==> ?e = ?e' |]
      ==> If ?b then ?t else ?e = If ?b' then ?t' else ?e'",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_implication
         ([template_equation (template_var 5, template_hole 6)],
          template_equation (template_var 3, template_var 2)),
        template_implication
         ([template_equation (template_var 5, template_hole 4)],
          template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 1)),
           template_var 5),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 0)),
           template_var 4))))]
