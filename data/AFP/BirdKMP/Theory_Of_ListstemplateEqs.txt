   [("Theory_Of_Lists.selem_strict", "selem$?x$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sall_strict", "sall$?p$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.srev_srev_ident", "srev$(srev$?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Theory_Of_Lists.smap_ID'", "smap$ID$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Theory_Of_Lists.sfilter_strict", "sfilter$?p$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Theory_Of_Lists.sdrop_0", "sdrop$0$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Theory_Of_Lists.sappend_strict2", "?xs :@ \<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Theory_Of_Lists.sappend_snil_id_right", "?xs :@ [::] = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Theory_Of_Lists.smap_strict", "smap$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sconcatMap_strict",
     "sconcatMap$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sconcatMap_snil", "sconcatMap$?f$[::] = [::]",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sdrop_strict", "sdrop$?i$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Theory_Of_Lists.stake_strict", "stake$?i$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Theory_Of_Lists.upto_strict", "supto$?m$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sfoldl_strict", "sfoldl$?f$?z$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sfoldr_strict", "sfoldr$?f$?z$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.slist_bottom'",
     "(LAM [::]. \<bottom>)$?xs = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_hole 0)),
         template_var 0),
       template_hole 1)),
    ("Theory_Of_Lists.slast_singleton", "slast$[:?x:] = ?x",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_hole 0)),
       template_var 0)),
    ("Theory_Of_Lists.snull_bottom_iff",
     "(snull$?xs = \<bottom>) = (?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.snull_TT_conv", "(snull$?xs = TT) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.slength_0_conv", "(slength$?xs = 0) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.slength_bottom_iff",
     "(slength$?xs = \<bottom>) = (?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.srev_bottom_iff",
     "(srev$?xs = \<bottom>) = (?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.sinits_bottom_iff",
     "(sinits$?xs = \<bottom>) = (?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.stails_bottom_iff",
     "(stails$?xs = \<bottom>) = (?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.snull_eq_snil", "snull$?xs = eq$?xs$[::]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Theory_Of_Lists.sfilter_const_TT", "sfilter$(LAM x. TT)$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, t_empty))),
         template_var 0),
       template_var 0)),
    ("Theory_Of_Lists.sdrop_0", "sdrop$(MkI$0)$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))),
         template_var 0),
       template_var 0)),
    ("Theory_Of_Lists.stake_all_triv", "stake$(slength$?xs)$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_var 0),
       template_var 0)),
    ("Theory_Of_Lists.sscanl_strict", "sscanl$?f$\<bottom>$?xs = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("Theory_Of_Lists.sscanl_strict", "sscanl$?f$?z$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Theory_Of_Lists.sinits_empty_bottom",
     "(sset (sinits$?xs) = {}) = (?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.sinits_all",
     "(?xs : sset (sinits$?xs)) = (?xs ~= \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 0)))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.stails_all",
     "(?xs : sset (stails$?xs)) = (?xs ~= \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 0)))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.slist_eq_TT_snil",
     "(eq$[::]$?xs = TT) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_var 0),
         template_hole 1),
       template_equation (template_var 0, template_hole 2))),
    ("Theory_Of_Lists.slist_eq_TT_snil",
     "(eq$?xs$[::] = TT) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_hole 2),
         template_hole 1),
       template_equation (template_var 0, template_hole 2))),
    ("Theory_Of_Lists.slength_0_conv",
     "(slength$?xs = MkI$0) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 0),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.smap_is_snil_conv",
     "([::] = smap$?f$?xs) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.smap_is_snil_conv",
     "(smap$?f$?xs = [::]) = (?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Theory_Of_Lists.slength_0_conv", "eq$0$(slength$?xs) = snull$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Theory_Of_Lists.slength_0_conv", "eq$(slength$?xs)$0 = snull$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Theory_Of_Lists.sinits_length",
     "slength$(sinits$?xs) = slength$?xs + 1",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Theory_Of_Lists.stails_slength",
     "slength$(stails$?xs) = slength$?xs + 1",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Theory_Of_Lists.elem_TT", "(selem$?x$?xs = TT) = (?x : sset ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1)),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Theory_Of_Lists.prefix_refl_conv",
     "(prefix$?xs$?xs = TT) = (?xs ~= \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_var 0),
         template_hole 3),
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.sdrop_snil_conv",
     "(sdrop$?i$[::] = [::]) = (?i ~= \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_hole 3),
         template_hole 3),
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.shead_bottom_iff",
     "(shead$?xs = \<bottom>) = (?xs = \<bottom> | ?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 0),
         template_hole 4),
       template_dunno)),
    ("Theory_Of_Lists.stail_bottom_iff",
     "(stail$?xs = \<bottom>) = (?xs = \<bottom> | ?xs = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_dunno)),
    ("Theory_Of_Lists.sconcatMap_monad_laws",
     "sconcatMap$(:#[::])$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, t_empty))),
         template_var 0),
       template_var 0)),
    ("Theory_Of_Lists.le_slength_0",
     "(le$0$(slength$?xs) = TT) = (?xs ~= \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_hole 6)),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0)),
         template_hole 3),
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.sall_const_TT_conv",
     "(sall$(LAM x. TT)$?xs = TT) = (?xs ~= \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, t_empty))),
           template_var 0),
         template_hole 3),
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.sfilter_const_FF_conv",
     "(sfilter$(LAM x. FF)$?xs = [::]) = (?xs ~= \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, t_empty))),
           template_var 0),
         template_hole 2),
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Theory_Of_Lists.prefix_bottom_iff",
     "(prefix$?xs$?ys = \<bottom>) = (?xs = \<bottom> | ?ys = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Theory_Of_Lists.sdrop_bottom_iff",
     "(sdrop$?i$?xs = \<bottom>) = (?i = \<bottom> | ?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Theory_Of_Lists.stake_bottom_iff",
     "(stake$?i$?xs = \<bottom>) = (?i = \<bottom> | ?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Theory_Of_Lists.sappend_bottom_iff",
     "(?xs :@ ?ys = \<bottom>) = (?xs = \<bottom> | ?ys = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_dunno)),
    ("Theory_Of_Lists.snil_append_iff",
     "(?xs :@ ?ys = [::]) = (?xs = [::] & ?ys = [::])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_dunno)),
    ("Theory_Of_Lists.supto_bottom_iff",
     "(supto$?i$?j = \<bottom>) = (?i = \<bottom> | ?j = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Theory_Of_Lists.supto_is_snil_conv",
     "([::] = supto$(MkI$?i)$(MkI$?j)) = (?j < ?i)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Theory_Of_Lists.supto_is_snil_conv",
     "(supto$(MkI$?i)$(MkI$?j) = [::]) = (?j < ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Theory_Of_Lists.slength_sappend",
     "slength$(?xs :@ ?ys) = slength$?xs + slength$?ys",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)))),
    ("Theory_Of_Lists.sconcat_scons",
     "sconcat$(?x :# ?xs) = ?x :@ sconcat$?xs",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)))),
    ("Theory_Of_Lists.sconcat_sfoldl_aux",
     "sfoldl$sappend$?z$?xs = ?z :@ sconcat$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 7, template_hole 0),
           template_var 0)))),
    ("Theory_Of_Lists.sinits_sscanl",
     "smap$(sfoldl$?f$?z) oo sinits = sscanl$?f$?z",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 1)),
                 template_var 0)))),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0))),
    ("Theory_Of_Lists.prefix_of_snil",
     "prefix$?xs$[::] = (case ?xs of [::] => TT | x :# xs => FF)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 0)),
         template_hole 7),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))),
         template_var 0))),
    ("Theory_Of_Lists.eq_take_length_prefix",
     "prefix$?xs$?ys = eq$?xs$(stake$(slength$?xs)$?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 5),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1))),
           template_var 0)))),
    ("Theory_Of_Lists.srev_sappend",
     "srev$(?xs :@ ?ys) = srev$?ys :@ srev$?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 1)))),
    ("Theory_Of_Lists.sconcat_sappend",
     "sconcat$(?xs :@ ?ys) = sconcat$?xs :@ sconcat$?ys",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1))),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)))),
    ("Theory_Of_Lists.sfilter_snil_conv",
     "(sfilter$?p$?xs = [::]) = (sall$(neg oo ?p)$?xs = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_var 1)),
           template_var 0),
         template_hole 9),
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 1)),
                 template_var 1))),
           template_var 0),
         template_hole 0))),
    ("Theory_Of_Lists.slength_sfoldl_aux",
     "sfoldl$(LAM i uu_. i + 1)$?z$?xs = ?z + slength$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, t_empty))),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 8, template_hole 0),
           template_var 0)))),
    ("Theory_Of_Lists.srev_scons", "srev$(?x :# ?xs) = srev$?xs :@ [:?x:]",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 0))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_hole 0)))),
    ("Theory_Of_Lists.sappend_scons",
     "(?x :# ?xs) :@ ?ys = ?x :# ?xs :@ ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0)))),
    ("Theory_Of_Lists.sappend_assoc",
     "(?xs :@ ?ys) :@ ?zs = ?xs :@ ?ys :@ ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Theory_Of_Lists.sinits_sscanl'",
     "smap$(sfoldl$?f$?z)$(sinits$?xs) = sscanl$?f$?z$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)),
             template_var 1)),
         template_var 0))),
    ("Theory_Of_Lists.stails_scons",
     "stails$(?x :# ?xs) = (?x :# ?xs) :# stails$?xs",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)))),
    ("Theory_Of_Lists.selem_bottom_iff",
     "(selem$?x$?xs = \<bottom>) =
      (?xs = \<bottom> | ?xs ~= [::] & ?x = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_var 1)),
           template_var 0),
         template_hole 8),
       template_dunno)),
    ("Theory_Of_Lists.sfilter_bottom_iff",
     "(sfilter$?p$?xs = \<bottom>) =
      (?xs = \<bottom> | (EX x:sset ?xs. ?p$x = \<bottom>))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 1)),
           template_var 0),
         template_hole 6),
       template_dunno)),
    ("Theory_Of_Lists.smap_bottom_iff",
     "(smap$?f$?xs = \<bottom>) =
      (?xs = \<bottom> | (EX x:sset ?xs. ?f$x = \<bottom>))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_var 1)),
           template_var 0),
         template_hole 8),
       template_dunno)),
    ("Theory_Of_Lists.sconcatMap_bottom_iff",
     "(sconcatMap$?f$?xs = \<bottom>) =
      (?xs = \<bottom> | (EX x:sset ?xs. ?f$x = \<bottom>))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 1)),
           template_var 0),
         template_hole 6),
       template_dunno)),
    ("Theory_Of_Lists.match_snil_match_scons_slist_case",
     "match_snil$?xs$?k1.0 +++ match_scons$?xs$?k2.0 =
      slist_case$?k1.0$?k2.0$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0)),
         template_var 2))),
    ("Theory_Of_Lists.sinits_stake'",
     "sinits$?xs = smap$(LAM i. stake$i$?xs)$(supto$0$(slength$?xs))",
     template_equation
      (template_app
        (template_app (template_hole 14, template_hole 13), template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app (template_hole 9, t_empty))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Theory_Of_Lists.stails_sdrop'",
     "stails$?xs = smap$(LAM i. sdrop$i$?xs)$(supto$0$(slength$?xs))",
     template_equation
      (template_app
        (template_app (template_hole 14, template_hole 13), template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app (template_hole 9, t_empty))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Theory_Of_Lists.sinits_scons",
     "sinits$(?x :# ?xs) = [::] :# smap$(?x:#)$(sinits$?xs)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_hole 9),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 1))),
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_var 0))))),
    ("Theory_Of_Lists.snull_FF_conv",
     "(snull$?xxs = FF) = (EX x xs. ?xxs ~= \<bottom> & ?xxs = x :# xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_var 0)),
         template_hole 9),
       template_app (template_hole 8, t_empty))),
    ("Theory_Of_Lists.sall_TT",
     "(sall$?p$?xs = TT) =
      (?xs ~= \<bottom> & (ALL x:sset ?xs. ?p$x = TT))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 1)),
           template_var 0),
         template_hole 7),
       template_dunno)),
    ("Theory_Of_Lists.slist_map_unfold",
     "slist_map$?a =
      slist_abs oo ssum_map$ID$(sprod_map$?a$(slist_map$?a)) oo slist_rep",
     template_equation
      (template_app
        (template_app (template_hole 16, template_hole 15), template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_hole 11)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 16, template_hole 15),
                     template_var 0))))),
           template_hole 0)))),
    ("Theory_Of_Lists.sfilter_sfilter",
     "sfilter$?p oo sfilter$?q = sfilter$(LAM x. ?q$x andalso ?p$x)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1))),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, t_empty)))),
    ("Theory_Of_Lists.prefix_slength_strengthen",
     "prefix$?xs$?ys =
      (le$(slength$?xs)$(slength$?ys) andalso prefix$?xs$?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 1)),
           template_var 0)))),
    ("Theory_Of_Lists.prefix_slength_eq",
     "eq$?xs$?ys = (eq$(slength$?xs)$(slength$?ys) andalso prefix$?xs$?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 1))),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Theory_Of_Lists.sfilter_sappend",
     "sfilter$?p$(?xs :@ ?ys) = sfilter$?p$?xs :@ sfilter$?p$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2)),
           template_var 0)))),
    ("Theory_Of_Lists.smap_sappend",
     "smap$?f$(?xs :@ ?ys) = smap$?f$?xs :@ smap$?f$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 2)),
           template_var 0)))),
    ("Theory_Of_Lists.sconcatMap_sappend",
     "sconcatMap$?f$(?xs :@ ?ys) = sconcatMap$?f$?xs :@ sconcatMap$?f$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 2)),
           template_var 0)))),
    ("Theory_Of_Lists.stake_numeral_scons",
     "stake$(numeral (num.Bit0 ?k))$(?x :# ?xs) =
      ?x :# stake$(numeral (Num.BitM ?k))$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 2)))),
           template_var 0)))),
    ("Theory_Of_Lists.stake_numeral_scons",
     "stake$(numeral (num.Bit1 ?k))$(?x :# ?xs) =
      ?x :# stake$(numeral (num.Bit0 ?k))$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 2)))),
           template_var 0)))),
    ("Theory_Of_Lists.sconcatMap_monad_laws",
     "sconcatMap$?g$(sconcatMap$?f$?xs) =
      sconcatMap$(LAM x. sconcatMap$?g$(?f$x))$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, t_empty))),
         template_var 0))),
    ("Theory_Of_Lists.slength_supto",
     "slength$(supto$(MkI$?i)$(MkI$?j)) =
      MkI$(if ?j < ?i then 0 else ?j - ?i + 1)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_hole 11),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 1))),
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 0))),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0))))),
    ("Theory_Of_Lists.stail_sappend",
     "stail$(?xs :@ ?ys) =
      (case ?xs of [::] => stail$?ys | z :# zs => zs :@ ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 0))),
             template_app (template_hole 1, t_empty))),
         template_var 1))),
    ("Theory_Of_Lists.sfilter_sfilter'",
     "sfilter$?p$(sfilter$?q$?xs) = sfilter$(LAM x. ?q$x andalso ?p$x)$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, t_empty))),
         template_var 0))),
    ("Theory_Of_Lists.stake_slength_plus_1",
     "stake$(slength$?xs + 1)$(?y :# ?ys) = ?y :# stake$(slength$?xs)$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 2)),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2))),
           template_var 0)))),
    ("Theory_Of_Lists.elem_FF",
     "(selem$?x$?xs = FF) =
      (?xs = [::] | ?x ~= \<bottom> & ?xs ~= \<bottom> & ?x ~: sset ?xs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_hole 11),
               template_var 1)),
           template_var 0),
         template_hole 10),
       template_dunno)),
    ("Theory_Of_Lists.sdrop_sappend",
     "sdrop$?i$(?xs :@ ?ys) = sdrop$?i$?xs :@ sdrop$(?i - slength$?xs)$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)))),
           template_var 0)))),
    ("Theory_Of_Lists.stake_append",
     "stake$?i$(?xs :@ ?ys) = stake$?i$?xs :@ stake$(?i - slength$?xs)$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)))),
           template_var 0)))),
    ("Theory_Of_Lists.sset_supto",
     "sset (supto$(MkI$?i)$(MkI$?j)) = {MkI$k |k. ?i <= k & k <= ?j}",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 1))),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("Theory_Of_Lists.slist_case_distr",
     "slist_case$?g'$?h'$?xs$?z =
      (case ?xs of [::] => ?g'$?z | x :# xs => ?h'$x$xs$?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 0))),
             template_app (template_hole 2, t_empty))),
         template_var 1))),
    ("Theory_Of_Lists.slist_eq_FF_snil",
     "(eq$[::]$?xs = FF) =
      (EX y ys. y ~= \<bottom> & ys ~= \<bottom> & ?xs = y :# ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_hole 12)),
             template_var 0)),
         template_hole 11),
       template_app (template_hole 10, t_empty))),
    ("Theory_Of_Lists.slist_eq_FF_snil",
     "(eq$?xs$[::] = FF) =
      (EX y ys. y ~= \<bottom> & ys ~= \<bottom> & ?xs = y :# ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_var 0)),
             template_hole 12)),
         template_hole 11),
       template_app (template_hole 10, t_empty))),
    ("Theory_Of_Lists.slistmem_scons",
     "slistmem ?x (?y :# ?ys) =
      (?x = ?y & ?x ~= \<bottom> & ?ys ~= \<bottom> |
       slistmem ?x ?ys & ?y ~= \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 1)),
                template_var 0))
            )],
       template_dunno)),
    ("Theory_Of_Lists.prefix_singleton_TT",
     "(prefix$[:?x:]$?ys = TT) =
      (?x ~= \<bottom> & (EX zs. zs ~= \<bottom> & ?ys = ?x :# zs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_hole 12),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_var 1)),
                 template_hole 8))),
           template_var 0),
         template_hole 7),
       template_dunno)),
    ("Theory_Of_Lists.scons_prefix_scons",
     "(prefix$(?x :# ?xs)$(?y :# ?ys) = TT) =
      (eq$?x$?y = TT & prefix$?xs$?ys = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 3)),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 1)),
             template_var 0)),
         template_hole 4),
       template_dunno)),
    ("Theory_Of_Lists.sinits_snoc",
     "sinits$(?xs :@ [:?x:]) = sinits$?xs :@ [:?xs :@ [:?x:]:]"
