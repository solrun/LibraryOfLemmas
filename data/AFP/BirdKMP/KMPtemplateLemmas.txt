   [("KMP.tree_bisim_root_bisim", "tree_bisim (root_bisim ?pat)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("KMP.tree_map'_ID'", "tree_map'$ID$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("KMP.tree_map'_strict", "tree_map'$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op2_rep2_left2_right2_strict", "rep2$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.left6_left5_strict", "left5$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.left6_left5_strict", "left6$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.next_strict", "next$?xs$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("KMP.next'_strict", "next'$?x$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("KMP.op2_rep2_left2_right2_strict", "op2$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op5_grep5_strict", "op5$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op6_grep6_strict", "op6$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.root8_op8_grep8_strict", "op8$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op_strict", "op$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op'_strict", "op'$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.endswith_strict", "endswith$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.split_strict", "split$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.matches_strict", "matches$?pat$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.deflation_tree_map", "deflation ?a ==> deflation (tree_map$?a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("KMP.op2_rep2_left2_right2_strict",
     "left2$?pat$(\<bottom>, ?vs) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("KMP.op2_rep2_left2_right2_strict",
     "left2$?pat$(?us, \<bottom>) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("KMP.op2_rep2_left2_right2_strict",
     "right2$?pat$(?us, \<bottom>) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("KMP.op5_grep5_strict", "grep5$?pat$?l$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op6_grep6_strict", "grep6$?pat$?l$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.root8_op8_grep8_strict", "grep8$?pat$?l$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op_strict", "op$?pat$(?us, \<bottom>) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("KMP.op'_strict", "op'$?pat$(?us, \<bottom>) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("KMP.abs_rep2_ID", "abs2 oo rep2$?pat = ID",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("KMP.op_strict", "op$?pat$?usvs$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.op'_strict", "op'$?pat$?usvs$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("KMP.abs_rep2_ID'", "abs2$(rep2$?pat$?usvs) = ?usvs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_var 0)),
    ("KMP.K_root2", "?pat ~= \<bottom> ==> K (root2$?pat)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("KMP.isodefl_tree",
     "isodefl ?fa ?da ==> isodefl (tree_map$?fa) (tree_defl$?da)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("KMP.r7_6", "?pat ~= \<bottom> ==> root7$?pat = root6$?pat",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("KMP.next_Null", "?xs ~= \<bottom> ==> next$?xs$Null = Null",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_hole 0),
         template_hole 0))),
    ("KMP.root_bisim_root",
     "?pat ~= \<bottom> ==> root_bisim ?pat (root6$?pat) (root5$?pat)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 0),
               template_var 0))
           ))),
    ("KMP.split_bottom_iff",
     "(split$?pat$?xs = \<bottom>) = (?pat = \<bottom> | ?xs = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("KMP.op2_rep2_left2_right2_strict",
     "op2$?pat$(KMP.tree.Node$?usvs$?l$?r)$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 2)),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("KMP.op5_grep5_strict",
     "op5$?pat$(KMP.tree.Node$?usvs$?l$?r)$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 2)),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("KMP.op6_grep6_strict",
     "op6$?pat$(KMP.tree.Node$?usvs$?l$?r)$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 2)),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("KMP.op2_rep2_left2_right2_strict",
     "op2$?pat$(KMP.tree.Node$(?us, \<bottom>)$?l$?r) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 3)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("KMP.op5_grep5_strict",
     "op5$?pat$(KMP.tree.Node$(?us, \<bottom>)$?l$?r) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 3)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("KMP.op6_grep6_strict",
     "op6$?pat$(KMP.tree.Node$(?us, \<bottom>)$?l$?r) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 3)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("KMP.r6_5", "(root6$?pat, op6$?pat) = (root5$?pat, op5$?pat)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_var 0)))),
    ("KMP.op'_op", "op'$?pat$?usvs$?x = op$?pat$?usvs$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 0),
                 template_var 2)),
             template_var 1)),
         template_var 0))),
    ("KMP.split_snil",
     "?pat ~= \<bottom> ==> split$?pat$[::] = ([::], ?pat)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_hole 1),
           template_var 0)))),
    ("KMP.endswith_split", "endswith$?pat = snull oo csnd oo split$?pat",
     template_equation
      (template_app
        (template_app (template_hole 12, template_hole 11), template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_hole 7)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("KMP.next'_strict",
     "next'$\<bottom>$(KMP.tree.Node$(?v :# ?vs)$?l$?r) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_hole 7)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 3)),
                     template_var 2))),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("KMP.next_strict",
     "next$(?x :# ?xs)$(KMP.tree.Node$(?us, \<bottom>)$?l$?r) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 4)),
               template_var 3))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("KMP.sfoldl_op'_strict",
     "op'$?pat$(sfoldl$(op'$?pat)$(?us, \<bottom>)$?xs)$?x = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_var 3))),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))),
               template_var 1))),
         template_var 0),
       template_hole 0)),
    ("KMP.root5_left5",
     "?v ~= \<bottom> ==> root5$?pat = left5$?pat$[:?v:]",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_hole 6), template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_hole 0))))),
    ("KMP.split_sfoldl_op",
     "?pat ~= \<bottom> ==> sfoldl$(op$?pat)$([::], ?pat) = split$?pat",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 0))),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("KMP.endswith_eq_sdrop",
     "endswith$?pat$?xs =
      eq$?pat$(Theory_Of_Lists.sdrop$(slength$?xs - slength$?pat)$?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 6),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)))),
           template_var 0)))),
    ("KMP.match_Null_match_Node_tree_case",
     "match_Null$?t$?k1.0 +++ match_Node$?t$?k2.0 =
      tree_case$?k1.0$?k2.0$?t",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0)),
         template_var 2))),
    ("KMP.K_rep2",
     "[| ?pat ~= \<bottom>; ?us :@ ?vs = ?pat |]
      ==> K (rep2$?pat$(?us, ?vs))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1)),
            template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("KMP.tree_map'_comp",
     "?f$\<bottom> = \<bottom> ==>
      tree_map'$?f oo tree_map'$?g = tree_map'$(?f oo ?g)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 1),
            template_hole 14),
          template_hole 13)],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 1))),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0))))),
    ("KMP.split_pattern",
     "[| ?xs ~= \<bottom>; split$?pat$?xs = (?us, ?vs) |]
      ==> ?us :@ ?vs = ?pat",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 8)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2)),
            template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0),
         template_var 2))),
    ("KMP.split_snoc_op",
     "split$?pat$(?xs :@ [:?x:]) = op$?pat$(split$?pat$?xs)$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_var 2)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 1)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)),
             template_hole 4))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_var 2)),
               template_var 1))),
         template_var 0))),
    ("KMP.tree_take_smaller",
     "[| tree_take ?i$?t = tree_take ?i$?u; ?j <= ?i |]
      ==> tree_take ?j$?t = tree_take ?j$?u",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 3)),
            template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1)))),
    ("KMP.root_bisim_next_left",
     "?pat ~= \<bottom> ==>
      root_bisim ?pat (next$?vs$(left6$?pat$?us))
       (next$?vs$(left5$?pat$?us))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 0),
                     template_var 2)),
                 template_var 0)))
           ))),
    ("KMP.tree_map'_comp'",
     "?f$\<bottom> = \<bottom> ==>
      tree_map'$?f$(tree_map'$?g$?t) = tree_map'$(?f oo ?g)$?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 2),
            template_hole 14),
          template_hole 13)],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_var 2)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 2)),
                 template_var 1))),
           template_var 0)))),
    ("KMP.sfoldl_op2_root2_rep2_split",
     "?pat ~= \<bottom> ==>
      sfoldl$(op2$?pat)$(root2$?pat)$?xs = rep2$?pat$(split$?pat$?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 14))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_var 1))),
               template_app
                (template_app (template_hole 12, template_hole 6),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0))))),
    ("KMP.op_induct'",
     "(!!us. (!!us'. lt$(slength$us')$(slength$us) = TT ==> ?P us') ==>
             ?P us) ==>
      ?P ?us",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("KMP.r7_6",
     "[| ?pat ~= \<bottom>; ?x ~= \<bottom> |]
      ==> op7$?pat$?t$?x = op6$?pat$?t$?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2)),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 0),
                   template_var 2)),
               template_var 0)),
           template_var 1)))),
    ("KMP.root_bisim_op",
     "[| ?pat ~= \<bottom>; root_bisim ?pat ?t6.0 ?t5.0 |]
      ==> root_bisim ?pat (op6$?pat$?t6.0$?x) (op5$?pat$?t5.0$?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 3)),
                     template_var 2)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 0),
                       template_var 3)),
                   template_var 1)),
               template_var 0))
           ))),
    ("KMP.op_op2_refinement",
     "?pat ~= \<bottom> ==>
      rep2$?pat$(op$?pat$?usvs$?x) = op2$?pat$(rep2$?pat$?usvs)$?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 12))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 2)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_var 2)),
                 template_var 1))),
           template_var 0)))),
    ("KMP.next_snil",
     "?xs ~= \<bottom> ==>
      next$?xs$(KMP.tree.Node$(?us, [::])$?l$?r) =
      KMP.tree.Node$(?us, [::])$?l$?r",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 3)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0))),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_hole 0))),
               template_var 1)),
           template_var 0)))),
    ("KMP.split_length_lt",
     "[| ?pat ~= \<bottom>; ?xs ~= \<bottom> |]
      ==> lt$(slength$(prod.fst (split$?pat$?xs)))$(slength$?xs + 1) = TT",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 13)),
        template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_var 1)),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 0)),
             template_hole 1)),
         template_hole 0))),
    ("KMP.tree_injects'",
     "(KMP.tree.Node$?a$?l$?r = KMP.tree.Node$?a'$?l'$?r') =
      (?a = ?a' & (?a ~= \<bottom> --> ?l = ?l' & ?r = ?r'))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 5)),
               template_var 4)),
           template_var 3),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 2)),
               template_var 1)),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_hole 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 9, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 0))))
           ))),
    ("KMP.tree_case_distr",
     "tree_case$?g'$?h'$?t$?z =
      (case ?t of Null => ?g'$?z | KMP.tree.Node$x$l$r => ?h'$x$l$r$?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app (template_hole 13, template_var 3),
                   template_var 0))),
             template_app (template_hole 4, t_empty))),
         template_var 1))),
    ("KMP.tree_map_unfold",
     "tree_map$?a =
      tree_abs oo
      ssum_map$ID$
      (sprod_map$?a$
       (sprod_map$(u_map$(tree_map$?a))$(u_map$(tree_map$?a)))) oo
      tree_rep",
     template_equation
      (template_app
        (template_app (template_hole 21, template_hole 20), template_var 0),
       template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app (template_hole 18, template_hole 17),
             template_hole 16)),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_hole 9)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_app
                            (template_app
                              (template_hole 21, template_hole 20),
                             template_var 0)))),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_app
                        (template_app (template_hole 21, template_hole 20),
                         template_var 0))))))),
           template_hole 0)))),
    ("KMP.op_induct",
     "(!!usvs.
          (!!usvs'.
              lt$(slength$(cfst$usvs'))$(slength$(cfst$usvs)) = TT ==>
              ?P usvs') ==>
          ?P usvs) ==>
      ?P ?usvs",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("KMP.split_snoc",
     "split$?pat$(?xs :@ [:?x:]) =
      split$?pat$(cfst$(split$?pat$?xs) :@ [:?x:])",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 0)),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_var 2)),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 0)),
             template_hole 3))))),
    ("KMP.tree_map'_strict_scons",
     "?f$\<bottom> = \<bottom> ==>
      tree_map'$?f$(KMP.tree.Node$?a$?l$?r) =
      KMP.tree.Node$(?f$?a)$(tree_map'$?f$?l)$(tree_map'$?f$?r)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 3),
            template_hole 13),
          template_hole 12)],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 3)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_app
                    (template_app (template_hole 14, template_var 3),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_var 3)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 3)),
             template_var 0))))),
    ("KMP.next'_next",
     "[| ?v ~= \<bottom>; ?vs ~= \<bottom> |]
      ==> next'$?v$(tree_map'$csnd$?t) =
          tree_map'$csnd$(next$(?v :# ?vs)$?t)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 17)),
        template_negation
         (template_equation (template_var 1, template_hole 15))],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_hole 11),
               template_var 2)),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app (template_hole 7, template_hole 6))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_app (template_hole 7, template_hole 6))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2)),
                   template_var 1))),
             template_var 0))))),
    ("KMP.op5_left5",
     "[| ?us ~= \<bottom>; ?v ~= \<bottom> |]
      ==> op5$?pat$(left5$?pat$?us)$?v = left5$?pat$(?us :@ [:?v:])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 16)),
        template_negation
         (template_equation (template_var 1, template_hole 14))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 0)),
                 template_var 2))),
           template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 1)),
               template_hole 0)))))),
    ("KMP.op6_left6",
     "[| ?us ~= \<bottom>; ?v ~= \<bottom> |]
      ==> op6$?pat$(left6$?pat$?us)$?v = left6$?pat$(?us :@ [:?v:])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 16)),
        template_negation
         (template_equation (template_var 1, template_hole 14))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 0)),
                 template_var 2))),
           template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 1)),
               template_hole 0)))))),
    ("KMP.rep2_snoc_right2",
     "prefix$[:?x:]$?vs = TT ==>
      rep2$?pat$(?us :@ [:?x:], stail$?vs) = right2$?pat$(?us, ?vs)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_var 3)),
                  template_hole 10))),
            template_var 2),
          template_hole 9)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 3)),
                   template_hole 10))),
             template_app
              (template_app (template_hole 13, template_hole 1),
               template_var 2))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 2))))),
    ("KMP.fork_sfoldl",
     "sfoldl$?f1.0$?z1.0 && sfoldl$?f2.0$?z2.0 =
      sfoldl$(LAM (a, b) z. (?f1.0$a$z, ?f2.0$b$z))$(?z1.0, ?z2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 21,
           template_app
            (template_app (template_hole 20, template_hole 19),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 17, template_hole 16),
                   template_var 3)),
               template_var 2))),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_app (template_hole 7, t_empty)))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("KMP.tree_case_distr",
     "?f$\<bottom> = \<bottom> ==>
      ?f$(tree_case$?g$?h$?t) =
      (case ?t of Null => ?f$?g | KMP.tree.Node$x$l$r => ?f$(?h$x$l$r))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 3),
            template_hole 14),
          template_hole 13)],
       template_equation
        (template_app
          (template_app (template_hole 15, template_var 3),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 15, template_var 3),
                     template_var 2))),
               template_app (template_hole 4, t_empty))),
           template_var 0)))),
    ("KMP.not_prefix_op2_next",
     "prefix$[:?x:]$?xs = FF ==>
      op2$?pat$(next$?xs$(rep2$?pat$?usvs))$?x =
      op2$?pat$(rep2$?pat$?usvs)$?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app (template_hole 14, template_hole 13),
                      template_var 3)),
                  template_hole 12))),
            template_var 2),
          template_hole 11)],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 1)),
                   template_var 0)))),
           template_var 3),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1)),
                 template_var 0))),
           template_var 3)))),
    ("KMP.match_Node_mplus_match_Node",
     "match_Node$?x$?k1.0 +++ match_Node$?x$?k2.0 =
      match_Node$?x$(LAM v l r. ?k1.0$v$l$r +++ ?k2.0$v$l$r)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 2)),
         template_app (template_hole 5, t_empty)))),
    ("KMP.tree_unique",
     "[| ?x = ?f$?x;
         !!i t u.
            tree_take i$t = tree_take i$u ==>
            tree_take (Suc i)$(?f$t) = tree_take (Suc i)$(?f$u) |]
      ==> ?x = fix$?f",
     template_implication
      ([template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("KMP.matches8",
     "matches$?pat =
      Theory_Of_Lists.smap$cfst oo
      Theory_Of_Lists.sfilter$(ok8 oo csnd) oo
      sscanl$(LAM (n, x) y. (n + 1, op8$?pat$x$y))$(0, root8$?pat)",
     template_equation
      (template_app
        (template_app (template_hole 37, template_hole 36), template_var 0),
       template_app
        (template_app
          (template_hole 35,
           template_app
            (template_app (template_hole 34, template_hole 33),
             template_app
              (template_app (template_hole 32, template_hole 31),
               template_app (template_hole 30, template_hole 29)))),
         template_app
          (template_app
            (template_hole 28,
             template_app
              (template_app (template_hole 27, template_hole 26),
               template_app
                (template_app (template_hole 25, template_hole 24),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 22, template_hole 21),
                       template_hole 20)),
                   template_app (template_hole 19, template_hole 18))))),
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_app (template_hole 12, t_empty)))),
             template_app
              (template_app (template_hole 9, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("KMP.sfilter_supto",
     "0 <= ?d ==>
      Theory_Of_Lists.sfilter$(LAM x. le$(MkI$?n - x)$(MkI$?d))$
      (supto$(MkI$?m)$(MkI$?n)) =
      supto$(MkI$(if ?m <= ?n - ?d then ?n - ?d else ?m))$(MkI$?n)",
     template_implication
      ([template_inequation
         (less_equals, template_hole 16, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_hole 12),
               template_app (template_hole 11, t_empty))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 0))),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 17, template_var 0),
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 2))),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2)),
                   template_var 0)))),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1))))),
    ("KMP.smap_sfilter_split_cfcomp",
     "[| ?f$\<bottom> = \<bottom>; ?p$\<bottom> = \<bottom> |]
      ==> Theory_Of_Lists.smap$?f oo Theory_Of_Lists.sfilter$(?p oo ?g) =
          Theory_Of_Lists.smap$cfst oo
          Theory_Of_Lists.sfilter$(?p oo csnd) oo
          Theory_Of_Lists.smap$(?f && ?g)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 39, template_var 2),
            template_hole 38),
          template_hole 37),
        template_equation
         (template_app
           (template_app (template_hole 35, template_var 1),
            template_hole 34),
          template_hole 33)],
       template_equation
        (template_app
          (template_app
            (template_hole 31,
             template_app
              (template_app (template_hole 30, template_hole 29),
               template_app
                (template_app (template_hole 28, template_hole 27),
                 template_var 2))),
           template_app
            (template_app (template_hole 26, template_hole 25),
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app (template_hole 23, template_hole 22),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_app (template_hole 16, template_hole 15)))),
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_var 1)),
                     template_app (template_hole 6, template_hole 5))))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 2)),
                 template_var 0))))))),
    ("KMP.op5_sfoldl_left5",
     "[| ?us ~= \<bottom>; ?u ~= \<bottom>; ?v ~= \<bottom> |]
      ==> op5$?pat$(sfoldl$(op5$?pat)$(root5$?pat)$?us)$?v =
          left5$?pat$(?u :# ?us :@ [:?v:])",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 20)),
        template_negation
         (template_equation (template_var 2, template_hole 18)),
        template_negation
         (template_equation (template_var 1, template_hole 18))],
       template_equation
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app
                          (template_app
                            (template_hole 14, template_hole 13),
                           template_var 0))),
                     template_app
                      (template_app (template_hole 12, template_hole 8),
                       template_var 0))),
                 template_var 3))),
           template_var 1),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 1)),
                 template_hole 0))))))),
    ("KMP.matches_op",
     "matches$?pat =
      Theory_Of_Lists.smap$cfst oo
      Theory_Of_Lists.sfilter$(snull oo csnd oo csnd) oo
      sscanl$(LAM (n, usvs) x. (n + 1, op$?pat$usvs$x))$(0, [::], ?pat)",
     template_equation
      (template_app
        (template_app (template_hole 42, template_hole 41), template_var 0),
       template_app
        (template_app
          (template_hole 40,
           template_app
            (template_app (template_hole 39, template_hole 38),
             template_app
              (template_app (template_hole 37, template_hole 36),
               template_app (template_hole 35, template_hole 34)))),
         template_app
          (template_app
            (template_hole 33,
             template_app
              (template_app (template_hole 32, template_hole 31),
               template_app
                (template_app (template_hole 30, template_hole 29),
                 template_app
                  (template_app
                    (template_hole 28,
                     template_app
                      (template_app (template_hole 27, template_hole 26),
                       template_hole 25)),
                   template_app
                    (template_app
                      (template_hole 24,
                       template_app
                        (template_app (template_hole 23, template_hole 22),
                         template_app
                          (template_hole 21, template_hole 20))),
                     template_app (template_hole 19, template_hole 18)))))),
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_app (template_hole 12, t_empty)))),
             template_app
              (template_app (template_hole 9, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("KMP.root_bisim_op_next56",
     "[| root_bisim ?pat ?t6.0 ?t5.0; prefix$[:?x:]$?xs = FF |]
      ==> op6$?pat$(next$?xs$?t6.0)$?x = op6$?pat$?t6.0$?x &
          op5$?pat$(next$?xs$?t5.0)$?x = op5$?pat$?t5.0$?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_hole 12),
                      template_var 1)),
                  template_hole 11))),
            template_var 0),
          template_hole 10)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_var 4)),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_hole 1),
                               template_var 0)),
                           template_var 3))),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 4)),
                       template_var 3)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 0),
                           template_var 4)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2, template_hole 1),
                             template_var 0)),
                         template_var 2))),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 0),
                         template_var 4)),
                     template_var 2)),
                 template_var 1)))
           ))),
    ("KMP.r8_7",
     "root8$?pat = tree_map'$csnd$(root7$?pat) &
      op8$?pat$(tree_map'$csnd$?t)$?x = tree_map'$csnd$(op7$?pat$?t$?x) &
      grep8$?pat$(tree_map'$csnd$?l)$(prod.snd ?usvs) =
      tree_map'$csnd$(grep7$?pat$?l$?usvs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 25,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app (template_hole 23, template_hole 22),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app (template_hole 20, template_hole 19),
                     template_app (template_hole 18, template_hole 17))),
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_var 4)))),
           template_app
            (template_app
              (template_hole 25,
               template_app
                (template_app
                  (template_hole 24,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app
                          (template_hole 13,
                           template_app
                            (template_app
                              (template_hole 12, template_hole 11),
                             template_var 4)),
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_app
                                (template_hole 20, template_hole 19),
                               template_app
                                (template_hole 18, template_hole 17))),
                           template_var 3))),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app (template_hole 20, template_hole 19),
                       template_app (template_hole 18, template_hole 17))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 8, template_hole 7),
                             template_var 4)),
                         template_var 3)),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 4)),
                       template_app
                        (template_app
                          (template_hole 21,
                           template_app
                            (template_app
                              (template_hole 20, template_hole 19),
                             template_app
                              (template_hole 18, template_hole 17))),
                         template_var 1))),
                   template_app (template_hole 17, template_var 0))),
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app (template_hole 20, template_hole 19),
                     template_app (template_hole 18, template_hole 17))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 4)),
                       template_var 1)),
                   template_var 0)))))
         )),
    ("KMP.next_grep6_cases",
     "[| ?vs ~= \<bottom>; ?xs ~= \<bottom>;
         ?P (next$?xs$(grep6$?pat$(left6$?pat$?us)$(?us, ?vs)));
         ?P (grep6$?pat$(left6$?pat$?us)$(?us, ?vs)) ==> ?thesis;
         ?P (next$?vs$(left6$?pat$?us)) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 11)),
        template_negation
         (template_equation (template_var 4, template_hole 11)),
        template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 4)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 5, template_hole 4),
                          template_var 2)),
                      template_app
                       (template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 2, template_hole 1),
                            template_var 2)),
                        template_var 1))),
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 5))))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_var 3,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 2)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2, template_hole 1),
                             template_var 2)),
                         template_var 1))),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 5)))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_var 3,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_var 5)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 2)),
                     template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("KMP.tree_bisimI",
     "(!!x y.
          ?x x y ==>
          x = \<bottom> & y = \<bottom> |
          x = Null & y = Null |
          (EX a tree1 tree2 a' tree1' tree2'.
              a = a' &
              ?x tree1 tree1' &
              ?x tree2 tree2' &
              x = KMP.tree.Node$a$tree1$tree2 &
              y = KMP.tree.Node$a'$tree1'$tree2')) ==>
      tree_bisim ?x",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("KMP.Bird_strategy",
     "[| endswith$?pat = ?p oo sfoldl$?op$?z;
         ?step = (LAM (n, x) y. (n + 1, ?op$x$y));
         ?p$\<bottom> = \<bottom> |]
      ==> matches$?pat =
          Theory_Of_Lists.smap$cfst oo
          Theory_Of_Lists.sfilter$(?p oo csnd) oo sscanl$?step$(0, ?z)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 46, template_hole 45),
            template_var 4),
          template_app
           (template_app
             (template_hole 44,
              template_app
               (template_app (template_hole 43, template_hole 42),
                template_var 3)),
            template_app
             (template_app
               (template_hole 41,
                template_app
                 (template_app (template_hole 40, template_hole 39),
                  template_var 2)),
              template_var 1))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 37, template_hole 36),
            template_app (template_hole 35, t_empty))),
        template_equation
         (template_app
           (template_app (template_hole 26, template_var 3),
            template_hole 25),
          template_hole 24)],
       template_equation
        (template_app
          (template_app (template_hole 22, template_hole 21),
           template_var 4),
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app (template_hole 19, template_hole 18),
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_app (template_hole 15, template_hole 14)))),
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 3)),
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 32, template_hole 0),
                 template_var 1))))))),
    ("KMP.r7_6_aux",
     "?pat ~= \<bottom> ==>
      (LAM (root, op, grep).
          (root$?pat, seq$?x$(op$?pat$?t$?x), grep$?pat$?l$(?us, ?vs)))$
      (root7, op7, grep7) =
      (LAM (root, op, grep).
          (root$?pat, seq$?x$(op$?pat$?t$?x),
           seq$?vs$(grep$?pat$?l$(?us, ?vs))))$
      (root6, op6, grep6)",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 32))],
       template_equation
        (template_app
          (template_app
            (template_hole 30,
             template_app
              (template_app (template_hole 29, template_hole 28),
               template_app (template_hole 27, t_empty))),
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5))),
         template_app
          (template_app
            (template_hole 30,
             template_app
              (template_app (template_hole 29, template_hole 28),
               template_app (template_hole 27, t_empty))),
           template_app
            (template_app (template_hole 9, template_hole 2),
             template_app
              (template_app (template_hole 7, template_hole 1),
               template_hole 0)))))),
    ("KMP.fused_driver'",
     "[| ?g$\<bottom> = \<bottom>; ?p$\<bottom> = \<bottom> |]
      ==> Theory_Of_Lists.smap$?g oo
          Theory_Of_Lists.sfilter$?p oo sscanl$?f$?z =
          (FIX x.
              LAM z xxs.
                 case xxs of [::] => If ?p$z then [:?g$z:] else [::]
                 | xa :# xs =>
                     let z' = ?f$z$xa
                     in If ?p$z then ?g$z :# x$z'$xs else x$z'$xs)$
          ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 41, template_var 3),
            template_hole 40),
          template_hole 39),
        template_equation
         (template_app
           (template_app (template_hole 37, template_var 2),
            template_hole 40),
          template_hole 36)],
       template_equation
        (template_app
          (template_app
            (template_hole 34,
             template_app
              (template_app (template_hole 33, template_hole 32),
               template_app
                (template_app (template_hole 31, template_hole 30),
                 template_var 3))),
           template_app
            (template_app
              (template_hole 29,
               template_app
                (template_app (template_hole 28, template_hole 27),
                 template_app
                  (template_app (template_hole 26, template_hole 25),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app (template_hole 23, template_hole 22),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_app (template_hole 18, t_empty))),
           template_var 0)))),
    ("KMP.tree_case_cong",
     "[| ?t = ?t'; ?t' = Null ==> ?n = ?n';
         !!v l r.
            [| ?t' = KMP.tree.Node$v$l$r; v ~= \<bottom> |]
            ==> ?c v l r = ?c' v l r;
         cont (%(x, y, z). ?c x y z); cont (%(x, y, z). ?c' x y z) |]
      ==> (case ?t of Null => ?n | KMP.tree.Node$v$l$r => ?c v l r) =
          (case ?t' of Null => ?n' | KMP.tree.Node$v$l$r => ?c' v l r)",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_implication
         ([template_equation (template_var 4, template_hole 20)],
          template_equation (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 9, template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 9, template_app (template_hole 8, t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 3)),
               template_app (template_hole 2, t_empty))),
           template_var 5),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 2)),
               template_app (template_hole 2, t_empty))),
           template_var 4)))),
    ("KMP.matchesf_8",
     "fix$
      (LAM (Rootf, Opf, Grepf).
          (Grepf$Null$?pat,
           LAM t x.
              case t of Null => Rootf
              | KMP.tree.Node$vs$l$r =>
                  case vs of [::] => Opf$l$x
                  | v :# vs => If eq$x$v then r else Opf$l$x,
           LAM l vs.
              case vs of [::] => KMP.tree.Node$[::]$l$Null
              | v :# vs =>
                  KMP.tree.Node$(v :# vs)$(next'$v$l)$
                  (Grepf$(Opf$l$v)$vs))) =
      (LAM (root, op, grep). (root$?pat, op$?pat, grep$?pat))$
      (root8, op8, grep8)",
     template_equation
      (template_app
        (template_app (template_hole 61, template_hole 60),
         template_app
          (template_app (template_hole 59, template_hole 58),
           template_app (template_hole 57, t_empty))),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_app (template_hole 11, t_empty))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("KMP.fix_syn4_permute",
     "[| cont (%(X1, X2, X3, X4). ?F1.0 X1 X2 X3 X4);
         cont (%(X1, X2, X3, X4). ?F2.0 X1 X2 X3 X4);
         cont (%(X1, X2, X3, X4). ?F3.0 X1 X2 X3 X4);
         cont (%(X1, X2, X3, X4). ?F4.0 X1 X2 X3 X4) |]
      ==> (FIX x.
              case x of
              (X1, X2, X3, X4) =>
                (?F1.0 X1 X2 X3 X4, ?F2.0 X1 X2 X3 X4, ?F3.0 X1 X2 X3 X4,
                 ?F4.0 X1 X2 X3 X4)) =
          (case FIX x.
                   case x of
                   (X1, X2, X4, X3) =>
                     (?F1.0 X1 X2 X3 X4, ?F2.0 X1 X2 X3 X4,
                      ?F4.0 X1 X2 X3 X4, ?F3.0 X1 X2 X3 X4) of
           (x1, x2, x4, x3) => (x1, x2, x3, x4))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 37, template_app (template_hole 36, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 33, template_app (template_hole 32, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 29, template_app (template_hole 28, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 25, template_app (template_hole 24, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 20, template_hole 19),
           template_app (template_hole 18, t_empty)),
         template_app
          (template_app (template_hole 11, t_empty),
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app (template_hole 6, t_empty))))))]
