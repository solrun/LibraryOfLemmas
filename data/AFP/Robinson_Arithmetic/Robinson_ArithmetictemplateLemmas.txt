   [("Robinson_Arithmetic.fls_fresh", "?a \<sharp> fls",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Robinson_Arithmetic.eq_cong_ax_holds", "eval_fmla ?e eq_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Robinson_Arithmetic.pls_cong_ax_holds", "eval_fmla ?e pls_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Robinson_Arithmetic.refl_ax_holds", "eval_fmla ?e refl_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Robinson_Arithmetic.syc_cong_ax_holds", "eval_fmla ?e syc_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Robinson_Arithmetic.tms_cong_ax_holds", "eval_fmla ?e tms_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Robinson_Arithmetic.truth_provable", "?H \<turnstile> neg fls",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Robinson_Arithmetic.fls_eqvt", "?p \<bullet> fls = fls",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Robinson_Arithmetic.Iff_refl", "?H \<turnstile> ?A IFF ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Robinson_Arithmetic.Refl", "?H \<turnstile> ?t EQ ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Robinson_Arithmetic.Assume", "insert ?A ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("Robinson_Arithmetic.fls_E", "insert fls ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)
         )),
    ("Robinson_Arithmetic.supp_name", "supp ?i = {atom ?i}",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Robinson_Arithmetic.subst_trm_id", "subst ?a (Var ?a) ?trm = ?trm",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 0)),
    ("Robinson_Arithmetic.subst_fmla_id", "?A(?a::=Var ?a) = ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?A2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.size_subst_fmla", "size (?A(?i::=?x)) = size ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Robinson_Arithmetic.exFalso",
     "?H \<turnstile> fls ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Robinson_Arithmetic.thin0",
     "{} \<turnstile> ?A ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.boolean_axioms_hold",
     "?A : boolean_axioms ==> eval_fmla ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.equality_axioms_hold",
     "?A : equality_axioms ==> eval_fmla ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.special_axioms_hold",
     "?A : special_axioms ==> eval_fmla ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?A3.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.supp_cnj",
     "supp (?A AND ?B) = supp ?A Un supp ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Robinson_Arithmetic.dsj_commute_imp",
     "?H \<turnstile> ?B OR ?A IMP ?A OR ?B",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))
         )),
    ("Robinson_Arithmetic.dsj_I1",
     "?H \<turnstile> ?A ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.negneg_I",
     "?H \<turnstile> ?A ==> ?H \<turnstile> neg (neg ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Robinson_Arithmetic.thin_Un",
     "?H \<turnstile> ?A ==> ?H Un ?H' \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.dsj_I2",
     "?H \<turnstile> ?B ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.thin1",
     "?H \<turnstile> ?B ==> insert ?A ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.cnj_E1",
     "?H \<turnstile> ?A AND ?B ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("Robinson_Arithmetic.cnj_E2",
     "?H \<turnstile> ?A AND ?B ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Robinson_Arithmetic.negneg_D",
     "?H \<turnstile> neg (neg ?A) ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_hole 0,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Robinson_Arithmetic.neg", "(neg ?A)(?i::=?x) = neg (?A(?i::=?x))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
      ?A4.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.neg_E",
     "?H \<turnstile> ?A ==> insert (neg ?A) ?H \<turnstile> fls",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_var 1)),
             template_hole 0)
           ))),
    ("Robinson_Arithmetic.imp_triv_I",
     "?H \<turnstile> ?B ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.ContraProve",
     "?H \<turnstile> ?B ==> insert (neg ?B) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.ContraAssumeN",
     "?B : ?H ==> insert (neg ?B) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.ContraAssume",
     "neg ?B : ?H ==> insert ?B ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.neg_I",
     "insert ?A ?H \<turnstile> fls ==> ?H \<turnstile> neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Robinson_Arithmetic.Contra",
     "insert (neg ?A) ?H \<turnstile> ?A ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.suc_cong1",
     "{} \<turnstile> ?t EQ ?t' IMP suc ?t EQ suc ?t'",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Robinson_Arithmetic.forget_subst_trm",
     "atom ?a \<sharp> ?trm ==> subst ?a ?x ?trm = ?trm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("Robinson_Arithmetic.forget_subst_fmla",
     "atom ?a \<sharp> ?A ==> ?A(?a::=?x) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Robinson_Arithmetic.Iff_sym",
     "?H \<turnstile> ?A IFF ?B ==> ?H \<turnstile> ?B IFF ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_commute",
     "?H \<turnstile> ?B AND ?A ==> ?H \<turnstile> ?A AND ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.dsj_commute",
     "?H \<turnstile> ?B OR ?A ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.Sym",
     "?H \<turnstile> ?t EQ ?u ==> ?H \<turnstile> ?u EQ ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.Contra'",
     "insert ?A ?H \<turnstile> neg ?A ==> ?H \<turnstile> neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Robinson_Arithmetic.Peirce",
     "?H \<turnstile> neg ?A IMP ?A ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 0,
                    template_app (template_hole 0, template_var 0))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Robinson_Arithmetic.fresh_Iff",
     "?a \<sharp> ?A IFF ?B = (?a \<sharp> ?A & ?a \<sharp> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Robinson_Arithmetic.fresh_cnj",
     "?a \<sharp> ?A AND ?B = (?a \<sharp> ?A & ?a \<sharp> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Robinson_Arithmetic.eval_fmla_Iff",
     "eval_fmla ?e (?A IFF ?B) = (eval_fmla ?e ?A = eval_fmla ?e ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Robinson_Arithmetic.eval_fmla_cnj",
     "eval_fmla ?e (?A AND ?B) = (eval_fmla ?e ?A & eval_fmla ?e ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Robinson_Arithmetic.Iff_eqvt",
     "?p \<bullet> ?A IFF ?B = (?p \<bullet> ?A) IFF (?p \<bullet> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Robinson_Arithmetic.cnj_eqvt",
     "?p \<bullet> ?A AND ?B = (?p \<bullet> ?A) AND (?p \<bullet> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Robinson_Arithmetic.Var_eql_subst_Iff",
     "insert (Var ?i EQ ?t) ?H \<turnstile> ?A(?i::=?t) IFF ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2)),
             template_var 0))
         )),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))) \<turnstile>
      ?A5.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.imp_I",
     "insert ?A ?H \<turnstile> ?B ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.anti_deduction",
     "?H \<turnstile> ?A IMP ?B ==> insert ?A ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.exi_I",
     "?H \<turnstile> ?A(?i::=?x) ==> ?H \<turnstile> exi ?i ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Robinson_Arithmetic.dsj_CI",
     "insert (neg ?B) ?H \<turnstile> ?A ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Robinson_Arithmetic.thin",
     "[| ?H \<turnstile> ?A; ?H <= ?H' |] ==> ?H' \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.better_ex_eval_fmla",
     "eval_fmla ?e (exi ?k ?A) =
      (EX x. eval_fmla (finfun_update ?e ?k x) ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Robinson_Arithmetic.neg_cong",
     "?H \<turnstile> ?A IFF ?A' ==> ?H \<turnstile> neg ?A IFF neg ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Robinson_Arithmetic.suc_cong",
     "?H \<turnstile> ?t EQ ?t' ==> ?H \<turnstile> suc ?t EQ suc ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Robinson_Arithmetic.neg_mono",
     "insert ?A ?H \<turnstile> ?B ==>
      insert (neg ?B) ?H \<turnstile> neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Robinson_Arithmetic.negneg_E",
     "insert ?A ?H \<turnstile> ?B ==>
      insert (neg (neg ?A)) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 0, template_var 2))),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.thin2",
     "insert ?A1.0 ?H \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.Swap",
     "insert (neg ?B) ?H \<turnstile> ?A ==>
      insert (neg ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_var 2)
           ))),
    ("Robinson_Arithmetic.contraction",
     "insert ?A (insert ?A ?H) \<turnstile> ?B ==>
      insert ?A ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.neg_D",
     "[| ?H \<turnstile> neg ?A; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_hole 0, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Robinson_Arithmetic.size_cnj",
     "size (?A AND ?B) = size ?A + size ?B + 4",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_hole 0)))))),
    ("Robinson_Arithmetic.eval_subst_trm",
     "eval_trm ?e (subst ?i ?t ?u) =
      eval_trm (finfun_update ?e ?i (eval_trm ?e ?t)) ?u",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1))),
         template_var 0))),
    ("Robinson_Arithmetic.eval_subst_fmla",
     "eval_fmla ?e (?fmla(?i::=?t)) =
      eval_fmla (finfun_update ?e ?i (eval_trm ?e ?t)) ?fmla",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))),
         template_var 2))),
    ("Robinson_Arithmetic.Iff_injective_iff",
     "(?A IFF ?B = ?A' IFF ?B') = (?A = ?A' & ?B = ?B')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.cnj_injective_iff",
     "(?A AND ?B = ?A' AND ?B') = (?A = ?A' & ?B = ?B')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.repeat_subst_trm",
     "subst ?i ?u (subst ?i ?t ?trm) = subst ?i (subst ?i ?u ?t) ?trm",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Robinson_Arithmetic.repeat_subst_fmla",
     "(?A(?i::=?t))(?i::=?u) = ?A(?i::=subst ?i ?u ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Robinson_Arithmetic.eql_subst_fmla_Iff",
     "insert (?t EQ ?u) ?H \<turnstile> ?A(?i::=?t) IFF ?A(?i::=?u)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)))
         )),
    ("Robinson_Arithmetic.eql_subst_trm_Iff",
     "{?t EQ ?u} \<turnstile> subst ?i ?t ?trm EQ subst ?i ?u ?trm",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)))
         )),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H))))) \<turnstile>
      ?A6.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.deduction_Diff",
     "?H \<turnstile> ?B ==> ?H - {?C} \<turnstile> ?C IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.all_D",
     "?H \<turnstile> all ?i ?A ==> ?H \<turnstile> ?A(?i::=?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 2, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.cnj_I",
     "[| ?H \<turnstile> ?A; ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?A AND ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.cut_same",
     "[| ?H \<turnstile> ?A; insert ?A ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Robinson_Arithmetic.cut0",
     "[| {} \<turnstile> ?A; insert ?A ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Robinson_Arithmetic.Iff_MP_same",
     "[| ?H \<turnstile> ?A IFF ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Robinson_Arithmetic.Iff_MP2_same",
     "[| ?H \<turnstile> ?A IFF ?B; ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("Robinson_Arithmetic.cut1",
     "[| {?A} \<turnstile> ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_hole 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.subst_fmla_Iff",
     "(?A IFF ?B)(?i::=?x) = ?A(?i::=?x) IFF ?B(?i::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Robinson_Arithmetic.subst_fmla_cnj",
     "(?A AND ?B)(?i::=?x) = ?A(?i::=?x) AND ?B(?i::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Robinson_Arithmetic.dsj",
     "(?A OR ?B)(?i::=?x) = ?A(?i::=?x) OR ?B(?i::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Robinson_Arithmetic.eql",
     "(?t EQ ?u)(?i::=?x) = subst ?i ?x ?t EQ subst ?i ?x ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Robinson_Arithmetic.forget_eval_trm",
     "atom ?i \<sharp> ?t ==>
      eval_trm (finfun_update ?e ?i ?x) ?t = eval_trm ?e ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Robinson_Arithmetic.forget_eval_fmla",
     "atom ?k \<sharp> ?A ==>
      eval_fmla (finfun_update ?e ?k ?x) ?A = eval_fmla ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Robinson_Arithmetic.dsj_IE1",
     "insert ?B ?H \<turnstile> ?C ==>
      insert (?A OR ?B) ?H \<turnstile> ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.Contrapos1",
     "?H \<turnstile> ?A IMP ?B ==> ?H \<turnstile> neg ?B IMP neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 0, template_var 0))),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Robinson_Arithmetic.Var_eql_imp_subst_Iff",
     "?H \<turnstile> Var ?i EQ ?t ==> ?H \<turnstile> ?A(?i::=?t) IFF ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.dsjAssoc1",
     "?H \<turnstile> ?A OR ?B OR ?C ==> ?H \<turnstile> (?A OR ?B) OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.dsjAssoc2",
     "?H \<turnstile> (?A OR ?B) OR ?C ==> ?H \<turnstile> ?A OR ?B OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app
                 (template_hole 0,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.cnj_E",
     "insert ?A (insert ?B ?H) \<turnstile> ?C ==>
      insert (?A AND ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate2",
     "insert ?A2.0 (insert ?A1.0 ?H) \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.Sym_L",
     "insert (?t EQ ?u) ?H \<turnstile> ?A ==>
      insert (?u EQ ?t) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.Contrapos2",
     "?H \<turnstile> neg ?B IMP neg ?A ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 0,
                    template_app (template_hole 0, template_var 1))),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.nprv_sound",
     "[| ?H \<turnstile> ?A; ALL B:?H. eval_fmla ?e B |]
      ==> eval_fmla ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.dsj_neg_2",
     "[| ?H \<turnstile> ?A OR ?B; ?H \<turnstile> neg ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_neg_1",
     "[| ?H \<turnstile> ?A OR ?B; ?H \<turnstile> neg ?B |]
      ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 1)
           ))),
    ("Robinson_Arithmetic.MP_same",
     "[| ?H \<turnstile> ?A IMP ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Robinson_Arithmetic.MP_null",
     "[| {} \<turnstile> ?A IMP ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert ?A6.0 (insert ?A7.0 ?H)))))) \<turnstile>
      ?A7.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 7),
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0)))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.flip_subst_trm",
     "atom ?y \<sharp> ?t ==>
      (?x \<leftrightarrow> ?y) \<bullet> ?t = subst ?x (Var ?y) ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)),
           template_var 1)))),
    ("Robinson_Arithmetic.exi_ren_subst_fresh",
     "atom ?y \<sharp> ?\<phi> ==>
      exi ?x ?\<phi> = exi ?y (?\<phi>(?x::=Var ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Robinson_Arithmetic.flip_subst_fmla",
     "atom ?y \<sharp> ?\<phi> ==>
      (?x \<leftrightarrow> ?y) \<bullet> ?\<phi> = ?\<phi>(?x::=Var ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Robinson_Arithmetic.cut",
     "[| ?H \<turnstile> ?A; insert ?A ?H' \<turnstile> ?B |]
      ==> ?H Un ?H' \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.pls_cong1",
     "{} \<turnstile> ?t EQ ?t' AND ?u EQ ?u' IMP pls ?t ?u EQ pls ?t' ?u'",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("Robinson_Arithmetic.tms_cong1",
     "{} \<turnstile> ?t EQ ?t' AND ?u EQ ?u' IMP tms ?t ?u EQ tms ?t' ?u'",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("Robinson_Arithmetic.thin3",
     "insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.dsj_3I",
     "insert (neg ?A) (insert (neg ?C) ?H) \<turnstile> ?B ==>
      ?H \<turnstile> ?A OR ?B OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 2)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Robinson_Arithmetic.neg_dsj_I",
     "[| ?H \<turnstile> neg ?A; ?H \<turnstile> neg ?B |]
      ==> ?H \<turnstile> neg (?A OR ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.Cases",
     "[| insert ?A ?H \<turnstile> ?B; insert (neg ?A) ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Robinson_Arithmetic.eql_cong1",
     "{} \<turnstile> ?t EQ ?t' AND ?u EQ ?u' IMP ?t EQ ?u IMP ?t' EQ ?u'",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert ?A8.0 ?H))))))) \<turnstile>
      ?A8.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 8),
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0))))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.neg_imp_E",
     "insert (neg ?B) (insert ?A ?H) \<turnstile> ?C ==>
      insert (neg (?A IMP ?B)) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 1, template_var 2)),
                       template_var 3))),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.all_E",
     "insert (?A(?i::=?x)) ?H \<turnstile> ?B ==>
      insert (all ?i ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app (template_hole 2, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app (template_hole 1, template_var 4)))),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.neg_I0",
     "(!!B. atom ?i \<sharp> B ==> insert ?A ?H \<turnstile> B) ==>
      ?H \<turnstile> neg ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Robinson_Arithmetic.Iff_E1",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A IFF ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 3)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.Iff_E2",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?B IFF ?A) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2)),
                 template_var 3)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.neg_imp_I",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> fls |]
      ==> ?H \<turnstile> neg (?A IMP ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.Iff_trans",
     "[| ?H \<turnstile> ?A IFF ?B; ?H \<turnstile> ?B IFF ?C |]
      ==> ?H \<turnstile> ?A IFF ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.Iff_MP_left",
     "[| ?H \<turnstile> ?A IFF ?B; insert ?A ?H \<turnstile> ?C |]
      ==> insert ?B ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.Iff_MP_left'",
     "[| ?H \<turnstile> ?A IFF ?B; insert ?B ?H \<turnstile> ?C |]
      ==> insert ?A ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.Trans",
     "[| ?H \<turnstile> ?x EQ ?y; ?H \<turnstile> ?y EQ ?z |]
      ==> ?H \<turnstile> ?x EQ ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.Iff_I",
     "[| insert ?A ?H \<turnstile> ?B; insert ?B ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?A IFF ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.rcut1",
     "[| {?A} \<turnstile> ?B; insert ?B ?H \<turnstile> ?C |]
      ==> insert ?A ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_hole 0)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.size_Iff",
     "size (?A IFF ?B) = 2 * (size ?A + size ?B) + 8",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0)))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0))))))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B (insert ?A1.0 ?H) \<turnstile> ?C ==>
      insert ?A1.0 (insert (?A OR ?B) ?H) \<turnstile> ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 4)),
                   template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.imp_imp_commute",
     "?H \<turnstile> ?B IMP ?A IMP ?C ==>
      ?H \<turnstile> ?A IMP ?B IMP ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A (insert ?Ba (insert ?A1.0 ?H)) \<turnstile> ?B ==>
      insert ?A1.0 (insert (?A AND ?Ba) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate3",
     "insert ?A3.0 (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.imp_E",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A IMP ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_var 1)),
                 template_var 3)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.Subst",
     "[| ?H \<turnstile> ?A; ALL B:?H. atom ?i \<sharp> B |]
      ==> ?H \<turnstile> ?A(?i::=?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.dsj_Semicong_1",
     "[| ?H \<turnstile> ?A OR ?C; ?H \<turnstile> ?A IMP ?B |]
      ==> ?H \<turnstile> ?B OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0 (insert ?A9.0 ?H)))))))) \<turnstile>
      ?A9.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 9),
               template_app
                (template_app (template_hole 0, template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0)))))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.subst_trm_commute",
     "atom ?j \<sharp> ?trm ==>
      subst ?j ?u (subst ?i ?t ?trm) = subst ?i (subst ?j ?u ?t) ?trm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2),
               template_var 0)),
           template_var 3)))),
    ("Robinson_Arithmetic.subst_fmla_commute",
     "atom ?j \<sharp> ?A ==>
      (?A(?i::=?t))(?j::=?u) = ?A(?i::=subst ?j ?u ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 1))))),
    ("Robinson_Arithmetic.exi",
     "atom ?j \<sharp> (?i, ?x) ==>
      (exi ?j ?A)(?i::=?x) = exi ?j (?A(?i::=?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1))))),
    ("Robinson_Arithmetic.all_I",
     "[| ?H \<turnstile> ?A; ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> all ?i ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 1, template_var 1))))
           ))),
    ("Robinson_Arithmetic.neg_cnj_E",
     "[| ?H \<turnstile> ?B; insert (neg ?A) ?H \<turnstile> ?C |]
      ==> insert (neg (?A AND ?B)) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 1)),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2))),
                 template_var 3)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_E",
     "[| insert ?A ?H \<turnstile> ?C; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A OR ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.imp_neg_I",
     "[| ?H \<turnstile> ?A IMP ?B; ?H \<turnstile> ?A IMP neg ?B |]
      ==> ?H \<turnstile> neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Robinson_Arithmetic.thin4",
     "insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?B ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 5),
                  template_app
                   (template_app (template_hole 0, template_var 4),
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.all_E'",
     "[| ?H \<turnstile> all ?i ?A;
         insert (?A(?i::=?x)) ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 3, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 3),
                      template_var 1)),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4), template_var 0)
           ))),
    ("Robinson_Arithmetic.cut_thin",
     "[| ?HA \<turnstile> ?A; insert ?A ?HB \<turnstile> ?B;
         ?HA Un ?HB <= ?H |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 4), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.cut2",
     "[| {?A, ?B} \<turnstile> ?C; ?H \<turnstile> ?A; ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_hole 0))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0 (insert ?A10.0 ?H))))))))) \<turnstile>
      ?A10.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 10),
               template_app
                (template_app (template_hole 0, template_var 9),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0))))))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.eval_trm_rename",
     "atom ?k' \<sharp> ?t ==>
      eval_trm (finfun_update ?e ?k ?x) ?t =
      eval_trm (finfun_update ?e ?k' ?x)
       ((?k' \<leftrightarrow> ?k) \<bullet> ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 3))))),
    ("Robinson_Arithmetic.eval_fmla_rename",
     "atom ?k' \<sharp> ?A ==>
      eval_fmla (finfun_update ?e ?k ?x) ?A =
      eval_fmla (finfun_update ?e ?k' ?x)
       ((?k' \<leftrightarrow> ?k) \<bullet> ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 3))))),
    ("Robinson_Arithmetic.Iff_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> (?A IFF ?B) IFF ?A' IFF ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.cnj_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> ?A AND ?B IFF ?A' AND ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.dsj_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> ?A OR ?B IFF ?A' OR ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.eql_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> ?t EQ ?u IFF ?t' EQ ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.pls_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> pls ?t ?u EQ pls ?t' ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.tms_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> tms ?t ?u EQ tms ?t' ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.eql_Trans_E",
     "[| ?H \<turnstile> ?x EQ ?u; insert (?t EQ ?u) ?H \<turnstile> ?A |]
      ==> insert (?x EQ ?t) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_var 2)),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_var 4)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.cnj_mono",
     "[| insert ?A ?H \<turnstile> ?B; insert ?C ?H \<turnstile> ?D |]
      ==> insert (?A AND ?C) ?H \<turnstile> ?B AND ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.dsj_mono",
     "[| insert ?A ?H \<turnstile> ?B; insert ?C ?H \<turnstile> ?D |]
      ==> insert (?A OR ?C) ?H \<turnstile> ?B OR ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.imp_cut",
     "[| insert ?C ?H \<turnstile> ?A IMP ?B; {?A} \<turnstile> ?C |]
      ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))
           ))),
    ("Robinson_Arithmetic.MP_thin",
     "[| ?HA \<turnstile> ?A IMP ?B; ?HB \<turnstile> ?A;
         ?HA Un ?HB <= ?H |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 3)),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), template_var 2)
           ))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?C ==>
      insert ?A1.0 (insert ?A2.0 (insert (?A OR ?B) ?H)) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 5)),
                     template_var 2)))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A (insert ?Ba (insert ?A1.0 (insert ?A2.0 ?H))) \<turnstile>
      ?B ==>
      insert ?A1.0 (insert ?A2.0 (insert (?A AND ?Ba) ?H)) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 4)),
                     template_var 1)))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate4",
     "insert ?A4.0
       (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 5),
                  template_app
                   (template_app (template_hole 0, template_var 4),
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0 ?H)))))))))) \<turnstile>
      ?A11.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 11),
               template_app
                (template_app (template_hole 0, template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 9),
                   template_app
                    (template_app (template_hole 0, template_var 8),
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_app
                            (template_app (template_hole 0, template_var 4),
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 1),
                                   template_var 0)))))))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.imp_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> (?A IMP ?B) IFF ?A' IMP ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.exi_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> exi ?i ?A IFF exi ?i ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Robinson_Arithmetic.exi_mono",
     "[| insert ?A ?H \<turnstile> ?B; ALL C:?H. atom ?i \<sharp> C |]
      ==> insert (exi ?i ?A) ?H \<turnstile> exi ?i ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.rcut2",
     "[| {?A, ?B} \<turnstile> ?C; insert ?C ?H \<turnstile> ?D;
         ?H \<turnstile> ?B |]
      ==> insert ?A ?H \<turnstile> ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_hole 0))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0 ?H))))))))))) \<turnstile>
      ?A12.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 12),
               template_app
                (template_app (template_hole 0, template_var 11),
                 template_app
                  (template_app (template_hole 0, template_var 10),
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_app
                      (template_app (template_hole 0, template_var 8),
                       template_app
                        (template_app (template_hole 0, template_var 7),
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_app
                            (template_app (template_hole 0, template_var 5),
                             template_app
                              (template_app
                                (template_hole 0, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 2),
                                   template_app
                                    (template_app
(template_hole 0, template_var 1),
                                     template_var 0))))))))))))),
           template_var 1)
         )),
    ("Robinson_Arithmetic.twist_forget_eval_fmla",
     "atom ?j \<sharp> (?i, ?A) ==>
      eval_fmla
       (finfun_update (finfun_update (finfun_update ?e ?i ?x) ?j ?y) ?i ?z)
       ?A =
      eval_fmla (finfun_update ?e ?i ?z) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 6)),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 5),
                           template_var 2)),
                       template_var 6),
                     template_var 1)),
                 template_var 5),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 5),
               template_var 0)),
           template_var 4)))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A (insert ?A1.0 ?H) \<turnstile> ?B;
         insert ?Ba (insert ?A1.0 ?H) \<turnstile> ?B |]
      ==> insert ?A1.0 (insert (?A OR ?Ba) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 0)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.Iff_E",
     "[| insert ?A (insert ?B ?H) \<turnstile> ?C;
         insert (neg ?A) (insert (neg ?B) ?H) \<turnstile> ?C |]
      ==> insert (?A IFF ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 2)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.S",
     "[| ?H \<turnstile> ?A IMP ?B IMP ?C; ?H' \<turnstile> ?A IMP ?B |]
      ==> ?H Un ?H' \<turnstile> ?A IMP ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 2)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.fresh_subst_if",
     "?j \<sharp> subst ?i ?x ?t =
      (atom ?i \<sharp> ?t & ?j \<sharp> ?t |
       ?j \<sharp> ?x & (?j \<sharp> ?t | ?j = atom ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 1, template_var 2)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_hole 1, template_var 2)))))
           ))),
    ("Robinson_Arithmetic.fresh_subst_fmla_if",
     "?j \<sharp> ?A(?i::=?x) =
      (atom ?i \<sharp> ?A & ?j \<sharp> ?A |
       ?j \<sharp> ?x & (?j \<sharp> ?A | ?j = atom ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 2, template_var 1)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_hole 2, template_var 1)))))
           ))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert (?A OR ?B) ?H))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 6)),
                       template_var 2))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert (?A AND ?Ba) ?H))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_app
                         (template_app (template_hole 1, template_var 2),
                          template_var 1)))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_var 5)),
                       template_var 1))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate5",
     "insert ?A5.0
       (insert ?A1.0
         (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 6),
                  template_app
                   (template_app (template_hole 0, template_var 5),
                    template_app
                     (template_app (template_hole 0, template_var 4),
                      template_app
                       (template_app (template_hole 0, template_var 3),
                        template_app
                         (template_app (template_hole 0, template_var 2),
                          template_var 1)))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 1)))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.subst_fmla_exi_with_renaming",
     "atom ?i' \<sharp> (?A, ?i, ?j, ?t) ==>
      (exi ?i ?A)(?j::=?t) =
      exi ?i' (((?i \<leftrightarrow> ?i') \<bullet> ?A)(?j::=?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 4)),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 4)),
                   template_var 3)),
               template_var 1),
             template_var 0))))),
    ("Robinson_Arithmetic.all_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> all ?i ?A IFF all ?i ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app (template_hole 1, template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app (template_hole 1, template_var 1)))))
           ))),
    ("Robinson_Arithmetic.exi_E",
     "[| insert ?A ?H \<turnstile> ?B; atom ?i \<sharp> ?B;
         ALL C:?H. atom ?i \<sharp> C |]
      ==> insert (exi ?i ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.cut3",
     "[| {?A, ?B, ?C} \<turnstile> ?D; ?H \<turnstile> ?A;
         ?H \<turnstile> ?B; ?H \<turnstile> ?C |]
      ==> ?H \<turnstile> ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_hole 0)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert ?A4.0 (insert (?A OR ?B) ?H)))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 7),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_var 2)))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 0),
                             template_var 7)),
                         template_var 2)))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert (?A AND ?Ba) ?H)))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 7),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_app
                           (template_app (template_hole 1, template_var 2),
                            template_var 1))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 7),
                             template_var 6)),
                         template_var 1)))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate6",
     "insert ?A6.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 7),
                  template_app
                   (template_app (template_hole 0, template_var 6),
                    template_app
                     (template_app (template_hole 0, template_var 5),
                      template_app
                       (template_app (template_hole 0, template_var 4),
                        template_app
                         (template_app (template_hole 0, template_var 3),
                          template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_app
                          (template_app (template_hole 0, template_var 7),
                           template_var 1))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B;
         insert ?Ba (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B |]
      ==> insert ?A1.0 (insert ?A2.0 (insert (?A OR ?Ba) ?H)) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 0)),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.subst_trm_commute2",
     "[| atom ?j \<sharp> ?t; atom ?i \<sharp> ?u; ?i ~= ?j |]
      ==> subst ?j ?u (subst ?i ?t ?trm) = subst ?i ?t (subst ?j ?u ?trm)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0))))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A (insert ?A1.0 ?H) \<turnstile> ?B; atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 ?H. atom ?i \<sharp> C |]
      ==> insert ?A1.0 (insert (exi ?i ?A) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 4)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert (?A OR ?B) ?H))))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_var 2))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 0),
                               template_var 8)),
                           template_var 2))))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert (?A AND ?Ba) ?H))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_app
                             (template_app
                               (template_hole 1, template_var 2),
                              template_var 1)))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 8),
                               template_var 7)),
                           template_var 1))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate7",
     "insert ?A7.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert ?A6.0 (insert ?A7.0 ?H)))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 8),
                  template_app
                   (template_app (template_hole 0, template_var 7),
                    template_app
                     (template_app (template_hole 0, template_var 6),
                      template_app
                       (template_app (template_hole 0, template_var 5),
                        template_app
                         (template_app (template_hole 0, template_var 4),
                          template_app
                           (template_app (template_hole 0, template_var 3),
                            template_app
                             (template_app
                               (template_hole 0, template_var 2),
                              template_var 1)))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_app
                            (template_app (template_hole 0, template_var 8),
                             template_var 1)))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.cut4",
     "[| {?A, ?B, ?C, ?D} \<turnstile> ?E; ?H \<turnstile> ?A;
         ?H \<turnstile> ?B; ?H \<turnstile> ?C; ?H \<turnstile> ?D |]
      ==> ?H \<turnstile> ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_hole 0))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("Robinson_Arithmetic.exi_E_with_renaming",
     "[| insert ((?i \<leftrightarrow> ?i') \<bullet> ?A) ?H \<turnstile>
         ?B;
         atom ?i' \<sharp> (?A, ?i, ?B); ALL C:?H. atom ?i' \<sharp> C |]
      ==> insert (exi ?i ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 4),
                          template_var 3)),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert (?A OR ?Ba) ?H))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_var 0)),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.P1_cong",
     "[| !!i t x. atom i \<sharp> ?tms ==> (?P t)(i::=x) = ?P (subst i x t);
         ?H \<turnstile> ?x EQ ?x' |]
      ==> ?H \<turnstile> ?P ?x IFF ?P ?x'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 1)),
               template_app (template_var 3, template_var 0)))
           ))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0 (insert (?A OR ?B) ?H)))))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 9),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 0),
                                 template_var 9)),
                             template_var 2)))))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert ?A6.0 ?H))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0 (insert (?A AND ?Ba) ?H)))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 9),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 2),
                                template_var 1))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 9),
                                 template_var 8)),
                             template_var 1)))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate8",
     "insert ?A8.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert ?A8.0 ?H))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 9),
                  template_app
                   (template_app (template_hole 0, template_var 8),
                    template_app
                     (template_app (template_hole 0, template_var 7),
                      template_app
                       (template_app (template_hole 0, template_var 6),
                        template_app
                         (template_app (template_hole 0, template_var 5),
                          template_app
                           (template_app (template_hole 0, template_var 4),
                            template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 2),
                                template_var 1))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_app
                              (template_app
                                (template_hole 0, template_var 9),
                               template_var 1))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 (insert ?A2.0 ?H). atom ?i \<sharp> C |]
      ==> insert ?A1.0 (insert ?A2.0 (insert (exi ?i ?A) ?H)) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 5)),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.dsj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert (?A OR ?B) ?H))))))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 10),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 9),
                 template_app
                  (template_app (template_hole 1, template_var 8),
                   template_app
                    (template_app (template_hole 1, template_var 7),
                     template_app
                      (template_app (template_hole 1, template_var 6),
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 0),
                                   template_var 10)),
                               template_var 2))))))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0 (insert ?A7.0 ?H)))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert (?A AND ?Ba) ?H))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 10),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 2),
                                  template_var 1)))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_app
                            (template_app (template_hole 1, template_var 2),
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 10),
                                   template_var 9)),
                               template_var 1))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate9",
     "insert ?A9.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0 (insert ?A9.0 ?H)))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 10),
                  template_app
                   (template_app (template_hole 0, template_var 9),
                    template_app
                     (template_app (template_hole 0, template_var 8),
                      template_app
                       (template_app (template_hole 0, template_var 7),
                        template_app
                         (template_app (template_hole 0, template_var 6),
                          template_app
                           (template_app (template_hole 0, template_var 5),
                            template_app
                             (template_app
                               (template_hole 0, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 3),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 2),
                                  template_var 1)))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 9),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 10),
                                 template_var 1)))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0 (insert (?A OR ?Ba) ?H)))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 7),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_var 2)))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_var 2)))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 7),
                             template_var 0)),
                         template_var 2)))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert (exi ?i ?A) ?H))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_var 2))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 6)),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0 (insert ?A8.0 ?H))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert (?A AND ?Ba) ?H)))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 11),
                  template_app
                   (template_app (template_hole 1, template_var 10),
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_app
                       (template_app (template_hole 1, template_var 8),
                        template_app
                         (template_app (template_hole 1, template_var 7),
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_app
                             (template_app
                               (template_hole 1, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 2),
                                    template_var 1))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 9),
                 template_app
                  (template_app (template_hole 1, template_var 8),
                   template_app
                    (template_app (template_hole 1, template_var 7),
                     template_app
                      (template_app (template_hole 1, template_var 6),
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_app
                              (template_app
                                (template_hole 1, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 0, template_var 11),
                                     template_var 10)),
                                 template_var 1)))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate10",
     "insert ?A10.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0 (insert ?A10.0 ?H))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 11),
                  template_app
                   (template_app (template_hole 0, template_var 10),
                    template_app
                     (template_app (template_hole 0, template_var 9),
                      template_app
                       (template_app (template_hole 0, template_var 8),
                        template_app
                         (template_app (template_hole 0, template_var 7),
                          template_app
                           (template_app (template_hole 0, template_var 6),
                            template_app
                             (template_app
                               (template_hole 0, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 3),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 2),
                                    template_var 1))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 9),
                   template_app
                    (template_app (template_hole 0, template_var 8),
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_app
                            (template_app (template_hole 0, template_var 4),
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 11),
                                   template_var 1))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert (?A OR ?Ba) ?H))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_var 2))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_var 2))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 8),
                               template_var 0)),
                           template_var 2))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.cnj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0 (insert ?A9.0 ?H)))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert (?A AND ?Ba) ?H))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 12),
                  template_app
                   (template_app (template_hole 1, template_var 11),
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_app
                       (template_app (template_hole 1, template_var 9),
                        template_app
                         (template_app (template_hole 1, template_var 8),
                          template_app
                           (template_app (template_hole 1, template_var 7),
                            template_app
                             (template_app
                               (template_hole 1, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_app
                                     (template_app
 (template_hole 1, template_var 2),
template_var 1)))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 10),
                 template_app
                  (template_app (template_hole 1, template_var 9),
                   template_app
                    (template_app (template_hole 1, template_var 8),
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_app
                          (template_app (template_hole 1, template_var 5),
                           template_app
                            (template_app (template_hole 1, template_var 4),
                             template_app
                              (template_app
                                (template_hole 1, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 1, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 1,
                                     template_app
(template_app (template_hole 0, template_var 12), template_var 11)),
                                   template_var 1))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.rotate11",
     "insert ?A11.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0 ?H)))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0 ?H)))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 12),
                  template_app
                   (template_app (template_hole 0, template_var 11),
                    template_app
                     (template_app (template_hole 0, template_var 10),
                      template_app
                       (template_app (template_hole 0, template_var 9),
                        template_app
                         (template_app (template_hole 0, template_var 8),
                          template_app
                           (template_app (template_hole 0, template_var 7),
                            template_app
                             (template_app
                               (template_hole 0, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 3),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 2),
template_var 1)))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 11),
                 template_app
                  (template_app (template_hole 0, template_var 10),
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_app
                      (template_app (template_hole 0, template_var 8),
                       template_app
                        (template_app (template_hole 0, template_var 7),
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_app
                            (template_app (template_hole 0, template_var 5),
                             template_app
                              (template_app
                                (template_hole 0, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 2),
                                   template_app
                                    (template_app
(template_hole 0, template_var 12),
                                     template_var 1)))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0 (insert (exi ?i ?A) ?H)))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 2)))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_var 2))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 6),
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app (template_hole 0, template_var 0),
                             template_var 7)),
                         template_var 2)))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.P2_cong",
     "[| !!i t u x.
            atom i \<sharp> ?tms ==>
            (?P t u)(i::=x) = ?P (subst i x t) (subst i x u);
         ?H \<turnstile> ?x EQ ?x'; ?H \<turnstile> ?y EQ ?y' |]
      ==> ?H \<turnstile> ?P ?x ?y IFF ?P ?x' ?y'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_var 5, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_var 5, template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.rotate12",
     "insert ?A12.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0 ?H))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0 ?H))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 13),
                  template_app
                   (template_app (template_hole 0, template_var 12),
                    template_app
                     (template_app (template_hole 0, template_var 11),
                      template_app
                       (template_app (template_hole 0, template_var 10),
                        template_app
                         (template_app (template_hole 0, template_var 9),
                          template_app
                           (template_app (template_hole 0, template_var 8),
                            template_app
                             (template_app
                               (template_hole 0, template_var 7),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 6),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 5),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 4),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 3),
template_app
 (template_app (template_hole 0, template_var 2),
  template_var 1))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 12),
                 template_app
                  (template_app (template_hole 0, template_var 11),
                   template_app
                    (template_app (template_hole 0, template_var 10),
                     template_app
                      (template_app (template_hole 0, template_var 9),
                       template_app
                        (template_app (template_hole 0, template_var 8),
                         template_app
                          (template_app (template_hole 0, template_var 7),
                           template_app
                            (template_app (template_hole 0, template_var 6),
                             template_app
                              (template_app
                                (template_hole 0, template_var 5),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 4),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 3),
                                   template_app
                                    (template_app
(template_hole 0, template_var 2),
                                     template_app
(template_app (template_hole 0, template_var 13),
 template_var 1))))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0 (insert (?A OR ?Ba) ?H)))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 9),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 9),
                                 template_var 0)),
                             template_var 2)))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert (exi ?i ?A) ?H))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_app
                       (template_app (template_hole 4, template_var 5),
                        template_app
                         (template_app (template_hole 4, template_var 4),
                          template_app
                           (template_app (template_hole 4, template_var 3),
                            template_var 2))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 2)))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 7),
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 0, template_var 0),
                               template_var 8)),
                           template_var 2))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.rotate13",
     "insert ?A13.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0
                             (insert ?A12.0 ?H)))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0
                             (insert ?A13.0 ?H)))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 14),
                  template_app
                   (template_app (template_hole 0, template_var 13),
                    template_app
                     (template_app (template_hole 0, template_var 12),
                      template_app
                       (template_app (template_hole 0, template_var 11),
                        template_app
                         (template_app (template_hole 0, template_var 10),
                          template_app
                           (template_app (template_hole 0, template_var 9),
                            template_app
                             (template_app
                               (template_hole 0, template_var 8),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 7),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 6),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 5),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 4),
template_app
 (template_app (template_hole 0, template_var 3),
  template_app
   (template_app (template_hole 0, template_var 2),
    template_var 1)))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 13),
                 template_app
                  (template_app (template_hole 0, template_var 12),
                   template_app
                    (template_app (template_hole 0, template_var 11),
                     template_app
                      (template_app (template_hole 0, template_var 10),
                       template_app
                        (template_app (template_hole 0, template_var 9),
                         template_app
                          (template_app (template_hole 0, template_var 8),
                           template_app
                            (template_app (template_hole 0, template_var 7),
                             template_app
                              (template_app
                                (template_hole 0, template_var 6),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 5),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 4),
                                   template_app
                                    (template_app
(template_hole 0, template_var 3),
                                     template_app
(template_app (template_hole 0, template_var 2),
 template_app
  (template_app (template_hole 0, template_var 14),
   template_var 1)))))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert (?A OR ?Ba) ?H))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 10),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 9),
                 template_app
                  (template_app (template_hole 1, template_var 8),
                   template_app
                    (template_app (template_hole 1, template_var 7),
                     template_app
                      (template_app (template_hole 1, template_var 6),
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 10),
                                   template_var 0)),
                               template_var 2))))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.rotate14",
     "insert ?A14.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0
                             (insert ?A12.0
                               (insert ?A13.0 ?H))))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0
                             (insert ?A13.0
                               (insert ?A14.0 ?H))))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 15),
                  template_app
                   (template_app (template_hole 0, template_var 14),
                    template_app
                     (template_app (template_hole 0, template_var 13),
                      template_app
                       (template_app (template_hole 0, template_var 12),
                        template_app
                         (template_app (template_hole 0, template_var 11),
                          template_app
                           (template_app (template_hole 0, template_var 10),
                            template_app
                             (template_app
                               (template_hole 0, template_var 9),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 8),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 7),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 6),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 5),
template_app
 (template_app (template_hole 0, template_var 4),
  template_app
   (template_app (template_hole 0, template_var 3),
    template_app
     (template_app (template_hole 0, template_var 2),
      template_var 1))))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 14),
                 template_app
                  (template_app (template_hole 0, template_var 13),
                   template_app
                    (template_app (template_hole 0, template_var 12),
                     template_app
                      (template_app (template_hole 0, template_var 11),
                       template_app
                        (template_app (template_hole 0, template_var 10),
                         template_app
                          (template_app (template_hole 0, template_var 9),
                           template_app
                            (template_app (template_hole 0, template_var 8),
                             template_app
                              (template_app
                                (template_hole 0, template_var 7),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 6),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 5),
                                   template_app
                                    (template_app
(template_hole 0, template_var 4),
                                     template_app
(template_app (template_hole 0, template_var 3),
 template_app
  (template_app (template_hole 0, template_var 2),
   template_app
    (template_app (template_hole 0, template_var 15),
     template_var 1))))))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0 (insert (exi ?i ?A) ?H)))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_app
                     (template_app (template_hole 4, template_var 7),
                      template_app
                       (template_app (template_hole 4, template_var 6),
                        template_app
                         (template_app (template_hole 4, template_var 5),
                          template_app
                           (template_app (template_hole 4, template_var 4),
                            template_app
                             (template_app
                               (template_hole 4, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_app
                       (template_app (template_hole 4, template_var 5),
                        template_app
                         (template_app (template_hole 4, template_var 4),
                          template_app
                           (template_app (template_hole 4, template_var 3),
                            template_var 2))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 8),
                 template_app
                  (template_app (template_hole 4, template_var 7),
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_app
                          (template_app (template_hole 4, template_var 3),
                           template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 0),
                                 template_var 9)),
                             template_var 2)))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.rotate15",
     "insert ?A15.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0
                             (insert ?A12.0
                               (insert ?A13.0
                                 (insert ?A14.0
                                   ?H)))))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0
                             (insert ?A13.0
                               (insert ?A14.0
                                 (insert ?A15.0
                                   ?H)))))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 16),
                  template_app
                   (template_app (template_hole 0, template_var 15),
                    template_app
                     (template_app (template_hole 0, template_var 14),
                      template_app
                       (template_app (template_hole 0, template_var 13),
                        template_app
                         (template_app (template_hole 0, template_var 12),
                          template_app
                           (template_app (template_hole 0, template_var 11),
                            template_app
                             (template_app
                               (template_hole 0, template_var 10),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 9),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 8),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 7),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 6),
template_app
 (template_app (template_hole 0, template_var 5),
  template_app
   (template_app (template_hole 0, template_var 4),
    template_app
     (template_app (template_hole 0, template_var 3),
      template_app
       (template_app (template_hole 0, template_var 2),
        template_var 1)))))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 15),
                 template_app
                  (template_app (template_hole 0, template_var 14),
                   template_app
                    (template_app (template_hole 0, template_var 13),
                     template_app
                      (template_app (template_hole 0, template_var 12),
                       template_app
                        (template_app (template_hole 0, template_var 11),
                         template_app
                          (template_app (template_hole 0, template_var 10),
                           template_app
                            (template_app (template_hole 0, template_var 9),
                             template_app
                              (template_app
                                (template_hole 0, template_var 8),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 7),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 6),
                                   template_app
                                    (template_app
(template_hole 0, template_var 5),
                                     template_app
(template_app (template_hole 0, template_var 4),
 template_app
  (template_app (template_hole 0, template_var 3),
   template_app
    (template_app (template_hole 0, template_var 2),
     template_app
      (template_app (template_hole 0, template_var 16),
       template_var 1)))))))))))))))),
             template_var 0)
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert (?A OR ?Ba) ?H)))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 11),
                  template_app
                   (template_app (template_hole 1, template_var 10),
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_app
                       (template_app (template_hole 1, template_var 8),
                        template_app
                         (template_app (template_hole 1, template_var 7),
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_app
                             (template_app
                               (template_hole 1, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_var 2)))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 10),
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_app
                       (template_app (template_hole 1, template_var 8),
                        template_app
                         (template_app (template_hole 1, template_var 7),
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_app
                             (template_app
                               (template_hole 1, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_var 2)))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 10),
                 template_app
                  (template_app (template_hole 1, template_var 9),
                   template_app
                    (template_app (template_hole 1, template_var 8),
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_app
                          (template_app (template_hole 1, template_var 5),
                           template_app
                            (template_app (template_hole 1, template_var 4),
                             template_app
                              (template_app
                                (template_hole 1, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 0, template_var 11),
                                     template_var 0)),
                                 template_var 2)))))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0
                      (insert ?A5.0 (insert ?A6.0 (insert ?A7.0 ?H)))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert (exi ?i ?A) ?H))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 10),
                  template_app
                   (template_app (template_hole 4, template_var 9),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_app
                       (template_app (template_hole 4, template_var 7),
                        template_app
                         (template_app (template_hole 4, template_var 6),
                          template_app
                           (template_app (template_hole 4, template_var 5),
                            template_app
                             (template_app
                               (template_hole 4, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_app
                     (template_app (template_hole 4, template_var 7),
                      template_app
                       (template_app (template_hole 4, template_var 6),
                        template_app
                         (template_app (template_hole 4, template_var 5),
                          template_app
                           (template_app (template_hole 4, template_var 4),
                            template_app
                             (template_app
                               (template_hole 4, template_var 3),
                              template_var 2)))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 9),
                 template_app
                  (template_app (template_hole 4, template_var 8),
                   template_app
                    (template_app (template_hole 4, template_var 7),
                     template_app
                      (template_app (template_hole 4, template_var 6),
                       template_app
                        (template_app (template_hole 4, template_var 5),
                         template_app
                          (template_app (template_hole 4, template_var 4),
                           template_app
                            (template_app (template_hole 4, template_var 3),
                             template_app
                              (template_app
                                (template_hole 4,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 0),
                                   template_var 10)),
                               template_var 2))))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.P3_cong",
     "[| !!i t u v x.
            atom i \<sharp> ?tms ==>
            (?P t u v)(i::=x) =
            ?P (subst i x t) (subst i x u) (subst i x v);
         ?H \<turnstile> ?x EQ ?x'; ?H \<turnstile> ?y EQ ?y';
         ?H \<turnstile> ?z EQ ?z' |]
      ==> ?H \<turnstile> ?P ?x ?y ?z IFF ?P ?x' ?y' ?z'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 6),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_var 7, template_var 5),
                     template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_var 7, template_var 4),
                   template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.dsj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0
                        (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0
                        (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert (?A OR ?Ba) ?H))))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 12),
                  template_app
                   (template_app (template_hole 1, template_var 11),
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_app
                       (template_app (template_hole 1, template_var 9),
                        template_app
                         (template_app (template_hole 1, template_var 8),
                          template_app
                           (template_app (template_hole 1, template_var 7),
                            template_app
                             (template_app
                               (template_hole 1, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_var 2))))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 11),
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_app
                       (template_app (template_hole 1, template_var 9),
                        template_app
                         (template_app (template_hole 1, template_var 8),
                          template_app
                           (template_app (template_hole 1, template_var 7),
                            template_app
                             (template_app
                               (template_hole 1, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_var 2))))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 11),
                 template_app
                  (template_app (template_hole 1, template_var 10),
                   template_app
                    (template_app (template_hole 1, template_var 9),
                     template_app
                      (template_app (template_hole 1, template_var 8),
                       template_app
                        (template_app (template_hole 1, template_var 7),
                         template_app
                          (template_app (template_hole 1, template_var 6),
                           template_app
                            (template_app (template_hole 1, template_var 5),
                             template_app
                              (template_app
                                (template_hole 1, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 1, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 1,
                                     template_app
(template_app (template_hole 0, template_var 12), template_var 0)),
                                   template_var 2))))))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0
                      (insert ?A5.0
                        (insert ?A6.0 (insert ?A7.0 (insert ?A8.0 ?H))))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert (exi ?i ?A) ?H)))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 11),
                  template_app
                   (template_app (template_hole 4, template_var 10),
                    template_app
                     (template_app (template_hole 4, template_var 9),
                      template_app
                       (template_app (template_hole 4, template_var 8),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_app
                           (template_app (template_hole 4, template_var 6),
                            template_app
                             (template_app
                               (template_hole 4, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 3),
                                  template_var 2)))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 10),
                  template_app
                   (template_app (template_hole 4, template_var 9),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_app
                       (template_app (template_hole 4, template_var 7),
                        template_app
                         (template_app (template_hole 4, template_var 6),
                          template_app
                           (template_app (template_hole 4, template_var 5),
                            template_app
                             (template_app
                               (template_hole 4, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 3),
                                template_var 2))))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 10),
                 template_app
                  (template_app (template_hole 4, template_var 9),
                   template_app
                    (template_app (template_hole 4, template_var 8),
                     template_app
                      (template_app (template_hole 4, template_var 7),
                       template_app
                        (template_app (template_hole 4, template_var 6),
                         template_app
                          (template_app (template_hole 4, template_var 5),
                           template_app
                            (template_app (template_hole 4, template_var 4),
                             template_app
                              (template_app
                                (template_hole 4, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_app
(template_hole 0, template_var 0),
                                     template_var 11)),
                                 template_var 2)))))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.exi_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0
                        (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0
                      (insert ?A5.0
                        (insert ?A6.0
                          (insert ?A7.0
                            (insert ?A8.0 (insert ?A9.0 ?H)))))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert (exi ?i ?A) ?H))))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 12),
                  template_app
                   (template_app (template_hole 4, template_var 11),
                    template_app
                     (template_app (template_hole 4, template_var 10),
                      template_app
                       (template_app (template_hole 4, template_var 9),
                        template_app
                         (template_app (template_hole 4, template_var 8),
                          template_app
                           (template_app (template_hole 4, template_var 7),
                            template_app
                             (template_app
                               (template_hole 4, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 4, template_var 3),
                                    template_var 2))))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 11),
                  template_app
                   (template_app (template_hole 4, template_var 10),
                    template_app
                     (template_app (template_hole 4, template_var 9),
                      template_app
                       (template_app (template_hole 4, template_var 8),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_app
                           (template_app (template_hole 4, template_var 6),
                            template_app
                             (template_app
                               (template_hole 4, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 3),
                                  template_var 2)))))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 11),
                 template_app
                  (template_app (template_hole 4, template_var 10),
                   template_app
                    (template_app (template_hole 4, template_var 9),
                     template_app
                      (template_app (template_hole 4, template_var 8),
                       template_app
                        (template_app (template_hole 4, template_var 7),
                         template_app
                          (template_app (template_hole 4, template_var 6),
                           template_app
                            (template_app (template_hole 4, template_var 5),
                             template_app
                              (template_app
                                (template_hole 4, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 4, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 4,
                                     template_app
(template_app (template_hole 0, template_var 0), template_var 12)),
                                   template_var 2))))))))))),
             template_var 1)
           ))),
    ("Robinson_Arithmetic.P4_cong",
     "[| !!i t1 t2 t3 t4 x.
            atom i \<sharp> ?tms ==>
            (?P t1 t2 t3 t4)(i::=x) =
            ?P (subst i x t1) (subst i x t2) (subst i x t3) (subst i x t4);
         ?H \<turnstile> ?x1.0 EQ ?x1'; ?H \<turnstile> ?x2.0 EQ ?x2';
         ?H \<turnstile> ?x3.0 EQ ?x3'; ?H \<turnstile> ?x4.0 EQ ?x4' |]
      ==> ?H \<turnstile>
          ?P ?x1.0 ?x2.0 ?x3.0 ?x4.0 IFF ?P ?x1' ?x2' ?x3' ?x4'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 8),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_var 9, template_var 7),
                       template_var 5),
                     template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_var 9, template_var 6),
                     template_var 4),
                   template_var 2),
                 template_var 0)))
           ))),
    ("Robinson_Arithmetic.atom_name_sort",
     "sort_of (atom ?a) = Sort ''Robinson_Arithmetic.name'' []",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_hole 2),
                           template_hole 3),
                         template_hole 3),
                       template_hole 2),
                     template_hole 3),
                   template_hole 2),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 4, template_hole 2),
                               template_hole 2),
                             template_hole 2),
                           template_hole 2),
                         template_hole 3),
                       template_hole 2),
                     template_hole 2),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 4, template_hole 3),
                                 template_hole 2),
                               template_hole 3),
                             template_hole 3),
                           template_hole 3),
                         template_hole 2),
                       template_hole 2),
                     template_hole 3)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 4, template_hole 2),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 3),
                           template_hole 2),
                         template_hole 2),
                       template_hole 3)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_hole 3)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 4, template_hole 2), template_hole 2),
                                     template_hole 3),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 2),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 4, template_hole 2), template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 3)),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 4, template_hole 3), template_hole 2),
   template_hole 2),
 template_hole 2),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 3)),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 4, template_hole 2), template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 2),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 3)),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 4, template_hole 2), template_hole 3),
       template_hole 3),
     template_hole 3),
   template_hole 3),
 template_hole 3),
                                     template_hole 2),
                                   template_hole 3)),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_hole 3),
       template_hole 3),
     template_hole 2),
   template_hole 2),
 template_hole 2),
                                     template_hole 3)),
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 2),
             template_hole 3),
           template_hole 3),
         template_hole 2),
       template_hole 3),
     template_hole 2),
   template_hole 2),
 template_hole 3)),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 3),
             template_hole 2),
           template_hole 3),
         template_hole 2),
       template_hole 2),
     template_hole 2),
   template_hole 3)),
                                     template_app
(template_app
  (template_hole 5,
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 3),
               template_hole 3),
             template_hole 2),
           template_hole 3),
         template_hole 2),
       template_hole 2),
     template_hole 3)),
 template_app
  (template_app
    (template_hole 5,
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 2),
                   template_hole 3),
                 template_hole 2),
               template_hole 2),
             template_hole 3),
           template_hole 2),
         template_hole 2),
       template_hole 3)),
   template_app
    (template_app
      (template_hole 5,
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 2),
                     template_hole 3),
                   template_hole 2),
                 template_hole 3),
               template_hole 3),
             template_hole 2),
           template_hole 2),
         template_hole 3)),
     template_app
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_hole 3),
                     template_hole 2),
                   template_hole 3),
                 template_hole 2),
               template_hole 2),
             template_hole 2),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_hole 2),
                         template_hole 3),
                       template_hole 3),
                     template_hole 2),
                   template_hole 3),
                 template_hole 2),
               template_hole 2),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_hole 2),
                           template_hole 2),
                         template_hole 3),
                       template_hole 3),
                     template_hole 3),
                   template_hole 2),
                 template_hole 2),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_hole 2),
                       template_hole 3),
                     template_hole 2),
                   template_hole 3),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 4, template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_hole 2),
                         template_hole 3),
                       template_hole 2),
                     template_hole 2),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 4, template_hole 2),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 3),
                         template_hole 2),
                       template_hole 2),
                     template_hole 3)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 4, template_hole 2),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 3),
                           template_hole 2),
                         template_hole 2),
                       template_hole 3)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_hole 2),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_hole 3)),
                     template_hole 1))))))))))))))))))))))))),
         template_hole 0)))]
