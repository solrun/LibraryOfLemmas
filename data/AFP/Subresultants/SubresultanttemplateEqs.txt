   [("Subresultant.pow_int_base_1", "pow_int (1::?'a) ?a = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Subresultant.pow_int_1", "pow_int ?x 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Subresultant.pow_int_0", "pow_int ?x 0 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Subresultant.pseudo_mod_zero", "pseudo_mod 0 ?f = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Subresultant.pseudo_mod_zero", "pseudo_mod ?f 0 = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Subresultant.pseudo_mod_left_0", "pseudo_mod 0 ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Subresultant.pseudo_mod_right_0", "pseudo_mod ?x 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Subresultant.inverse_prod_list",
     "inverse (prod_list ?xs) = prod_list (map inverse ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Subresultant.exp_pow_int", "?x ^ ?n = pow_int ?x (int ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Subresultant.k",
     "??.Subresultant.F ?G1.0 ?G2.0 (Suc (??.Subresultant.k ?G1.0 ?G2.0)) =
      0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_hole 0)),
    ("Subresultant.coeff_subresultant_0_0_resultant",
     "coeff (subresultant 0 ?f ?g) 0 = resultant ?f ?g",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Subresultant.subresultant'_mat_sylvester_mat",
     "(subresultant'_mat 0 0 ?f ?g)\<^sup>T = sylvester_mat ?f ?g",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Subresultant.subresultant_resultant",
     "subresultant 0 ?f ?g = [:resultant ?f ?g:]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Subresultant.divide_prod_assoc", "?x / (?y * ?z) = ?x / ?y / ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Subresultant.pow_int_divide",
     "?a / pow_int ?x ?b = ?a * pow_int ?x (- ?b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Subresultant.pow_int_mult",
     "pow_int (?x * ?y) ?a = pow_int ?x ?a * pow_int ?y ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Subresultant.minus_1_inverse_pow",
     "?x / (- (1::?'a)) ^ ?n = ?x * (- (1::?'a)) ^ ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_var 0)))),
    ("Subresultant.snd_pseudo_mod_smult_left",
     "snd (pseudo_divmod (Polynomial.smult ?x ?p) ?q) =
      Polynomial.smult ?x (snd (pseudo_divmod ?p ?q))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Subresultant.minus_1_power_even",
     "(- (1::?'b)) ^ ?k = (if even ?k then 1::?'b else - (1::?'b))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app (template_hole 6, template_hole 5)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 0)),
           template_hole 5),
         template_app (template_hole 6, template_hole 5)))),
    ("Subresultant.subresultant_mat_dim",
     "dim_col (subresultant_mat ?j ?p ?q) =
      degree ?p - ?j + (degree ?q - ?j)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("Subresultant.subresultant_mat_dim",
     "dim_row (subresultant_mat ?j ?p ?q) =
      degree ?p - ?j + (degree ?q - ?j)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("Subresultant.resultant_swap",
     "resultant ?f ?g =
      (- (1::?'a)) ^ (degree ?f * degree ?g) * resultant ?g ?f",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_var 1)))),
    ("Subresultant.prod_list_minus_1_exp",
     "(PROD i<-?xs. (- (1::?'a)) ^ ?f i) =
      (- (1::?'a)) ^ sum_list (map ?f ?xs)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Subresultant.snd_pseudo_mod_smult_invar_left",
     "snd (pseudo_divmod_main ?lc ?q (Polynomial.smult ?x ?r) ?d ?dr ?n) =
      Polynomial.smult ?x (snd (pseudo_divmod_main ?lc ?q' ?r ?d ?dr ?n))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4)),
               template_var 3),
             template_var 2),
           template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 5),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 7),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1))))),
    ("Subresultant.subresultant_swap",
     "subresultant ?J ?f ?g =
      Polynomial.smult
       ((- (1::?'a)) ^ ((degree ?f - ?J) * (degree ?g - ?J)))
       (subresultant ?J ?g ?f)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 2)))),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Subresultant.snd_pseudo_mod_smult_invar_right",
     "snd (pseudo_divmod_main (?x * ?lc) ?q ?r (Polynomial.smult ?x ?d) ?dr
            ?n) =
      snd (pseudo_divmod_main ?lc ?q' (Polynomial.smult (?x ^ ?n) ?r) ?d ?dr
            ?n)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6)),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 3)),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 6),
                   template_var 0),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 1)),
                   template_var 4)),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("Subresultant.coeff_subresultant",
     "coeff (subresultant ?J ?F ?G) ?l =
      (if degree ?F - ?J + (degree ?G - ?J) = 0 & ?l ~= 0 then 0::?'a
       else det (subresultant'_mat ?J ?l ?F ?G))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno))]
