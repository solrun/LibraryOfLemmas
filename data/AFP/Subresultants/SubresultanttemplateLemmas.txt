   [("Subresultant.pow_int_base_1", "pow_int (1::?'a) ?a = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Subresultant.pow_int_1", "pow_int ?x 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Subresultant.pow_int_0", "pow_int ?x 0 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Subresultant.pseudo_mod_zero", "pseudo_mod 0 ?f = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Subresultant.pseudo_mod_zero", "pseudo_mod ?f 0 = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Subresultant.pseudo_mod_left_0", "pseudo_mod 0 ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Subresultant.pseudo_mod_right_0", "pseudo_mod ?x 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Subresultant.inverse_prod_list",
     "inverse (prod_list ?xs) = prod_list (map inverse ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Subresultant.exp_pow_int", "?x ^ ?n = pow_int ?x (int ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Subresultant.k_exists",
     "EX i. ??.Subresultant.F ?G1.0 ?G2.0 (Suc i) = 0",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Subresultant.k",
     "??.Subresultant.F ?G1.0 ?G2.0 (Suc (??.Subresultant.k ?G1.0 ?G2.0)) =
      0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_hole 0)),
    ("Subresultant.coeff_subresultant_0_0_resultant",
     "coeff (subresultant 0 ?f ?g) 0 = resultant ?f ?g",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Subresultant.subresultant'_mat_sylvester_mat",
     "(subresultant'_mat 0 0 ?f ?g)\<^sup>T = sylvester_mat ?f ?g",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Subresultant.subresultant_resultant",
     "subresultant 0 ?f ?g = [:resultant ?f ?g:]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Subresultant.divide_prod_assoc", "?x / (?y * ?z) = ?x / ?y / ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Subresultant.pow_int_divide",
     "?a / pow_int ?x ?b = ?a * pow_int ?x (- ?b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Subresultant.pow_int_mult",
     "pow_int (?x * ?y) ?a = pow_int ?x ?a * pow_int ?y ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Subresultant.minus_1_inverse_pow",
     "?x / (- (1::?'a)) ^ ?n = ?x * (- (1::?'a)) ^ ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_var 0)))),
    ("Subresultant.snd_pseudo_mod_smult_left",
     "snd (pseudo_divmod (Polynomial.smult ?x ?p) ?q) =
      Polynomial.smult ?x (snd (pseudo_divmod ?p ?q))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Subresultant.minus_1_power_even",
     "(- (1::?'b)) ^ ?k = (if even ?k then 1::?'b else - (1::?'b))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app (template_hole 6, template_hole 5)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 0)),
           template_hole 5),
         template_app (template_hole 6, template_hole 5)))),
    ("Subresultant.subresultant_mat_dim",
     "dim_col (subresultant_mat ?j ?p ?q) =
      degree ?p - ?j + (degree ?q - ?j)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("Subresultant.subresultant_mat_dim",
     "dim_row (subresultant_mat ?j ?p ?q) =
      degree ?p - ?j + (degree ?q - ?j)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("Subresultant.k",
     "?i < ??.Subresultant.k ?G1.0 ?G2.0 ==>
      ??.Subresultant.F ?G1.0 ?G2.0 (Suc ?i) ~= 0",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0),
               template_app (template_hole 1, template_var 2)),
             template_hole 0)
           ))),
    ("Subresultant.resultant_swap",
     "resultant ?f ?g =
      (- (1::?'a)) ^ (degree ?f * degree ?g) * resultant ?g ?f",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_var 1)))),
    ("Subresultant.prod_list_minus_1_exp",
     "(PROD i<-?xs. (- (1::?'a)) ^ ?f i) =
      (- (1::?'a)) ^ sum_list (map ?f ?xs)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Subresultant.pow_int_add",
     "?x ~= (0::?'a) ==>
      pow_int ?x (?a + ?b) = pow_int ?x ?a * pow_int ?x ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Subresultant.resultant_smult_right",
     "?c ~= (0::?'a) ==>
      resultant ?f (Polynomial.smult ?c ?g) =
      ?c ^ degree ?f * resultant ?f ?g",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Subresultant.resultant_smult_left",
     "?c ~= (0::?'a) ==>
      resultant (Polynomial.smult ?c ?f) ?g =
      ?c ^ degree ?g * resultant ?f ?g",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Subresultant.snd_pseudo_mod_smult_invar_left",
     "snd (pseudo_divmod_main ?lc ?q (Polynomial.smult ?x ?r) ?d ?dr ?n) =
      Polynomial.smult ?x (snd (pseudo_divmod_main ?lc ?q' ?r ?d ?dr ?n))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4)),
               template_var 3),
             template_var 2),
           template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 5),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 7),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1))))),
    ("Subresultant.subresultant_swap",
     "subresultant ?J ?f ?g =
      Polynomial.smult
       ((- (1::?'a)) ^ ((degree ?f - ?J) * (degree ?g - ?J)))
       (subresultant ?J ?g ?f)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 2)))),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Subresultant.for_all_Suc",
     "?P ?i ==> (ALL j>=Suc ?i. ?P j) = (ALL j>=?i. ?P j)",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Subresultant.minus_1_even_eqI",
     "even ?k = even ?l ==> (- (1::?'b)) ^ ?k = (- (1::?'b)) ^ ?l",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 1),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)))),
    ("Subresultant.prod_combine",
     "?j <= ?i ==>
      ?f ?i * prod_list (map ?f [?j..<?i]) =
      prod_list (map ?f [?j..<Suc ?i])",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_var 0, template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))))))),
    ("Subresultant.subresultant_smult_right",
     "?c ~= (0::?'a) ==>
      subresultant ?J ?f (Polynomial.smult ?c ?g) =
      Polynomial.smult (?c ^ (degree ?f - ?J)) (subresultant ?J ?f ?g)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2))),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Subresultant.subresultant_smult_left",
     "?c ~= (0::?'a) ==>
      subresultant ?J (Polynomial.smult ?c ?f) ?g =
      Polynomial.smult (?c ^ (degree ?g - ?J)) (subresultant ?J ?f ?g)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 2))),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Subresultant.snd_pseudo_mod_smult_invar_right",
     "snd (pseudo_divmod_main (?x * ?lc) ?q ?r (Polynomial.smult ?x ?d) ?dr
            ?n) =
      snd (pseudo_divmod_main ?lc ?q' (Polynomial.smult (?x ^ ?n) ?r) ?d ?dr
            ?n)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6)),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 3)),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 6),
                   template_var 0),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 1)),
                   template_var 4)),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("Subresultant.coeff_subresultant",
     "coeff (subresultant ?J ?F ?G) ?l =
      (if degree ?F - ?J + (degree ?G - ?J) = 0 & ?l ~= 0 then 0::?'a
       else det (subresultant'_mat ?J ?l ?F ?G))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_var 2)),
                               template_var 3)),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5, template_var 1)),
                             template_var 3))),
                       template_hole 4)),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_hole 4)))),
               template_hole 2),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0),
                   template_var 2),
                 template_var 1)))
           ))),
    ("Subresultant.pseudo_mod_smult_right",
     "[| ?x ~= (0::?'a); ?q ~= 0 |]
      ==> pseudo_mod ?p (Polynomial.smult ?x ?q) =
          Polynomial.smult
           (?x ^ (Suc (length (coeffs ?p)) - length (coeffs ?q)))
           (pseudo_mod ?p ?q)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 0)))),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1))))),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1))))),
    ("Subresultant.subresultant_zero_ge",
     "[| degree ?f + (degree ?g - ?J) <= ?k;
         degree ?f - ?J + (degree ?g - ?J) ~= 0 |]
      ==> coeff (subresultant ?J ?f ?g) ?k = (0::?'a)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 8, template_var 2)),
              template_var 1)),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 8, template_var 3)),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 2)),
                  template_var 1)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_var 2)),
           template_var 0),
         template_hole 0))),
    ("Subresultant.subresultant'_zero_ge",
     "[| degree ?f - ?J + (degree ?g - ?J) ~= 0;
         degree ?f + (degree ?g - ?J) <= ?k |]
      ==> det (subresultant'_mat ?J ?k ?f ?g) = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 3)),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_var 2)),
              template_hole 5)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 6, template_var 3)),
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 2)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 3),
             template_var 1)),
         template_hole 0))),
    ("Subresultant.enter_subresultant_prs",
     "[| length (coeffs ?G2.0) <= length (coeffs ?G1.0); ?G2.0 ~= 0 |]
      ==> EX F n d f k b. subresultant_prs_locale2 F n d f k b ?G1.0 ?G2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1)),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Subresultant.subresultant'_zero_lt",
     "[| ?J <= degree ?f; ?J <= degree ?g; ?J < ?k;
         ?k < degree ?f + (degree ?g - ?J) |]
      ==> det (subresultant'_mat ?J ?k ?f ?g) = (0::?'a)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 7, template_var 1)),
        template_inequation (less_than, template_var 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 7, template_var 2)),
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 7, template_var 1)),
              template_var 3)))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 2),
             template_var 1)),
         template_hole 0))),
    ("Subresultant.subresultant_zero_lt",
     "[| ?k < degree ?f + (degree ?g - ?J); ?J <= degree ?f;
         ?J <= degree ?g; ?J < ?k |]
      ==> coeff (subresultant ?J ?f ?g) ?k = (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2)),
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 6, template_var 1)),
              template_var 0))),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1)),
           template_var 3),
         template_hole 0))),
    ("Subresultant.even_sum_list",
     "(!!x. x : set ?xs ==> even (?f x) = even (?g x)) ==>
      even (sum_list (map ?f ?xs)) = even (sum_list (map ?g ?xs))",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6))),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 7, template_hole 6))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))))),
    ("Subresultant.Fb0",
     "[| ?G1.0 ~= 0; ?G2.0 ~= 0 |]
      ==> (??.Subresultant.F ?G1.0 ?G2.0 ?i = 0 -->
           ??.Subresultant.F ?G1.0 ?G2.0 (Suc ?i) = 0) &
          ??.Subresultant.b ?G1.0 ?G2.0 ?i ~= 0 &
          ??.Subresultant.h ?G1.0 ?G2.0 ?i ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 10))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 6, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_var 2),
                         template_var 1),
                       template_app (template_hole 4, template_var 0))),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_app (template_hole 2, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 1))),
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1),
                       template_var 0)),
                   template_hole 1))))
           ))),
    ("Subresultant.snd_pseudo_divmod_main_cong",
     "[| ?a1.0 = ?b1.0; ?a3.0 = ?b3.0; ?a4.0 = ?b4.0; ?a5.0 = ?b5.0;
         ?a6.0 = ?b6.0 |]
      ==> snd (pseudo_divmod_main ?a1.0 ?a2.0 ?a3.0 ?a4.0 ?a5.0 ?a6.0) =
          snd (pseudo_divmod_main ?b1.0 ?b2.0 ?b3.0 ?b4.0 ?b5.0 ?b6.0)",
     template_implication
      ([template_equation (template_var 11, template_var 10),
        template_equation (template_var 9, template_var 8),
        template_equation (template_var 7, template_var 6),
        template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 11),
                     template_var 1),
                   template_var 9),
                 template_var 7),
               template_var 5),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 10),
                     template_var 0),
                   template_var 8),
                 template_var 6),
               template_var 4),
             template_var 2))))),
    ("Subresultant.resultant_pseudo_mod_0",
     "[| pseudo_mod ?f ?g = 0; degree ?g <= degree ?f; ?f ~= 0; ?g ~= 0 |]
      ==> resultant ?f ?g =
          (if degree ?g = 0 then lead_coeff ?g ^ degree ?f else (0::?'a))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 1),
            template_var 0),
          template_hole 11),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 11)),
        template_negation
         (template_equation (template_var 0, template_hole 11))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 9, template_var 0)),
                     template_hole 3)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_app (template_hole 9, template_var 0))),
                   template_app (template_hole 9, template_var 1))),
               template_hole 0)
             )))),
    ("Subresultant.subresultant_product",
     "[| ?F = ?B * ?G; degree ?G <= degree ?F |]
      ==> subresultant ?J ?F ?G =
          (if ?J < degree ?G then 0
           else if ?J < degree ?F
                then Polynomial.smult (lead_coeff ?G ^ (degree ?F - ?J - 1))
                      ?G
                else 1)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 12, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_app (template_hole 10, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 0),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app (template_hole 10, template_var 1))),
             template_hole 6),
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app (template_hole 10, template_var 3))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app (template_hole 10, template_var 1))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 10, template_var 3)),
                           template_var 0)),
                       template_hole 1))),
                 template_var 1)),
             template_hole 0))))),
    ("Subresultant.BT_lemma_1_14",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0; degree ?H < ?J;
         ?J < degree ?G - 1 |]
      ==> subresultant ?J ?F ?G = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 8, template_var 2))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 12, template_var 4),
                        template_hole 4))),
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 12, template_var 2),
                      template_hole 4)))))
            ),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 8, template_var 2)),
            template_hole 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2),
         template_hole 4))),
    ("Subresultant.BT_lemma_1_12",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0;
         ?J < degree ?H |]
      ==> subresultant ?J ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^ ((degree ?F - ?J) * (degree ?G - ?J)) *
            lead_coeff ?G ^ (degree ?F - degree ?H))
           (subresultant ?J ?G ?H)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 17, template_var 4),
            template_app
             (template_app (template_hole 16, template_var 3),
              template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 2),
          template_app (template_hole 14, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 14, template_var 1)),
                  template_app (template_hole 14, template_var 2))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 18, template_var 1),
                    template_hole 10)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 18, template_var 4),
                        template_hole 10))),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 18, template_var 2),
                      template_hole 10)))))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 14, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 0),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 14, template_var 4)),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 14, template_var 2)),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app (template_hole 14, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 14, template_var 4)),
                   template_app (template_hole 14, template_var 1))))),
           template_app
            (template_app
              (template_app (template_hole 8, template_var 0),
               template_var 2),
             template_var 1))))),
    ("Subresultant.BT_lemma_1_15",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0;
         degree ?H < degree ?G | ?H ~= 0 |]
      ==> subresultant (degree ?G - 1) ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^ (degree ?F - degree ?G + 1) *
            lead_coeff ?G ^ (degree ?F - degree ?G + 1))
           ?H",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 18, template_var 3),
            template_app
             (template_app (template_hole 17, template_var 2),
              template_var 1)),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 1),
          template_app (template_hole 15, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 15, template_var 0)),
                  template_app (template_hole 15, template_var 1))),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 19, template_var 0),
                    template_hole 11)),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 19, template_var 3),
                        template_hole 11))),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 19, template_var 1),
                      template_hole 11)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 15, template_var 0)),
                  template_app (template_hole 15, template_var 1))),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 19, template_var 0),
                  template_hole 11)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 15, template_var 1)),
                 template_hole 7)),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 15, template_var 3)),
                         template_app (template_hole 15, template_var 1))),
                     template_hole 7))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_app (template_hole 15, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 15, template_var 3)),
                       template_app (template_hole 15, template_var 1))),
                   template_hole 7)))),
           template_var 0)))),
    ("Subresultant.BT_eq_19",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0;
         degree ?H <= ?J; ?J < degree ?G |]
      ==> subresultant ?J ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^ ((degree ?F - ?J) * (degree ?G - ?J)) *
            lead_coeff ?G ^ (degree ?F - ?J) *
            coeff ?H ?J ^ (degree ?G - ?J - 1))
           ?H",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 18, template_var 4),
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 2),
          template_app (template_hole 15, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 15, template_var 1)),
                  template_app (template_hole 15, template_var 2))),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 19, template_var 1),
                    template_hole 11)),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 19, template_var 4),
                        template_hole 11))),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 19, template_var 2),
                      template_hole 11)))))
            ),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 15, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 0),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_hole 15, template_var 4)),
                             template_var 0)),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 15, template_var 2)),
                           template_var 0)))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_app (template_hole 15, template_var 2))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 15, template_var 4)),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 15, template_var 2)),
                       template_var 0)),
                   template_hole 0)))),
           template_var 1)))),
    ("Subresultant.BT_lemma_1_15'",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0;
         ?J = degree ?G - 1; degree ?H < degree ?G | ?H ~= 0 |]
      ==> subresultant (degree ?G - 1) ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^ (degree ?F - degree ?G + 1) *
            lead_coeff ?G ^ (degree ?F - degree ?G + 1))
           ?H",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 19, template_var 4),
            template_app
             (template_app (template_hole 18, template_var 3),
              template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 16, template_var 2),
          template_app (template_hole 16, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 1)),
                  template_app (template_hole 16, template_var 2))),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 20, template_var 1),
                    template_hole 12)),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 20, template_var 4),
                        template_hole 12))),
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 20, template_var 2),
                      template_hole 12)))))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 16, template_var 2)),
            template_hole 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 1)),
                  template_app (template_hole 16, template_var 2))),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 20, template_var 1),
                  template_hole 12)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 16, template_var 2)),
                 template_hole 8)),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 16, template_var 4)),
                         template_app (template_hole 16, template_var 2))),
                     template_hole 8))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app (template_hole 16, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 16, template_var 4)),
                       template_app (template_hole 16, template_var 2))),
                   template_hole 8)))),
           template_var 1)))),
    ("Subresultant.BT_lemma_1_13",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0;
         degree ?H < degree ?G | ?H ~= 0 |]
      ==> subresultant (degree ?H) ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^
            ((degree ?F - degree ?H) * (degree ?G - degree ?H)) *
            lead_coeff ?G ^ (degree ?F - degree ?H) *
            lead_coeff ?H ^ (degree ?G - degree ?H - 1))
           ?H",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 18, template_var 3),
            template_app
             (template_app (template_hole 17, template_var 2),
              template_var 1)),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 1),
          template_app (template_hole 15, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 15, template_var 0)),
                  template_app (template_hole 15, template_var 1))),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 19, template_var 0),
                    template_hole 11)),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 19, template_var 3),
                        template_hole 11))),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 19, template_var 1),
                      template_hole 11)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 15, template_var 0)),
                  template_app (template_hole 15, template_var 1))),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 19, template_var 0),
                  template_hole 11)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 15, template_var 0)),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_hole 15, template_var 3)),
                             template_app
                              (template_hole 15, template_var 0))),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 15, template_var 1)),
                           template_app
                            (template_hole 15, template_var 0))))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_app (template_hole 15, template_var 1))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 15, template_var 3)),
                       template_app (template_hole 15, template_var 0))))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app (template_hole 15, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 15, template_var 1)),
                       template_app (template_hole 15, template_var 0))),
                   template_hole 0)))),
           template_var 0)))),
    ("Subresultant.BT_lemma_1_13'",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0; ?J = degree ?H;
         degree ?H < degree ?G | ?H ~= 0 |]
      ==> subresultant (degree ?H) ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^
            ((degree ?F - degree ?H) * (degree ?G - degree ?H)) *
            lead_coeff ?G ^ (degree ?F - degree ?H) *
            lead_coeff ?H ^ (degree ?G - degree ?H - 1))
           ?H",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 19, template_var 4),
            template_app
             (template_app (template_hole 18, template_var 3),
              template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 16, template_var 2),
          template_app (template_hole 16, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 1)),
                  template_app (template_hole 16, template_var 2))),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 20, template_var 1),
                    template_hole 12)),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 20, template_var 4),
                        template_hole 12))),
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 20, template_var 2),
                      template_hole 12)))))
            ),
        template_equation
         (template_var 0, template_app (template_hole 16, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 1)),
                  template_app (template_hole 16, template_var 2))),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 20, template_var 1),
                  template_hole 12)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 16, template_var 1)),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_hole 16, template_var 4)),
                             template_app
                              (template_hole 16, template_var 1))),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 16, template_var 2)),
                           template_app
                            (template_hole 16, template_var 1))))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_app (template_hole 16, template_var 2))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 16, template_var 4)),
                       template_app (template_hole 16, template_var 1))))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app (template_hole 16, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 16, template_var 2)),
                       template_app (template_hole 16, template_var 1))),
                   template_hole 0)))),
           template_var 1)))),
    ("Subresultant.subresultant_index_mat",
     "[| ?i < degree ?F - ?J + (degree ?G - ?J);
         ?j < degree ?F - ?J + (degree ?G - ?J) |]
      ==> subresultant_mat ?J ?F ?G $$ (?i, ?j) =
          (if ?j < degree ?G - ?J
           then if ?i = degree ?F - ?J + (degree ?G - ?J) - 1
                then monom (1::?'a) (degree ?G - ?J - 1 - ?j) * ?F
                else [:coeff_int ?F (int (degree ?F) - int ?i + int ?j):]
           else let jj = ?j - (degree ?G - ?J)
                in if ?i = degree ?F - ?J + (degree ?G - ?J) - 1
                   then monom (1::?'a) (degree ?F - ?J - 1 - jj) * ?G
                   else [:coeff_int ?G
                           (int (degree ?G) - int ?i + int jj):])",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 3)),
                template_var 2)),
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 1)),
              template_var 2))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 3)),
                template_var 2)),
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 1)),
              template_var 2)))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_var 2),
                      template_var 3),
                    template_var 1)),
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 20, template_var 0),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app (template_hole 17, template_var 1)),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_var 4),
                         template_app
                          (template_app
                            (template_hole 18,
                             template_app
                              (template_app
                                (template_hole 19,
                                 template_app
                                  (template_app
                                    (template_hole 18,
                                     template_app
(template_hole 17, template_var 3)),
                                   template_var 2)),
                               template_app
                                (template_app
                                  (template_hole 18,
                                   template_app
                                    (template_hole 17, template_var 1)),
                                 template_var 2))),
                           template_hole 10))),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 18,
                                   template_app
                                    (template_app
(template_hole 18, template_app (template_hole 17, template_var 1)),
                                     template_var 2)),
                                 template_hole 10)),
                             template_var 0))),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 17, template_var 3))),
                               template_app
                                (template_hole 2, template_var 4))),
                           template_app
                            (template_hole 2, template_var 0)))),
                     template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 18, template_var 0),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app (template_hole 17, template_var 1)),
                       template_var 2))),
                 t_empty))
             )))),
    ("Subresultant.BT_eq_18",
     "[| ?F + ?B * ?G = ?H; degree ?G <= degree ?F;
         degree ?H < degree ?G | ?H = 0 & ?F ~= 0 & ?G ~= 0 |]
      ==> subresultant ?J ?F ?G =
          Polynomial.smult
           ((- (1::?'a)) ^ ((degree ?F - ?J) * (degree ?G - ?J)))
           (det (mat (degree ?F - ?J + (degree ?G - ?J))
                  (degree ?F - ?J + (degree ?G - ?J))
                  (%(i, j).
                      if j < degree ?F - ?J
                      then if i = degree ?F - ?J + (degree ?G - ?J) - 1
                           then monom (1::?'a) (degree ?F - ?J - 1 - j) * ?G
                           else [:coeff_int ?G
                                   (int (degree ?G) - int i + int j):]
                      else if i = degree ?F - ?J + (degree ?G - ?J) - 1
                           then monom (1::?'a)
                                 (degree ?G - ?J - 1 -
                                  (j - (degree ?F - ?J))) *
                                ?H
                           else [:coeff_int ?H
                                   (int (degree ?F) - int i +
                                    int (j - (degree ?F - ?J))):])))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 28, template_var 4),
            template_app
             (template_app (template_hole 27, template_var 3),
              template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 25, template_var 2),
          template_app (template_hole 25, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app (template_hole 25, template_var 1)),
                  template_app (template_hole 25, template_var 2))),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 29, template_var 1),
                    template_hole 21)),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_hole 20,
                      template_app
                       (template_app (template_hole 29, template_var 4),
                        template_hole 21))),
                  template_app
                   (template_hole 20,
                    template_app
                     (template_app (template_hole 29, template_var 2),
                      template_hole 21)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 19, template_var 0),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_hole 17,
                 template_app (template_hole 16, template_hole 15)),
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app (template_hole 25, template_var 4)),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 25, template_var 2)),
                   template_var 0)))),
           template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 13,
                           template_app (template_hole 25, template_var 4)),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app (template_hole 25, template_var 2)),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app (template_hole 25, template_var 4)),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app (template_hole 25, template_var 2)),
                     template_var 0))),
               template_app (template_hole 9, t_empty)))))))]
