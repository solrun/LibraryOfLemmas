   [("Roy_Floyd_Warshall.finite_bound",
     "finite ?rel ==> EX n. is_bound ?rel n",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Roy_Floyd_Warshall.transitive_closure_correctness",
     "finite ?rel ==> transitive_closure ?rel = ?rel^+",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Roy_Floyd_Warshall.steps_equiv",
     "((?x, ?y) : steps ?rel ?n) = Steps ?rel ?n (?x, ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 2)))),
    ("Roy_Floyd_Warshall.steps_rel",
     "(?x, ?y) : ?rel ==> (?x, ?y) : steps ?rel ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Roy_Floyd_Warshall.steps_Clos_equiv",
     "((?x, ?y) : steps ?rel ?n) = ((?x, ?y) : Clos ?rel ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Roy_Floyd_Warshall.Clos_Suc",
     "(?x, ?y) : Clos ?rel ?n ==> (?x, ?y) : Clos ?rel (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Roy_Floyd_Warshall.Closp_Clos_eq",
     "Closp (%x xa. (x, xa) : ?rel) ?n = (%x xa. (x, xa) : Clos ?rel ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       t_empty)),
    ("Roy_Floyd_Warshall.Clos_closure",
     "is_bound ?rel ?n ==> ((?x, ?y) : Clos ?rel ?n) = ((?x, ?y) : ?rel^+)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 3))))),
    ("Roy_Floyd_Warshall.steps_Suc",
     "((?x, ?y) : steps ?rel (Suc ?n)) =
      ((?x, ?y) : steps ?rel ?n |
       (?x, ?n) : steps ?rel ?n & (?n, ?y) : steps ?rel ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("Roy_Floyd_Warshall.steps_cases",
     "[| (?x, ?y) : steps ?rel (Suc ?n);
         (?x, ?y) : steps ?rel ?n ==> ?thesis;
         [| (?x, ?n) : steps ?rel ?n; (?n, ?y) : steps ?rel ?n |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0)))]
