   [("Primrec.less_ack1", "?i < ack ?i ?j",
     template_inequation
      (less_than, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Primrec.less_ack2", "?j < ack ?i ?j",
     template_inequation
      (less_than, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Primrec.SC", "SC (?x # ?l) = Suc ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Primrec.PROJ_0", "PROJ 0 (?x # ?l) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Primrec.SC_case", "SC ?l < ack 1 (sum_list ?l)",
     template_inequation
      (less_than, template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Primrec.CONSTANT_case", "CONSTANT ?k ?l < ack ?k (sum_list ?l)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Primrec.PROJ_case", "PROJ ?i ?l < ack 0 (sum_list ?l)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Primrec.ack_less_ack_Suc2", "ack ?i ?j < ack ?i (Suc ?j)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Primrec.ack_less_ack_Suc1", "ack ?i ?j < ack (Suc ?i) ?j",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Primrec.PREC_0", "PREC ?f ?g (0 # ?l) = ?f ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_var 2, template_var 0))),
    ("Primrec.ack2_le_ack1", "ack ?i (Suc ?j) <= ack (Suc ?i) ?j",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Primrec.ack_1", "ack (Suc 0) ?j = ?j + 2",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Primrec.ack_less_mono1_aux", "ack ?i ?k < ack (Suc (?i + ?i')) ?k",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_var 1))),
    ("Primrec.COMP_1", "COMP ?g [?f] ?l = ?g [?f ?l]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 1, template_var 0)),
           template_hole 0)))),
    ("Primrec.ack_less_mono1", "?i < ?j ==> ack ?i ?k < ack ?j ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Primrec.ack_less_mono2", "?j < ?k ==> ack ?i ?j < ack ?i ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Primrec.ack_le_mono1", "?i <= ?j ==> ack ?i ?k <= ack ?j ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Primrec.ack_le_mono2", "?j <= ?k ==> ack ?i ?j <= ack ?i ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Primrec.ack_2", "ack (Suc (Suc 0)) ?j = 2 * ?j + 3",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 7, template_hole 6))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_hole 1))))),
    ("Primrec.ack_nest_bound",
     "ack ?i1.0 (ack ?i2.0 ?j) < ack (2 + (?i1.0 + ?i2.0)) ?j",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Primrec.ack_bounds_PRIMREC",
     "PRIMREC ?f ==> EX k. ALL l. ?f l < ack k (sum_list l)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Primrec.ack_add_bound",
     "ack ?i1.0 ?j + ack ?i2.0 ?j < ack (4 + (?i1.0 + ?i2.0)) ?j",
     template_inequation
      (less_than,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0)))),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))),
         template_var 1))),
    ("Primrec.PREC_Suc",
     "PREC ?f ?g (Suc ?x # ?l) = ?g (PREC ?f ?g (?x # ?l) # ?x # ?l)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Primrec.ack_add_bound2",
     "?i < ack ?k ?j ==> ?i + ?j < ack (4 + ?k) ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 2), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 1, template_hole 0)))),
               template_var 1)),
           template_var 0)))),
    ("Primrec.ack_3", "ack (Suc (Suc (Suc 0))) ?j = 2 ^ (?j + 3) - 3",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app (template_hole 8, template_hole 7)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_hole 2))))),
         template_app
          (template_hole 4,
           template_app (template_hole 0, template_hole 2))))),
    ("Primrec.COMP_map_aux",
     "ALL f:set ?fs.
         PRIMREC f & (EX kf. ALL l. f l < ack kf (sum_list l)) ==>
      EX k. ALL l. (SUM f<-?fs. f l) < ack k (sum_list l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Primrec.PREC_case",
     "[| !!l. ?f l < ack ?kf (sum_list l);
         !!l. ?g l < ack ?kg (sum_list l) |]
      ==> EX k. ALL l. PREC ?f ?g l < ack k (sum_list l)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Primrec.PREC_case_aux",
     "[| !!l. ?f l + sum_list l < ack ?kf (sum_list l);
         !!l. ?g l + sum_list l < ack ?kg (sum_list l) |]
      ==> PREC ?f ?g ?l + sum_list ?l
          < ack (Suc (?kf + ?kg)) (sum_list ?l)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 0)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1))),
           template_app (template_hole 3, template_var 0))))),
    ("Primrec.COMP_case",
     "[| ALL l. ?g l < ack ?kg (sum_list l);
         ALL f:set ?fs.
            PRIMREC f & (EX kf. ALL l. f l < ack kf (sum_list l)) |]
      ==> EX k. ALL l. COMP ?g ?fs l < ack k (sum_list l)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 1, t_empty))))]
