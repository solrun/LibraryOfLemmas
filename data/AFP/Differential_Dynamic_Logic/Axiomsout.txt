Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Decision_Procs.Dense_Linear_Order" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Decision_Procs.Approximation_Bounds")
Loading theory "HOL-Library.Cancellation" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Code_Abstract_Nat" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Library.Code_Target_Numeral_Float" via "HOL-Library.Code_Target_Numeral" via "HOL-Library.Code_Target_Nat")
### ML warning (line 98 of "~~/src/HOL/Decision_Procs/langford_data.ML"):
### Pattern is not exhaustive.
### ML warning (line 99 of "~~/src/HOL/Decision_Procs/langford_data.ML"):
### Pattern is not exhaustive.
signature LANGFORD_DATA =
  sig
    val add: entry -> attribute
    val del: attribute
    type entry
    val get: Proof.context -> simpset * (thm * entry) list
    val match: Proof.context -> cterm -> entry option
  end
structure Langford_Data: LANGFORD_DATA
### theory "HOL-Library.Code_Abstract_Nat"
### 0.071s elapsed time, 0.316s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Target_Nat" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Library.Code_Target_Numeral_Float" via "HOL-Library.Code_Target_Numeral")
signature FERRANTE_RACKOF_DATA =
  sig
    val add: entry -> attribute
    val del: attribute
    type entry
    val funs:
       thm ->
         {isolate_conv:
          morphism -> Proof.context -> cterm list -> cterm -> thm,
          simpset: morphism -> Proof.context -> simpset,
          whatis: morphism -> cterm -> cterm -> ord}
           -> declaration
    val get: Proof.context -> (thm * entry) list
    val match: Proof.context -> cterm -> entry option
    datatype ord = Eq | Ge | Gt | Le | Lt | NEq | Nox
  end
structure Ferrante_Rackoff_Data: FERRANTE_RACKOF_DATA
### theory "HOL-Combinatorics.Transposition"
### 0.132s elapsed time, 0.546s cpu time, 0.026s GC time
Loading theory "HOL-Library.Code_Target_Int" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Library.Code_Target_Numeral_Float" via "HOL-Library.Code_Target_Numeral")
### Code generator: dropping subsumed code equation
### divmod_nat ?m ?n ==
### if ?n = 0 | ?m < ?n then (0, ?m)
### else let (q, y) = divmod_nat (?m - ?n) ?n in (Suc q, y)
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit1 ?n) ==
### if ?m < ?n then (0, numeral (num.Bit1 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit1 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit1 ?n) ==
### if ?m <= ?n then (0, numeral (num.Bit0 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit0 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r + 1)
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit1 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit0 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod ?m num.One == (numeral ?m, 0)
### Code generator: dropping subsumed code equation
### Suc ?m <= ?n == ?m < ?n
### Code generator: dropping subsumed code equation
### 0 <= ?n == True
### Code generator: dropping subsumed code equation
### ?m < Suc ?n == ?m <= ?n
### Code generator: dropping subsumed code equation
### ?n < 0 == False
### Code generator: dropping subsumed code equation
### 1 == Int.Pos num.One
### Code generator: dropping subsumed code equation
### Int.Neg ?m + Int.Neg ?n == Int.Neg (?m + ?n)
### Code generator: dropping subsumed code equation
### Int.Neg ?m + Int.Pos ?n == Int.sub ?n ?m
### Code generator: dropping subsumed code equation
### Int.Pos ?m + Int.Neg ?n == Int.sub ?m ?n
### Code generator: dropping subsumed code equation
### Int.Pos ?m + Int.Pos ?n == Int.Pos (?m + ?n)
### Code generator: dropping subsumed code equation
### 0 + ?l == ?l
### Code generator: dropping subsumed code equation
### ?k + 0 == ?k
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### Code generator: dropping subsumed code equation
### - Int.Neg ?m == Int.Pos ?m
### Code generator: dropping subsumed code equation
### - Int.Pos ?m == Int.Neg ?m
### Code generator: dropping subsumed code equation
### - 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m - Int.Neg ?n == Int.sub ?n ?m
### Code generator: dropping subsumed code equation
### Int.Neg ?m - Int.Pos ?n == Int.Neg (?m + ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m - Int.Neg ?n == Int.Pos (?m + ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m - Int.Pos ?n == Int.sub ?m ?n
### Code generator: dropping subsumed code equation
### 0 - ?l == - ?l
### Code generator: dropping subsumed code equation
### ?k - 0 == ?k
### Code generator: dropping subsumed code equation
### Int.dup (Int.Neg ?n) == Int.Neg (num.Bit0 ?n)
### Code generator: dropping subsumed code equation
### Int.dup (Int.Pos ?n) == Int.Pos (num.Bit0 ?n)
### Code generator: dropping subsumed code equation
### Int.dup 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m * Int.Neg ?n == Int.Pos (?m * ?n)
### Code generator: dropping subsumed code equation
### Int.Neg ?m * Int.Pos ?n == Int.Neg (?m * ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m * Int.Neg ?n == Int.Neg (?m * ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m * Int.Pos ?n == Int.Pos (?m * ?n)
### Code generator: dropping subsumed code equation
### 0 * ?l == 0
### Code generator: dropping subsumed code equation
### ?k * 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m div Int.Neg ?n == fst (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m div Int.Neg ?n == - Divides.adjust_div (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Neg ?m div Int.Pos ?n == - Divides.adjust_div (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m div Int.Pos ?n == fst (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### ?k div Int.Neg num.One == - ?k
### Code generator: dropping subsumed code equation
### ?k div Int.Pos num.One == ?k
### Code generator: dropping subsumed code equation
### 0 div ?k == 0
### Code generator: dropping subsumed code equation
### ?k div 0 == 0
### Code generator: dropping subsumed code equation
### Int.Neg ?m mod Int.Neg ?n == - snd (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### Int.Pos ?m mod Int.Neg ?n ==
### - Divides.adjust_mod (Int.Pos ?n) (snd (divmod ?m ?n))
### Code generator: dropping subsumed code equation
### Int.Neg ?m mod Int.Pos ?n ==
### Divides.adjust_mod (Int.Pos ?n) (snd (divmod ?m ?n))
### Code generator: dropping subsumed code equation
### Int.Pos ?m mod Int.Pos ?n == snd (divmod ?m ?n)
### Code generator: dropping subsumed code equation
### ?k mod Int.Neg num.One == 0
### Code generator: dropping subsumed code equation
### ?k mod Int.Pos num.One == 0
### Code generator: dropping subsumed code equation
### 0 mod ?k == 0
### Code generator: dropping subsumed code equation
### ?k mod 0 == ?k
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit1 ?n) ==
### if ?m < ?n then (0, numeral (num.Bit1 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit1 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit1 ?n) ==
### if ?m <= ?n then (0, numeral (num.Bit0 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit0 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r + 1)
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit1 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit0 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod ?m num.One == (numeral ?m, 0)
### Code generator: dropping subsumed code equation
### equal_class.equal ?k ?k == True
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Neg ?k) (Int.Neg ?l) == equal_class.equal ?k ?l
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Neg ?k) (Int.Pos ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Neg ?k) 0 == False
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Pos ?k) (Int.Neg ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Pos ?k) (Int.Pos ?l) == equal_class.equal ?k ?l
### Code generator: dropping subsumed code equation
### equal_class.equal (Int.Pos ?k) 0 == False
### Code generator: dropping subsumed code equation
### equal_class.equal 0 (Int.Neg ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal 0 (Int.Pos ?l) == False
### Code generator: dropping subsumed code equation
### equal_class.equal 0 0 == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k <= Int.Neg ?l == ?l <= ?k
### Code generator: dropping subsumed code equation
### Int.Neg ?k <= Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k <= 0 == True
### Code generator: dropping subsumed code equation
### Int.Pos ?k <= Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### Int.Pos ?k <= Int.Pos ?l == ?k <= ?l
### Code generator: dropping subsumed code equation
### Int.Pos ?k <= 0 == False
### Code generator: dropping subsumed code equation
### 0 <= Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### 0 <= Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### 0 <= 0 == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k < Int.Neg ?l == ?l < ?k
### Code generator: dropping subsumed code equation
### Int.Neg ?k < Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### Int.Neg ?k < 0 == True
### Code generator: dropping subsumed code equation
### Int.Pos ?k < Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### Int.Pos ?k < Int.Pos ?l == ?k < ?l
### Code generator: dropping subsumed code equation
### Int.Pos ?k < 0 == False
### Code generator: dropping subsumed code equation
### 0 < Int.Neg ?l == False
### Code generator: dropping subsumed code equation
### 0 < Int.Pos ?l == True
### Code generator: dropping subsumed code equation
### 0 < 0 == False
### Code generator: dropping subsumed code equation
### of_nat ?n == semiring_1_class.of_nat_aux (%i. i + (1::?'a)) ?n (0::?'a)
### theory "HOL-Library.Code_Target_Nat"
### 0.174s elapsed time, 0.679s cpu time, 0.026s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations" via "HOL-Library.Disjoint_Sets")
### Code generator: dropping subsumed code equation
### of_int (Int.Pos ?k) == numeral ?k
### Code generator: dropping subsumed code equation
### of_int 0 == 0::?'a
### Code generator: dropping subsumed code equation
### of_int (Int.Neg ?k) == - numeral ?k
### Code generator: dropping subsumed code equation
### nat (Int.Pos ?k) == nat_of_num ?k
### Code generator: dropping subsumed code equation
### nat 0 == 0
### Code generator: dropping subsumed code equation
### nat (Int.Neg ?k) == 0
### theory "HOL-Library.Code_Target_Int"
### 0.131s elapsed time, 0.527s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Target_Numeral" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Library.Code_Target_Numeral_Float")
### theory "HOL-Library.Code_Target_Numeral"
### 0.109s elapsed time, 0.426s cpu time, 0.031s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.104s elapsed time, 0.406s cpu time, 0.041s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.500s elapsed time, 1.996s cpu time, 0.097s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.FuncSet"
### 0.395s elapsed time, 1.550s cpu time, 0.170s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Library.Infinite_Set"
### 0.407s elapsed time, 1.476s cpu time, 0.521s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### ML warning (file "~~/src/HOL/Decision_Procs/langford.ML"):
### Matches are not exhaustive.
### ML warning (line 24 of "~~/src/HOL/Decision_Procs/langford.ML"):
### Pattern is not exhaustive.
### ML warning (line 90 of "~~/src/HOL/Decision_Procs/langford.ML"):
### Value identifier (q) has not been referenced.
### ML warning (line 90 of "~~/src/HOL/Decision_Procs/langford.ML"):
### Value identifier (p) has not been referenced.
### ML warning (file "~~/src/HOL/Decision_Procs/langford.ML"):
### Matches are not exhaustive.
### ML warning (line 100 of "~~/src/HOL/Decision_Procs/langford.ML"):
### Matches are not exhaustive.
### ML warning (line 136 of "~~/src/HOL/Decision_Procs/langford.ML"):
### Pattern is not exhaustive.
signature LANGFORD =
  sig
    val dlo_conv: Proof.context -> cterm -> thm
    val dlo_tac: Proof.context -> int -> tactic
  end
structure Langford: LANGFORD
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale linorder_stupid_syntax
  fixes less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
  assumes "linorder_stupid_syntax less_eq less"
### theory "HOL-Library.Disjoint_Sets"
### 0.405s elapsed time, 1.470s cpu time, 0.494s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
Found termination order: "size_list size <*mlex*> {}"
locale linorder_no_ub
  fixes less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
  assumes "linorder_no_ub (\<sqsubseteq>) (\<sqsubset>)"
### theory "HOL-Library.Nat_Bijection"
### 0.311s elapsed time, 1.219s cpu time, 0.149s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs")
locale linorder_no_lb
  fixes less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
  assumes "linorder_no_lb (\<sqsubseteq>) (\<sqsubset>)"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.377s elapsed time, 1.485s cpu time, 0.197s GC time
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type" via "HOL-Library.Cardinality")
locale constr_dense_linorder
  fixes less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
    and between :: "'a => 'a => 'a"
  assumes "constr_dense_linorder (\<sqsubseteq>) (\<sqsubset>) between"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
consts
  snth :: "'a stream => nat => 'a"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### ML warning (line 33 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Value identifier (simpset) has not been referenced.
### ML warning (line 32 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Value identifier (atoms) has not been referenced.
### ML warning (line 31 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Value identifier (entr) has not been referenced.
### ML warning (line 35 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Value identifier (vs) has not been referenced.
### ML warning (line 35 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Matches are not exhaustive.
### ML warning (line 63 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Matches are not exhaustive.
### ML warning (line 90 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (file "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Matches are not exhaustive.
### ML warning (line 113 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 115 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 117 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 119 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 121 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 149 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Matches are not exhaustive.
### ML warning (line 147 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 149 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Matches are not exhaustive.
### ML warning (line 147 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Decision_Procs/ferrante_rackoff.ML"):
### Pattern is not exhaustive.
signature FERRANTE_RACKOFF =
  sig
    val dlo_conv: Proof.context -> conv
    val dlo_tac: Proof.context -> int -> tactic
  end
structure FerranteRackoff: FERRANTE_RACKOFF
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Partially applied constant "Orderings.ord_class.less_eq" on left hand side of equation, in theorem:
### linorder.Min (<=) (set (?x # ?xs)) == fold (ord.min (<=)) ?xs ?x
### Partially applied constant "Orderings.ord_class.less_eq" on left hand side of equation, in theorem:
### linorder.Max (<=) (set (?x # ?xs)) == fold (ord.max (<=)) ?xs ?x
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### theory "HOL-Library.Phantom_Type"
### 0.722s elapsed time, 2.693s cpu time, 0.779s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type")
### theory "HOL-Decision_Procs.Dense_Linear_Order"
### 2.162s elapsed time, 8.243s cpu time, 1.666s GC time
Loading theory "HOL-Library.Product_Plus" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space" via "HOL-Analysis.Product_Vector")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
instantiation
  prod :: (zero, zero) zero
  zero_prod == zero_class.zero :: 'a * 'b
instantiation
  prod :: (plus, plus) plus
  plus_prod == plus :: 'a * 'b => 'a * 'b => 'a * 'b
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
instantiation
  prod :: (minus, minus) minus
  minus_prod == minus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (uminus, uminus) uminus
  uminus_prod == uminus :: 'a * 'b => 'a * 'b
### Additional type variable(s) in locale specification "CARD_1": 'a
consts
  mset :: "'a list => 'a multiset"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Product_Plus"
### 0.104s elapsed time, 0.433s cpu time, 0.077s GC time
Loading theory "HOL-Library.Product_Order" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Borel_Space" via "HOL-Analysis.Ordered_Euclidean_Space")
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
### theory "HOL-Library.Stream"
### 1.077s elapsed time, 4.111s cpu time, 0.976s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  prod :: (inf, inf) inf
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  prod :: (sup, sup) sup
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
instantiation
  prod :: (Inf, Inf) Inf
  Inf_prod == Inf :: ('a * 'b) set => 'a * 'b
instantiation
  prod :: (Sup, Sup) Sup
  Sup_prod == Sup :: ('a * 'b) set => 'a * 'b
### Additional type variable(s) in locale specification "card2": 'a
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
### theory "HOL-Library.Product_Order"
### 0.184s elapsed time, 0.729s cpu time, 0.096s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
### theory "HOL-Library.Set_Algebras"
### 0.221s elapsed time, 0.883s cpu time, 0.096s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Countable_Set")
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
### theory "HOL-Library.Cardinality"
### 1.053s elapsed time, 3.966s cpu time, 1.272s GC time
Loading theory "HOL-Library.Code_Cardinality" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "Ordinary_Differential_Equations.ODE_Auxiliarities" via "Affine_Arithmetic.Executable_Euclidean_Space")
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
### Code generator: dropping subsumed code equation
### List.coset [] <= set [] == False
### theory "HOL-Library.Code_Cardinality"
### 0.138s elapsed time, 0.542s cpu time, 0.076s GC time
Loading theory "HOL-Library.Numeral_Type" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
instantiation
  num1 :: CARD_1
  Proving monotonicity ...
instantiation
  num1 :: {comm_monoid_mult,numeral,comm_ring}
  uminus_num1 == uminus :: num1 => num1
  zero_num1 == zero_class.zero :: num1
  minus_num1 == minus :: num1 => num1 => num1
  plus_num1 == plus :: num1 => num1 => num1
  one_num1 == one_class.one :: num1
  times_num1 == times :: num1 => num1 => num1
instantiation
  num1 :: linorder
  less_eq_num1 == less_eq :: num1 => num1 => bool
  less_num1 == less :: num1 => num1 => bool
Found termination order: "size <*mlex*> {}"
locale mod_type
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_type n Rep Abs"
locale mod_ring
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_ring n Rep Abs"
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) {minus,one,plus,times,uminus,zero}
  bit1 :: (finite) {minus,one,plus,times,uminus,zero}
  zero_bit0 == zero_class.zero :: 'a bit0
  uminus_bit0 == uminus :: 'a bit0 => 'a bit0
  times_bit0 == times :: 'a bit0 => 'a bit0 => 'a bit0
  plus_bit0 == plus :: 'a bit0 => 'a bit0 => 'a bit0
  one_bit0 == one_class.one :: 'a bit0
  minus_bit0 == minus :: 'a bit0 => 'a bit0 => 'a bit0
  zero_bit1 == zero_class.zero :: 'a bit1
  uminus_bit1 == uminus :: 'a bit1 => 'a bit1
  times_bit1 == times :: 'a bit1 => 'a bit1 => 'a bit1
  plus_bit1 == plus :: 'a bit1 => 'a bit1 => 'a bit1
  one_bit1 == one_class.one :: 'a bit1
  minus_bit1 == minus :: 'a bit1 => 'a bit1 => 'a bit1
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
instantiation
  bit0 :: (finite) linorder
  bit1 :: (finite) linorder
  less_eq_bit0 == less_eq :: 'a bit0 => 'a bit0 => bool
  less_bit0 == less :: 'a bit0 => 'a bit0 => bool
  less_eq_bit1 == less_eq :: 'a bit1 => 'a bit1 => bool
  less_bit1 == less :: 'a bit1 => 'a bit1 => bool
Found termination order: "size <*mlex*> {}"
instantiation
  num0 :: equal
  equal_num0 == equal_class.equal :: num0 => num0 => bool
Found termination order: "size <*mlex*> {}"
instantiation
  num1 :: equal
  equal_num1 == equal_class.equal :: num1 => num1 => bool
instantiation
  num1 :: enum
  enum_num1 == enum_class.enum :: num1 list
  enum_all_num1 == enum_class.enum_all :: (num1 => bool) => bool
  enum_ex_num1 == enum_class.enum_ex :: (num1 => bool) => bool
instantiation
  num0 :: card_UNIV
  num1 :: card_UNIV
  card_UNIV_num0 == card_UNIV_class.card_UNIV :: (num0, nat) phantom
  finite_UNIV_num0 == finite_UNIV :: (num0, bool) phantom
  card_UNIV_num1 == card_UNIV_class.card_UNIV :: (num1, nat) phantom
  finite_UNIV_num1 == finite_UNIV :: (num1, bool) phantom
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  bit0 :: (finite) equal
  bit1 :: (finite) equal
  equal_bit0 == equal_class.equal :: 'a bit0 => 'a bit0 => bool
  equal_bit1 == equal_class.equal :: 'a bit1 => 'a bit1 => bool
instantiation
  bit0 :: (finite) enum
  enum_bit0 == enum_class.enum :: 'a bit0 list
  enum_all_bit0 == enum_class.enum_all :: ('a bit0 => bool) => bool
  enum_ex_bit0 == enum_class.enum_ex :: ('a bit0 => bool) => bool
Found termination order: "size <*mlex*> {}"
instantiation
  bit1 :: (finite) enum
  enum_bit1 == enum_class.enum :: 'a bit1 list
  enum_all_bit1 == enum_class.enum_all :: ('a bit1 => bool) => bool
  enum_ex_bit1 == enum_class.enum_ex :: ('a bit1 => bool) => bool
### theory "HOL-Library.Countable"
### 1.561s elapsed time, 5.943s cpu time, 1.442s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
instantiation
  bit0 :: (finite) finite_UNIV
  bit1 :: (finite) finite_UNIV
  finite_UNIV_bit0 == finite_UNIV :: ('a bit0, bool) phantom
  finite_UNIV_bit1 == finite_UNIV :: ('a bit1, bool) phantom
instantiation
  bit0 :: ({card_UNIV,finite}) card_UNIV
  bit1 :: ({card_UNIV,finite}) card_UNIV
  card_UNIV_bit0 == card_UNIV_class.card_UNIV :: ('a bit0, nat) phantom
  card_UNIV_bit1 == card_UNIV_class.card_UNIV :: ('a bit1, nat) phantom
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Numeral_Type"
### 0.773s elapsed time, 3.047s cpu time, 0.267s GC time
Loading theory "HOL-Analysis.Metric_Arith" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Set"
### 0.501s elapsed time, 1.979s cpu time, 0.178s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
signature METRIC_ARITH =
  sig
    val argo_timeout: real Config.T
    val metric_arith_tac: Proof.context -> int -> tactic
    val trace: bool Config.T
  end
structure Metric_Arith: METRIC_ARITH
### theory "HOL-Analysis.Metric_Arith"
### 0.679s elapsed time, 2.688s cpu time, 0.250s GC time
Loading theory "HOL-Library.Set_Idioms" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
### theory "HOL-Library.Multiset"
### 4.369s elapsed time, 16.745s cpu time, 3.513s GC time
Loading theory "HOL-Computational_Algebra.Factorial_Ring" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Arcwise_Connected" via "HOL-Computational_Algebra.Primes" via "HOL-Computational_Algebra.Euclidean_Algorithm")
### theory "HOL-Library.Tree"
### 2.474s elapsed time, 9.539s cpu time, 1.771s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants")
### theory "HOL-Library.Set_Idioms"
### 0.230s elapsed time, 0.914s cpu time, 0.079s GC time
Loading theory "Draft.Templates" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs")
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.101s elapsed time, 0.394s cpu time, 0.125s GC time
Loading theory "Draft.Ids" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms")
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
### theory "Draft.Ids"
### 0.077s elapsed time, 0.304s cpu time, 0.000s GC time
Loading theory "Draft.Syntax" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms")
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 1.010s elapsed time, 3.987s cpu time, 0.473s GC time
Loading theory "HOL-Analysis.Abstract_Topology" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
class normalization_semidom = algebraic_semidom +
  semidom_divide_unit_factor +
  fixes normalize :: "'a => 'a"
  assumes
    "unit_factor_mult_normalize": "!!a. unit_factor a * normalize a = a"
    and "normalize_0": "normalize (0::'a) = (0::'a)"
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 2.297s elapsed time, 9.084s cpu time, 0.952s GC time
Loading theory "HOL-Analysis.Continuum_Not_Denumerable" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Homeomorphism" via "HOL-Analysis.Homotopy")
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
### theory "HOL-Analysis.Continuum_Not_Denumerable"
### 0.286s elapsed time, 1.132s cpu time, 0.100s GC time
Loading theory "HOL-Analysis.Inner_Product" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
class real_inner = dist_norm + real_vector + sgn_div_norm +
  uniformity_dist + open_uniformity +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. inner x y = inner y x"
    and "inner_add_left": "!!x y z. inner (x + y) z = inner x z + inner y z"
    and
    "inner_scaleR_left": "!!r x y. inner (r *\<^sub>R x) y = r * inner x y"
    and "inner_ge_zero": "!!x. 0 <= inner x x"
    and "inner_eq_zero_iff": "!!x. (inner x x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (inner x x)"
instantiation
  real :: real_inner
  inner_real == inner :: real => real => real
instantiation
  complex :: real_inner
  inner_complex == inner :: complex => complex => real
bundle inner_syntax
bundle no_inner_syntax
### theory "HOL-Analysis.Inner_Product"
### 1.082s elapsed time, 4.283s cpu time, 0.440s GC time
Loading theory "HOL-Analysis.L2_Norm" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
### theory "HOL-Analysis.L2_Norm"
### 0.092s elapsed time, 0.365s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Operator_Norm" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Proofs for inductive predicate(s) "generate_topology_on"
  Proving monotonicity ...
### theory "HOL-Analysis.Operator_Norm"
### 0.140s elapsed time, 0.545s cpu time, 0.135s GC time
Loading theory "HOL-Analysis.Poly_Roots" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Poly_Roots"
### 0.107s elapsed time, 0.420s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Product_Vector" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
### theory "HOL-Analysis.Abstract_Topology"
### 2.654s elapsed time, 10.510s cpu time, 1.132s GC time
Loading theory "HOL-Analysis.Abstract_Limits" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Abstract_Limits"
### 0.216s elapsed time, 0.864s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.AxiomsMoreTemplates" via "Draft.ExtrEqs")
locale module_prod
  fixes s1 :: "'a => 'b => 'b"
    and s2 :: "'a => 'c => 'c"
  assumes "module_prod s1 s2"
locale vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
  assumes "vector_space_prod (*a) (*b)"
### Cannot skip proof of schematic goal statement
class factorial_semiring_gcd = factorial_semiring + Gcd +
  assumes "gcd_eq_gcd_factorial": "!!a b. gcd a b = gcd_factorial a b"
    and "lcm_eq_lcm_factorial": "!!a b. lcm a b = lcm_factorial a b"
    and "Gcd_eq_Gcd_factorial": "!!A. Gcd A = Gcd_factorial A"
    and "Lcm_eq_Lcm_factorial": "!!A. Lcm A = Lcm_factorial A"
instantiation
  prod :: (real_vector, real_vector) real_vector
  scaleR_prod == scaleR :: real => 'a * 'b => 'a * 'b
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (metric_space, metric_space) dist
  dist_prod == dist :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (uniformity, uniformity) uniformity
  uniformity_prod == uniformity :: (('a * 'b) * 'a * 'b) filter
instantiation
  prod :: (uniform_space, uniform_space) uniform_space
instantiation
  prod :: (metric_space, metric_space) uniformity_dist
instantiation
  prod :: (metric_space, metric_space) metric_space
instantiation
  prod :: (real_normed_vector, real_normed_vector) real_normed_vector
  sgn_prod == sgn :: 'a * 'b => 'a * 'b
  norm_prod == norm :: 'a * 'b => real
locale finite_dimensional_vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and B1 :: "'b set"
    and B2 :: "'c set"
  assumes "finite_dimensional_vector_space_prod (*a) (*b) B1 B2"
### theory "HOL-Analysis.Product_Vector"
### 0.999s elapsed time, 3.952s cpu time, 0.466s GC time
Loading theory "HOL-Analysis.Elementary_Topology" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Library.BigO"
### 0.838s elapsed time, 3.310s cpu time, 0.338s GC time
Loading theory "HOL-Analysis.Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
class topological_space = open +
  assumes "open_UNIV": "open UNIV"
  assumes "open_Int": "!!S T. [| open S; open T |] ==> open (S Int T)"
  assumes "open_Union": "!!K. Ball K open ==> open (\<Union> K)"
locale countable_basis
  fixes p :: "'a set => bool"
    and B :: "'a set set"
  assumes "countable_basis p B"
class second_countable_topology = topological_space +
  assumes
    "ex_countable_subbasis":
      "EX B. countable B & open = generate_topology B"
class euclidean_space = real_inner +
  fixes Basis :: "'a set"
  assumes "nonempty_Basis": "Basis ~= {}"
  assumes "finite_Basis": "finite Basis"
  assumes
    "inner_Basis":
      "!!u v.
          [| u : Basis; v : Basis |]
          ==> inner u v = (if u = v then 1 else 0)"
  assumes
    "euclidean_all_zero_iff":
      "!!x. (ALL u:Basis. inner x u = 0) = (x = (0::'a))"
instantiation
  real :: euclidean_space
  Basis_real == Basis :: real set
instantiation
  complex :: euclidean_space
  Basis_complex == Basis :: complex set
instantiation
  prod :: (real_inner, real_inner) real_inner
  inner_prod == inner :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (euclidean_space, euclidean_space) euclidean_space
  Basis_prod == Basis :: ('a * 'b) set
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Euclidean_Space"
### 1.754s elapsed time, 6.919s cpu time, 0.836s GC time
Loading theory "HOL-Analysis.Finite_Cartesian_Product" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space")
### theory "HOL-Analysis.Elementary_Topology"
### 2.032s elapsed time, 8.023s cpu time, 0.944s GC time
Loading theory "HOL-Analysis.Linear_Algebra" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine")
### theory "HOL-Computational_Algebra.Factorial_Ring"
### 6.964s elapsed time, 27.531s cpu time, 2.993s GC time
Loading theory "HOL-Computational_Algebra.Euclidean_Algorithm" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Arcwise_Connected" via "HOL-Computational_Algebra.Primes")
class real_inner = real_normed_vector +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. x \<bullet> y = y \<bullet> x"
    and
    "inner_add_left":
      "!!x y z. (x + y) \<bullet> z = x \<bullet> z + y \<bullet> z"
    and
    "inner_scaleR_left":
      "!!r x y. r *\<^sub>R x \<bullet> y = r * (x \<bullet> y)"
    and "inner_ge_zero": "!!x. 0 <= x \<bullet> x"
    and "inner_eq_zero_iff": "!!x. (x \<bullet> x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (x \<bullet> x)"
consts
  sizeF :: "('sf, 'sc, 'sz) formula => nat"
  sizeP :: "('sf, 'sc, 'sz) hp => nat"
bundle vec_syntax
bundle no_vec_syntax
instantiation
  vec :: (zero, finite) zero
  zero_vec == zero_class.zero :: ('a, 'b) vec
instantiation
  vec :: (plus, finite) plus
  plus_vec == plus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (minus, finite) minus
  minus_vec == minus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (uminus, finite) uminus
  uminus_vec == uminus :: ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (times, finite) times
  times_vec == times :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (one, finite) one
  one_vec == one_class.one :: ('a, 'b) vec
instantiation
  vec :: (ord, finite) ord
  less_eq_vec == less_eq :: ('a, 'b) vec => ('a, 'b) vec => bool
  less_vec == less :: ('a, 'b) vec => ('a, 'b) vec => bool
instantiation
  vec :: (real_vector, finite) real_vector
  scaleR_vec == scaleR :: real => ('a, 'b) vec => ('a, 'b) vec
Found termination order: "{}"
instantiation
  vec :: (topological_space, finite) topological_space
  open_vec == open :: ('a, 'b) vec set => bool
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
instantiation
  vec :: (metric_space, finite) dist
  dist_vec == dist :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (metric_space, finite) uniformity_dist
  uniformity_vec == uniformity :: (('a, 'b) vec * ('a, 'b) vec) filter
Found termination order: "{}"
instantiation
  vec :: (metric_space, finite) metric_space
instantiation
  vec :: (real_normed_vector, finite) real_normed_vector
  sgn_vec == sgn :: ('a, 'b) vec => ('a, 'b) vec
  norm_vec == norm :: ('a, 'b) vec => real
### theory "HOL-Analysis.Linear_Algebra"
### 1.088s elapsed time, 4.287s cpu time, 0.560s GC time
Loading theory "HOL-Analysis.Affine" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex")
Proofs for inductive predicate(s) "dfree"
  Proving monotonicity ...
instantiation
  vec :: (real_inner, finite) real_inner
  inner_vec == inner :: ('a, 'b) vec => ('a, 'b) vec => real
Proofs for inductive predicate(s) "dsafe"
  Proving monotonicity ...
instantiation
  vec :: (euclidean_space, finite) euclidean_space
  Basis_vec == Basis :: ('a, 'b) vec set
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "osafe"
  Proving monotonicity ...
Proofs for inductive predicate(s) "hpfree", "ffree"
  Proving monotonicity ...
Proofs for inductive predicate(s) "hpsafe", "fsafe"
  Proving monotonicity ...
### theory "HOL-Analysis.Finite_Cartesian_Product"
### 1.808s elapsed time, 7.115s cpu time, 0.988s GC time
Loading theory "HOL-Analysis.Cartesian_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants")
### theory "HOL-Analysis.Affine"
### 0.526s elapsed time, 2.061s cpu time, 0.321s GC time
Loading theory "HOL-Analysis.Convex" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### Ambiguous input (line 328 of "$AFP/Differential_Dynamic_Logic/Syntax.thy") produces 4 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>Pure.all_binder" ("_position" x)
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" P)
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" x)))))
###   ("\<^const>Pure.imp"
###     ("\<^const>Pure.all_binder" ("_idts" ("_position" x1) ("_position" x2))
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" P)
###           ("\<^const>Syntax.hp.Assign" ("_position" x1) ("_position" x2)))))
###     ("\<^const>Pure.imp"
###       ("\<^const>Pure.all_binder"
###         ("_idts" ("_position" x1) ("_position" x2))
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" P)
###             ("_applC" ("_position" DiffAssign)
###               ("_cargs" ("_position" x1) ("_position" x2))))))
###       ("\<^const>Pure.imp"
###         ("\<^const>Pure.all_binder" ("_position" x)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" P)
###               ("_applC" ("\<^const>Syntax.hp.Test") ("_position" x)))))
###         ("\<^const>Pure.imp"
###           ("\<^const>Pure.all_binder"
###             ("_idts" ("_position" x1) ("_position" x2))
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" P)
###                 ("_applC" ("_position" EvolveODE)
###                   ("_cargs" ("_position" x1) ("_position" x2))))))
###           ("\<^const>Pure.imp"
###             ("\<^const>Pure.all_binder"
###               ("_idts" ("_position" x1) ("_position" x2))
###               ("\<^const>Pure.imp"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" x1)))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x2)))
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P)
###                       ("\<^const>Syntax.hp.Choice" ("_position" x1)
###                         ("_position" x2)))))))
###             ("\<^const>Pure.imp"
###               ("\<^const>Pure.all_binder"
###                 ("_idts" ("_position" x1) ("_position" x2))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x1)))
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x2)))
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P)
###                         ("\<^const>Syntax.hp.Sequence" ("_position" x1)
###                           ("_position" x2)))))))
###               ("\<^const>Pure.imp"
###                 ("\<^const>Pure.all_binder" ("_position" x)
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x)))
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Syntax.hp.Loop"
###                         ("_applC" ("_position" P) ("_position" x))))))
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" hp)))))))))))
### ("\<^const>Pure.imp"
###   ("\<^const>Pure.all_binder" ("_position" x)
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" P)
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" x)))))
###   ("\<^const>Pure.imp"
###     ("\<^const>Pure.all_binder" ("_idts" ("_position" x1) ("_position" x2))
###       ("\<^const>HOL.Trueprop"
###         ("_Update" ("_position" P)
###           ("_updbind" ("_position" x1) ("_position" x2)))))
###     ("\<^const>Pure.imp"
###       ("\<^const>Pure.all_binder"
###         ("_idts" ("_position" x1) ("_position" x2))
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" P)
###             ("_applC" ("_position" DiffAssign)
###               ("_cargs" ("_position" x1) ("_position" x2))))))
###       ("\<^const>Pure.imp"
###         ("\<^const>Pure.all_binder" ("_position" x)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" P)
###               ("_applC" ("\<^const>Syntax.hp.Test") ("_position" x)))))
###         ("\<^const>Pure.imp"
###           ("\<^const>Pure.all_binder"
###             ("_idts" ("_position" x1) ("_position" x2))
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" P)
###                 ("_applC" ("_position" EvolveODE)
###                   ("_cargs" ("_position" x1) ("_position" x2))))))
###           ("\<^const>Pure.imp"
###             ("\<^const>Pure.all_binder"
###               ("_idts" ("_position" x1) ("_position" x2))
###               ("\<^const>Pure.imp"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" x1)))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x2)))
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P)
###                       ("\<^const>Syntax.hp.Choice" ("_position" x1)
###                         ("_position" x2)))))))
###             ("\<^const>Pure.imp"
###               ("\<^const>Pure.all_binder"
###                 ("_idts" ("_position" x1) ("_position" x2))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x1)))
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x2)))
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P)
###                         ("\<^const>Syntax.hp.Sequence" ("_position" x1)
###                           ("_position" x2)))))))
###               ("\<^const>Pure.imp"
###                 ("\<^const>Pure.all_binder" ("_position" x)
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x)))
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Syntax.hp.Loop"
###                         ("_applC" ("_position" P) ("_position" x))))))
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" hp)))))))))))
### ("\<^const>Pure.imp"
###   ("\<^const>Pure.all_binder" ("_position" x)
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" P)
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" x)))))
###   ("\<^const>Pure.imp"
###     ("\<^const>Pure.all_binder" ("_idts" ("_position" x1) ("_position" x2))
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" P)
###           ("\<^const>Syntax.hp.Assign" ("_position" x1) ("_position" x2)))))
###     ("\<^const>Pure.imp"
###       ("\<^const>Pure.all_binder"
###         ("_idts" ("_position" x1) ("_position" x2))
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" P)
###             ("_applC" ("_position" DiffAssign)
###               ("_cargs" ("_position" x1) ("_position" x2))))))
###       ("\<^const>Pure.imp"
###         ("\<^const>Pure.all_binder" ("_position" x)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" P)
###               ("_applC" ("\<^const>Syntax.hp.Test") ("_position" x)))))
###         ("\<^const>Pure.imp"
###           ("\<^const>Pure.all_binder"
###             ("_idts" ("_position" x1) ("_position" x2))
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" P)
###                 ("_applC" ("_position" EvolveODE)
###                   ("_cargs" ("_position" x1) ("_position" x2))))))
###           ("\<^const>Pure.imp"
###             ("\<^const>Pure.all_binder"
###               ("_idts" ("_position" x1) ("_position" x2))
###               ("\<^const>Pure.imp"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" x1)))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x2)))
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P)
###                       ("\<^const>Syntax.hp.Choice" ("_position" x1)
###                         ("_position" x2)))))))
###             ("\<^const>Pure.imp"
###               ("\<^const>Pure.all_binder"
###                 ("_idts" ("_position" x1) ("_position" x2))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x1)))
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x2)))
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P)
###                         ("\<^const>Syntax.hp.Sequence" ("_position" x1)
###                           ("_position" x2)))))))
###               ("\<^const>Pure.imp"
###                 ("\<^const>Pure.all_binder" ("_position" x)
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x)))
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P)
###                         ("\<^const>Syntax.hp.Loop" ("_position" x))))))
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" hp)))))))))))
### ("\<^const>Pure.imp"
###   ("\<^const>Pure.all_binder" ("_position" x)
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" P)
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" x)))))
###   ("\<^const>Pure.imp"
###     ("\<^const>Pure.all_binder" ("_idts" ("_position" x1) ("_position" x2))
###       ("\<^const>HOL.Trueprop"
###         ("_Update" ("_position" P)
###           ("_updbind" ("_position" x1) ("_position" x2)))))
###     ("\<^const>Pure.imp"
###       ("\<^const>Pure.all_binder"
###         ("_idts" ("_position" x1) ("_position" x2))
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" P)
###             ("_applC" ("_position" DiffAssign)
###               ("_cargs" ("_position" x1) ("_position" x2))))))
###       ("\<^const>Pure.imp"
###         ("\<^const>Pure.all_binder" ("_position" x)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" P)
###               ("_applC" ("\<^const>Syntax.hp.Test") ("_position" x)))))
###         ("\<^const>Pure.imp"
###           ("\<^const>Pure.all_binder"
###             ("_idts" ("_position" x1) ("_position" x2))
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" P)
###                 ("_applC" ("_position" EvolveODE)
###                   ("_cargs" ("_position" x1) ("_position" x2))))))
###           ("\<^const>Pure.imp"
###             ("\<^const>Pure.all_binder"
###               ("_idts" ("_position" x1) ("_position" x2))
###               ("\<^const>Pure.imp"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" x1)))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x2)))
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P)
###                       ("\<^const>Syntax.hp.Choice" ("_position" x1)
###                         ("_position" x2)))))))
###             ("\<^const>Pure.imp"
###               ("\<^const>Pure.all_binder"
###                 ("_idts" ("_position" x1) ("_position" x2))
###                 ("\<^const>Pure.imp"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" P) ("_position" x1)))
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x2)))
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P)
###                         ("\<^const>Syntax.hp.Sequence" ("_position" x1)
###                           ("_position" x2)))))))
###               ("\<^const>Pure.imp"
###                 ("\<^const>Pure.all_binder" ("_position" x)
###                   ("\<^const>Pure.imp"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P) ("_position" x)))
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" P)
###                         ("\<^const>Syntax.hp.Loop" ("_position" x))))))
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" P) ("_position" hp)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
### theory "Draft.Syntax"
### 8.193s elapsed time, 32.351s cpu time, 3.774s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.AxiomsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 1.566s elapsed time, 5.932s cpu time, 3.430s GC time
Loading theory "HOL-Library.Complex_Order" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Infinite_Sum")
instantiation
  complex :: order
  less_eq_complex == less_eq :: complex => complex => bool
  less_complex == less :: complex => complex => bool
### theory "HOL-Library.Complex_Order"
### 0.059s elapsed time, 0.235s cpu time, 0.000s GC time
Loading theory "HOL-Library.Diagonal_Subsequence" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow")
locale subseqs
  fixes P :: "nat => (nat => nat) => bool"
  assumes "Diagonal_Subsequence.subseqs P"
consts
  seqseq :: "nat => nat => nat"
consts
  fold_reduce :: "nat => nat => nat => nat"
### theory "HOL-Library.Diagonal_Subsequence"
### 0.134s elapsed time, 0.524s cpu time, 0.106s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
class euclidean_semiring_gcd = normalization_euclidean_semiring + Gcd +
  assumes "gcd_eucl": "normalization_euclidean_semiring_class.gcd = gcd"
    and "lcm_eucl": "normalization_euclidean_semiring_class.lcm = lcm"
  assumes "Gcd_eucl": "normalization_euclidean_semiring_class.Gcd = Gcd"
    and "Lcm_eucl": "normalization_euclidean_semiring_class.Lcm = Lcm"
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
### theory "HOL-Analysis.Convex"
### 1.929s elapsed time, 7.355s cpu time, 3.669s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Library.Discrete"
### 0.182s elapsed time, 0.721s cpu time, 0.099s GC time
Loading theory "HOL-Library.Lattice_Algebras" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Decision_Procs.Approximation_Bounds" via "HOL-Library.Interval_Float" via "HOL-Library.Interval")
locale linear_first_finite_dimensional_vector_space
  fixes scaleB :: "'a => 'b => 'b"  (infixr \<open>*b\<close> 75)
    and scaleC :: "'a => 'c => 'c"  (infixr \<open>*c\<close> 75)
    and BasisB :: "'b set"
    and f :: "'b => 'c"
  assumes "linear_first_finite_dimensional_vector_space (*b) (*c) BasisB f"
### theory "HOL-Library.Indicator_Function"
### 0.424s elapsed time, 1.675s cpu time, 0.161s GC time
Loading theory "HOL-Analysis.Abstract_Topology_2" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected")
### theory "HOL-Analysis.Cartesian_Space"
### 2.559s elapsed time, 9.841s cpu time, 3.901s GC time
Loading theory "HOL-Analysis.Determinants" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Determinants"
### 0.935s elapsed time, 3.689s cpu time, 0.340s GC time
Loading theory "HOL-Library.Liminf_Limsup" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
### theory "HOL-Analysis.Abstract_Topology_2"
### 1.325s elapsed time, 5.214s cpu time, 0.540s GC time
Loading theory "HOL-Analysis.Connected" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Library.Liminf_Limsup"
### 0.491s elapsed time, 1.936s cpu time, 0.174s GC time
Loading theory "HOL-Analysis.Elementary_Metric_Spaces" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Elementary_Normed_Spaces")
### theory "HOL-Analysis.Connected"
### 0.281s elapsed time, 1.111s cpu time, 0.046s GC time
Loading theory "HOL-Analysis.Function_Topology" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
instantiation
  fun :: (type, topological_space) topological_space
  open_fun == open :: ('a => 'b) set => bool
### theory "HOL-Analysis.Function_Topology"
### 0.706s elapsed time, 2.766s cpu time, 0.353s GC time
Loading theory "HOL-Analysis.Product_Topology" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected" via "HOL-Analysis.T1_Spaces")
class lattice_ab_group_add_abs = abs + lattice_ab_group_add +
  assumes "abs_lattice": "!!a. \<bar>a\<bar> = sup a (- a)"
class heine_borel = metric_space +
  assumes
    "bounded_imp_convergent_subsequence":
      "!!f. bounded (range f) ==>
            EX l r. strict_mono r & (f o r) \<longlonglongrightarrow> l"
### theory "HOL-Analysis.Product_Topology"
### 0.282s elapsed time, 1.110s cpu time, 0.122s GC time
Loading theory "HOL-Analysis.T1_Spaces" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected")
### theory "HOL-Analysis.T1_Spaces"
### 0.286s elapsed time, 1.124s cpu time, 0.106s GC time
Loading theory "HOL-Analysis.Lindelof_Spaces" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Lindelof_Spaces"
### 0.113s elapsed time, 0.438s cpu time, 0.050s GC time
Loading theory "HOL-Library.Log_Nat" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Decision_Procs.Approximation_Bounds" via "HOL-Library.Interval_Float" via "HOL-Library.Float")
### theory "HOL-Library.Log_Nat"
### 0.137s elapsed time, 0.533s cpu time, 0.054s GC time
Loading theory "HOL-Library.Nonpos_Ints" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental" via "HOL-Analysis.Complex_Analysis_Basics")
### theory "HOL-Library.Nonpos_Ints"
### 0.181s elapsed time, 0.701s cpu time, 0.103s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat")
### theory "HOL-Analysis.Elementary_Metric_Spaces"
### 1.917s elapsed time, 7.485s cpu time, 0.890s GC time
Loading theory "HOL-Analysis.Elementary_Normed_Spaces" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Library.Order_Continuity"
### 0.583s elapsed time, 2.282s cpu time, 0.183s GC time
Loading theory "HOL-Analysis.Function_Metric" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Library.Lattice_Algebras"
### 4.357s elapsed time, 17.108s cpu time, 1.671s GC time
Loading theory "HOL-Library.Interval" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Decision_Procs.Approximation_Bounds" via "HOL-Library.Interval_Float")
instantiation
  fun :: (countable, metric_space) metric_space
  dist_fun == dist :: ('a => 'b) => ('a => 'b) => real
  uniformity_fun == uniformity :: (('a => 'b) * ('a => 'b)) filter
### theory "HOL-Analysis.Function_Metric"
### 0.334s elapsed time, 1.310s cpu time, 0.089s GC time
Loading theory "HOL-Library.Float" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Decision_Procs.Approximation_Bounds" via "HOL-Library.Interval_Float")
instantiation
  float :: {equal,linordered_idom}
  sgn_float == sgn :: float => float
  abs_float == abs :: float => float
  uminus_float == uminus :: float => float
  one_float == one_class.one :: float
  times_float == times :: float => float => float
  zero_float == zero_class.zero :: float
  minus_float == minus :: float => float => float
  less_eq_float == less_eq :: float => float => bool
  less_float == less :: float => float => bool
  plus_float == plus :: float => float => float
  equal_float == equal_class.equal :: float => float => bool
instantiation
  interval :: ({equal,preorder}) equal
  equal_interval == equal_class.equal :: 'a interval => 'a interval => bool
instantiation
  interval :: (preorder) ord
  less_eq_interval == less_eq :: 'a interval => 'a interval => bool
  less_interval == less :: 'a interval => 'a interval => bool
instantiation
  interval :: (lattice) semilattice_sup
  sup_interval == sup :: 'a interval => 'a interval => 'a interval
instantiation
  interval :: (ordered_ab_semigroup_add) ab_semigroup_add
  plus_interval == plus :: 'a interval => 'a interval => 'a interval
instantiation
  interval :: ({zero,preorder}) zero
  zero_interval == zero_class.zero :: 'a interval
### theory "HOL-Analysis.Elementary_Normed_Spaces"
### 1.304s elapsed time, 5.108s cpu time, 0.471s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
instantiation
  interval :: (ordered_ab_group_add) uminus
  uminus_interval == uminus :: 'a interval => 'a interval
instantiation
  interval :: (ordered_ab_group_add) minus
  minus_interval == minus :: 'a interval => 'a interval => 'a interval
instantiation
  float :: lattice_ab_group_add
  inf_float == inf :: float => float => float
  sup_float == sup :: float => float => float
instantiation
  interval :: (linordered_semiring) times
  times_interval == times :: 'a interval => 'a interval => 'a interval
instantiation
  float :: exhaustive
  exhaustive_float == exhaustive_class.exhaustive ::
    (float => (bool * term list) option)
    => natural => (bool * term list) option
class infinity = type +
  fixes infinity :: "'a"
instantiation
  float :: full_exhaustive
  full_exhaustive_float == full_exhaustive_class.full_exhaustive ::
    (float * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
instantiation
  float :: random
  random_float == random_class.random ::
    natural
    => natural * natural => (float * (unit => term)) * natural * natural
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
instantiation
  interval :: ({one,preorder}) one
  one_interval == one_class.one :: 'a interval
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.778s elapsed time, 3.008s cpu time, 0.426s GC time
Loading theory "HOL-Library.Extended_Real" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
instantiation
  interval :: ({preorder,topological_space}) topological_space
  open_interval == open :: 'a interval set => bool
instantiation
  interval :: ({preorder,exhaustive}) exhaustive
  exhaustive_interval == exhaustive_class.exhaustive ::
    ('a interval => (bool * term list) option)
    => natural => (bool * term list) option
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  enat :: linorder_topology
  open_enat == open :: enat set => bool
instantiation
  interval :: ({preorder,full_exhaustive}) full_exhaustive
  full_exhaustive_interval == full_exhaustive_class.full_exhaustive ::
    ('a interval * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
instantiation
  interval :: ({preorder,random}) random
  random_interval == random_class.random ::
    natural
    => natural * natural
       => ('a interval * (unit => term)) * natural * natural
### theory "HOL-Library.Interval"
### 3.287s elapsed time, 12.488s cpu time, 5.473s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Periodic_Fun"
### 0.172s elapsed time, 0.679s cpu time, 0.048s GC time
Loading theory "HOL-Library.Sum_of_Squares" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Norm_Arith")
### theory "HOL-Library.Float"
### 3.251s elapsed time, 12.338s cpu time, 5.482s GC time
Loading theory "HOL-Library.Code_Target_Numeral_Float" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation")
instantiation
  ereal :: uminus
  uminus_ereal == uminus :: ereal => ereal
Found termination order: "{}"
instantiation
  ereal :: infinity
  infinity_ereal == infinity :: ereal
### theory "HOL-Library.Code_Target_Numeral_Float"
### 0.278s elapsed time, 1.083s cpu time, 0.102s GC time
Loading theory "HOL-Library.Interval_Float" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation" via "HOL-Decision_Procs.Approximation_Bounds")
instantiation
  ereal :: abs
  abs_ereal == abs :: ereal => ereal
instantiation
  ereal :: {comm_monoid_add,zero_neq_one}
  one_ereal == one_class.one :: ereal
  zero_ereal == zero_class.zero :: ereal
  plus_ereal == plus :: ereal => ereal => ereal
instantiation
  ereal :: linorder
  less_eq_ereal == less_eq :: ereal => ereal => bool
  less_ereal == less :: ereal => ereal => bool
### theory "HOL-Computational_Algebra.Euclidean_Algorithm"
### 11.975s elapsed time, 46.390s cpu time, 11.973s GC time
Loading theory "HOL-Computational_Algebra.Primes" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Arcwise_Connected")
instantiation
  ereal :: {comm_monoid_mult,sgn}
  sgn_ereal == sgn :: ereal => ereal
  times_ereal == times :: ereal => ereal => ereal
### ML warning (line 261 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_abs) has not been referenced.
### ML warning (line 265 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_max) has not been referenced.
### ML warning (line 269 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_min) has not been referenced.
### ML warning (line 379 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Pattern is not exhaustive.
signature FUNC =
  sig
    exception DUP of key
    exception SAME
    exception UNDEF of key
    val apply: 'a table -> key -> 'a
    val applyd: 'a table -> (key -> 'a) -> key -> 'a
    val build: ('a table -> 'a table) -> 'a table
    val choose: 'a table -> key * 'a
    val combine:
       ('a -> 'a -> 'a) -> ('a -> bool) -> 'a table -> 'a table -> 'a table
    val cons_list: key * 'a -> 'a list table -> 'a list table
    val default: key * 'a -> 'a table -> 'a table
    val defined: 'a table -> key -> bool
    val delete: key -> 'a table -> 'a table
    val delete_safe: key -> 'a table -> 'a table
    val dest: 'a table -> (key * 'a) list
    val dest_list: 'a list table -> (key * 'a) list
    val dom: 'a table -> key list
    val empty: 'a table
    val exists: (key * 'a -> bool) -> 'a table -> bool
    val fold: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val fold_rev: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val forall: (key * 'a -> bool) -> 'a table -> bool
    val get_first: (key * 'a -> 'b option) -> 'a table -> 'b option
    val insert: ('a * 'a -> bool) -> key * 'a -> 'a table -> 'a table
    val insert_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val insert_set: key -> set -> set
    val is_empty: 'a table -> bool
    val is_single: 'a table -> bool
    val join: (key -> 'a * 'a -> 'a) -> 'a table * 'a table -> 'a table
    type key
    val keys: 'a table -> key list
    val lookup: 'a table -> key -> 'a option
    val lookup_key: 'a table -> key -> (key * 'a) option
    val lookup_list: 'a list table -> key -> 'a list
    val make: (key * 'a) list -> 'a table
    val make_list: (key * 'a) list -> 'a list table
    val make_set: key list -> set
    val map: (key -> 'a -> 'b) -> 'a table -> 'b table
    val map_default: key * 'a -> ('a -> 'a) -> 'a table -> 'a table
    val map_entry: key -> ('a -> 'a) -> 'a table -> 'a table
    val max: 'a table -> (key * 'a) option
    val member: ('a * 'b -> bool) -> 'b table -> key * 'a -> bool
    val merge: ('a * 'a -> bool) -> 'a table * 'a table -> 'a table
    val merge_list:
       ('a * 'a -> bool) -> 'a list table * 'a list table -> 'a list table
    val min: 'a table -> (key * 'a) option
    val onefunc: key * 'a -> 'a table
    val remove: ('a * 'b -> bool) -> key * 'a -> 'b table -> 'b table
    val remove_list:
       ('a * 'b -> bool) -> key * 'a -> 'b list table -> 'b list table
    val remove_set: key -> set -> set
    type set = unit table
    type 'a table
    val tryapplyd: 'a table -> key -> 'a -> 'a
    val update: key * 'a -> 'a table -> 'a table
    val update_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val update_new: key * 'a -> 'a table -> 'a table
    val updatep: (key * 'a -> bool) -> key * 'a -> 'a table -> 'a table
  end
functor FuncFun (Key: KEY): FUNC
signature REAL_ARITH =
  sig
    type cert_conv = cterm -> thm * pss_tree
    val cterm_of_rat: Rat.rat -> cterm
    val dest_ratconst: cterm -> Rat.rat
    val gen_gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * conv * conv * prover
           -> cert_conv
    val gen_prover_real_arith: Proof.context -> prover -> cert_conv
    val gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * prover
           -> cert_conv
    val is_ratconst: cterm -> bool
    datatype positivstellensatz
    =
         Axiom_eq of int
       | Axiom_le of int
       | Axiom_lt of int
       | Eqmul of FuncUtil.poly * positivstellensatz
       | Product of positivstellensatz * positivstellensatz
       | Rational_eq of Rat.rat
       | Rational_le of Rat.rat
       | Rational_lt of Rat.rat
       | Square of FuncUtil.poly
       | Sum of positivstellensatz * positivstellensatz
    type prover =
       tree_choice list ->
         (thm list * thm list * thm list -> positivstellensatz -> thm) ->
           thm list * thm list * thm list -> thm * pss_tree
    datatype pss_tree
    = Branch of pss_tree * pss_tree | Cert of positivstellensatz | Trivial
    val real_linear_prover:
       (thm list * thm list * thm list -> positivstellensatz -> thm) ->
         thm list * thm list * thm list -> thm * pss_tree
    datatype tree_choice = Left | Right
  end
structure FuncUtil:
  sig
    structure Ctermfunc: FUNC
    structure Intfunc: FUNC
    structure Intpairfunc: FUNC
    structure Monomialfunc: FUNC
    structure Ratfunc: FUNC
    structure Symfunc: FUNC
    structure Termfunc: FUNC
    val dest_monomial: 'a Ctermfunc.table -> (cterm * 'a) list
    type monomial = int Ctermfunc.table
    val monomial_ord: int Ctermfunc.table * int Ctermfunc.table -> order
    val monomial_order: int Ctermfunc.table * int Ctermfunc.table -> order
    type poly = Rat.rat Monomialfunc.table
  end
structure RealArith: REAL_ARITH
### theory "HOL-Computational_Algebra.Primes"
### 0.311s elapsed time, 1.193s cpu time, 0.184s GC time
Loading theory "HOL-Computational_Algebra.Formal_Power_Series" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.FPS_Convergence")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
signature POSITIVSTELLENSATZ_TOOLS =
  sig
    val print_cert: RealArith.pss_tree -> string
    val read_cert: Proof.context -> string -> RealArith.pss_tree
  end
structure Positivstellensatz_Tools: POSITIVSTELLENSATZ_TOOLS
Found termination order: "length <*mlex*> {}"
instantiation
  ereal :: minus
  minus_ereal == minus :: ereal => ereal => ereal
instantiation
  ereal :: inverse
  inverse_ereal == inverse :: ereal => ereal
  divide_ereal == divide :: ereal => ereal => ereal
signature SUM_OF_SQUARES =
  sig
    exception Failure of string
    val debug: bool Config.T
    val debug_message: Proof.context -> (unit -> string) -> unit
    datatype proof_method
    = Certificate of RealArith.pss_tree | Prover of string -> string
    val sos_tac:
       (RealArith.pss_tree -> unit) ->
         proof_method -> Proof.context -> int -> tactic
    val trace: bool Config.T
    val trace_message: Proof.context -> (unit -> string) -> unit
  end
structure Sum_of_Squares: SUM_OF_SQUARES
signature SOS_WRAPPER =
  sig val sos_tac: Proof.context -> string option -> int -> tactic end
structure SOS_Wrapper: SOS_WRAPPER
### theory "HOL-Library.Sum_of_Squares"
### 1.372s elapsed time, 5.359s cpu time, 0.547s GC time
Loading theory "HOL-Analysis.Norm_Arith" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Library.Interval_Float"
### 1.066s elapsed time, 4.155s cpu time, 0.480s GC time
Loading theory "HOL-Decision_Procs.Approximation_Bounds" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Decision_Procs.Approximation")
instantiation
  ereal :: lattice
  inf_ereal == inf :: ereal => ereal => ereal
  sup_ereal == sup :: ereal => ereal => ereal
instantiation
  fps :: (zero) zero
  zero_fps == zero_class.zero :: 'a fps
instantiation
  ereal :: complete_lattice
  Inf_ereal == Inf :: ereal set => ereal
  Sup_ereal == Sup :: ereal set => ereal
  bot_ereal == bot :: ereal
  top_ereal == top :: ereal
instantiation
  fps :: ({one,zero}) one
  one_fps == one_class.one :: 'a fps
instantiation
  fps :: (plus) plus
  plus_fps == plus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (minus) minus
  minus_fps == minus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (uminus) uminus
  uminus_fps == uminus :: 'a fps => 'a fps
instantiation
  fps :: ({comm_monoid_add,times}) times
  times_fps == times :: 'a fps => 'a fps => 'a fps
instantiation
  ereal :: linear_continuum_topology
  open_ereal == open :: ereal set => bool
### ML warning (line 103 of "~~/src/HOL/Analysis/normarith.ML"):
### Matches are not exhaustive.
signature NORM_ARITH =
  sig
    val norm_arith: Proof.context -> conv
    val norm_arith_tac: Proof.context -> int -> tactic
  end
structure NormArith: NORM_ARITH
### theory "HOL-Analysis.Norm_Arith"
### 0.316s elapsed time, 1.228s cpu time, 0.149s GC time
Loading theory "HOL-Analysis.Topology_Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex_Euclidean_Space")
consts
  horner ::
    "(nat => nat)
     => (nat => nat => nat) => nat => nat => nat => real => real"
instantiation
  fps :: (zero) unit_factor
  unit_factor_fps == unit_factor :: 'a fps => 'a fps
instantiation
  fps :: ({minus,zero}) dist
  dist_fps == dist :: 'a fps => 'a fps => real
instantiation
  fps :: (group_add) metric_space
  uniformity_fps == uniformity :: ('a fps * 'a fps) filter
  open_fps == open :: 'a fps set => bool
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  fps :: ({inverse,comm_monoid_add,times,uminus}) inverse
  inverse_fps == inverse :: 'a fps => 'a fps
  divide_fps == divide :: 'a fps => 'a fps => 'a fps
### theory "HOL-Library.Extended_Real"
### 4.234s elapsed time, 16.187s cpu time, 5.825s GC time
Loading theory "HOL-Library.Extended_Nonnegative_Real" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Analysis.Extended_Real_Limits")
Found termination order:
  "case_sum (%p. size (fst (snd p))) (%p. size (fst (snd p))) <*mlex*> {}"
instantiation
  fps :: ({inverse,uminus,comm_semiring_1}) modulo
  modulo_fps == modulo :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (field) normalization_semidom_multiplicative
  normalize_fps == normalize :: 'a fps => 'a fps
instantiation
  fps :: (field) euclidean_ring_cancel
  euclidean_size_fps == euclidean_size :: 'a fps => nat
instantiation
  fps :: (field) euclidean_ring_gcd
  Gcd_fps == Gcd :: 'a fps set => 'a fps
  Lcm_fps == Lcm :: 'a fps set => 'a fps
  gcd_fps == gcd :: 'a fps => 'a fps => 'a fps
  lcm_fps == lcm :: 'a fps => 'a fps => 'a fps
instantiation
  ennreal :: complete_linorder
  Inf_ennreal == Inf :: ennreal set => ennreal
  Sup_ennreal == Sup :: ennreal set => ennreal
  bot_ennreal == bot :: ennreal
  sup_ennreal == sup :: ennreal => ennreal => ennreal
  top_ennreal == top :: ennreal
  inf_ennreal == inf :: ennreal => ennreal => ennreal
  less_eq_ennreal == less_eq :: ennreal => ennreal => bool
  less_ennreal == less :: ennreal => ennreal => bool
instantiation
  ennreal :: infinity
  infinity_ennreal == infinity :: ennreal
instantiation
  ennreal :: {comm_semiring_1,semiring_1_no_zero_divisors}
  zero_ennreal == zero_class.zero :: ennreal
  plus_ennreal == plus :: ennreal => ennreal => ennreal
  one_ennreal == one_class.one :: ennreal
  times_ennreal == times :: ennreal => ennreal => ennreal
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  ennreal :: minus
  minus_ennreal == minus :: ennreal => ennreal => ennreal
instantiation
  ennreal :: inverse
  inverse_ennreal == inverse :: ennreal => ennreal
  divide_ennreal == divide :: ennreal => ennreal => ennreal
structure Cancel_Ennreal_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
Found termination order:
  "case_sum (%p. size (fst (snd p))) (%p. size (fst (snd p))) <*mlex*> {}"
instantiation
  ennreal :: linear_continuum_topology
  open_ennreal == open :: ennreal set => bool
### theory "HOL-Analysis.Topology_Euclidean_Space"
### 19.820s elapsed time, 67.584s cpu time, 59.711s GC time
Loading theory "HOL-Analysis.Convex_Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "HOL-Library.Extended_Nonnegative_Real"
### 19.214s elapsed time, 65.283s cpu time, 59.206s GC time
Loading theory "HOL-Analysis.Infinite_Sum" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Found termination order:
  "case_sum (%p. size (fst (snd p))) (%p. size (fst (snd p))) <*mlex*> {}"
bundle fps_notation
### theory "HOL-Computational_Algebra.Formal_Power_Series"
### 21.348s elapsed time, 73.592s cpu time, 60.338s GC time
Loading theory "HOL-Analysis.Sigma_Algebra" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Measure_Space" via "HOL-Analysis.Measurable")
Found termination order:
  "case_sum (%p. size (fst (snd p))) (%p. size (fst (snd p))) <*mlex*> {}"
locale subset_class
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "subset_class \<Omega> M"
locale semiring_of_sets
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "semiring_of_sets \<Omega> M"
locale ring_of_sets
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "ring_of_sets \<Omega> M"
locale algebra
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "algebra \<Omega> M"
locale sigma_algebra
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "sigma_algebra \<Omega> M"
### theory "HOL-Analysis.Convex_Euclidean_Space"
### 1.172s elapsed time, 4.639s cpu time, 0.640s GC time
Loading theory "HOL-Analysis.Ordered_Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Borel_Space")
Proofs for inductive predicate(s) "sigma_setsp"
  Proving monotonicity ...
### theory "HOL-Decision_Procs.Approximation_Bounds"
### 21.473s elapsed time, 74.108s cpu time, 60.465s GC time
Loading theory "HOL-Decision_Procs.Approximation" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex")
Proofs for inductive predicate(s) "smallest_ccdi_setsp"
  Proving monotonicity ...
### theory "HOL-Analysis.Infinite_Sum"
### 1.571s elapsed time, 6.220s cpu time, 0.784s GC time
Loading theory "HOL-Analysis.Extended_Real_Limits" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
locale Dynkin_system
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "Dynkin_system \<Omega> M"
class ordered_euclidean_space = Inf + Sup + euclidean_space + abs + inf +
  sup + ord +
  assumes
    "eucl_le":
      "!!x y. (x <= y) = (ALL i:Basis. x \<bullet> i <= y \<bullet> i)"
  assumes "eucl_less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
  assumes
    "eucl_inf":
      "!!x y.
          inf x y =
          (SUM i:Basis. inf (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_sup":
      "!!x y.
          sup x y =
          (SUM i:Basis. sup (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Inf":
      "!!X. Inf X = (SUM i:Basis. (INF x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Sup":
      "!!X. Sup X = (SUM i:Basis. (SUP x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_abs":
      "!!x. \<bar>x\<bar> =
            (SUM i:Basis. \<bar>x \<bullet> i\<bar> *\<^sub>R i)"
### theory "HOL-Analysis.Sigma_Algebra"
### 1.758s elapsed time, 6.942s cpu time, 1.091s GC time
Loading theory "HOL-Analysis.Measurable" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Measure_Space")
signature MEASURABLE =
  sig
    val add_del_cong_thm: bool -> thm -> Context.generic -> Context.generic
    val add_local_cong: thm -> Proof.context -> Proof.context
    val add_preprocessor:
       string -> preprocessor -> Context.generic -> Context.generic
    val cong_thm_attr: attribute context_parser
    val del_preprocessor: string -> Context.generic -> Context.generic
    val dest_thm_attr: attribute context_parser
    val get_all: Context.generic -> thm list
    val get_cong: Context.generic -> thm list
    val get_dest: Context.generic -> thm list
    datatype level = Concrete | Generic
    val measurable_tac: Proof.context -> thm list -> tactic
    val measurable_thm_attr: bool * (bool * level) -> attribute
    val prepare_facts: Proof.context -> thm list -> thm list * Proof.context
    type preprocessor = thm -> Proof.context -> thm list * Proof.context
    val simproc: Proof.context -> cterm -> thm option
  end
structure Measurable: MEASURABLE
### theory "HOL-Analysis.Extended_Real_Limits"
### 1.147s elapsed time, 4.523s cpu time, 0.700s GC time
Loading theory "HOL-Analysis.Summation_Tests" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit")
### theory "HOL-Analysis.Measurable"
### 0.603s elapsed time, 2.372s cpu time, 0.413s GC time
Loading theory "HOL-Analysis.Measure_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration")
### theory "HOL-Analysis.Summation_Tests"
### 0.897s elapsed time, 3.535s cpu time, 0.491s GC time
Loading theory "HOL-Analysis.Uniform_Limit" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
locale sigma_finite_measure
  fixes M :: "'a measure"
  assumes "sigma_finite_measure M"
locale finite_measure
  fixes M :: "'a measure"
  assumes "finite_measure M"
### theory "HOL-Analysis.Uniform_Limit"
### 0.623s elapsed time, 2.449s cpu time, 0.229s GC time
Loading theory "HOL-Analysis.Bounded_Continuous_Function" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
instantiation
  measure :: (type) order_bot
  bot_measure == bot :: 'a measure
  less_eq_measure == less_eq :: 'a measure => 'a measure => bool
  less_measure == less :: 'a measure => 'a measure => bool
Proofs for inductive predicate(s) "less_eq_measure"
instantiation
  bcontfun :: (topological_space, metric_space) metric_space
  dist_bcontfun == dist ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b => real
  uniformity_bcontfun == uniformity ::
    ('a \<Rightarrow>\<^sub>C 'b * 'a \<Rightarrow>\<^sub>C 'b) filter
  open_bcontfun == open :: ('a \<Rightarrow>\<^sub>C 'b) set => bool
  Proving monotonicity ...
instantiation
  bcontfun :: (topological_space, real_normed_vector) real_vector
  uminus_bcontfun == uminus ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  zero_bcontfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>C 'b
  minus_bcontfun == minus ::
    'a \<Rightarrow>\<^sub>C 'b
    => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  plus_bcontfun == plus ::
    'a \<Rightarrow>\<^sub>C 'b
    => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  scaleR_bcontfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
instantiation
  measure :: (type) semilattice_sup
  sup_measure == sup :: 'a measure => 'a measure => 'a measure
instantiation
  prod :: (abs, abs) abs
  abs_prod == abs :: 'a * 'b => 'a * 'b
instantiation
  measure :: (type) complete_lattice
  Inf_measure == Inf :: 'a measure set => 'a measure
  Sup_measure == Sup :: 'a measure set => 'a measure
  top_measure == top :: 'a measure
  inf_measure == inf :: 'a measure => 'a measure => 'a measure
instantiation
  vec :: (ordered_euclidean_space, finite) ordered_euclidean_space
  abs_vec == abs :: ('a, 'b) vec => ('a, 'b) vec
  inf_vec == inf :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  sup_vec == sup :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  Inf_vec == Inf :: ('a, 'b) vec set => ('a, 'b) vec
  Sup_vec == Sup :: ('a, 'b) vec set => ('a, 'b) vec
instantiation
  bcontfun :: (topological_space, real_normed_vector) real_normed_vector
  sgn_bcontfun == sgn ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  norm_bcontfun == norm :: 'a \<Rightarrow>\<^sub>C 'b => real
### theory "HOL-Analysis.Ordered_Euclidean_Space"
### 3.846s elapsed time, 15.160s cpu time, 1.964s GC time
Loading theory "HOL-Analysis.Bounded_Linear_Function" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative")
### theory "HOL-Analysis.Bounded_Continuous_Function"
### 0.525s elapsed time, 2.062s cpu time, 0.241s GC time
Loading theory "HOL-Analysis.Line_Segment" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Measure_Space"
### 2.005s elapsed time, 7.888s cpu time, 0.888s GC time
Loading theory "HOL-Analysis.Caratheodory" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Analysis.Caratheodory"
### 0.427s elapsed time, 1.671s cpu time, 0.276s GC time
Loading theory "HOL-Analysis.Tagged_Division" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Henstock_Kurzweil_Integration")
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Analysis.Line_Segment"
### 1.024s elapsed time, 4.005s cpu time, 0.531s GC time
Loading theory "HOL-Analysis.Starlike" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected")
instantiation
  blinfun :: (real_normed_vector, real_normed_vector) real_normed_vector
  uminus_blinfun == uminus ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  zero_blinfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>L 'b
  minus_blinfun == minus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  plus_blinfun == plus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  sgn_blinfun == sgn ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  norm_blinfun == norm :: 'a \<Rightarrow>\<^sub>L 'b => real
  scaleR_blinfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  dist_blinfun == dist ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b => real
  uniformity_blinfun == uniformity ::
    ('a \<Rightarrow>\<^sub>L 'b * 'a \<Rightarrow>\<^sub>L 'b) filter
  open_blinfun == open :: ('a \<Rightarrow>\<^sub>L 'b) set => bool
locale operative
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
    and g :: "'b set => 'a"
  assumes "operative (\<^bold>*) \<^bold>1 g"
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
locale operative_real
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
    and g :: "real set => 'a"
  assumes "operative_real (\<^bold>*) \<^bold>1 g"
### theory "HOL-Analysis.Tagged_Division"
### 1.043s elapsed time, 4.082s cpu time, 0.633s GC time
Loading theory "List-Index.List_Index" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "Ordinary_Differential_Equations.ODE_Auxiliarities")
consts
  find_index :: "('a => bool) => 'a list => nat"
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
consts
  map_index' :: "nat => (nat => 'a => 'b) => 'a list => 'b list"
consts
  insert_nth :: "nat => 'a => 'a list => 'a list"
### theory "HOL-Analysis.Bounded_Linear_Function"
### 3.620s elapsed time, 13.880s cpu time, 6.798s GC time
Loading theory "HOL-Analysis.Derivative" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "List-Index.List_Index"
### 1.926s elapsed time, 7.264s cpu time, 5.699s GC time
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
Found termination order:
  "case_sum (%p. size (fst (snd p))) (%p. size (fst (snd p))) <*mlex*>
   case_sum (%x. 0) (%x. Suc 0) <*mlex*> {}"
"- \<infinity>"
  :: "ereal"
"\<infinity>"
  :: "ereal"
"ereal (13 / 4)"
  :: "ereal"
"True"
  :: "bool"
"True"
  :: "bool"
inj_on ?h ?A ==> (?g summable_on ?h ` ?A) = (?g o ?h summable_on ?A)
uniformity =
filtermap (%((x1, x2), y1, y2). ((x1, y1), x2, y2))
 (uniformity \<times>\<^sub>F uniformity)
?a : affine hull ?S ==> aff_dim ?S = int (dim ((+) (- ?a) ` ?S))
### theory "HOL-Analysis.Starlike"
### 3.548s elapsed time, 13.764s cpu time, 6.696s GC time
Loading theory "HOL-Analysis.Continuous_Extension" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Equivalence_Measurable_On_Borel")
Loading theory "HOL-Analysis.Path_Connected" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems")
### theory "HOL-Analysis.Continuous_Extension"
### 0.220s elapsed time, 0.858s cpu time, 0.147s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Analysis.Derivative"
### 2.162s elapsed time, 8.090s cpu time, 1.281s GC time
Loading theory "HOL-Analysis.Cartesian_Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Loading theory "HOL-Analysis.Borel_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration")
### theory "HOL-Analysis.Cartesian_Euclidean_Space"
### 0.377s elapsed time, 1.481s cpu time, 0.286s GC time
Loading theory "HOL-Analysis.Cross3" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Path_Connected"
### 1.880s elapsed time, 6.828s cpu time, 1.157s GC time
Loading theory "HOL-Analysis.Complex_Analysis_Basics" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental")
bundle cross3_syntax
bundle no_cross3_syntax
### theory "HOL-Analysis.Complex_Analysis_Basics"
### 2.953s elapsed time, 11.212s cpu time, 7.448s GC time
Loading theory "HOL-Analysis.Complex_Transcendental" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers")
### theory "HOL-Analysis.Borel_Space"
### 4.045s elapsed time, 15.473s cpu time, 8.136s GC time
Loading theory "HOL-Analysis.Nonnegative_Lebesgue_Integration" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure")
instantiation
  complex :: ln
  ln_complex == ln :: complex => complex
### theory "HOL-Analysis.Cross3"
### 4.445s elapsed time, 17.056s cpu time, 8.153s GC time
Loading theory "HOL-Analysis.Regularity" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.Regularity"
### 0.777s elapsed time, 3.043s cpu time, 0.578s GC time
Loading theory "HOL-Analysis.Lipschitz" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Multivariate_Analysis")
bundle lipschitz_syntax
bundle no_lipschitz_syntax
### theory "HOL-Analysis.Complex_Transcendental"
### 1.905s elapsed time, 7.459s cpu time, 1.143s GC time
Loading theory "HOL-Analysis.Generalised_Binomial_Theorem" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Generalised_Binomial_Theorem"
### 0.118s elapsed time, 0.455s cpu time, 0.101s GC time
Loading theory "HOL-Analysis.FPS_Convergence" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Nonnegative_Lebesgue_Integration"
### 1.907s elapsed time, 7.456s cpu time, 1.236s GC time
Loading theory "HOL-Analysis.Binary_Product_Measure" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure")
locale pair_sigma_finite
  fixes M1 :: "'a measure"
    and M2 :: "'b measure"
  assumes "pair_sigma_finite M1 M2"
### theory "HOL-Analysis.Lipschitz"
### 0.750s elapsed time, 2.926s cpu time, 0.594s GC time
Loading theory "HOL-Analysis.Harmonic_Numbers" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function")
### theory "HOL-Analysis.Harmonic_Numbers"
### 0.195s elapsed time, 0.772s cpu time, 0.075s GC time
Loading theory "HOL-Analysis.Infinite_Products" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Binary_Product_Measure"
### 0.620s elapsed time, 2.427s cpu time, 0.397s GC time
Loading theory "HOL-Analysis.Embed_Measure" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Embed_Measure"
### 0.229s elapsed time, 0.891s cpu time, 0.146s GC time
Loading theory "HOL-Analysis.Finite_Product_Measure" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.FPS_Convergence"
### 1.225s elapsed time, 4.784s cpu time, 0.757s GC time
Loading theory "HOL-Analysis.Multivariate_Analysis" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Infinite_Products"
### 0.584s elapsed time, 2.277s cpu time, 0.327s GC time
Loading theory "HOL-Analysis.Arcwise_Connected" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve")
locale product_sigma_finite
  fixes M :: "'i => 'a measure"
  assumes "product_sigma_finite M"
locale finite_product_sigma_finite
  fixes M :: "'i => 'a measure"
    and I :: "'i set"
  assumes "finite_product_sigma_finite M I"
### theory "HOL-Analysis.Finite_Product_Measure"
### 0.934s elapsed time, 3.646s cpu time, 0.459s GC time
Loading theory "HOL-Analysis.Bochner_Integration" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Complete_Measure")
Proofs for inductive predicate(s) "simple_bochner_integrable"
  Proving monotonicity ...
Proofs for inductive predicate(s) "has_bochner_integral"
  Proving monotonicity ...
Proofs for inductive predicate(s) "integrable"
  Proving monotonicity ...
### theory "HOL-Analysis.Multivariate_Analysis"
### 1.311s elapsed time, 5.096s cpu time, 0.639s GC time
Loading theory "Affine_Arithmetic.Affine_Arithmetic_Auxiliarities" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "Ordinary_Differential_Equations.ODE_Auxiliarities")
### theory "Affine_Arithmetic.Affine_Arithmetic_Auxiliarities"
### 0.124s elapsed time, 0.475s cpu time, 0.076s GC time
Loading theory "Triangle.Angles" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Cones" via "Triangle.Triangle")
### theory "Triangle.Angles"
### 0.199s elapsed time, 0.767s cpu time, 0.110s GC time
Loading theory "Triangle.Triangle" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Cones")
locale congruent_triangle
  fixes a1 :: "'a"
    and b1 :: "'a"
    and c1 :: "'a"
    and a2 :: "'b"
    and b2 :: "'b"
    and c2 :: "'b"
  assumes "congruent_triangle a1 b1 c1 a2 b2 c2"
### theory "HOL-Analysis.Arcwise_Connected"
### 3.840s elapsed time, 14.638s cpu time, 8.852s GC time
Loading theory "HOL-Analysis.Homotopy" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Homeomorphism")
### theory "Triangle.Triangle"
### 2.412s elapsed time, 9.084s cpu time, 8.196s GC time
Loading theory "HOL-Analysis.Locally" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Abstract_Euclidean_Space")
### theory "HOL-Analysis.Locally"
### 0.233s elapsed time, 0.907s cpu time, 0.159s GC time
Loading theory "HOL-Analysis.Polytope" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Bochner_Integration"
### 3.772s elapsed time, 14.369s cpu time, 8.961s GC time
Loading theory "HOL-Analysis.Complete_Measure" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
locale complete_measure
  fixes M :: "'a measure"
  assumes "complete_measure M"
locale semifinite_measure
  fixes M :: "'a measure"
  assumes "semifinite_measure M"
locale locally_determined_measure
  fixes M :: "'a measure"
  assumes "locally_determined_measure M"
locale cld_measure
  fixes M :: "'a measure"
  assumes "cld_measure M"
### theory "HOL-Analysis.Complete_Measure"
### 0.566s elapsed time, 2.227s cpu time, 0.303s GC time
Loading theory "HOL-Analysis.Radon_Nikodym" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Set_Integral")
### theory "HOL-Analysis.Radon_Nikodym"
### 0.392s elapsed time, 1.528s cpu time, 0.352s GC time
Loading theory "HOL-Analysis.Set_Integral" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
locale Retracts
  fixes s :: "'a set"
    and h :: "'a => 'b"
    and t :: "'b set"
    and k :: "'b => 'a"
  assumes "Retracts s h t k"
### theory "HOL-Analysis.Polytope"
### 1.572s elapsed time, 6.157s cpu time, 1.005s GC time
Loading theory "HOL-Analysis.Lebesgue_Measure" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Set_Integral"
### 0.627s elapsed time, 2.437s cpu time, 0.412s GC time
Loading theory "HOL-Analysis.Infinite_Set_Sum" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Homotopy"
### 2.328s elapsed time, 9.105s cpu time, 1.495s GC time
Loading theory "HOL-Analysis.Homeomorphism" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Homeomorphism"
### 0.604s elapsed time, 2.344s cpu time, 0.348s GC time
Loading theory "HOL-Analysis.Brouwer_Fixpoint" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Fashoda_Theorem")
### theory "HOL-Analysis.Infinite_Set_Sum"
### 1.120s elapsed time, 4.344s cpu time, 0.647s GC time
Loading theory "HOL-Analysis.Abstract_Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Found termination order:
  "case_sum (%p. size (fst (snd p))) (%p. size (fst (snd p))) <*mlex*>
   case_sum (%x. Suc 0) (%x. 0) <*mlex*>
   case_sum (%p. size (fst (snd (snd p))))
    (%p. size_list size (snd (snd (snd p)))) <*mlex*>
   {}"
Proofs for inductive predicate(s) "fsigma"
  Proving monotonicity ...
Proofs for inductive predicate(s) "gdelta"
  Proving monotonicity ...
### theory "HOL-Analysis.Abstract_Euclidean_Space"
### 0.360s elapsed time, 1.397s cpu time, 0.177s GC time
Loading theory "HOL-Analysis.Weierstrass_Theorems" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Lebesgue_Measure"
### 1.716s elapsed time, 6.663s cpu time, 0.952s GC time
Loading theory "HOL-Analysis.Henstock_Kurzweil_Integration" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
locale kuhn_simplex
  fixes p :: "nat"
    and n :: "nat"
    and base :: "nat => nat"
    and upd :: "nat => nat"
    and s :: "(nat => nat) set"
  assumes "kuhn_simplex p n base upd s"
locale kuhn_simplex_pair
  fixes p :: "nat"
    and n :: "nat"
    and b_s :: "nat => nat"
    and u_s :: "nat => nat"
    and s :: "(nat => nat) set"
    and b_t :: "nat => nat"
    and u_t :: "nat => nat"
    and t :: "(nat => nat) set"
  assumes "kuhn_simplex_pair p n b_s u_s s b_t u_t t"
Proofs for inductive predicate(s) "ksimplex"
  Proving monotonicity ...
locale function_ring_on
  fixes R :: "('a => real) set"
    and S :: "'a set"
  assumes "function_ring_on R S"
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Brouwer_Fixpoint"
### 3.883s elapsed time, 14.748s cpu time, 10.041s GC time
Loading theory "HOL-Analysis.Fashoda_Theorem" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "real_polynomial_function"
  Proving monotonicity ...
### theory "HOL-Analysis.Weierstrass_Theorems"
### 3.534s elapsed time, 13.417s cpu time, 9.863s GC time
Loading theory "HOL-Analysis.Retracts" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Further_Topology")
### theory "HOL-Analysis.Fashoda_Theorem"
### 0.581s elapsed time, 2.285s cpu time, 0.454s GC time
Loading theory "Affine_Arithmetic.Executable_Euclidean_Space" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "Ordinary_Differential_Equations.ODE_Auxiliarities")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Analysis.Retracts"
### 1.135s elapsed time, 4.466s cpu time, 0.714s GC time
Loading theory "HOL-Analysis.Smooth_Paths" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Smooth_Paths"
### 0.181s elapsed time, 0.713s cpu time, 0.143s GC time
sigma_finite_measure (count_space ?A)
Found termination order: "(%p. size (fst (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd p)))) <*mlex*> {}"
### theory "HOL-Analysis.Henstock_Kurzweil_Integration"
### 3.028s elapsed time, 11.265s cpu time, 1.792s GC time
Loading theory "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function")
Loading theory "HOL-Analysis.Integral_Test" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
locale antimono_fun_sum_integral_diff
  fixes f :: "real => real"
  assumes "antimono_fun_sum_integral_diff f"
### theory "HOL-Analysis.Integral_Test"
### 0.141s elapsed time, 0.554s cpu time, 0.133s GC time
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
class executable_euclidean_space = ordered_euclidean_space +
  fixes Basis_list :: "'a list"
    and eucl_down :: "int => 'a => 'a"
    and eucl_truncate_down :: "nat => 'a => 'a"
    and eucl_truncate_up :: "nat => 'a => 'a"
  assumes
    "eucl_down_def":
      "!!p b.
          eucl_down p b =
          (SUM i:Basis. round_down p (b \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_truncate_down_def":
      "!!q b.
          eucl_truncate_down q b =
          (SUM i:Basis. truncate_down q (b \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_truncate_up_def":
      "!!q b.
          eucl_truncate_up q b =
          (SUM i:Basis. truncate_up q (b \<bullet> i) *\<^sub>R i)"
  assumes "Basis_list": "set Basis_list = Basis"
  assumes "distinct_Basis_list": "distinct Basis_list"
instantiation
  real :: executable_euclidean_space
  Basis_list_real == Basis_list :: real list
  eucl_down_real == eucl_down :: int => real => real
  eucl_truncate_down_real == eucl_truncate_down :: nat => real => real
  eucl_truncate_up_real == eucl_truncate_up :: nat => real => real
instantiation
  prod :: (executable_euclidean_space, executable_euclidean_space)
    executable_euclidean_space
  Basis_list_prod == Basis_list :: ('a * 'b) list
  eucl_down_prod == eucl_down :: int => 'a * 'b => 'a * 'b
  eucl_truncate_down_prod == eucl_truncate_down :: nat => 'a * 'b => 'a * 'b
  eucl_truncate_up_prod == eucl_truncate_up :: nat => 'a * 'b => 'a * 'b
Found termination order: "(%p. size (fst (snd (snd p)))) <*mlex*> {}"
instantiation
  vec :: (executable_euclidean_space, enum) executable_euclidean_space
  Basis_list_vec == Basis_list :: ('a, 'b) vec list
  eucl_down_vec == eucl_down :: int => ('a, 'b) vec => ('a, 'b) vec
  eucl_truncate_down_vec == eucl_truncate_down ::
    nat => ('a, 'b) vec => ('a, 'b) vec
  eucl_truncate_up_vec == eucl_truncate_up ::
    nat => ('a, 'b) vec => ('a, 'b) vec
locale blinfun_syntax
### theory "Affine_Arithmetic.Executable_Euclidean_Space"
### 3.436s elapsed time, 11.605s cpu time, 1.845s GC time
### theory "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration"
### 2.281s elapsed time, 6.911s cpu time, 1.011s GC time
Loading theory "HOL-Analysis.Further_Topology" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve")
Loading theory "HOL-Analysis.Improper_Integral" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Loading theory "HOL-Analysis.Gamma_Function" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume")
### theory "HOL-Analysis.Improper_Integral"
### 3.368s elapsed time, 12.793s cpu time, 10.937s GC time
Loading theory "HOL-Analysis.Equivalence_Measurable_On_Borel" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
### theory "HOL-Analysis.Equivalence_Measurable_On_Borel"
### 0.764s elapsed time, 3.016s cpu time, 0.423s GC time
Loading theory "HOL-Analysis.Interval_Integral" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Lebesgue_Integral_Substitution")
### theory "HOL-Analysis.Interval_Integral"
### 0.539s elapsed time, 2.127s cpu time, 0.201s GC time
Loading theory "HOL-Analysis.Lebesgue_Integral_Substitution" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume")
### theory "HOL-Analysis.Lebesgue_Integral_Substitution"
### 0.172s elapsed time, 0.668s cpu time, 0.208s GC time
Loading theory "HOL-Analysis.Vitali_Covering_Theorem" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis" via "HOL-Analysis.Change_Of_Vars")
class Gamma = complete_space + real_normed_field +
  fixes rGamma :: "'a => 'a"
  assumes
    "rGamma_eq_zero_iff_aux":
      "!!z. (rGamma z = (0::'a)) = (EX n. z = - of_nat n)"
  assumes
    "differentiable_rGamma_aux1":
      "!!z. (!!n. z ~= - of_nat n) ==>
            let d = (THE d.
                        (%n. SUM k<n.
                             inverse (of_nat (Suc k)) -
                             inverse (z + of_nat k))
                        \<longlonglongrightarrow> d) -
                    euler_mascheroni *\<^sub>R (1::'a)
            in ((%y. (rGamma y - rGamma z +
                      rGamma z * d * (y - z)) /\<^sub>R
                     norm (y - z)) \<longlongrightarrow>
                (0::'a))
                (at z)"
  assumes
    "differentiable_rGamma_aux2":
      "!!n. let z = - of_nat n
            in ((%y. (rGamma y - rGamma z -
                      (- (1::'a)) ^ n * prod of_nat {1..n} *
                      (y - z)) /\<^sub>R
                     norm (y - z)) \<longlongrightarrow>
                (0::'a))
                (at z)"
  assumes
    "rGamma_series_aux":
      "!!z. (!!n. z ~= - of_nat n) ==>
            let fact' = %n. prod of_nat {1..n};
                exp =
                  %x. THE e.
                         (%n. SUM k<n. x ^ k /\<^sub>R fact k)
                         \<longlonglongrightarrow> e;
                pochhammer' = %a n. PROD n = 0..n. a + of_nat n
            in (%n. pochhammer' z n /
                    (fact' n * exp (z * ln (real n) *\<^sub>R (1::'a))))
               \<longlonglongrightarrow> rGamma z"
instantiation
  complex :: Gamma
  rGamma_complex == rGamma :: complex => complex
instantiation
  real :: Gamma
  rGamma_real == rGamma :: real => real
### theory "HOL-Analysis.Further_Topology"
### 5.790s elapsed time, 22.366s cpu time, 12.131s GC time
Loading theory "HOL-Analysis.Jordan_Curve" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Vitali_Covering_Theorem"
### 1.173s elapsed time, 4.632s cpu time, 0.515s GC time
Loading theory "HOL-Analysis.Change_Of_Vars" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Gamma_Function"
### 6.142s elapsed time, 23.732s cpu time, 12.432s GC time
Loading theory "HOL-Analysis.Ball_Volume" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Ball_Volume"
### 0.580s elapsed time, 2.287s cpu time, 0.248s GC time
?z ~: \<int>\<^sub>\<le>\<^sub>0 ==>
(Polygamma ?n has_field_derivative Polygamma (Suc ?n) ?z) (at ?z within ?A)
### theory "HOL-Analysis.Jordan_Curve"
### 0.925s elapsed time, 3.627s cpu time, 0.549s GC time
### theory "HOL-Analysis.Change_Of_Vars"
### 1.096s elapsed time, 3.454s cpu time, 0.465s GC time
Loading theory "HOL-Analysis.Simplex_Content" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Simplex_Content"
### 0.088s elapsed time, 0.176s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Analysis" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex")
signature APPROXIMATION_COMPUTATION =
  sig
    val approx_arith: Proof.context -> term -> term
    val approx_bool: Proof.context -> term -> term
    val approx_conv: Proof.context -> conv
    val approx_form_eval: Proof.context -> term -> term
  end
structure Approximation_Computation: APPROXIMATION_COMPUTATION
signature APPROXIMATION =
  sig
    val approx: int -> Proof.context -> term -> term
    val approximate: Proof.context -> term -> term
    val approximation_tac:
       int ->
         (string * int) list -> int option -> Proof.context -> int -> tactic
    val reify_form: Proof.context -> term -> term
  end
structure Approximation:
  sig
    val apply_reify_form: Proof.context -> term -> term
    val apply_tactic: Proof.context -> term -> tactic -> term
    val approx: int -> Proof.context -> term -> term
    val approx_arith: int -> Proof.context -> term -> term
    val approx_form: int -> Proof.context -> term -> term
    val approximate: Proof.context -> term -> term
    val approximate_cmd: string list -> string -> Toplevel.state -> unit
    val approximation_tac:
       int ->
         (string * int) list -> int option -> Proof.context -> int -> tactic
    val calculated_subterms: term -> term list
    val dest_float: term -> int * int
    val dest_interpret: term -> term * term
    val dest_interpret_env: term -> term
    val dest_interpret_form: term -> term * term
    val dest_ivl: term -> ((int * int) * (int * int)) option
    val float2_float10: int -> bool -> int * int -> int * int
    val mk_approx': int -> term -> term
    val mk_approx_form_eval: int -> term -> term -> term
    val mk_result: int -> ((int * int) * (int * int)) option -> term
    val opt_modes: Token.T list -> string list * Token.T list
    val prepare_form: Proof.context -> term -> term
    val prepare_form_tac: Proof.context -> int -> tactic
    val preproc_form_conv: Proof.context -> conv
    val realify: term -> term
    val reify_form: Proof.context -> term -> term
    val reify_form_conv: Proof.context -> cterm -> thm
    val reify_form_tac: Proof.context -> int -> tactic
    val reorder_bounds_tac: Proof.context -> thm list -> int -> tactic
    val rewrite_interpret_form_tac:
       Proof.context ->
         int ->
           (string * int) list -> int option -> int -> thm -> thm Seq.seq
  end
### ML warning (line 201 of "~~/src/HOL/Decision_Procs/approximation_generator.ML"):
### Matches are not exhaustive.
signature APPROXIMATION_GENERATOR =
  sig
    val approximation_generator:
       Proof.context ->
         (term * term list) list ->
           bool ->
             int list ->
               (bool * term list) option * Quickcheck.report option
    val custom_seed: int Config.T
    val epsilon: real Config.T
    val precision: int Config.T
    val setup: theory -> theory
  end
structure Approximation_Generator: APPROXIMATION_GENERATOR
bundle floatarith_notation
bundle no_floatarith_notation
### theory "HOL-Decision_Procs.Approximation"
### 43.820s elapsed time, 158.102s cpu time, 57.118s GC time
### theory "HOL-Analysis.Analysis"
### 4.447s elapsed time, 8.975s cpu time, 0.635s GC time
Loading theory "Ordinary_Differential_Equations.Bounded_Linear_Operator" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow")
Loading theory "Ordinary_Differential_Equations.Vector_Derivative_On" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow" via "Ordinary_Differential_Equations.Picard_Lindeloef_Qualitative" via "Ordinary_Differential_Equations.Initial_Value_Problem" via "Ordinary_Differential_Equations.Interval_Integral_HK")
Loading theory "Ordinary_Differential_Equations.ODE_Auxiliarities" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.MVT_Ex")
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Bounded_Linear_Function.blinfun" found.
### theory "Ordinary_Differential_Equations.Vector_Derivative_On"
### 0.162s elapsed time, 0.485s cpu time, 0.047s GC time
Loading theory "Ordinary_Differential_Equations.Gronwall" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow" via "Ordinary_Differential_Equations.Picard_Lindeloef_Qualitative" via "Ordinary_Differential_Equations.Initial_Value_Problem")
Loading theory "Ordinary_Differential_Equations.Interval_Integral_HK" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow" via "Ordinary_Differential_Equations.Picard_Lindeloef_Qualitative" via "Ordinary_Differential_Equations.Initial_Value_Problem")
### theory "Ordinary_Differential_Equations.Gronwall"
### 0.138s elapsed time, 0.544s cpu time, 0.047s GC time
### theory "Ordinary_Differential_Equations.Interval_Integral_HK"
### 0.212s elapsed time, 0.768s cpu time, 0.047s GC time
instantiation
  blinop :: (real_normed_vector) real_normed_vector
  uminus_blinop == uminus :: 'a blinop => 'a blinop
  zero_blinop == zero_class.zero :: 'a blinop
  minus_blinop == minus :: 'a blinop => 'a blinop => 'a blinop
  plus_blinop == plus :: 'a blinop => 'a blinop => 'a blinop
  sgn_blinop == sgn :: 'a blinop => 'a blinop
  norm_blinop == norm :: 'a blinop => real
  scaleR_blinop == scaleR :: real => 'a blinop => 'a blinop
  dist_blinop == dist :: 'a blinop => 'a blinop => real
  uniformity_blinop == uniformity :: ('a blinop * 'a blinop) filter
  open_blinop == open :: 'a blinop set => bool
instantiation
  prod :: (zero_neq_one, zero_neq_one) zero_neq_one
  one_prod == one_class.one :: 'a * 'b
locale no_real_inner
instantiation
  blinop :: ({real_normed_vector,perfect_space}) real_normed_algebra_1
  one_blinop == one_class.one :: 'a blinop
  times_blinop == times :: 'a blinop => 'a blinop => 'a blinop
### theory "Ordinary_Differential_Equations.ODE_Auxiliarities"
### 0.777s elapsed time, 2.109s cpu time, 0.204s GC time
Loading theory "Ordinary_Differential_Equations.Cones" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
Loading theory "Ordinary_Differential_Equations.Initial_Value_Problem" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow" via "Ordinary_Differential_Equations.Picard_Lindeloef_Qualitative")
Loading theory "Ordinary_Differential_Equations.MVT_Ex" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
### theory "Ordinary_Differential_Equations.Bounded_Linear_Operator"
### 0.863s elapsed time, 2.420s cpu time, 0.271s GC time
Loading theory "Ordinary_Differential_Equations.Multivariate_Taylor" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow")
locale second_derivative_within
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'b"
    and f'' :: "'a \<Rightarrow>\<^sub>L 'a \<Rightarrow>\<^sub>L 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative_within f f' f'' a G"
locale second_derivative
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'b"
    and f'' :: "'a \<Rightarrow>\<^sub>L 'a \<Rightarrow>\<^sub>L 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative f f' f'' a G"
locale second_derivative_within'
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a => 'b"
    and f'' :: "'a => 'a => 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative_within' f f' f'' a G"
locale second_derivative_on_open
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a => 'b"
    and f'' :: "'a => 'a => 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative_on_open f f' f'' a G"
### theory "Ordinary_Differential_Equations.Multivariate_Taylor"
### 0.691s elapsed time, 2.719s cpu time, 0.300s GC time
### theory "Ordinary_Differential_Equations.Cones"
### 1.007s elapsed time, 3.757s cpu time, 0.455s GC time
### theory "Ordinary_Differential_Equations.MVT_Ex"
### 1.341s elapsed time, 4.494s cpu time, 0.584s GC time
locale continuous_rhs
  fixes T :: "'a set"
    and X :: "'b set"
    and f :: "'a => 'b => 'c"
  assumes "continuous_rhs T X f"
locale global_lipschitz
  fixes T :: "'a set"
    and X :: "'b set"
    and f :: "'a => 'b => 'c"
    and L :: "real"
  assumes "global_lipschitz T X f L"
locale closed_domain
  fixes X :: "'a set"
  assumes "closed_domain X"
locale interval
  fixes T :: "real set"
  assumes "interval T"
locale nonempty_set
  fixes T :: "'a set"
  assumes "nonempty_set T"
locale compact_interval
  fixes T :: "real set"
  assumes "compact_interval T"
locale self_mapping
  fixes T :: "real set"
    and t0 :: "real"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "self_mapping T t0 x0 f X"
locale unique_on_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_closed t0 T x0 f X L"
### Ignoring duplicate introduction (intro)
### [| tmin <= ?t; ?t <= tmax |] ==> ?t : T
### Ignoring duplicate rewrite rule:
### [| tmin <= ?t1; ?t1 <= tmax |] ==> ?t1 : T == True
locale unique_on_bounded_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_bounded_closed t0 T x0 f X L"
locale unique_on_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_closed t0 T x0 f X L"
consts
  psolution :: "nat => real => 'a"
locale unique_on_strip
  fixes t0 :: "real"
    and T :: "real set"
    and f :: "real => 'a => 'a"
    and L :: "real"
  assumes "unique_on_strip t0 T f L"
locale solution_in_cylinder
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and b :: "real"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and B :: "real"
  assumes "solution_in_cylinder t0 T x0 b f B"
  defines "X == cball x0 b"
locale unique_on_cylinder
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and b :: "real"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and B :: "real"
    and L :: "real"
  assumes "unique_on_cylinder t0 T x0 b f B L"
  defines "X == cball x0 b"
locale derivative_on_prod
  fixes T :: "real set"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and f' :: "real * 'a => real * 'a => 'a"
  assumes "derivative_on_prod T X f f'"
### theory "Ordinary_Differential_Equations.Initial_Value_Problem"
### 1.892s elapsed time, 5.030s cpu time, 0.678s GC time
Loading theory "Ordinary_Differential_Equations.Picard_Lindeloef_Qualitative" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Flow")
locale ll_on_open
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "ll_on_open T f X"
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
locale ll_on_open
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "ll_on_open T f X"
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
### theory "Ordinary_Differential_Equations.Picard_Lindeloef_Qualitative"
### 0.344s elapsed time, 0.378s cpu time, 0.049s GC time
Loading theory "Ordinary_Differential_Equations.Flow" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
[| ?A ~= {}; compact ?A; open ?B; ?A <= ?B;
   !!e. [| 0 < e; {x. infdist x ?A <= e} <= ?B |] ==> ?thesis |]
==> ?thesis
locale two_ll_on_open
  fixes F :: "real => 'a => 'a"
    and T1 :: "real set"
    and G :: "real => 'a => 'a"
    and T2 :: "real set"
    and X :: "'a set"
    and J :: "real set"
    and x0 :: "'a"
    and e :: "real"
    and K :: "real"
  assumes "two_ll_on_open F T1 G T2 X J x0 e K"
locale auto_ll_on_open
  fixes f :: "'a => 'a"
    and X :: "'a set"
  assumes "auto_ll_on_open f X"
locale compact_continuously_diff
  fixes T :: "real set"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
  assumes "compact_continuously_diff T X f f'"
locale unique_on_compact_continuously_diff
  fixes T :: "real set"
    and t0 :: "real"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
  assumes "unique_on_compact_continuously_diff T t0 x0 f X f'"
locale c1_on_open
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open f f' X"
locale c1_on_open_euclidean
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open_euclidean f f' X"
### theory "Ordinary_Differential_Equations.Flow"
### 2.059s elapsed time, 2.203s cpu time, 0.209s GC time
Loading theory "Ordinary_Differential_Equations.Poincare_Map" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis" via "Ordinary_Differential_Equations.Reachability_Analysis")
Loading theory "Ordinary_Differential_Equations.Upper_Lower_Solution" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
Loading theory "Ordinary_Differential_Equations.Linear_ODE" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
### theory "Ordinary_Differential_Equations.Linear_ODE"
### 0.104s elapsed time, 0.317s cpu time, 0.058s GC time
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
locale auto_ll_on_open
  fixes f :: "'a => 'a"
    and X :: "'a set"
  assumes "auto_ll_on_open f X"
locale ll_on_open_real
  fixes T :: "real set"
    and f :: "real => real => real"
    and X :: "real set"
  assumes "ll_on_open_real T f X"
### theory "Ordinary_Differential_Equations.Upper_Lower_Solution"
### 0.196s elapsed time, 0.498s cpu time, 0.058s GC time
### Ignoring duplicate rewrite rule:
### norm (- ?x1) == norm ?x1
locale c1_on_open_euclidean
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open_euclidean f f' X"
### theory "Ordinary_Differential_Equations.Poincare_Map"
### 1.126s elapsed time, 1.533s cpu time, 0.254s GC time
Loading theory "Ordinary_Differential_Equations.Reachability_Analysis" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
locale c1_on_open_euclidean
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open_euclidean f f' X"
### theory "Ordinary_Differential_Equations.Reachability_Analysis"
### 1.038s elapsed time, 1.132s cpu time, 0.138s GC time
Loading theory "Ordinary_Differential_Equations.Flow_Congs" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms" via "Ordinary_Differential_Equations.ODE_Analysis")
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
locale auto_ll_on_open
  fixes f :: "'a => 'a"
    and X :: "'a set"
  assumes "auto_ll_on_open f X"
locale c1_on_open_euclidean
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open_euclidean f f' X"
### theory "Ordinary_Differential_Equations.Flow_Congs"
### 0.313s elapsed time, 0.338s cpu time, 0.037s GC time
Loading theory "Ordinary_Differential_Equations.ODE_Analysis" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms")
### theory "Ordinary_Differential_Equations.ODE_Analysis"
### 1.417s elapsed time, 1.475s cpu time, 0.087s GC time
Loading theory "Draft.Lib" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms")
### theory "Draft.Lib"
### 0.138s elapsed time, 0.138s cpu time, 0.000s GC time
Loading theory "Draft.Denotational_Semantics" (required by "Draft.AxiomsMoreTemplates" via "Draft.Axioms")
### Ignoring sort constraints in type variables(s): "'a"
### in type abbreviation "Rvec"
Found termination order: "{}"
consts
  sterm_sem ::
    "('a, 'b, 'c) interp => ('a, 'c) trm => (real, 'c) vec => real"
consts
  frechet ::
    "('a, 'b, 'c) interp
     => ('a, 'c) trm => (real, 'c) vec => (real, 'c) vec => real"
consts
  dterm_sem ::
    "('a, 'b, 'c) interp
     => ('a, 'c) trm => (real, 'c) vec * (real, 'c) vec => real"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order:
  "case_sum (%p. size (snd p)) (%p. size (snd p)) <*mlex*> {}"
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
Found termination order: "{}"
### Ambiguous input (line 355 of "$AFP/Differential_Dynamic_Logic/Denotational_Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>FuncSet.funcset" ("_position" A) ("_position" B)))))
###     ("\<^const>HOL.implies"
###       ("\<^const>Set.member" ("_position" \<nu>)
###         ("_applC" ("_position" fml_sem)
###           ("_cargs" ("_position" I) ("_position" A))))
###       ("\<^const>Set.member" ("_position" \<nu>)
###         ("_applC" ("_position" fml_sem)
###           ("_cargs" ("_position" I) ("_position" B)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Implies" ("_position" A) ("_position" B)))))
###     ("\<^const>HOL.implies"
###       ("\<^const>Set.member" ("_position" \<nu>)
###         ("_applC" ("_position" fml_sem)
###           ("_cargs" ("_position" I) ("_position" A))))
###       ("\<^const>Set.member" ("_position" \<nu>)
###         ("_applC" ("_position" fml_sem)
###           ("_cargs" ("_position" I) ("_position" B)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Found termination order: "{}"
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
Found termination order: "{}"
### theory "Draft.Denotational_Semantics"
### 3.552s elapsed time, 4.317s cpu time, 0.703s GC time
Loading theory "Draft.Axioms" (required by "Draft.AxiomsMoreTemplates")
locale ids
  fixes vid1 :: "'sz"
    and vid2 :: "'sz"
    and vid3 :: "'sz"
    and fid1 :: "'sf"
    and fid2 :: "'sf"
    and fid3 :: "'sf"
    and pid1 :: "'sc"
    and pid2 :: "'sc"
    and pid3 :: "'sc"
    and pid4 :: "'sc"
  assumes "ids vid1 vid2 vid3 fid1 fid2 fid3 pid1 pid2 pid3 pid4"
### Ambiguous input (line 34 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 4 parse trees:
### ("\<^const>Pure.eq" ("_position" loop_iterate_axiom)
###   ("\<^const>Syntax.Equiv"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("_applC" ("_position" Predicational) ("_position" pid1)))
###     ("\<^const>Syntax.formula.And"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar")
###             ("\<^const>Syntax.hp.Loop" ("_position" vid1)))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))))
### ("\<^const>Pure.eq" ("_position" loop_iterate_axiom)
###   ("\<^const>Syntax.Equiv"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar")
###         ("\<^const>Syntax.hp.Loop" ("_position" vid1)))
###       ("_applC" ("_position" Predicational) ("_position" pid1)))
###     ("\<^const>Syntax.formula.And"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar")
###             ("\<^const>Syntax.hp.Loop" ("_position" vid1)))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))))
### ("\<^const>Pure.eq" ("_position" loop_iterate_axiom)
###   ("\<^const>Syntax.Equiv"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("_applC" ("_position" Predicational) ("_position" pid1)))
###     ("\<^const>Syntax.formula.And"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("\<^const>Syntax.Box"
###           ("\<^const>Syntax.hp.Loop"
###             ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))))
### ("\<^const>Pure.eq" ("_position" loop_iterate_axiom)
###   ("\<^const>Syntax.Equiv"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar")
###         ("\<^const>Syntax.hp.Loop" ("_position" vid1)))
###       ("_applC" ("_position" Predicational) ("_position" pid1)))
###     ("\<^const>Syntax.formula.And"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("\<^const>Syntax.Box"
###           ("\<^const>Syntax.hp.Loop"
###             ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 38 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 2 parse trees:
### ("\<^const>Pure.eq" ("_position" test_axiom)
###   ("\<^const>Syntax.Equiv"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Test")
###         ("_applC" ("\<^const>Syntax.formula.Prop")
###           ("_cargs" ("_position" vid2) ("_position" empty))))
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid1) ("_position" empty))))
###     ("\<^const>Syntax.Implies"
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid2) ("_position" empty)))
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid1) ("_position" empty))))))
### ("\<^const>Pure.eq" ("_position" test_axiom)
###   ("\<^const>Syntax.Equiv"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Test")
###         ("_applC" ("\<^const>Syntax.formula.Prop")
###           ("_cargs" ("_position" vid2) ("_position" empty))))
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid1) ("_position" empty))))
###     ("\<^const>FuncSet.funcset"
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid2) ("_position" empty)))
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid1) ("_position" empty))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 53 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 8 parse trees:
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>FuncSet.funcset"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("\<^const>FuncSet.funcset"
###           ("_applC" ("_position" Predicational) ("_position" pid1))
###           ("_applC" ("_position" Predicational) ("_position" pid2))))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("_applC" ("_position" Predicational) ("_position" pid2)))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))
###     ("\<^const>Syntax.Implies"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1)))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))
###     ("\<^const>Syntax.Implies"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1)))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))
###     ("\<^const>FuncSet.funcset"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1)))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))
###     ("\<^const>FuncSet.funcset"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1)))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))
###     ("\<^const>FuncSet.funcset"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1)))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))
###     ("\<^const>FuncSet.funcset"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1)))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid2))))))
### ("\<^const>Pure.eq" ("_position" Kaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>FuncSet.funcset"
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("\<^const>Syntax.Implies"
###           ("_applC" ("_position" Predicational) ("_position" pid1))
###           ("_applC" ("_position" Predicational) ("_position" pid2))))
###       ("\<^const>Syntax.Box"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("_applC" ("_position" Predicational) ("_position" pid2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 65 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 8 parse trees:
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>FuncSet.funcset"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>FuncSet.funcset"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>FuncSet.funcset"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>FuncSet.funcset"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>Syntax.Implies"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>FuncSet.funcset"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>Syntax.Implies"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>Syntax.Implies"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### ("\<^const>Pure.eq" ("_position" Iaxiom)
###   ("\<^const>Syntax.Implies"
###     ("\<^const>Syntax.Box"
###       ("\<^const>Syntax.hp.Loop"
###         ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###       ("\<^const>Syntax.Implies"
###         ("_applC" ("_position" Predicational) ("_position" pid1))
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))
###     ("\<^const>Syntax.Implies"
###       ("_applC" ("_position" Predicational) ("_position" pid1))
###       ("\<^const>Syntax.Box"
###         ("\<^const>Syntax.hp.Loop"
###           ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###         ("_applC" ("_position" Predicational) ("_position" pid1))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 70 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 2 parse trees:
### ("\<^const>Pure.eq" ("_position" Vaxiom)
###   ("\<^const>FuncSet.funcset"
###     ("_applC" ("\<^const>Syntax.formula.Prop")
###       ("_cargs" ("_position" vid1) ("_position" empty)))
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid1) ("_position" empty))))))
### ("\<^const>Pure.eq" ("_position" Vaxiom)
###   ("\<^const>Syntax.Implies"
###     ("_applC" ("\<^const>Syntax.formula.Prop")
###       ("_cargs" ("_position" vid1) ("_position" empty)))
###     ("\<^const>Syntax.Box"
###       ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###       ("_applC" ("\<^const>Syntax.formula.Prop")
###         ("_cargs" ("_position" vid1) ("_position" empty))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 105 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("\<^const>Syntax.hp.Loop"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("\<^const>Syntax.hp.Loop"
###                   ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("_applC" ("\<^const>Syntax.hp.Pvar")
###               ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("\<^const>Syntax.hp.Loop"
###                   ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("\<^const>Syntax.hp.Loop"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("_applC" ("\<^const>Syntax.hp.Pvar")
###                   ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("_applC" ("\<^const>Syntax.hp.Pvar")
###               ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("_applC" ("\<^const>Syntax.hp.Pvar")
###                   ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 110 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("\<^const>Syntax.hp.Loop"
###                   ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("\<^const>Syntax.hp.Loop"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("_applC" ("\<^const>Syntax.hp.Pvar")
###                   ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("\<^const>Syntax.hp.Loop"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("\<^const>Syntax.hp.Loop"
###                   ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("_applC" ("\<^const>Syntax.hp.Pvar")
###               ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.implies"
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.formula.And"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" id1))
###               ("\<^const>Syntax.Box"
###                 ("_applC" ("\<^const>Syntax.hp.Pvar")
###                   ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###                 ("_applC" ("_position" Predicational)
###                   ("_position" pid1))))))))
###     ("\<^const>Set.member" ("_position" \<nu>)
###       ("_applC" ("_position" fml_sem)
###         ("_cargs" ("_position" I)
###           ("\<^const>Syntax.Box"
###             ("_applC" ("\<^const>Syntax.hp.Pvar")
###               ("\<^const>Syntax.hp.Loop" ("_position" id1)))
###             ("_applC" ("_position" Predicational) ("_position" pid1))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 139 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Set.member" ("_position" \<nu>)
###     ("_applC" ("_position" fml_sem)
###       ("_cargs" ("_position" I)
###         ("\<^const>Syntax.Box"
###           ("\<^const>Syntax.hp.Loop"
###             ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###           ("\<^const>Syntax.Implies"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###               ("_applC" ("_position" Predicational)
###                 ("_position" pid1)))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Set.member" ("_position" \<nu>)
###     ("_applC" ("_position" fml_sem)
###       ("_cargs" ("_position" I)
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar")
###             ("\<^const>Syntax.hp.Loop" ("_position" vid1)))
###           ("\<^const>Syntax.Implies"
###             ("_applC" ("_position" Predicational) ("_position" pid1))
###             ("\<^const>Syntax.Box"
###               ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1))
###               ("_applC" ("_position" Predicational)
###                 ("_position" pid1)))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 142 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Set.member" ("_position" \<nu>)
###     ("_applC" ("_position" fml_sem)
###       ("_cargs" ("_position" I)
###         ("\<^const>Syntax.Box"
###           ("\<^const>Syntax.hp.Loop"
###             ("_applC" ("\<^const>Syntax.hp.Pvar") ("_position" vid1)))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Set.member" ("_position" \<nu>)
###     ("_applC" ("_position" fml_sem)
###       ("_cargs" ("_position" I)
###         ("\<^const>Syntax.Box"
###           ("_applC" ("\<^const>Syntax.hp.Pvar")
###             ("\<^const>Syntax.hp.Loop" ("_position" vid1)))
###           ("_applC" ("_position" Predicational) ("_position" pid1)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 193 of "$AFP/Differential_Dynamic_Logic/Axioms.thy") produces 2 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" MP_holds)
###     ("_cargs" ("_position" \<phi>) ("_position" \<psi>)))
###   ("\<^const>HOL.implies"
###     ("_applC" ("_position" valid)
###       ("\<^const>Syntax.Implies" ("_position" \<phi>) ("_position" \<psi>)))
###     ("\<^const>HOL.implies"
###       ("_applC" ("_position" valid) ("_position" \<phi>))
###       ("_applC" ("_position" valid) ("_position" \<psi>)))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" MP_holds)
###     ("_cargs" ("_position" \<phi>) ("_position" \<psi>)))
###   ("\<^const>HOL.implies"
###     ("_applC" ("_position" valid)
###       ("\<^const>FuncSet.funcset" ("_position" \<phi>)
###         ("_position" \<psi>)))
###     ("\<^const>HOL.implies"
###       ("_applC" ("_position" valid) ("_position" \<phi>))
###       ("_applC" ("_position" valid) ("_position" \<psi>)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Additional type variable(s) in specification of "CT_holds": 'sc
### Additional type variable(s) in specification of "CQ_holds": 'sc
### theory "Draft.Axioms"
### 0.563s elapsed time, 0.618s cpu time, 0.067s GC time
Loading theory "Draft.AxiomsMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.AxiomsMoreTemplates"
### 62.346s elapsed time, 216.577s cpu time, 214.328s GC time
val it = (): unit
