   [("Denotational_Semantics.Iagree_refl", "Iagree ?I ?I ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Denotational_Semantics.VSagree_refl", "VSagree ?\<nu> ?\<nu> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Denotational_Semantics.VSagree_nil", "VSagree ?\<nu> ?\<omega> {}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Denotational_Semantics.agree_refl", "Vagree ?\<nu> ?\<nu> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Denotational_Semantics.agree_nil", "Vagree ?\<nu> ?\<omega> {}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Denotational_Semantics.ff_sem", "fml_sem ?I FF = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Denotational_Semantics.tt_sem", "fml_sem ?I TT = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Denotational_Semantics.sconst_case",
     "sterm_sem ?I (Const ?r) = (%v. ?r)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.ODE_sem_OVar",
     "ODE_sem ?I (OVar ?x) = ODEs ?I ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Denotational_Semantics.svar_case",
     "sterm_sem ?I (Var ?x) = (%v. v $ ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.loop_sem",
     "prog_sem ?I ?\<alpha>** = (prog_sem ?I ?\<alpha>)^*",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Denotational_Semantics.VSagree_UNIV_eq",
     "VSagree ?A ?B UNIV ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Denotational_Semantics.agree_UNIV_eq",
     "Vagree ?\<nu> ?\<omega> UNIV ==> ?\<nu> = ?\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Denotational_Semantics.Iagree_comm",
     "Iagree ?A ?B ?V ==> Iagree ?B ?A ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Denotational_Semantics.agree_comm",
     "Vagree ?A ?B ?V ==> Vagree ?B ?A ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Denotational_Semantics.or_sem",
     "fml_sem ?I (?\<phi> || ?\<psi>) =
      fml_sem ?I ?\<phi> Un fml_sem ?I ?\<psi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.ODE_vars_lr",
     "(Inl ?x : semBV ?I ?ODE) = (Inr ?x : semBV ?I ?ODE)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Denotational_Semantics.agree_UNIV_fst",
     "Vagree ?\<nu> ?\<omega> (range Inl) ==> fst ?\<nu> = fst ?\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Denotational_Semantics.agree_UNIV_snd",
     "Vagree ?\<nu> ?\<omega> (range Inr) ==> snd ?\<nu> = snd ?\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Denotational_Semantics.VSagree_sub",
     "[| ?A <= ?B; VSagree ?\<nu> ?\<omega> ?B |]
      ==> VSagree ?\<nu> ?\<omega> ?A",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Denotational_Semantics.VSagree_supset",
     "[| ?B <= ?A; VSagree ?\<nu> ?\<nu>' ?A |]
      ==> VSagree ?\<nu> ?\<nu>' ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Denotational_Semantics.agree_sub",
     "[| ?A <= ?B; Vagree ?\<nu> ?\<omega> ?B |]
      ==> Vagree ?\<nu> ?\<omega> ?A",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Denotational_Semantics.agree_supset",
     "[| ?B <= ?A; Vagree ?\<nu> ?\<nu>' ?A |]
      ==> Vagree ?\<nu> ?\<nu>' ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Denotational_Semantics.Iagree_sub",
     "[| ?A <= ?B; Iagree ?I ?J ?B |] ==> Iagree ?I ?J ?A",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Denotational_Semantics.splus_case",
     "sterm_sem ?I (Plus ?t1.0 ?t2.0) =
      (%v. sterm_sem ?I ?t1.0 v + sterm_sem ?I ?t2.0 v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.stimes_case",
     "sterm_sem ?I (Times ?t1.0 ?t2.0) =
      (%v. sterm_sem ?I ?t1.0 v * sterm_sem ?I ?t2.0 v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.ODE_sem_OProd",
     "ODE_sem ?I (OProd ?ODE1.0 ?ODE2.0) =
      (%\<nu>. ODE_sem ?I ?ODE1.0 \<nu> + ODE_sem ?I ?ODE2.0 \<nu>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.sfunction_case",
     "sterm_sem ?I ($f ?f ?args) =
      (%v. Functions ?I ?f (\<chi>i. sterm_sem ?I (?args i) v))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.greater_sem",
     "fml_sem ?I (Greater ?\<theta> ?\<theta>') =
      {v. dterm_sem ?I ?\<theta>' v < dterm_sem ?I ?\<theta> v}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Denotational_Semantics.equals_sem",
     "(?\<nu> : fml_sem ?I (Equals ?\<theta> ?\<theta>')) =
      (dterm_sem ?I ?\<theta> ?\<nu> = dterm_sem ?I ?\<theta>' ?\<nu>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Denotational_Semantics.Vagree_univ",
     "Vagree (?a, ?b) (?c, ?d) UNIV ==> ?a = ?c & ?b = ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Denotational_Semantics.ODE_sem_OSing",
     "ODE_sem ?I (OSing ?x ?\<theta>) =
      (%\<nu>.
          \<chi>i. if i = ?x then sterm_sem ?I ?\<theta> \<nu> else 0)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.forall_sem",
     "fml_sem ?I (Forall ?x ?\<phi>) =
      {v. ALL r. repv v ?x r : fml_sem ?I ?\<phi>}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Denotational_Semantics.agree_trans",
     "[| Vagree ?\<nu> ?\<mu> ?A; Vagree ?\<mu> ?\<omega> ?B |]
      ==> Vagree ?\<nu> ?\<omega> (?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Denotational_Semantics.agree_union",
     "[| Vagree ?\<nu> ?\<omega> ?A; Vagree ?\<nu> ?\<omega> ?B |]
      ==> Vagree ?\<nu> ?\<omega> (?A Un ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Denotational_Semantics.mk_v_exists",
     "EX \<omega>.
         Vagree \<omega> ?\<nu> (- semBV ?I ?ODE) &
         Vagree \<omega> (mk_xode ?I ?ODE ?sol) (semBV ?I ?ODE)",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Denotational_Semantics.iff_sem",
     "(?\<nu> : fml_sem ?I (?A \<leftrightarrow> ?B)) =
      ((?\<nu> : fml_sem ?I ?A) = (?\<nu> : fml_sem ?I ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Denotational_Semantics.impl_sem",
     "(?\<nu> : fml_sem ?I (?A \<rightarrow> ?B)) =
      (?\<nu> : fml_sem ?I ?A --> ?\<nu> : fml_sem ?I ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Denotational_Semantics.is_interpD",
     "is_interp ?I ==>
      ALL x i.
         (Functions ?I i has_derivative FunctionFrechet ?I i x) (at x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Denotational_Semantics.Iagree_Func",
     "[| Iagree ?I ?J ?V; Inl ?f : ?V |]
      ==> Functions ?I ?f = Functions ?J ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.Iagree_Contexts",
     "[| Iagree ?I ?J ?V; Inr (Inl ?C) : ?V |]
      ==> Contexts ?I ?C = Contexts ?J ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.Iagree_ODE",
     "[| Iagree ?I ?J ?V; Inr (Inr ?a) : ?V |] ==> ODEs ?I ?a = ODEs ?J ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.Iagree_Prog",
     "[| Iagree ?I ?J ?V; Inr (Inr ?a) : ?V |]
      ==> Programs ?I ?a = Programs ?J ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.Iagree_Pred",
     "[| Iagree ?I ?J ?V; Inr (Inr ?p) : ?V |]
      ==> Predicates ?I ?p = Predicates ?J ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.box_sem",
     "fml_sem ?I ([[?\<alpha>]]?\<phi>) =
      {\<nu>.
       ALL \<omega>.
          (\<nu>, \<omega>) : prog_sem ?I ?\<alpha> -->
          \<omega> : fml_sem ?I ?\<phi>}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Denotational_Semantics.diamond_sem",
     "fml_sem ?I (\<langle> ?\<alpha> \<rangle> ?\<phi>) =
      {\<nu>.
       EX \<omega>.
          (\<nu>, \<omega>) : prog_sem ?I ?\<alpha> &
          \<omega> : fml_sem ?I ?\<phi>}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Denotational_Semantics.mk_v_agree",
     "Vagree (mk_v ?I ?ODE ?\<nu> ?sol) ?\<nu> (- semBV ?I ?ODE) &
      Vagree (mk_v ?I ?ODE ?\<nu> ?sol) (mk_xode ?I ?ODE ?sol)
       (semBV ?I ?ODE)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_var 1),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)))),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)))
         )),
    ("Denotational_Semantics.iff_to_impl",
     "((?\<nu> : fml_sem ?I ?A) = (?\<nu> : fml_sem ?I ?B)) =
      ((?\<nu> : fml_sem ?I ?A --> ?\<nu> : fml_sem ?I ?B) &
       (?\<nu> : fml_sem ?I ?B --> ?\<nu> : fml_sem ?I ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)))))),
    ("Denotational_Semantics.mk_v_concrete",
     "mk_v ?I ?ODE ?\<nu> ?sol =
      (\<chi>i. (if Inl i : semBV ?I ?ODE then ?sol else fst ?\<nu>) $ i,
       \<chi>i.
          (if Inr i : semBV ?I ?ODE then ODE_sem ?I ?ODE ?sol
           else snd ?\<nu>) $
          i)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 11, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 10, template_app (template_hole 9, t_empty)),
         template_app (template_hole 9, t_empty))))]
