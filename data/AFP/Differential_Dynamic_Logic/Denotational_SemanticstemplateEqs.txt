   [("Denotational_Semantics.ff_sem", "fml_sem ?I FF = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Denotational_Semantics.tt_sem", "fml_sem ?I TT = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Denotational_Semantics.sconst_case",
     "sterm_sem ?I (Const ?r) = (%v. ?r)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.ODE_sem_OVar",
     "ODE_sem ?I (OVar ?x) = ODEs ?I ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Denotational_Semantics.svar_case",
     "sterm_sem ?I (Var ?x) = (%v. v $ ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.loop_sem",
     "prog_sem ?I ?\<alpha>** = (prog_sem ?I ?\<alpha>)^*",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Denotational_Semantics.or_sem",
     "fml_sem ?I (?\<phi> || ?\<psi>) =
      fml_sem ?I ?\<phi> Un fml_sem ?I ?\<psi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.ODE_vars_lr",
     "(Inl ?x : semBV ?I ?ODE) = (Inr ?x : semBV ?I ?ODE)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Denotational_Semantics.splus_case",
     "sterm_sem ?I (Plus ?t1.0 ?t2.0) =
      (%v. sterm_sem ?I ?t1.0 v + sterm_sem ?I ?t2.0 v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.stimes_case",
     "sterm_sem ?I (Times ?t1.0 ?t2.0) =
      (%v. sterm_sem ?I ?t1.0 v * sterm_sem ?I ?t2.0 v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.ODE_sem_OProd",
     "ODE_sem ?I (OProd ?ODE1.0 ?ODE2.0) =
      (%\<nu>. ODE_sem ?I ?ODE1.0 \<nu> + ODE_sem ?I ?ODE2.0 \<nu>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.sfunction_case",
     "sterm_sem ?I ($f ?f ?args) =
      (%v. Functions ?I ?f (\<chi>i. sterm_sem ?I (?args i) v))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.greater_sem",
     "fml_sem ?I (Greater ?\<theta> ?\<theta>') =
      {v. dterm_sem ?I ?\<theta>' v < dterm_sem ?I ?\<theta> v}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Denotational_Semantics.equals_sem",
     "(?\<nu> : fml_sem ?I (Equals ?\<theta> ?\<theta>')) =
      (dterm_sem ?I ?\<theta> ?\<nu> = dterm_sem ?I ?\<theta>' ?\<nu>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Denotational_Semantics.ODE_sem_OSing",
     "ODE_sem ?I (OSing ?x ?\<theta>) =
      (%\<nu>.
          \<chi>i. if i = ?x then sterm_sem ?I ?\<theta> \<nu> else 0)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Denotational_Semantics.forall_sem",
     "fml_sem ?I (Forall ?x ?\<phi>) =
      {v. ALL r. repv v ?x r : fml_sem ?I ?\<phi>}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Denotational_Semantics.iff_sem",
     "(?\<nu> : fml_sem ?I (?A \<leftrightarrow> ?B)) =
      ((?\<nu> : fml_sem ?I ?A) = (?\<nu> : fml_sem ?I ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Denotational_Semantics.impl_sem",
     "(?\<nu> : fml_sem ?I (?A \<rightarrow> ?B)) =
      (?\<nu> : fml_sem ?I ?A --> ?\<nu> : fml_sem ?I ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Denotational_Semantics.box_sem",
     "fml_sem ?I ([[?\<alpha>]]?\<phi>) =
      {\<nu>.
       ALL \<omega>.
          (\<nu>, \<omega>) : prog_sem ?I ?\<alpha> -->
          \<omega> : fml_sem ?I ?\<phi>}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Denotational_Semantics.diamond_sem",
     "fml_sem ?I (\<langle> ?\<alpha> \<rangle> ?\<phi>) =
      {\<nu>.
       EX \<omega>.
          (\<nu>, \<omega>) : prog_sem ?I ?\<alpha> &
          \<omega> : fml_sem ?I ?\<phi>}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Denotational_Semantics.iff_to_impl",
     "((?\<nu> : fml_sem ?I ?A) = (?\<nu> : fml_sem ?I ?B)) =
      ((?\<nu> : fml_sem ?I ?A --> ?\<nu> : fml_sem ?I ?B) &
       (?\<nu> : fml_sem ?I ?B --> ?\<nu> : fml_sem ?I ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)))))),
    ("Denotational_Semantics.mk_v_concrete",
     "mk_v ?I ?ODE ?\<nu> ?sol =
      (\<chi>i. (if Inl i : semBV ?I ?ODE then ?sol else fst ?\<nu>) $ i,
       \<chi>i.
          (if Inr i : semBV ?I ?ODE then ODE_sem ?I ?ODE ?sol
           else snd ?\<nu>) $
          i)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 11, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 10, template_app (template_hole 9, t_empty)),
         template_app (template_hole 9, t_empty))))]
