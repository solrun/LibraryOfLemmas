Loading theory "Complex_Geometry.Linear_Systems" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices")
Loading theory "Complex_Geometry.More_Set" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Complex_Geometry.More_Set"
### 0.057s elapsed time, 0.255s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### theory "Complex_Geometry.Linear_Systems"
### 0.105s elapsed time, 0.433s cpu time, 0.045s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.157s elapsed time, 0.634s cpu time, 0.045s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.More_Complex" via "Complex_Geometry.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.860s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs")
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Nat_Bijection"
### 0.391s elapsed time, 1.548s cpu time, 0.148s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Periodic_Fun"
### 0.244s elapsed time, 0.959s cpu time, 0.103s GC time
Loading theory "Complex_Geometry.More_Transcendental" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.More_Complex")
### theory "Complex_Geometry.More_Transcendental"
### 0.107s elapsed time, 0.421s cpu time, 0.085s GC time
Loading theory "Complex_Geometry.Canonical_Angle" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.More_Complex")
### theory "Complex_Geometry.Canonical_Angle"
### 0.081s elapsed time, 0.321s cpu time, 0.000s GC time
Loading theory "Complex_Geometry.More_Complex" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Complex_Geometry.More_Complex"
### 0.308s elapsed time, 1.217s cpu time, 0.142s GC time
Loading theory "Complex_Geometry.Angles" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines" via "Complex_Geometry.Elementary_Complex_Geometry")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Complex_Geometry.Angles"
### 0.338s elapsed time, 1.194s cpu time, 0.648s GC time
Loading theory "Complex_Geometry.Elementary_Complex_Geometry" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines")
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.973s elapsed time, 3.711s cpu time, 0.876s GC time
Loading theory "Draft.Hyperbolic_Functions" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance")
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "Draft.Hyperbolic_Functions"
### 0.071s elapsed time, 0.282s cpu time, 0.000s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.Quadratic")
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.064s elapsed time, 4.062s cpu time, 0.996s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Quadratic_Discriminant"
### 0.122s elapsed time, 0.454s cpu time, 0.120s GC time
Loading theory "Complex_Geometry.Quadratic" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Complex_Geometry.Quadratic"
### 0.295s elapsed time, 0.897s cpu time, 0.091s GC time
Loading theory "Complex_Geometry.Matrices" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices")
### theory "Complex_Geometry.Elementary_Complex_Geometry"
### 0.582s elapsed time, 1.968s cpu time, 0.288s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.050s elapsed time, 7.038s cpu time, 1.313s GC time
Loading theory "Draft.Templates" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.123s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Poincare_CirclesMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.562s elapsed time, 1.186s cpu time, 0.135s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Complex_Geometry.Matrices"
### 1.318s elapsed time, 2.507s cpu time, 0.317s GC time
Loading theory "Complex_Geometry.Homogeneous_Coordinates" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Moebius")
Loading theory "Complex_Geometry.Unitary11_Matrices" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius")
Loading theory "Complex_Geometry.Unitary_Matrices" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines" via "Complex_Geometry.Hermitean_Matrices")
### theory "Complex_Geometry.Unitary_Matrices"
### 0.146s elapsed time, 0.454s cpu time, 0.098s GC time
Loading theory "Complex_Geometry.Hermitean_Matrices" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines")
### theory "Complex_Geometry.Unitary11_Matrices"
### 0.481s elapsed time, 1.576s cpu time, 0.949s GC time
### theory "Complex_Geometry.Hermitean_Matrices"
### 0.335s elapsed time, 1.118s cpu time, 0.851s GC time
### theory "Complex_Geometry.Homogeneous_Coordinates"
### 0.884s elapsed time, 2.011s cpu time, 0.992s GC time
Loading theory "Complex_Geometry.Moebius" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius")
instantiation
  moebius :: group_add
  minus_moebius == minus :: moebius => moebius => moebius
  uminus_moebius == uminus_class.uminus :: moebius => moebius
  zero_moebius == zero_class.zero :: moebius
  plus_moebius == plus :: moebius => moebius => moebius
### theory "Complex_Geometry.Moebius"
### 0.611s elapsed time, 0.711s cpu time, 0.137s GC time
Loading theory "Complex_Geometry.Circlines" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines")
### theory "Complex_Geometry.Circlines"
### 1.364s elapsed time, 1.519s cpu time, 0.210s GC time
Loading theory "Complex_Geometry.Oriented_Circlines" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius")
### theory "Complex_Geometry.Oriented_Circlines"
### 0.412s elapsed time, 0.483s cpu time, 0.097s GC time
Loading theory "Complex_Geometry.Circlines_Angle" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines")
Loading theory "Complex_Geometry.Unit_Circle_Preserving_Moebius" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines")
Found termination order: "{}"
### theory "Complex_Geometry.Circlines_Angle"
### 0.471s elapsed time, 1.476s cpu time, 1.185s GC time
### theory "Complex_Geometry.Unit_Circle_Preserving_Moebius"
### 0.796s elapsed time, 1.836s cpu time, 1.242s GC time
Loading theory "Draft.Poincare_Lines" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points")
### theory "Draft.Poincare_Lines"
### 0.454s elapsed time, 0.623s cpu time, 0.226s GC time
Loading theory "Draft.Poincare_Lines_Ideal_Points" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles" via "Draft.Poincare_Distance")
### theory "Draft.Poincare_Lines_Ideal_Points"
### 0.141s elapsed time, 0.141s cpu time, 0.000s GC time
Loading theory "Draft.Poincare_Distance" (required by "Draft.Poincare_CirclesMoreTemplates" via "Draft.Poincare_Circles")
[| 1 <= ?x; 1 <= ?y |]
==> arcosh ?x + arcosh ?y =
    arcosh (?x * ?y + sqrt ((?x\<^sup>2 - 1) * (?y\<^sup>2 - 1)))
### theory "Draft.Poincare_Distance"
### 0.353s elapsed time, 0.431s cpu time, 0.103s GC time
Loading theory "Draft.Poincare_Circles" (required by "Draft.Poincare_CirclesMoreTemplates")
### theory "Draft.Poincare_Circles"
### 0.209s elapsed time, 0.286s cpu time, 0.104s GC time
Loading theory "Draft.Poincare_CirclesMoreTemplates"
val templateLemmas =
   [("Poincare_Circles.poincare_circle_in_disc",
     "[| 0 < ?r; ?z : unit_disc;
         (?ze, ?re) = poincare_circle_euclidean ?z ?r |]
      ==> 0 < ?re",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 3))],
       template_inequation (less_than, template_hole 5, template_var 0))),
    ("Poincare_Circles.poincare_circle_in_disc",
     "[| 0 < ?r; ?z : unit_disc;
         (?ze, ?re) = poincare_circle_euclidean ?z ?r |]
      ==> cmod ?ze < 1",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 3))],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_hole 0))),
    ("Poincare_Circles.poincare_circle_is_euclidean_circle",
     "[| ?z : unit_disc; 0 < ?r |]
      ==> let (Ze, Re) = poincare_circle_euclidean ?z ?r
          in of_complex ` circle Ze Re = poincare_circle ?z ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            ),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Poincare_Circles.poincare_circle_in_disc",
     "[| 0 < ?r; ?z : unit_disc;
         (?ze, ?re) = poincare_circle_euclidean ?z ?r |]
      ==> ALL x:circle ?ze ?re. cmod x < 1",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("Poincare_Circles.intersect_poincare_circles_conjugate_centers",
     "[| ?z1.0 : unit_disc; ?z2.0 : unit_disc; ?z1.0 ~= ?z2.0;
         ?z1.0 = conjugate ?z2.0; 0 < ?r;
         ?u : poincare_circle ?z1.0 ?r Int poincare_circle ?z2.0 ?r |]
      ==> is_real (to_complex ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_var 3, template_app (template_hole 7, template_var 2)),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 1)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 5))),
    ("Poincare_Circles.unit_disc_fix_f_congruent_triangles",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc; ?u' : unit_disc;
         ?v' : unit_disc; ?w' : unit_disc;
         poincare_distance ?u ?v = poincare_distance ?u' ?v';
         poincare_distance ?v ?w = poincare_distance ?v' ?w';
         poincare_distance ?u ?w = poincare_distance ?u' ?w' |]
      ==> EX M. unit_disc_fix_f M & M ?u = ?u' & M ?v = ?v' & M ?w = ?w'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Poincare_Circles.intersect_poincare_circles_x_axis",
     "[| is_real ?z1.0; is_real ?z2.0; 0 < ?r1.0; 0 < ?r2.0; - 1 < Re ?z1.0;
         Re ?z1.0 < 1; - 1 < Re ?z2.0; Re ?z2.0 < 1; ?z1.0 ~= ?z2.0;
         ?x1.0
         : poincare_circle (of_complex ?z1.0) ?r1.0 Int
           poincare_circle (of_complex ?z2.0) ?r2.0;
         ?x2.0
         : poincare_circle (of_complex ?z1.0) ?r1.0 Int
           poincare_circle (of_complex ?z2.0) ?r2.0;
         ?x1.0 ~= ?x2.0 |]
      ==> ?x1.0 = conjugate ?x2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 5),
          template_hole 12),
        template_equation
         (template_app (template_hole 13, template_var 4),
          template_hole 12),
        template_inequation (less_than, template_hole 12, template_var 3),
        template_inequation (less_than, template_hole 12, template_var 2),
        template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_app (template_hole 8, template_var 5)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 5),
          template_hole 9),
        template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_app (template_hole 8, template_var 4)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 4),
          template_hole 9),
        template_negation
         (template_equation (template_var 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 5)),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 4)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 5)),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 4)),
                  template_var 2)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Poincare_CirclesMoreTemplates"
### 0.389s elapsed time, 0.565s cpu time, 0.106s GC time
val it = (): unit
