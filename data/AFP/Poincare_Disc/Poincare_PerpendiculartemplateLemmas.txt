   [("Poincare_Perpendicular.perpendicular_to_x_axis",
     "is_poincare_line ?H ==>
      perpendicular_to_x_axis ?H = perpendicular x_axis ?H",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Poincare_Perpendicular.perpendicular_to_x_axis_intersects_x_axis",
     "[| is_poincare_line ?H; perpendicular_to_x_axis ?H |]
      ==> intersects_x_axis ?H",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Poincare_Perpendicular.perpendicular_to_x_axis_y_axis",
     "[| perpendicular_to_x_axis (poincare_line 0\<^sub>h (of_complex ?z));
         ?z ~= 0 |]
      ==> is_imag ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app (template_hole 6, template_var 0)))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Poincare_Perpendicular.ex_perpendicular",
     "[| is_poincare_line ?H; ?z : unit_disc |]
      ==> EX H'.
             is_poincare_line H' &
             perpendicular ?H H' & ?z : circline_set H'",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Poincare_Perpendicular.perpendicular_intersects",
     "[| is_poincare_line ?H1.0; is_poincare_line ?H2.0;
         perpendicular ?H1.0 ?H2.0 |]
      ==> EX z. z : unit_disc &
                z : circline_set ?H1.0 Int circline_set ?H2.0",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Poincare_Perpendicular.calc_perpendicular_to_x_axis",
     "[| ?z ~= of_complex 1; ?z ~= of_complex (- 1) |]
      ==> ?z : circline_set (calc_perpendicular_to_x_axis ?z) &
          is_poincare_line (calc_perpendicular_to_x_axis ?z) &
          perpendicular_to_x_axis (calc_perpendicular_to_x_axis ?z)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 8, template_hole 7))
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app
               (template_hole 8,
                template_app (template_hole 6, template_hole 7)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("Poincare_Perpendicular.ex_perpendicular_foot",
     "[| is_poincare_line ?H; ?z : unit_disc |]
      ==> EX H'.
             is_poincare_line H' &
             ?z : circline_set H' &
             perpendicular ?H H' &
             (EX z':unit_disc. z' : circline_set H' Int circline_set ?H)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Poincare_Perpendicular.Pythagoras",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc; ?v ~= ?w;
         distinct [?u, ?v, ?w] -->
         perpendicular (poincare_line ?u ?v) (poincare_line ?u ?w) |]
      ==> cosh_dist ?v ?w = cosh_dist ?u ?v * cosh_dist ?u ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_hole 12)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_hole 6))))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)))))),
    ("Poincare_Perpendicular.wlog_perpendicular_axes",
     "[| ?u : unit_disc; ?v : unit_disc; ?z : unit_disc;
         is_poincare_line ?H1.0; is_poincare_line ?H2.0;
         perpendicular ?H1.0 ?H2.0;
         ?z : circline_set ?H1.0 Int circline_set ?H2.0;
         ?u : circline_set ?H1.0; ?v : circline_set ?H2.0;
         !!x y.
            [| is_real x; 0 <= Re x; Re x < 1; is_imag y; 0 <= Im y;
               Im y < 1 |]
            ==> ?P 0\<^sub>h (of_complex x) (of_complex y);
         !!M u v w.
            [| unit_disc_fix M; u : unit_disc; v : unit_disc; w : unit_disc;
               ?P (moebius_pt M u) (moebius_pt M v) (moebius_pt M w) |]
            ==> ?P u v w;
         !!u v w.
            [| u : unit_disc; v : unit_disc; w : unit_disc;
               ?P (conjugate u) (conjugate v) (conjugate w) |]
            ==> ?P u v w |]
      ==> ?P ?z ?u ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 5),
              template_hole 19)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_hole 19)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_hole 19)
            ),
        template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_predicate
         (template_app (template_hole 18, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 2)),
                template_app (template_hole 15, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 5),
              template_app (template_hole 15, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_app (template_hole 15, template_var 1))
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 3),
               template_var 5),
             template_var 4)
           ))),
    ("Poincare_Perpendicular.wlog_perpendicular_foot",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc; ?z : unit_disc;
         ?u ~= ?v; is_poincare_line ?H;
         perpendicular (poincare_line ?u ?v) ?H;
         ?z : circline_set (poincare_line ?u ?v) Int circline_set ?H;
         ?w : circline_set ?H;
         !!u v w.
            [| is_real u; 0 < Re u; Re u < 1; is_real v; - 1 < Re v;
               Re v < 1; Re u ~= Re v; is_imag w; 0 <= Im w; Im w < 1 |]
            ==> ?P 0\<^sub>h (of_complex u) (of_complex v) (of_complex w);
         !!M z u v w.
            [| unit_disc_fix M; u : unit_disc; v : unit_disc; w : unit_disc;
               z : unit_disc;
               ?P (moebius_pt M z) (moebius_pt M u) (moebius_pt M v)
                (moebius_pt M w) |]
            ==> ?P z u v w;
         !!z u v w.
            [| u : unit_disc; v : unit_disc; w : unit_disc;
               ?P (conjugate z) (conjugate u) (conjugate v) (conjugate w) |]
            ==> ?P z u v w;
         ?P ?z ?v ?u ?w ==> ?P ?z ?u ?v ?w |]
      ==> ?P ?z ?u ?v ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 5),
              template_hole 23)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 4),
              template_hole 23)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 3),
              template_hole 23)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 2),
              template_hole 23)
            ),
        template_negation
         (template_equation (template_var 5, template_var 4)),
        template_predicate
         (template_app (template_hole 20, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 5),
                  template_var 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 2),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_hole 16,
                    template_app
                     (template_app (template_hole 18, template_var 5),
                      template_var 4))),
                template_app (template_hole 16, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 3),
              template_app (template_hole 16, template_var 1))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_var 0, template_var 2),
                     template_var 4),
                   template_var 5),
                 template_var 3)
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app (template_var 0, template_var 2),
                    template_var 5),
                  template_var 4),
                template_var 3)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 2),
                 template_var 5),
               template_var 4),
             template_var 3)
           )))]
