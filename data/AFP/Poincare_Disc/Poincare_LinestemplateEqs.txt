   [("Poincare_Lines.is_poincare_line_conjugate_circline_iff",
     "is_poincare_line (conjugate_circline ?H) = is_poincare_line ?H",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Poincare_Lines.conjugate_conjugate",
     "conjugate ` conjugate ` ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Poincare_Lines.conjugate_preserve_poincare_collinear_iff",
     "poincare_collinear (conjugate ` ?A) = poincare_collinear ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Poincare_Lines.is_poincare_line_iff",
     "is_poincare_line ?H =
      (circline_type ?H = - 1 & perpendicular ?H unit_circle)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_dunno)),
    ("Poincare_Lines.mk_poincare_line_cmat_zero_iff",
     "(mk_poincare_line_cmat ?A ?B = mat_zero) = (?A = 0 & ?B = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_dunno)),
    ("Poincare_Lines.mk_poincare_line_cmat_scale",
     "cor ?k *\<^sub>s\<^sub>m mk_poincare_line_cmat ?A ?B =
      mk_poincare_line_cmat (?k * ?A) (cor ?k * ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 2)),
           template_var 0))))]
