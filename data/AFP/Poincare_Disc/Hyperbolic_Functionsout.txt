Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.559s cpu time, 0.041s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.Hyperbolic_Functions" via "Complex_Geometry.More_Complex" via "Complex_Geometry.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
Found termination order: "size_list size <*mlex*> {}"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.898s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Periodic_Fun"
### 0.170s elapsed time, 0.669s cpu time, 0.083s GC time
Loading theory "Complex_Geometry.More_Transcendental" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.Hyperbolic_Functions" via "Complex_Geometry.More_Complex")
### theory "HOL-Library.Nat_Bijection"
### 0.334s elapsed time, 1.336s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs")
### theory "Complex_Geometry.More_Transcendental"
### 0.090s elapsed time, 0.366s cpu time, 0.000s GC time
Loading theory "Complex_Geometry.Canonical_Angle" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.Hyperbolic_Functions" via "Complex_Geometry.More_Complex")
### theory "Complex_Geometry.Canonical_Angle"
### 0.113s elapsed time, 0.451s cpu time, 0.078s GC time
Loading theory "Complex_Geometry.More_Complex" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.Hyperbolic_Functions")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
### theory "Complex_Geometry.More_Complex"
### 0.389s elapsed time, 1.532s cpu time, 0.162s GC time
Loading theory "Draft.Hyperbolic_Functions" (required by "Draft.Hyperbolic_FunctionsMoreTemplates")
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Hyperbolic_Functions"
### 0.259s elapsed time, 0.884s cpu time, 0.607s GC time
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.054s elapsed time, 3.922s cpu time, 0.978s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.115s elapsed time, 3.841s cpu time, 0.895s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.995s elapsed time, 5.850s cpu time, 1.143s GC time
Loading theory "Draft.Templates" (required by "Draft.Hyperbolic_FunctionsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Hyperbolic_FunctionsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.473s elapsed time, 0.524s cpu time, 0.063s GC time
Loading theory "Draft.Hyperbolic_FunctionsMoreTemplates"
val templateLemmas =
   [("Hyperbolic_Functions.cosh_gt_1", "0 < ?x ==> 1 < cosh ?x",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Hyperbolic_Functions.arcosh_ge_0", "1 <= ?x ==> 0 <= arcosh ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Hyperbolic_Functions.cosh_arcosh",
     "1 <= ?x ==> cosh (arcosh ?x) = ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Hyperbolic_Functions.arcosh_eq_0_iff",
     "1 <= ?x ==> (arcosh ?x = 0) = (?x = 1)",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 0)],
       template_bimplication
        (template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_equation (template_var 0, template_hole 4)))),
    ("Hyperbolic_Functions.arcosh_eq_iff",
     "[| 1 <= ?x; 1 <= ?y |] ==> (arcosh ?x = arcosh ?y) = (?x = ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Hyperbolic_Functions.arcosh_mono",
     "[| 1 <= ?x; 1 <= ?y |] ==> (arcosh ?y <= arcosh ?x) = (?y <= ?x)",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_equals, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 1)))),
    ("Hyperbolic_Functions.cosh_eq_iff",
     "[| 0 <= ?x; 0 <= ?y |] ==> (cosh ?x = cosh ?y) = (?x = ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Hyperbolic_Functions.arcosh_double",
     "1 <= ?x ==> 2 * arcosh ?x = arcosh (2 * ?x\<^sup>2 - 1)",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 5, template_hole 4))))),
             template_hole 9))))),
    ("Hyperbolic_Functions.arcosh_add",
     "[| 1 <= ?x; 1 <= ?y |]
      ==> arcosh ?x + arcosh ?y =
          arcosh (?x * ?y + sqrt ((?x\<^sup>2 - 1) * (?y\<^sup>2 - 1)))",
     template_implication
      ([template_inequation (less_equals, template_hole 10, template_var 1),
        template_inequation
         (less_equals, template_hole 10, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app (template_hole 7, template_var 0)),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_hole 0)))),
                     template_hole 10)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0)))),
                   template_hole 10))))))))]:
   (string * thm * template) list
### theory "Draft.Hyperbolic_FunctionsMoreTemplates"
### 0.298s elapsed time, 0.393s cpu time, 0.000s GC time
val it = (): unit
