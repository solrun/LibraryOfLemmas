Loading theory "Complex_Geometry.Linear_Systems" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices")
Loading theory "Complex_Geometry.More_Set" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Complex_Geometry.More_Set"
### 0.054s elapsed time, 0.254s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Complex_Geometry.Linear_Systems"
### 0.074s elapsed time, 0.330s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.499s cpu time, 0.039s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.More_Complex" via "Complex_Geometry.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
Found termination order: "size_list size <*mlex*> {}"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.844s cpu time, 0.114s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Periodic_Fun"
### 0.170s elapsed time, 0.662s cpu time, 0.075s GC time
Loading theory "Complex_Geometry.More_Transcendental" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.More_Complex")
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.307s cpu time, 0.114s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs")
### theory "Complex_Geometry.More_Transcendental"
### 0.088s elapsed time, 0.352s cpu time, 0.000s GC time
Loading theory "Complex_Geometry.Canonical_Angle" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.More_Complex")
### theory "Complex_Geometry.Canonical_Angle"
### 0.115s elapsed time, 0.453s cpu time, 0.086s GC time
Loading theory "Complex_Geometry.More_Complex" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Complex_Geometry.More_Complex"
### 0.332s elapsed time, 1.313s cpu time, 0.135s GC time
Loading theory "Complex_Geometry.Angles" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines" via "Complex_Geometry.Elementary_Complex_Geometry")
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "Complex_Geometry.Angles"
### 0.330s elapsed time, 1.169s cpu time, 0.588s GC time
Loading theory "Complex_Geometry.Elementary_Complex_Geometry" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines")
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 1.023s elapsed time, 3.901s cpu time, 0.871s GC time
Loading theory "Draft.Hyperbolic_Functions" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "Draft.Hyperbolic_Functions"
### 0.096s elapsed time, 0.373s cpu time, 0.098s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices" via "Complex_Geometry.Quadratic")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.127s elapsed time, 4.310s cpu time, 0.969s GC time
### theory "HOL-Library.Quadratic_Discriminant"
### 0.094s elapsed time, 0.349s cpu time, 0.000s GC time
Loading theory "Complex_Geometry.Quadratic" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices" via "Complex_Geometry.Matrices")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Complex_Geometry.Elementary_Complex_Geometry"
### 0.569s elapsed time, 1.987s cpu time, 0.256s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Complex_Geometry.Quadratic"
### 0.294s elapsed time, 0.859s cpu time, 0.096s GC time
Loading theory "Complex_Geometry.Matrices" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Unitary11_Matrices")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.081s elapsed time, 7.077s cpu time, 1.291s GC time
Loading theory "Draft.Templates" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Poincare_BetweenMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.557s elapsed time, 1.185s cpu time, 0.142s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Complex_Geometry.Matrices"
### 1.290s elapsed time, 2.416s cpu time, 0.263s GC time
Loading theory "Complex_Geometry.Homogeneous_Coordinates" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Moebius")
Loading theory "Complex_Geometry.Unitary11_Matrices" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius")
Loading theory "Complex_Geometry.Unitary_Matrices" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines" via "Complex_Geometry.Hermitean_Matrices")
### theory "Complex_Geometry.Unitary_Matrices"
### 0.097s elapsed time, 0.304s cpu time, 0.077s GC time
Loading theory "Complex_Geometry.Hermitean_Matrices" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines" via "Complex_Geometry.Circlines")
### theory "Complex_Geometry.Unitary11_Matrices"
### 0.174s elapsed time, 0.540s cpu time, 0.077s GC time
### theory "Complex_Geometry.Hermitean_Matrices"
### 0.081s elapsed time, 0.239s cpu time, 0.000s GC time
### theory "Complex_Geometry.Homogeneous_Coordinates"
### 0.893s elapsed time, 1.915s cpu time, 1.004s GC time
Loading theory "Complex_Geometry.Moebius" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius")
instantiation
  moebius :: group_add
  minus_moebius == minus :: moebius => moebius => moebius
  uminus_moebius == uminus_class.uminus :: moebius => moebius
  zero_moebius == zero_class.zero :: moebius
  plus_moebius == plus :: moebius => moebius => moebius
### theory "Complex_Geometry.Moebius"
### 0.609s elapsed time, 0.728s cpu time, 0.163s GC time
Loading theory "Complex_Geometry.Circlines" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius" via "Complex_Geometry.Oriented_Circlines")
### theory "Complex_Geometry.Circlines"
### 1.652s elapsed time, 2.548s cpu time, 1.248s GC time
Loading theory "Complex_Geometry.Oriented_Circlines" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines" via "Complex_Geometry.Unit_Circle_Preserving_Moebius")
### theory "Complex_Geometry.Oriented_Circlines"
### 0.492s elapsed time, 0.617s cpu time, 0.169s GC time
Loading theory "Complex_Geometry.Circlines_Angle" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines")
Loading theory "Complex_Geometry.Unit_Circle_Preserving_Moebius" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points" via "Draft.Poincare_Lines")
Found termination order: "{}"
### theory "Complex_Geometry.Circlines_Angle"
### 0.142s elapsed time, 0.286s cpu time, 0.000s GC time
### theory "Complex_Geometry.Unit_Circle_Preserving_Moebius"
### 0.444s elapsed time, 0.668s cpu time, 0.112s GC time
Loading theory "Draft.Poincare_Lines" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance" via "Draft.Poincare_Lines_Ideal_Points")
### theory "Draft.Poincare_Lines"
### 0.422s elapsed time, 0.512s cpu time, 0.121s GC time
Loading theory "Draft.Poincare_Lines_Ideal_Points" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between" via "Draft.Poincare_Distance")
### theory "Draft.Poincare_Lines_Ideal_Points"
### 0.140s elapsed time, 0.140s cpu time, 0.000s GC time
Loading theory "Draft.Poincare_Distance" (required by "Draft.Poincare_BetweenMoreTemplates" via "Draft.Poincare_Between")
[| 1 <= ?x; 1 <= ?y |]
==> arcosh ?x + arcosh ?y =
    arcosh (?x * ?y + sqrt ((?x\<^sup>2 - 1) * (?y\<^sup>2 - 1)))
### theory "Draft.Poincare_Distance"
### 0.326s elapsed time, 0.327s cpu time, 0.000s GC time
Loading theory "Draft.Poincare_Between" (required by "Draft.Poincare_BetweenMoreTemplates")
### theory "Draft.Poincare_Between"
### 0.534s elapsed time, 1.580s cpu time, 1.441s GC time
Loading theory "Draft.Poincare_BetweenMoreTemplates"
val templateLemmas =
   [("Poincare_Between.poincare_between_nonstrict",
     "poincare_between ?u ?u ?v",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Poincare_Between.poincare_between_nonstrict",
     "poincare_between ?u ?v ?v",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Poincare_Between.poincare_between_sandwich",
     "[| ?u : unit_disc; ?v : unit_disc; poincare_between ?u ?v ?u |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Poincare_Between.poincare_between_rev",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc |]
      ==> poincare_between ?u ?v ?w = poincare_between ?w ?v ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2)))),
    ("Poincare_Between.conjugate_preserve_poincare_between",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc |]
      ==> poincare_between (conjugate ?u) (conjugate ?v) (conjugate ?w) =
          poincare_between ?u ?v ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Poincare_Between.poincare_between_poincare_collinear",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc;
         poincare_between ?u ?v ?w |]
      ==> poincare_collinear {?u, ?v, ?w}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Poincare_Between.poincare_between_sum_distances",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc |]
      ==> poincare_between ?u ?v ?w =
          (poincare_distance ?u ?v + poincare_distance ?v ?w =
           poincare_distance ?u ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Poincare_Between.poincare_between_poincare_line_uvz",
     "[| ?u ~= ?v; ?u : unit_disc; ?v : unit_disc; ?z : unit_disc;
         poincare_between ?u ?v ?z |]
      ==> ?z : circline_set (poincare_line ?u ?v)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Poincare_Between.poincare_between_poincare_line_uzv",
     "[| ?u ~= ?v; ?u : unit_disc; ?v : unit_disc; ?z : unit_disc;
         poincare_between ?u ?z ?v |]
      ==> ?z : circline_set (poincare_line ?u ?v)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Poincare_Between.unit_disc_fix_moebius_preserve_poincare_between",
     "[| unit_disc_fix ?M; ?u : unit_disc; ?v : unit_disc; ?w : unit_disc |]
      ==> poincare_between (moebius_pt ?M ?u) (moebius_pt ?M ?v)
           (moebius_pt ?M ?w) =
          poincare_between ?u ?v ?w",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Poincare_Between.poincare_between_transitivity",
     "[| ?a : unit_disc; ?x : unit_disc; ?b : unit_disc; ?y : unit_disc;
         poincare_between ?a ?x ?b; poincare_between ?a ?b ?y |]
      ==> poincare_between ?x ?b ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Poincare_Between.poincare_between_x_axis_u0v",
     "[| is_real ?u'; ?u' ~= 0; ?v' ~= 0 |]
      ==> poincare_between (of_complex ?u') 0\<^sub>h (of_complex ?v') =
          (is_real ?v' & Re ?u' * Re ?v' < 0)",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 1),
          template_hole 11),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_hole 4),
                template_app (template_hole 5, template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 0)),
                   template_hole 11)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_app (template_hole 0, template_var 0))),
                 template_hole 11))
             )))),
    ("Poincare_Between.poincare_collinear3_iff",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc |]
      ==> poincare_collinear {?u, ?v, ?w} =
          (poincare_between ?u ?v ?w |
           poincare_between ?v ?u ?w | poincare_between ?v ?w ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2)))))),
    ("Poincare_Between.poincare_collinear3_between",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc;
         poincare_collinear {?u, ?v, ?w} |]
      ==> poincare_between ?u ?v ?w |
          poincare_between ?u ?w ?v | poincare_between ?v ?u ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)))
           ))),
    ("Poincare_Between.poincare_between_u0v",
     "[| ?u : unit_disc; ?v : unit_disc; ?u ~= 0\<^sub>h; ?v ~= 0\<^sub>h |]
      ==> poincare_between ?u 0\<^sub>h ?v =
          (EX k<0. to_complex ?u = cor k * to_complex ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_hole 13)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_hole 10),
           template_var 0),
         template_app (template_hole 7, t_empty)))),
    ("Poincare_Between.poincare_between_0uv",
     "[| ?u : unit_disc; ?v : unit_disc; ?u ~= 0\<^sub>h; ?v ~= 0\<^sub>h |]
      ==> poincare_between 0\<^sub>h ?u ?v =
          (let u' = to_complex ?u; v' = to_complex ?v
           in Arg u' = Arg v' & cmod u' <= cmod v')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_hole 12)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_negation
         (template_equation (template_var 0, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 9),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           t_empty)))),
    ("Poincare_Between.poincare_between_u0v_polar_form",
     "[| ?x : unit_disc; ?y : unit_disc; ?x ~= 0\<^sub>h; ?y ~= 0\<^sub>h;
         to_complex ?x = cor ?rx * cis ?\<phi>;
         to_complex ?y = cor ?ry * cis ?\<phi> |]
      ==> poincare_between ?x 0\<^sub>h ?y = (?rx * ?ry < 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_hole 13)
            ),
        template_negation
         (template_equation (template_var 4, template_hole 10)),
        template_negation
         (template_equation (template_var 3, template_hole 10)),
        template_equation
         (template_app (template_hole 8, template_var 4),
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2)),
            template_app (template_hole 5, template_var 1))),
        template_equation
         (template_app (template_hole 8, template_var 3),
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0)),
            template_app (template_hole 5, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_hole 10),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("Poincare_Between.poincare_between_sum_distances_x_axis_u0v",
     "[| of_complex ?u' : unit_disc; of_complex ?v' : unit_disc;
         is_real ?u'; ?u' ~= 0; ?v' ~= 0 |]
      ==> (poincare_distance (of_complex ?u') 0\<^sub>h +
           poincare_distance 0\<^sub>h (of_complex ?v') =
           poincare_distance (of_complex ?u') (of_complex ?v')) =
          (is_real ?v' & Re ?u' * Re ?v' < 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 1)),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 0)),
              template_hole 14)
            ),
        template_equation
         (template_app (template_hole 12, template_var 1),
          template_hole 11),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 15, template_var 1)),
                 template_hole 4)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 15, template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 15, template_var 1)),
             template_app (template_hole 15, template_var 0))),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 0)),
                   template_hole 11)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_app (template_hole 0, template_var 0))),
                 template_hole 11))
             )))),
    ("Poincare_Between.poincare_between_sum_distances_x_axis_u0v_different_proof",
     "[| of_complex ?u' : unit_disc; of_complex ?v' : unit_disc;
         is_real ?u'; ?u' ~= 0; ?v' ~= 0; is_real ?v' |]
      ==> (poincare_distance (of_complex ?u') 0\<^sub>h +
           poincare_distance 0\<^sub>h (of_complex ?v') =
           poincare_distance (of_complex ?u') (of_complex ?v')) =
          (Re ?u' * Re ?v' < 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 1)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 0)),
              template_hole 13)
            ),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_hole 10),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_hole 10)],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 14, template_var 1)),
                   template_hole 3)),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 14, template_var 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 14, template_var 1)),
             template_app (template_hole 14, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))),
           template_hole 10)))),
    ("Poincare_Between.unique_poincare_distance_on_ray",
     "[| 0 <= ?d; ?u ~= ?v; ?u : unit_disc; ?v : unit_disc; ?y : unit_disc;
         poincare_distance ?u ?y = ?d; poincare_between ?u ?v ?y;
         ?z : unit_disc; poincare_distance ?u ?z = ?d;
         poincare_between ?u ?v ?z |]
      ==> ?y = ?z",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 4),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 0),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Poincare_Between.poincare_between_x_axis_0uv",
     "[| - 1 < ?x; ?x < 1; ?x ~= 0; - 1 < ?y; ?y < 1; ?y ~= 0 |]
      ==> poincare_between 0\<^sub>h (of_complex (cor ?x))
           (of_complex (cor ?y)) =
          (?x < 0 & ?y < 0 & ?y <= ?x | 0 < ?x & 0 < ?y & ?x <= ?y)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 12, template_hole 11),
          template_var 1),
        template_inequation (less_than, template_var 1, template_hole 11),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation
         (less_than, template_app (template_hole 12, template_hole 11),
          template_var 0),
        template_inequation (less_than, template_var 0, template_hole 11),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 13, template_var 1),
                   template_hole 8)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 13, template_var 0),
                     template_hole 8)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 13, template_hole 8),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 13, template_hole 8),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("Poincare_Between.poincare_between_y_axis_0uv",
     "[| - 1 < ?x; ?x < 1; ?x ~= 0; - 1 < ?y; ?y < 1; ?y ~= 0 |]
      ==> poincare_between 0\<^sub>h (of_complex (\<i> * cor ?x))
           (of_complex (\<i> * cor ?y)) =
          (?x < 0 & ?y < 0 & ?y <= ?x | 0 < ?x & 0 < ?y & ?x <= ?y)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 14, template_hole 13),
          template_var 1),
        template_inequation (less_than, template_var 1, template_hole 13),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_inequation
         (less_than, template_app (template_hole 14, template_hole 13),
          template_var 0),
        template_inequation (less_than, template_var 0, template_hole 13),
        template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 1)))),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, template_var 0)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 15, template_var 1),
                   template_hole 10)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 15, template_var 0),
                     template_hole 10)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 15, template_hole 10),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 15, template_hole 10),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("Poincare_Between.poincare_between_x_axis_uvw",
     "[| - 1 < ?x; ?x < 1; - 1 < ?y; ?y < 1; ?y ~= ?x; - 1 < ?z; ?z < 1;
         ?z ~= ?x |]
      ==> poincare_between (of_complex (cor ?x)) (of_complex (cor ?y))
           (of_complex (cor ?z)) =
          (?y < ?x & ?z < ?x & ?z <= ?y | ?x < ?y & ?x < ?z & ?y <= ?z)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_var 2),
        template_inequation (less_than, template_var 2, template_hole 9),
        template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_var 1),
        template_inequation (less_than, template_var 1, template_hole 9),
        template_negation
         (template_equation (template_var 1, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_var 0),
        template_inequation (less_than, template_var 0, template_hole 9),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 11, template_var 1),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 11, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 11, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 11, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))))))]:
   (string * thm * template) list
### theory "Draft.Poincare_BetweenMoreTemplates"
### 0.425s elapsed time, 0.624s cpu time, 0.102s GC time
val it = (): unit
