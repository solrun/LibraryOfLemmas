   [("Poincare_Circles.poincare_circle_in_disc",
     "[| 0 < ?r; ?z : unit_disc;
         (?ze, ?re) = poincare_circle_euclidean ?z ?r |]
      ==> 0 < ?re",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 3))],
       template_inequation (less_than, template_hole 5, template_var 0))),
    ("Poincare_Circles.poincare_circle_in_disc",
     "[| 0 < ?r; ?z : unit_disc;
         (?ze, ?re) = poincare_circle_euclidean ?z ?r |]
      ==> cmod ?ze < 1",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 3))],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_hole 0))),
    ("Poincare_Circles.poincare_circle_is_euclidean_circle",
     "[| ?z : unit_disc; 0 < ?r |]
      ==> let (Ze, Re) = poincare_circle_euclidean ?z ?r
          in of_complex ` circle Ze Re = poincare_circle ?z ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            ),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Poincare_Circles.poincare_circle_in_disc",
     "[| 0 < ?r; ?z : unit_disc;
         (?ze, ?re) = poincare_circle_euclidean ?z ?r |]
      ==> ALL x:circle ?ze ?re. cmod x < 1",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("Poincare_Circles.intersect_poincare_circles_conjugate_centers",
     "[| ?z1.0 : unit_disc; ?z2.0 : unit_disc; ?z1.0 ~= ?z2.0;
         ?z1.0 = conjugate ?z2.0; 0 < ?r;
         ?u : poincare_circle ?z1.0 ?r Int poincare_circle ?z2.0 ?r |]
      ==> is_real (to_complex ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_var 3, template_app (template_hole 7, template_var 2)),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 1)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 5))),
    ("Poincare_Circles.unit_disc_fix_f_congruent_triangles",
     "[| ?u : unit_disc; ?v : unit_disc; ?w : unit_disc; ?u' : unit_disc;
         ?v' : unit_disc; ?w' : unit_disc;
         poincare_distance ?u ?v = poincare_distance ?u' ?v';
         poincare_distance ?v ?w = poincare_distance ?v' ?w';
         poincare_distance ?u ?w = poincare_distance ?u' ?w' |]
      ==> EX M. unit_disc_fix_f M & M ?u = ?u' & M ?v = ?v' & M ?w = ?w'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Poincare_Circles.intersect_poincare_circles_x_axis",
     "[| is_real ?z1.0; is_real ?z2.0; 0 < ?r1.0; 0 < ?r2.0; - 1 < Re ?z1.0;
         Re ?z1.0 < 1; - 1 < Re ?z2.0; Re ?z2.0 < 1; ?z1.0 ~= ?z2.0;
         ?x1.0
         : poincare_circle (of_complex ?z1.0) ?r1.0 Int
           poincare_circle (of_complex ?z2.0) ?r2.0;
         ?x2.0
         : poincare_circle (of_complex ?z1.0) ?r1.0 Int
           poincare_circle (of_complex ?z2.0) ?r2.0;
         ?x1.0 ~= ?x2.0 |]
      ==> ?x1.0 = conjugate ?x2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 5),
          template_hole 12),
        template_equation
         (template_app (template_hole 13, template_var 4),
          template_hole 12),
        template_inequation (less_than, template_hole 12, template_var 3),
        template_inequation (less_than, template_hole 12, template_var 2),
        template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_app (template_hole 8, template_var 5)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 5),
          template_hole 9),
        template_inequation
         (less_than, template_app (template_hole 10, template_hole 9),
          template_app (template_hole 8, template_var 4)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 4),
          template_hole 9),
        template_negation
         (template_equation (template_var 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 5)),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 4)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 5)),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 4)),
                  template_var 2)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0))))]
