   [("Trace_Based.case_nat_comp_Suc", "case_nat ?x ?f o Suc = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Trace_Based.part_is_subset", "[| part ?S ?P; ?p : ?P |] ==> ?p <= ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("Trace_Based.dist_mult",
     "dist (?x * ?y) (?x * ?z) = \<bar>?x\<bar> * dist ?y ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Trace_Based.dist_divide",
     "dist (?y / ?r) (?z / ?r) = dist ?y ?z / \<bar>?r\<bar>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Trace_Based.Least_eq_0_iff",
     "EX i. ?P i ==> ((LEAST i. ?P i) = 0) = ?P 0",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_hole 0),
         template_app (template_var 0, template_hole 0)))),
    ("Trace_Based.field_abs_le_zero_epsilon",
     "(!!e. (0::?'a) < e ==> \<bar>?x\<bar> <= e) ==>
      \<bar>?x\<bar> = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 3))),
    ("Trace_Based.part_insert_subset",
     "[| part (?A - ?X) ?P; ?X <= ?A |] ==> part ?A (insert ?X ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Trace_Based.integrable_count_space_finite_support",
     "finite {x: ?X. ?f x ~= (0::?'b)} ==> integrable (count_space ?X) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Trace_Based.part_insert",
     "[| part ?A ?P; ?X Int ?A = {} |] ==> part (?A Un ?X) (insert ?X ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 2),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Trace_Based.dist_nonneg_bounded",
     "[| ?l <= ?x; ?x <= ?u; ?l <= ?y; ?y <= ?u |]
      ==> dist ?x ?y <= ?u - ?l",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("Trace_Based.nat_nat_induct",
     "(!!n m. (!!j k. j + k < n + m ==> ?P j k) ==> ?P n m) ==> ?P ?n ?m",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Trace_Based.sum_eq_0_iff",
     "[| finite ?A; !!i. i : ?A ==> (0::?'a) <= ?f i |]
      ==> (sum ?f ?A = (0::?'a)) = (ALL i:?A. ?f i = (0::?'a))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1)),
           template_hole 4),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Trace_Based.sum_less_0_iff",
     "[| finite ?A; !!i. i : ?A ==> (0::?'a) <= ?f i |]
      ==> ((0::?'a) < sum ?f ?A) = (EX i:?A. (0::?'a) < ?f i)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Trace_Based.dist_sum",
     "(!!i. i : ?I ==> dist (?f i) (?g i) <= ?e i) ==>
      dist (sum ?f ?I) (sum ?g ?I) <= sum ?e ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 3)),
           template_app
            (template_app (template_hole 0, t_empty), template_var 3)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 3)))),
    ("Trace_Based.lebesgue_integral_point_measure",
     "finite {a: ?A. 0 < ?f a & ?g a ~= 0} ==>
      integral\<^sup>L (point_measure ?A (%x. ennreal (?f x))) ?g =
      (SUM a | a : ?A & 0 < ?f a & ?g a ~= 0. ?f a * ?g a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12, template_app (template_hole 11, t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2), t_empty)),
           template_var 0),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 11, t_empty))))),
    ("Trace_Based.dist_weighted_sum",
     "[| !!i j.
            [| i : ?I; j : ?J; ?w i ~= 0; ?v j ~= 0 |]
            ==> dist (?f i) (?g j) <= ?d i + ?e j;
         !!i. i : ?I ==> 0 <= ?w i; !!j. j : ?J ==> 0 <= ?v j;
         sum ?w ?I = 1; sum ?v ?J = 1 |]
      ==> dist (SUM i:?I. ?w i * ?f i) (SUM j:?J. ?v j * ?g j)
          <= (SUM i:?I. ?w i * ?d i) + (SUM j:?J. ?v j * ?e j)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, t_empty), template_var 7),
          template_hole 2),
        template_equation
         (template_app
           (template_app (template_hole 1, t_empty), template_var 6),
          template_hole 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 3, t_empty), template_var 7)),
           template_app
            (template_app (template_hole 1, t_empty), template_var 6)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 7)),
           template_app
            (template_app (template_hole 1, t_empty), template_var 6)))))]
