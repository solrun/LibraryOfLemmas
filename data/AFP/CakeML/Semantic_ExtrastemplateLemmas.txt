   [("Semantic_Extras.nsEmpty_nsAppend", "nsAppend nsEmpty ?e = ?e",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Semantic_Extras.nsEmpty_nsAppend", "nsAppend ?e nsEmpty = ?e",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Semantic_Extras.size_list_rev",
     "size_list ?f (rev ?xs) = size_list ?f ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Semantic_Extras.eq_i_oI",
     "Predicate.eq ?x ?xa ==> pred.eval (eq_i_o ?x) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.eq_o_iI",
     "Predicate.eq ?x ?xa ==> pred.eval (eq_o_i ?xa) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Semantic_Extras.c_of_merge",
     "c (extend_dec_env ?env2.0 ?env1.0) =
      nsAppend (c ?env2.0) (c ?env1.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Semantic_Extras.v_of_merge",
     "sem_env.v (extend_dec_env ?env2.0 ?env1.0) =
      nsAppend (sem_env.v ?env2.0) (sem_env.v ?env1.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Semantic_Extras.eq_i_iI",
     "Predicate.eq ?x ?xa ==> pred.eval (eq_i_i ?x ?xa) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Semantic_Extras.do_log_exp",
     "do_log ?op ?v ?e = Some (Exp ?e') ==> ?e = ?e'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_equation (template_var 1, template_var 0))),
    ("Semantic_Extras.computeI",
     "evaluate ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (compute ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.evaluate_list_i_i_i_i_oI",
     "evaluate_list ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (evaluate_list_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.compute_progI",
     "evaluate_prog ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (compute_prog ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.evaluate_top_i_i_i_i_oI",
     "evaluate_top ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (evaluate_top_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.evaluate_clock_mono",
     "evaluate ?ck ?env ?s ?e (?s', ?r3.0) ==> clock ?s' <= clock ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 3)))),
    ("Semantic_Extras.evaluate_clock_mono",
     "evaluate_list ?ck ?env ?s ?es (?s', ?r2.0) ==> clock ?s' <= clock ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 3)))),
    ("Semantic_Extras.eq_i_oE",
     "[| pred.eval (eq_i_o ?x) ?xa; Predicate.eq ?x ?xa ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.eq_o_iE",
     "[| pred.eval (eq_o_i ?xa) ?x; Predicate.eq ?x ?xa ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.do_con_check_build_conv",
     "do_con_check (c ?env) ?cn (length ?es) ==>
      build_conv (c ?env) ?cn ?vs ~= None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3)),
                template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 5, template_var 3)),
                 template_var 2),
               template_var 0),
             template_hole 0)
           ))),
    ("Semantic_Extras.eq_i_iE",
     "[| pred.eval (eq_i_i ?x ?xa) ?y; Predicate.eq ?x ?xa ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.evaluate_dec_i_i_i_i_i_oI",
     "evaluate_dec ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (evaluate_dec_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd) ?xe",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.evaluate_decs_i_i_i_i_i_oI",
     "evaluate_decs ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (evaluate_decs_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd) ?xe",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.evaluate_clock_mono",
     "evaluate_match ?ck ?env ?s ?v ?pes ?v' (?s', ?r1.0) ==>
      clock ?s' <= clock ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 5)))),
    ("Semantic_Extras.find_recfun_someD",
     "find_recfun ?n ?funs = Some (?x, ?e) ==> (?n, ?x, ?e) : set ?funs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Semantic_Extras.evaluate_match_i_i_i_i_i_i_oI",
     "evaluate_match ?x ?xa ?xb ?xc ?xd ?xe ?xf ==>
      pred.eval (evaluate_match_i_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd ?xe) ?xf",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantic_Extras.evaluate_list_singletonI",
     "evaluate ?ck ?env ?s ?e (?s', ?r) ==>
      evaluate_list ?ck ?env ?s [?e] (?s', list_result ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Semantic_Extras.evaluate_list_i_i_i_i_oE",
     "[| pred.eval (evaluate_list_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         evaluate_list ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.computeE",
     "[| pred.eval (compute ?x ?xa ?xb ?xc) ?xd;
         evaluate ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.compute_progE",
     "[| pred.eval (compute_prog ?x ?xa ?xb ?xc) ?xd;
         evaluate_prog ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.evaluate_top_i_i_i_i_oE",
     "[| pred.eval (evaluate_top_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         evaluate_top ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.match_result_sound_err",
     "match_result ?env ?s ?v0.0 ?pes ?err_v = Rerr ?err ==>
      evaluate_match ?ck ?env ?s ?v0.0 ?pes ?err_v (?s, Rerr ?err)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 5),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Semantic_Extras.evaluate_list_singleton_errD",
     "evaluate_list ?ck ?env ?s [?e] (?s', Rerr ?err) ==>
      evaluate ?ck ?env ?s ?e (?s', Rerr ?err)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_hole 5)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Semantic_Extras.evaluate_dec_i_i_i_i_i_oE",
     "[| pred.eval (evaluate_dec_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd) ?xe;
         evaluate_dec ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.evaluate_decs_i_i_i_i_i_oE",
     "[| pred.eval (evaluate_decs_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd) ?xe;
         evaluate_decs ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.evaluate_match_i_i_i_i_i_i_oE",
     "[| pred.eval (evaluate_match_i_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd ?xe)
          ?xf;
         evaluate_match ?x ?xa ?xb ?xc ?xd ?xe ?xf ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.prod_result_cases",
     "[| !!s v. ?r = (s, Rval v) ==> ?thesis;
         !!s err. ?r = (s, Rerr err) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.match_result_sound_val",
     "[| match_result ?env ?s ?v0.0 ?pes ?err_v = Rval (?e, ?env');
         evaluate ?ck
          (update_v (%_. nsAppend (alist_to_ns ?env') (sem_env.v ?env))
            ?env)
          ?s ?e ?bv |]
      ==> evaluate_match ?ck ?env ?s ?v0.0 ?pes ?err_v ?bv",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 1),
                    template_app
                     (template_app (template_hole 4, t_empty),
                      template_var 8)),
                  template_var 7),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 0)
           ))),
    ("Semantic_Extras.do_if_cases",
     "[| do_if ?v ?e1.0 ?e2.0 = None ==> ?thesis;
         do_if ?v ?e1.0 ?e2.0 = Some ?e1.0 ==> ?thesis;
         do_if ?v ?e1.0 ?e2.0 = Some ?e2.0 ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.evaluate_list_singleton_valE",
     "[| evaluate_list ?ck ?env ?s [?e] (?s', Rval ?vs);
         !!v. [| ?vs = [v]; evaluate ?ck ?env ?s ?e (?s', Rval v) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_hole 9)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_var 1)))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.do_log_cases",
     "[| do_log ?op ?v ?e = None ==> ?thesis;
         !!v'. do_log ?op ?v ?e = Some (Val v') ==> ?thesis;
         do_log ?op ?v ?e = Some (Exp ?e) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_hole 4)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.match_result_sound",
     "case match_result ?env ?s ?v0.0 ?pes ?err_v of
      Rval (e, env') =>
        ALL bv.
           evaluate ?ck
            (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v ?env))
              ?env)
            ?s e bv -->
           evaluate_match ?ck ?env ?s ?v0.0 ?pes ?err_v bv
      | Rerr err =>
          evaluate_match ?ck ?env ?s ?v0.0 ?pes ?err_v (?s, Rerr err)",
     template_predicate
      (
         template_app
          (template_app (template_app (template_hole 12, t_empty), t_empty),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Semantic_Extras.evaluate_list_singleton_cases",
     "[| evaluate_list ?ck ?env ?s [?e] ?res;
         !!s' v.
            [| ?res = (s', Rval [v]);
               evaluate ?ck ?env ?s ?e (s', Rval v) |]
            ==> ?thesis;
         !!s' err.
            [| ?res = (s', Rerr err);
               evaluate ?ck ?env ?s ?e (s', Rerr err) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_hole 13)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.match_result_correct",
     "evaluate_match ?ck ?env ?s ?v0.0 ?pes ?err_v (?s', ?bv) ==>
      case ?bv of
      Rval va =>
        EX e env'.
           match_result ?env ?s ?v0.0 ?pes ?err_v = Rval (e, env') &
           evaluate ?ck
            (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v ?env))
              ?env)
            ?s e (?s', Rval va)
      | Rerr err =>
          match_result ?env ?s ?v0.0 ?pes ?err_v = Rerr err |
          (EX e env'.
              match_result ?env ?s ?v0.0 ?pes ?err_v = Rval (e, env') &
              evaluate ?ck
               (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v ?env))
                 ?env)
               ?s e (?s', Rerr err))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 17, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 16, t_empty), t_empty),
             template_var 0)
           ))),
    ("Semantic_Extras.do_opapp_cases",
     "[| do_opapp ?vs = Some (?env', ?exp');
         !!env n v0.
            [| ?vs = [Closure env n ?exp', v0];
               ?env' = update_v (%_. nsBind n v0 (sem_env.v env)) env |]
            ==> ?thesis;
         !!env funs name n v0.
            [| ?vs = [Recclosure env funs name, v0];
               allDistinct (map (%(f, uu_, uu_). f) funs);
               find_recfun name funs = Some (n, ?exp');
               ?env' =
               update_v
                (%_. nsBind n v0 (build_rec_env funs env (sem_env.v env)))
                env |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 24, template_var 3),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.do_opappE",
     "[| do_opapp ?vs = Some ?res;
         !!env n e v2.
            [| ?vs = [Closure env n e, v2];
               ?res = (update_v (%_. nsBind n v2 (sem_env.v env)) env, e) |]
            ==> ?P;
         !!env funs n v2.
            [| ?vs = [Recclosure env funs n, v2];
               Some ?res =
               (if allDistinct (map (%(f, x, e). f) funs)
                then case find_recfun n funs of None => None
                     | Some (n, e) =>
                         Some
                          (update_v
                            (%_. nsBind n v2
                                  (build_rec_env funs env (sem_env.v env)))
                            env,
                           e)
                else None) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 26, template_var 2),
          template_app (template_hole 25, template_var 1)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.do_logE",
     "[| do_log ?op ?v ?e = ?res;
         [| ?op = And;
            ?res =
            (case ?v of Litv x => Map.empty x | Conv None l2 => None
             | Conv (Some (s1, t1)) l2 =>
                 if s1 = ''true''
                 then case t1 of
                      TypeId (Short s2) =>
                        if s2 = ''bool''
                        then case l2 of [] => Some (Exp ?e)
                             | a # x => Map.empty x
                        else None
                      | TypeId (Long xa xb) => Map.empty xb
                      | TypeExn x => Map.empty x
                 else if s1 = ''false''
                      then case t1 of
                           TypeId (Short s4) =>
                             if s4 = ''bool''
                             then case l2 of [] => Some (Val ?v)
                                  | a # x => Map.empty x
                             else None
                           | TypeId (Long xa xb) => Map.empty xb
                           | TypeExn x => Map.empty x
                      else None
             | Closure x xa xb => Map.empty xb
             | Recclosure x xa xb => Map.empty xb | Loc x => Map.empty x
             | Vectorv x => Map.empty x) |]
         ==> ?P;
         [| ?op = Or;
            ?res =
            (case ?v of Litv x => Map.empty x | Conv None l6 => None
             | Conv (Some (s8, t0)) l6 =>
                 if s8 = ''false''
                 then case t0 of
                      TypeId (Short s9) =>
                        if s9 = ''bool''
                        then case l6 of [] => Some (Exp ?e)
                             | a # x => Map.empty x
                        else None
                      | TypeId (Long xa xb) => Map.empty xb
                      | TypeExn x => Map.empty x
                 else if s8 = ''true''
                      then case t0 of
                           TypeId (Short s11) =>
                             if s11 = ''bool''
                             then case l6 of [] => Some (Val ?v)
                                  | a # x => Map.empty x
                             else None
                           | TypeId (Long xa xb) => Map.empty xb
                           | TypeExn x => Map.empty x
                      else None
             | Closure x xa xb => Map.empty xb
             | Recclosure x xa xb => Map.empty xb | Loc x => Map.empty x
             | Vectorv x => Map.empty x) |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 20, template_var 4),
              template_var 3),
            template_var 2),
          template_var 1),
        template_implication
         ([template_equation (template_var 4, template_hole 18)],
          template_implication
           ([template_equation
              (template_var 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 17, t_empty),
                           t_empty),
                         t_empty),
                       t_empty),
                     t_empty),
                   t_empty),
                 template_var 3))],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation (template_var 4, template_hole 0)],
          template_implication
           ([template_equation
              (template_var 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 17, t_empty),
                           t_empty),
                         t_empty),
                       t_empty),
                     t_empty),
                   t_empty),
                 template_var 3))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic_Extras.evaluate_induct",
     "[| evaluate ?x13a ?x14a ?x15a ?x16a (?x17a, ?x17b);
         !!ck env l s. ?P3.0 ck env s (Lit l) s (Rval (Litv l));
         !!ck env e s1 s2 v1.
            [| evaluate ck s1 env e (s2, Rval v1);
               ?P3.0 ck s1 env e s2 (Rval v1) |]
            ==> ?P3.0 ck s1 env (Raise e) s2 (Rerr (Rraise v1));
         !!ck env e s1 s2 err.
            [| evaluate ck s1 env e (s2, Rerr err);
               ?P3.0 ck s1 env e s2 (Rerr err) |]
            ==> ?P3.0 ck s1 env (Raise e) s2 (Rerr err);
         !!ck s1 s2 env e v1 pes.
            [| evaluate ck s1 env e (s2, Rval v1);
               ?P3.0 ck s1 env e s2 (Rval v1) |]
            ==> ?P3.0 ck s1 env (Handle e pes) s2 (Rval v1);
         !!ck s1 s2 env e pes v1 a b.
            (evaluate ck env s1 e (s2, Rerr (Rraise v1)) &
             ?P3.0 ck env s1 e s2 (Rerr (Rraise v1))) &
            evaluate_match ck env s2 v1 pes v1 (a, b) &
            ?P1.0 ck env s2 v1 pes v1 a b ==>
            ?P3.0 ck env s1 (Handle e pes) a b;
         !!ck s1 s2 env e pes a.
            [| evaluate ck env s1 e (s2, Rerr (Rabort a));
               ?P3.0 ck env s1 e s2 (Rerr (Rabort a)) |]
            ==> ?P3.0 ck env s1 (Handle e pes) s2 (Rerr (Rabort a));
         !!ck env cn es vs s s' v1.
            do_con_check (c env) cn (length es) &
            build_conv (c env) cn (rev vs) = Some v1 &
            evaluate_list ck env s (rev es) (s', Rval vs) &
            ?P2.0 ck env s (rev es) s' (Rval vs) ==>
            ?P3.0 ck env s (Con cn es) s' (Rval v1);
         !!ck env cn es s.
            ~ do_con_check (c env) cn (length es) ==>
            ?P3.0 ck env s (Con cn es) s (Rerr (Rabort Rtype_error));
         !!ck env cn es err s s'.
            do_con_check (c env) cn (length es) &
            evaluate_list ck env s (rev es) (s', Rerr err) &
            ?P2.0 ck env s (rev es) s' (Rerr err) ==>
            ?P3.0 ck env s (Con cn es) s' (Rerr err);
         !!ck env n v1 s.
            nsLookup (sem_env.v env) n = Some v1 ==>
            ?P3.0 ck env s (Var n) s (Rval v1);
         !!ck env n s.
            nsLookup (sem_env.v env) n = None ==>
            ?P3.0 ck env s (Var n) s (Rerr (Rabort Rtype_error));
         !!ck env n e s.
            ?P3.0 ck env s (Fun n e) s (Rval (Closure env n e));
         !!ck env es vs env' e a b s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = Some (env', e) &
            (ck --> clock s2 ~= 0) &
            evaluate ck env'
             (if ck then update_clock (%_. clock s2 - 1) s2 else s2) e
             (a, b) &
            ?P3.0 ck env'
             (if ck then update_clock (%_. clock s2 - 1) s2 else s2) e a
             b ==>
            ?P3.0 ck env s1 (App Opapp es) a b;
         !!ck env es vs env' e s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = Some (env', e) & clock s2 = 0 & ck ==>
            ?P3.0 ck env s1 (App Opapp es) s2
             (Rerr (Rabort Rtimeout_error));
         !!ck env es vs s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = None ==>
            ?P3.0 ck env s1 (App Opapp es) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 es vs res s1 s2 refs' ffi'.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_app (refs s2, ffi s2) op0 (rev vs) =
            Some ((refs', ffi'), res) &
            op0 ~= Opapp ==>
            ?P3.0 ck env s1 (App op0 es)
             (update_ffi (%_. ffi') (update_refs (%_. refs') s2)) res;
         !!ck env op0 es vs s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_app (refs s2, ffi s2) op0 (rev vs) = None & op0 ~= Opapp ==>
            ?P3.0 ck env s1 (App op0 es) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 es err s1 s2.
            [| evaluate_list ck env s1 (rev es) (s2, Rerr err);
               ?P2.0 ck env s1 (rev es) s2 (Rerr err) |]
            ==> ?P3.0 ck env s1 (App op0 es) s2 (Rerr err);
         !!ck env op0 e1 e2 v1 e' a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = Some (Exp e') &
            evaluate ck env s2 e' (a, b) & ?P3.0 ck env s2 e' a b ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) a b;
         !!ck env op0 e1 e2 v1 bv s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = Some (Val bv) ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) s2 (Rval bv);
         !!ck env op0 e1 e2 v1 s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = None ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 e1 e2 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (Log op0 e1 e2) s' (Rerr err);
         !!ck env e1 e2 e3 v1 e' a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_if v1 e2 e3 = Some e' &
            evaluate ck env s2 e' (a, b) & ?P3.0 ck env s2 e' a b ==>
            ?P3.0 ck env s1 (exp0.If e1 e2 e3) a b;
         !!ck env e1 e2 e3 v1 s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_if v1 e2 e3 = None ==>
            ?P3.0 ck env s1 (exp0.If e1 e2 e3) s2
             (Rerr (Rabort Rtype_error));
         !!ck env e1 e2 e3 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (exp0.If e1 e2 e3) s' (Rerr err);
         !!ck env e pes v1 a b s1 s2.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_match ck env s2 v1 pes
             (Conv (Some (''Bind'', TypeExn (Short ''Bind''))) []) (a, b) &
            ?P1.0 ck env s2 v1 pes
             (Conv (Some (''Bind'', TypeExn (Short ''Bind''))) []) a b ==>
            ?P3.0 ck env s1 (Mat e pes) a b;
         !!ck env e pes err s s'.
            [| evaluate ck env s e (s', Rerr err);
               ?P3.0 ck env s e s' (Rerr err) |]
            ==> ?P3.0 ck env s (Mat e pes) s' (Rerr err);
         !!ck env n e1 e2 v1 a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            evaluate ck (update_v (%_. nsOptBind n v1 (sem_env.v env)) env)
             s2 e2 (a, b) &
            ?P3.0 ck (update_v (%_. nsOptBind n v1 (sem_env.v env)) env) s2
             e2 a b ==>
            ?P3.0 ck env s1 (exp0.Let n e1 e2) a b;
         !!ck env n e1 e2 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (exp0.Let n e1 e2) s' (Rerr err);
         !!ck env funs e a b s.
            allDistinct (map (%(x, y, z). x) funs) &
            evaluate ck
             (update_v (%_. build_rec_env funs env (sem_env.v env)) env) s e
             (a, b) &
            ?P3.0 ck
             (update_v (%_. build_rec_env funs env (sem_env.v env)) env) s e
             a b ==>
            ?P3.0 ck env s (Letrec funs e) a b;
         !!ck env funs e s.
            ~ allDistinct (map (%x. case x of (x, y, z) => x) funs) ==>
            ?P3.0 ck env s (Letrec funs e) s (Rerr (Rabort Rtype_error));
         !!ck env e t0 s a b.
            [| evaluate ck env s e (a, b); ?P3.0 ck env s e a b |]
            ==> ?P3.0 ck env s (Tannot e t0) a b;
         !!ck env e a b s aa ba.
            [| evaluate ck env s e (aa, ba); ?P3.0 ck env s e aa ba |]
            ==> ?P3.0 ck env s (Lannot e (a, b)) aa ba;
         !!ck env s. ?P2.0 ck env s [] s (Rval []);
         !!ck env e es v1 vs s1 s2 s3.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_list ck env s2 es (s3, Rval vs) &
            ?P2.0 ck env s2 es s3 (Rval vs) ==>
            ?P2.0 ck env s1 (e # es) s3 (Rval (v1 # vs));
         !!ck env e es err s s'.
            [| evaluate ck env s e (s', Rerr err);
               ?P3.0 ck env s e s' (Rerr err) |]
            ==> ?P2.0 ck env s (e # es) s' (Rerr err);
         !!ck env e es v1 err s1 s2 s3.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_list ck env s2 es (s3, Rerr err) &
            ?P2.0 ck env s2 es s3 (Rerr err) ==>
            ?P2.0 ck env s1 (e # es) s3 (Rerr err);
         !!ck env v1 err_v s.
            ?P1.0 ck env s v1 [] err_v s (Rerr (Rraise err_v));
         !!ck env env' v1 p pes e a b err_v s.
            allDistinct (pat_bindings p []) &
            pmatch (c env) (refs s) p v1 [] = Match env' &
            evaluate ck
             (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v env))
               env)
             s e (a, b) &
            ?P3.0 ck
             (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v env))
               env)
             s e a b ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v a b;
         !!ck env v1 p e pes a b s err_v.
            allDistinct (pat_bindings p []) &
            pmatch (c env) (refs s) p v1 [] = No_match &
            evaluate_match ck env s v1 pes err_v (a, b) &
            ?P1.0 ck env s v1 pes err_v a b ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v a b;
         !!ck env v1 p e pes s err_v.
            pmatch (c env) (refs s) p v1 [] = Match_type_error ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v s
             (Rerr (Rabort Rtype_error));
         !!ck env v1 p e pes s err_v.
            ~ allDistinct (pat_bindings p []) ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v s
             (Rerr (Rabort Rtype_error)) |]
      ==> ?P3.0 ?x13a ?x14a ?x15a ?x16a ?x17a ?x17b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 136, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 135, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_var 2, template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           ))),
    ("Semantic_Extras.evaluate_induct",
     "[| evaluate_list ?x8a ?x9a ?x10a ?x11a (?x12a, ?x12b);
         !!ck env l s. ?P3.0 ck env s (Lit l) s (Rval (Litv l));
         !!ck env e s1 s2 v1.
            [| evaluate ck s1 env e (s2, Rval v1);
               ?P3.0 ck s1 env e s2 (Rval v1) |]
            ==> ?P3.0 ck s1 env (Raise e) s2 (Rerr (Rraise v1));
         !!ck env e s1 s2 err.
            [| evaluate ck s1 env e (s2, Rerr err);
               ?P3.0 ck s1 env e s2 (Rerr err) |]
            ==> ?P3.0 ck s1 env (Raise e) s2 (Rerr err);
         !!ck s1 s2 env e v1 pes.
            [| evaluate ck s1 env e (s2, Rval v1);
               ?P3.0 ck s1 env e s2 (Rval v1) |]
            ==> ?P3.0 ck s1 env (Handle e pes) s2 (Rval v1);
         !!ck s1 s2 env e pes v1 a b.
            (evaluate ck env s1 e (s2, Rerr (Rraise v1)) &
             ?P3.0 ck env s1 e s2 (Rerr (Rraise v1))) &
            evaluate_match ck env s2 v1 pes v1 (a, b) &
            ?P1.0 ck env s2 v1 pes v1 a b ==>
            ?P3.0 ck env s1 (Handle e pes) a b;
         !!ck s1 s2 env e pes a.
            [| evaluate ck env s1 e (s2, Rerr (Rabort a));
               ?P3.0 ck env s1 e s2 (Rerr (Rabort a)) |]
            ==> ?P3.0 ck env s1 (Handle e pes) s2 (Rerr (Rabort a));
         !!ck env cn es vs s s' v1.
            do_con_check (c env) cn (length es) &
            build_conv (c env) cn (rev vs) = Some v1 &
            evaluate_list ck env s (rev es) (s', Rval vs) &
            ?P2.0 ck env s (rev es) s' (Rval vs) ==>
            ?P3.0 ck env s (Con cn es) s' (Rval v1);
         !!ck env cn es s.
            ~ do_con_check (c env) cn (length es) ==>
            ?P3.0 ck env s (Con cn es) s (Rerr (Rabort Rtype_error));
         !!ck env cn es err s s'.
            do_con_check (c env) cn (length es) &
            evaluate_list ck env s (rev es) (s', Rerr err) &
            ?P2.0 ck env s (rev es) s' (Rerr err) ==>
            ?P3.0 ck env s (Con cn es) s' (Rerr err);
         !!ck env n v1 s.
            nsLookup (sem_env.v env) n = Some v1 ==>
            ?P3.0 ck env s (Var n) s (Rval v1);
         !!ck env n s.
            nsLookup (sem_env.v env) n = None ==>
            ?P3.0 ck env s (Var n) s (Rerr (Rabort Rtype_error));
         !!ck env n e s.
            ?P3.0 ck env s (Fun n e) s (Rval (Closure env n e));
         !!ck env es vs env' e a b s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = Some (env', e) &
            (ck --> clock s2 ~= 0) &
            evaluate ck env'
             (if ck then update_clock (%_. clock s2 - 1) s2 else s2) e
             (a, b) &
            ?P3.0 ck env'
             (if ck then update_clock (%_. clock s2 - 1) s2 else s2) e a
             b ==>
            ?P3.0 ck env s1 (App Opapp es) a b;
         !!ck env es vs env' e s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = Some (env', e) & clock s2 = 0 & ck ==>
            ?P3.0 ck env s1 (App Opapp es) s2
             (Rerr (Rabort Rtimeout_error));
         !!ck env es vs s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = None ==>
            ?P3.0 ck env s1 (App Opapp es) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 es vs res s1 s2 refs' ffi'.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_app (refs s2, ffi s2) op0 (rev vs) =
            Some ((refs', ffi'), res) &
            op0 ~= Opapp ==>
            ?P3.0 ck env s1 (App op0 es)
             (update_ffi (%_. ffi') (update_refs (%_. refs') s2)) res;
         !!ck env op0 es vs s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_app (refs s2, ffi s2) op0 (rev vs) = None & op0 ~= Opapp ==>
            ?P3.0 ck env s1 (App op0 es) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 es err s1 s2.
            [| evaluate_list ck env s1 (rev es) (s2, Rerr err);
               ?P2.0 ck env s1 (rev es) s2 (Rerr err) |]
            ==> ?P3.0 ck env s1 (App op0 es) s2 (Rerr err);
         !!ck env op0 e1 e2 v1 e' a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = Some (Exp e') &
            evaluate ck env s2 e' (a, b) & ?P3.0 ck env s2 e' a b ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) a b;
         !!ck env op0 e1 e2 v1 bv s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = Some (Val bv) ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) s2 (Rval bv);
         !!ck env op0 e1 e2 v1 s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = None ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 e1 e2 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (Log op0 e1 e2) s' (Rerr err);
         !!ck env e1 e2 e3 v1 e' a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_if v1 e2 e3 = Some e' &
            evaluate ck env s2 e' (a, b) & ?P3.0 ck env s2 e' a b ==>
            ?P3.0 ck env s1 (exp0.If e1 e2 e3) a b;
         !!ck env e1 e2 e3 v1 s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_if v1 e2 e3 = None ==>
            ?P3.0 ck env s1 (exp0.If e1 e2 e3) s2
             (Rerr (Rabort Rtype_error));
         !!ck env e1 e2 e3 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (exp0.If e1 e2 e3) s' (Rerr err);
         !!ck env e pes v1 a b s1 s2.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_match ck env s2 v1 pes
             (Conv (Some (''Bind'', TypeExn (Short ''Bind''))) []) (a, b) &
            ?P1.0 ck env s2 v1 pes
             (Conv (Some (''Bind'', TypeExn (Short ''Bind''))) []) a b ==>
            ?P3.0 ck env s1 (Mat e pes) a b;
         !!ck env e pes err s s'.
            [| evaluate ck env s e (s', Rerr err);
               ?P3.0 ck env s e s' (Rerr err) |]
            ==> ?P3.0 ck env s (Mat e pes) s' (Rerr err);
         !!ck env n e1 e2 v1 a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            evaluate ck (update_v (%_. nsOptBind n v1 (sem_env.v env)) env)
             s2 e2 (a, b) &
            ?P3.0 ck (update_v (%_. nsOptBind n v1 (sem_env.v env)) env) s2
             e2 a b ==>
            ?P3.0 ck env s1 (exp0.Let n e1 e2) a b;
         !!ck env n e1 e2 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (exp0.Let n e1 e2) s' (Rerr err);
         !!ck env funs e a b s.
            allDistinct (map (%(x, y, z). x) funs) &
            evaluate ck
             (update_v (%_. build_rec_env funs env (sem_env.v env)) env) s e
             (a, b) &
            ?P3.0 ck
             (update_v (%_. build_rec_env funs env (sem_env.v env)) env) s e
             a b ==>
            ?P3.0 ck env s (Letrec funs e) a b;
         !!ck env funs e s.
            ~ allDistinct (map (%x. case x of (x, y, z) => x) funs) ==>
            ?P3.0 ck env s (Letrec funs e) s (Rerr (Rabort Rtype_error));
         !!ck env e t0 s a b.
            [| evaluate ck env s e (a, b); ?P3.0 ck env s e a b |]
            ==> ?P3.0 ck env s (Tannot e t0) a b;
         !!ck env e a b s aa ba.
            [| evaluate ck env s e (aa, ba); ?P3.0 ck env s e aa ba |]
            ==> ?P3.0 ck env s (Lannot e (a, b)) aa ba;
         !!ck env s. ?P2.0 ck env s [] s (Rval []);
         !!ck env e es v1 vs s1 s2 s3.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_list ck env s2 es (s3, Rval vs) &
            ?P2.0 ck env s2 es s3 (Rval vs) ==>
            ?P2.0 ck env s1 (e # es) s3 (Rval (v1 # vs));
         !!ck env e es err s s'.
            [| evaluate ck env s e (s', Rerr err);
               ?P3.0 ck env s e s' (Rerr err) |]
            ==> ?P2.0 ck env s (e # es) s' (Rerr err);
         !!ck env e es v1 err s1 s2 s3.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_list ck env s2 es (s3, Rerr err) &
            ?P2.0 ck env s2 es s3 (Rerr err) ==>
            ?P2.0 ck env s1 (e # es) s3 (Rerr err);
         !!ck env v1 err_v s.
            ?P1.0 ck env s v1 [] err_v s (Rerr (Rraise err_v));
         !!ck env env' v1 p pes e a b err_v s.
            allDistinct (pat_bindings p []) &
            pmatch (c env) (refs s) p v1 [] = Match env' &
            evaluate ck
             (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v env))
               env)
             s e (a, b) &
            ?P3.0 ck
             (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v env))
               env)
             s e a b ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v a b;
         !!ck env v1 p e pes a b s err_v.
            allDistinct (pat_bindings p []) &
            pmatch (c env) (refs s) p v1 [] = No_match &
            evaluate_match ck env s v1 pes err_v (a, b) &
            ?P1.0 ck env s v1 pes err_v a b ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v a b;
         !!ck env v1 p e pes s err_v.
            pmatch (c env) (refs s) p v1 [] = Match_type_error ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v s
             (Rerr (Rabort Rtype_error));
         !!ck env v1 p e pes s err_v.
            ~ allDistinct (pat_bindings p []) ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v s
             (Rerr (Rabort Rtype_error)) |]
      ==> ?P2.0 ?x8a ?x9a ?x10a ?x11a ?x12a ?x12b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 136, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 135, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_var 0, template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           ))),
    ("Semantic_Extras.evaluate_induct",
     "[| evaluate_match ?x1a ?x2a ?x3a ?x4a ?x5a ?x6a (?x7a, ?x7b);
         !!ck env l s. ?P3.0 ck env s (Lit l) s (Rval (Litv l));
         !!ck env e s1 s2 v1.
            [| evaluate ck s1 env e (s2, Rval v1);
               ?P3.0 ck s1 env e s2 (Rval v1) |]
            ==> ?P3.0 ck s1 env (Raise e) s2 (Rerr (Rraise v1));
         !!ck env e s1 s2 err.
            [| evaluate ck s1 env e (s2, Rerr err);
               ?P3.0 ck s1 env e s2 (Rerr err) |]
            ==> ?P3.0 ck s1 env (Raise e) s2 (Rerr err);
         !!ck s1 s2 env e v1 pes.
            [| evaluate ck s1 env e (s2, Rval v1);
               ?P3.0 ck s1 env e s2 (Rval v1) |]
            ==> ?P3.0 ck s1 env (Handle e pes) s2 (Rval v1);
         !!ck s1 s2 env e pes v1 a b.
            (evaluate ck env s1 e (s2, Rerr (Rraise v1)) &
             ?P3.0 ck env s1 e s2 (Rerr (Rraise v1))) &
            evaluate_match ck env s2 v1 pes v1 (a, b) &
            ?P1.0 ck env s2 v1 pes v1 a b ==>
            ?P3.0 ck env s1 (Handle e pes) a b;
         !!ck s1 s2 env e pes a.
            [| evaluate ck env s1 e (s2, Rerr (Rabort a));
               ?P3.0 ck env s1 e s2 (Rerr (Rabort a)) |]
            ==> ?P3.0 ck env s1 (Handle e pes) s2 (Rerr (Rabort a));
         !!ck env cn es vs s s' v1.
            do_con_check (c env) cn (length es) &
            build_conv (c env) cn (rev vs) = Some v1 &
            evaluate_list ck env s (rev es) (s', Rval vs) &
            ?P2.0 ck env s (rev es) s' (Rval vs) ==>
            ?P3.0 ck env s (Con cn es) s' (Rval v1);
         !!ck env cn es s.
            ~ do_con_check (c env) cn (length es) ==>
            ?P3.0 ck env s (Con cn es) s (Rerr (Rabort Rtype_error));
         !!ck env cn es err s s'.
            do_con_check (c env) cn (length es) &
            evaluate_list ck env s (rev es) (s', Rerr err) &
            ?P2.0 ck env s (rev es) s' (Rerr err) ==>
            ?P3.0 ck env s (Con cn es) s' (Rerr err);
         !!ck env n v1 s.
            nsLookup (sem_env.v env) n = Some v1 ==>
            ?P3.0 ck env s (Var n) s (Rval v1);
         !!ck env n s.
            nsLookup (sem_env.v env) n = None ==>
            ?P3.0 ck env s (Var n) s (Rerr (Rabort Rtype_error));
         !!ck env n e s.
            ?P3.0 ck env s (Fun n e) s (Rval (Closure env n e));
         !!ck env es vs env' e a b s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = Some (env', e) &
            (ck --> clock s2 ~= 0) &
            evaluate ck env'
             (if ck then update_clock (%_. clock s2 - 1) s2 else s2) e
             (a, b) &
            ?P3.0 ck env'
             (if ck then update_clock (%_. clock s2 - 1) s2 else s2) e a
             b ==>
            ?P3.0 ck env s1 (App Opapp es) a b;
         !!ck env es vs env' e s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = Some (env', e) & clock s2 = 0 & ck ==>
            ?P3.0 ck env s1 (App Opapp es) s2
             (Rerr (Rabort Rtimeout_error));
         !!ck env es vs s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_opapp (rev vs) = None ==>
            ?P3.0 ck env s1 (App Opapp es) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 es vs res s1 s2 refs' ffi'.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_app (refs s2, ffi s2) op0 (rev vs) =
            Some ((refs', ffi'), res) &
            op0 ~= Opapp ==>
            ?P3.0 ck env s1 (App op0 es)
             (update_ffi (%_. ffi') (update_refs (%_. refs') s2)) res;
         !!ck env op0 es vs s1 s2.
            (evaluate_list ck env s1 (rev es) (s2, Rval vs) &
             ?P2.0 ck env s1 (rev es) s2 (Rval vs)) &
            do_app (refs s2, ffi s2) op0 (rev vs) = None & op0 ~= Opapp ==>
            ?P3.0 ck env s1 (App op0 es) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 es err s1 s2.
            [| evaluate_list ck env s1 (rev es) (s2, Rerr err);
               ?P2.0 ck env s1 (rev es) s2 (Rerr err) |]
            ==> ?P3.0 ck env s1 (App op0 es) s2 (Rerr err);
         !!ck env op0 e1 e2 v1 e' a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = Some (Exp e') &
            evaluate ck env s2 e' (a, b) & ?P3.0 ck env s2 e' a b ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) a b;
         !!ck env op0 e1 e2 v1 bv s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = Some (Val bv) ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) s2 (Rval bv);
         !!ck env op0 e1 e2 v1 s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_log op0 v1 e2 = None ==>
            ?P3.0 ck env s1 (Log op0 e1 e2) s2 (Rerr (Rabort Rtype_error));
         !!ck env op0 e1 e2 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (Log op0 e1 e2) s' (Rerr err);
         !!ck env e1 e2 e3 v1 e' a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_if v1 e2 e3 = Some e' &
            evaluate ck env s2 e' (a, b) & ?P3.0 ck env s2 e' a b ==>
            ?P3.0 ck env s1 (exp0.If e1 e2 e3) a b;
         !!ck env e1 e2 e3 v1 s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            do_if v1 e2 e3 = None ==>
            ?P3.0 ck env s1 (exp0.If e1 e2 e3) s2
             (Rerr (Rabort Rtype_error));
         !!ck env e1 e2 e3 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (exp0.If e1 e2 e3) s' (Rerr err);
         !!ck env e pes v1 a b s1 s2.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_match ck env s2 v1 pes
             (Conv (Some (''Bind'', TypeExn (Short ''Bind''))) []) (a, b) &
            ?P1.0 ck env s2 v1 pes
             (Conv (Some (''Bind'', TypeExn (Short ''Bind''))) []) a b ==>
            ?P3.0 ck env s1 (Mat e pes) a b;
         !!ck env e pes err s s'.
            [| evaluate ck env s e (s', Rerr err);
               ?P3.0 ck env s e s' (Rerr err) |]
            ==> ?P3.0 ck env s (Mat e pes) s' (Rerr err);
         !!ck env n e1 e2 v1 a b s1 s2.
            (evaluate ck env s1 e1 (s2, Rval v1) &
             ?P3.0 ck env s1 e1 s2 (Rval v1)) &
            evaluate ck (update_v (%_. nsOptBind n v1 (sem_env.v env)) env)
             s2 e2 (a, b) &
            ?P3.0 ck (update_v (%_. nsOptBind n v1 (sem_env.v env)) env) s2
             e2 a b ==>
            ?P3.0 ck env s1 (exp0.Let n e1 e2) a b;
         !!ck env n e1 e2 err s s'.
            [| evaluate ck env s e1 (s', Rerr err);
               ?P3.0 ck env s e1 s' (Rerr err) |]
            ==> ?P3.0 ck env s (exp0.Let n e1 e2) s' (Rerr err);
         !!ck env funs e a b s.
            allDistinct (map (%(x, y, z). x) funs) &
            evaluate ck
             (update_v (%_. build_rec_env funs env (sem_env.v env)) env) s e
             (a, b) &
            ?P3.0 ck
             (update_v (%_. build_rec_env funs env (sem_env.v env)) env) s e
             a b ==>
            ?P3.0 ck env s (Letrec funs e) a b;
         !!ck env funs e s.
            ~ allDistinct (map (%x. case x of (x, y, z) => x) funs) ==>
            ?P3.0 ck env s (Letrec funs e) s (Rerr (Rabort Rtype_error));
         !!ck env e t0 s a b.
            [| evaluate ck env s e (a, b); ?P3.0 ck env s e a b |]
            ==> ?P3.0 ck env s (Tannot e t0) a b;
         !!ck env e a b s aa ba.
            [| evaluate ck env s e (aa, ba); ?P3.0 ck env s e aa ba |]
            ==> ?P3.0 ck env s (Lannot e (a, b)) aa ba;
         !!ck env s. ?P2.0 ck env s [] s (Rval []);
         !!ck env e es v1 vs s1 s2 s3.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_list ck env s2 es (s3, Rval vs) &
            ?P2.0 ck env s2 es s3 (Rval vs) ==>
            ?P2.0 ck env s1 (e # es) s3 (Rval (v1 # vs));
         !!ck env e es err s s'.
            [| evaluate ck env s e (s', Rerr err);
               ?P3.0 ck env s e s' (Rerr err) |]
            ==> ?P2.0 ck env s (e # es) s' (Rerr err);
         !!ck env e es v1 err s1 s2 s3.
            (evaluate ck env s1 e (s2, Rval v1) &
             ?P3.0 ck env s1 e s2 (Rval v1)) &
            evaluate_list ck env s2 es (s3, Rerr err) &
            ?P2.0 ck env s2 es s3 (Rerr err) ==>
            ?P2.0 ck env s1 (e # es) s3 (Rerr err);
         !!ck env v1 err_v s.
            ?P1.0 ck env s v1 [] err_v s (Rerr (Rraise err_v));
         !!ck env env' v1 p pes e a b err_v s.
            allDistinct (pat_bindings p []) &
            pmatch (c env) (refs s) p v1 [] = Match env' &
            evaluate ck
             (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v env))
               env)
             s e (a, b) &
            ?P3.0 ck
             (update_v (%_. nsAppend (alist_to_ns env') (sem_env.v env))
               env)
             s e a b ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v a b;
         !!ck env v1 p e pes a b s err_v.
            allDistinct (pat_bindings p []) &
            pmatch (c env) (refs s) p v1 [] = No_match &
            evaluate_match ck env s v1 pes err_v (a, b) &
            ?P1.0 ck env s v1 pes err_v a b ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v a b;
         !!ck env v1 p e pes s err_v.
            pmatch (c env) (refs s) p v1 [] = Match_type_error ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v s
             (Rerr (Rabort Rtype_error));
         !!ck env v1 p e pes s err_v.
            ~ allDistinct (pat_bindings p []) ==>
            ?P1.0 ck env s v1 ((p, e) # pes) err_v s
             (Rerr (Rabort Rtype_error)) |]
      ==> ?P1.0 ?x1a ?x2a ?x3a ?x4a ?x5a ?x6a ?x7a ?x7b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 136, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 135, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_var 1, template_var 10),
                         template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           )))]
