   [("Evaluate_Clock.dec_clock", "clock (dec_clock ?st) = clock ?st - 1",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [] = (?st, Rval [])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_hole 0)))),
    ("Evaluate_Clock.fun_evaluate_clock0",
     "clock (fst (fun_evaluate ?s1.0 ?env ?e)) <= clock ?s1.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))),
       template_app (template_hole 2, template_var 2))),
    ("Evaluate_Clock.fix_clock_evaluate",
     "fix_clock ?s1.0 (fun_evaluate ?s1.0 ?env ?e) =
      fun_evaluate ?s1.0 ?env ?e",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Evaluate_Clock.fun_evaluate_clock0",
     "clock (fst (fun_evaluate_match ?s1.0 ?env ?v ?p ?v')) <= clock ?s1.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_app (template_hole 2, template_var 4))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate_match ?st ?env ?v2.0 [] ?err_v =
      (?st, Rerr (Rraise ?err_v))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1),
           template_hole 3),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Lit ?l] = (?st, Rval [Litv ?l])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_hole 5)),
       template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Lannot ?e ?l] = fun_evaluate ?st ?env [?e]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_hole 0)))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Tannot ?e ?t1.0] = fun_evaluate ?st ?env [?e]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_hole 0)))),
    ("Evaluate_Clock.fun_evaluate_clock",
     "fun_evaluate ?s1.0 ?env ?e = (?s2.0, ?r) ==>
      clock ?s2.0 <= clock ?s1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 4)))),
    ("Evaluate_Clock.fix_clock",
     "fix_clock ?s1.0 (?s2.0, ?x) = (?s, ?x) ==> clock ?s <= clock ?s2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Evaluate_Clock.fix_clock",
     "fix_clock ?s1.0 (?s2.0, ?x) = (?s, ?x) ==> clock ?s <= clock ?s1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("Evaluate_Clock.fun_evaluate_clock",
     "fun_evaluate_match ?s1.0 ?env ?v ?p ?v' = (?s2.0, ?r) ==>
      clock ?s2.0 <= clock ?s1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 6)))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Fun ?x ?e] = (?st, Rval [Closure ?env ?x ?e])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_hole 5)),
       template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("Evaluate_Clock.fun_evaluate_length",
     "fun_evaluate ?s ?env ?es = (?s', ?res) ==>
      case ?res of Rval vs => length vs = length ?es
      | Rerr error_result => True",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), t_empty),
             template_var 0)
           ))),
    ("Evaluate_Clock.fun_evaluate_length",
     "fun_evaluate_match ?s ?env ?v ?pes ?err_v = (?s', ?res) ==>
      case ?res of Rval vs => length vs = 1 | Rerr error_result => True",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), t_empty),
             template_var 0)
           ))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Var ?n] =
      (case nsLookup (sem_env.v ?env) ?n of
       None => (?st, Rerr (Rabort Rtype_error))
       | Some v2 => (?st, Rval [v2]))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 13, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 12,
             template_app (template_hole 11, template_var 0)),
           template_hole 10)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 5)))),
           t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Evaluate_Clock.fun_evaluate_matchE",
     "[| fun_evaluate_match ?s ?env ?v ?pes ?err_v = (?s', Rval ?vs);
         !!v. ?vs = [v] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Raise ?e] =
      (case fun_evaluate ?st ?env [?e] of
       (st', Rval v2) => (st', Rerr (Rraise (hd v2)))
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)),
           template_hole 6)),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 6))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Mat ?e ?pes] =
      (case fun_evaluate ?st ?env [?e] of
       (st', Rval v2) => fun_evaluate_match st' ?env (hd v2) ?pes Bindv
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0)),
           template_hole 7)),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app
            (template_app (template_hole 10, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 9, template_var 1),
             template_hole 7))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Handle ?e ?pes] =
      (case fun_evaluate ?st ?env [?e] of (st', Rval ab) => (st', Rval ab)
       | (st', Rerr (Rraise v2)) => fun_evaluate_match st' ?env v2 ?pes v2
       | (st', Rerr (Rabort abort)) => (st', Rerr (Rabort abort)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 0)),
           template_hole 8)),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_app (template_hole 11, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_hole 8))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Letrec ?funs ?e] =
      (if allDistinct (map (%(x, y, z). x) ?funs)
       then fun_evaluate ?st
             (update_v (%_. build_rec_env ?funs ?env (sem_env.v ?env)) ?env)
             [?e]
       else (?st, Rerr (Rabort Rtype_error)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 15, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_var 1),
               template_var 0)),
           template_hole 12)),
       template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, t_empty)),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 15, template_var 3),
               template_app
                (template_app (template_hole 6, t_empty), template_var 2)),
             template_app
              (template_app (template_hole 14, template_var 0),
               template_hole 12))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [exp0.Let ?xo ?e1.0 ?e2.0] =
      (case fun_evaluate ?st ?env [?e1.0] of
       (st', Rval v2) =>
         fun_evaluate st'
          (update_v (%_. nsOptBind ?xo (hd v2) (sem_env.v ?env)) ?env)
          [?e2.0]
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 4), template_var 3),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_app (template_hole 9, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_app (template_hole 11, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_hole 8))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [exp0.If ?e1.0 ?e2.0 ?e3.0] =
      (case fun_evaluate ?st ?env [?e1.0] of
       (st', Rval v2) =>
         case do_if (hd v2) ?e2.0 ?e3.0 of
         None => (st', Rerr (Rabort Rtype_error))
         | Some e => fun_evaluate st' ?env [e]
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 4), template_var 3),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 9)),
       template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app
            (template_app (template_hole 12, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 11, template_var 2),
             template_hole 9))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env (?e1.0 # ?e2.0 # ?es) =
      (case fun_evaluate ?st ?env [?e1.0] of
       (st', Rval v1) =>
         case fun_evaluate st' ?env (?e2.0 # ?es) of
         (st'', Rval vs) => (st'', Rval (hd v1 # vs))
         | (st'', Rerr error_result) => (st'', Rerr error_result)
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_app (template_hole 9, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 8, template_var 2),
             template_hole 0))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Log ?lop ?e1.0 ?e2.0] =
      (case fun_evaluate ?st ?env [?e1.0] of
       (st', Rval v1) =>
         case do_log ?lop (hd v1) ?e2.0 of
         None => (st', Rerr (Rabort Rtype_error))
         | Some (Exp e) => fun_evaluate st' ?env [e]
         | Some (Val v2) => (st', Rval [v2])
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 16, template_var 4), template_var 3),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_app (template_hole 14, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 13)),
       template_app
        (template_app (template_hole 12, t_empty),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 15, template_var 1),
             template_hole 13))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [Con ?cn ?es] =
      (if do_con_check (c ?env) ?cn (length ?es)
       then case fun_evaluate ?st ?env (rev ?es) of
            (st', Rval vs) =>
              case build_conv (c ?env) ?cn (rev vs) of
              None => (st', Rerr (Rabort Rtype_error))
              | Some v2 => (st', Rval [v2])
            | (st', Rerr error_result) => (st', Rerr error_result)
       else (?st, Rerr (Rabort Rtype_error)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 20, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_var 1),
               template_var 0)),
           template_hole 17)),
       template_app
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_app
                  (template_hole 15,
                   template_app (template_hole 14, template_var 2)),
                 template_var 1),
               template_app (template_hole 13, template_var 0))),
           template_app
            (template_app (template_hole 12, t_empty),
             template_app
              (template_app
                (template_app (template_hole 20, template_var 3),
                 template_var 2),
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app (template_hole 9, template_var 3),
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6)))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate_match ?st ?env ?v2.0 ((?p, ?e) # ?pes) ?err_v =
      (if allDistinct (pat_bindings ?p [])
       then case pmatch (c ?env) (refs ?st) ?p ?v2.0 [] of
            No_match => fun_evaluate_match ?st ?env ?v2.0 ?pes ?err_v
            | Match_type_error => (?st, Rerr (Rabort Rtype_error))
            | Match env_v' =>
                fun_evaluate ?st
                 (update_v
                   (%_. nsAppend (alist_to_ns env_v') (sem_env.v ?env))
                   ?env)
                 [?e]
       else (?st, Rerr (Rabort Rtype_error)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 22, template_var 6),
               template_var 5),
             template_var 4),
           template_app
            (template_app
              (template_hole 21,
               template_app
                (template_app (template_hole 20, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 19,
             template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_var 3),
                 template_hole 16))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 22, template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 14, template_var 6),
                   template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_hole 11)))),
               t_empty),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 5)),
                     template_app (template_hole 1, template_var 6)),
                   template_var 3),
                 template_var 4),
               template_hole 0))),
         template_app
          (template_app (template_hole 14, template_var 6),
           template_app
            (template_hole 13,
             template_app (template_hole 12, template_hole 11)))))),
    ("Evaluate_Clock.fun_evaluate_simps",
     "fun_evaluate ?st ?env [App ?op1.0 ?es] =
      (case fun_evaluate ?st ?env (rev ?es) of
       (st', Rval vs) =>
         if ?op1.0 = Opapp
         then case do_opapp (rev vs) of
              None => (st', Rerr (Rabort Rtype_error))
              | Some (env', e) =>
                  if clock st' = 0 then (st', Rerr (Rabort Rtimeout_error))
                  else fun_evaluate (dec_clock st') env' [e]
         else case do_app (refs st', ffi st') ?op1.0 (rev vs) of
              None => (st', Rerr (Rabort Rtype_error))
              | Some ((refs1, ffi1), r) =>
                  (update_ffi (%_. ffi1) (update_refs (%_. refs1) st'),
                   list_result r)
       | (st', Rerr error_result) => (st', Rerr error_result))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 32, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 31,
             template_app
              (template_app (template_hole 30, template_var 1),
               template_var 0)),
           template_hole 29)),
       template_app
        (template_app (template_hole 28, t_empty),
         template_app
          (template_app
            (template_app (template_hole 32, template_var 3),
             template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Evaluate_Clock.fun_evaluate_induct",
     "[| !!st env. ?Q st env [];
         !!st env e1 e2 es.
            [| ?Q st env [e1];
               !!x y x1.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1 |]
                  ==> ?Q x env (e2 # es) |]
            ==> ?Q st env (e1 # e2 # es);
         !!st env l. ?Q st env [Lit l];
         !!st env e. ?Q st env [e] ==> ?Q st env [Raise e];
         !!st env e pes.
            [| ?Q st env [e];
               !!x y x2 x1.
                  [| (x, y) = fun_evaluate st env [e]; y = Rerr x2;
                     x2 = Rraise x1 |]
                  ==> ?P x env x1 pes x1 |]
            ==> ?Q st env [Handle e pes];
         !!st env cn es.
            (do_con_check (c env) cn (length es) ==> ?Q st env (rev es)) ==>
            ?Q st env [Con cn es];
         !!st env n. ?Q st env [Var n]; !!st env x e. ?Q st env [Fun x e];
         !!st env op1 es.
            [| ?Q st env (rev es);
               !!x y x1 x2 xa ya.
                  [| (x, y) = fun_evaluate st env (rev es); y = Rval x1;
                     op1 = Opapp; do_opapp (rev x1) = Some x2;
                     (xa, ya) = x2; clock x ~= 0 |]
                  ==> ?Q (dec_clock x) xa [ya] |]
            ==> ?Q st env [App op1 es];
         !!st env lop e1 e2.
            [| ?Q st env [e1];
               !!x y x1 x2 x1a.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1;
                     do_log lop (hd x1) e2 = Some x2; x2 = Exp x1a |]
                  ==> ?Q x env [x1a] |]
            ==> ?Q st env [Log lop e1 e2];
         !!st env e1 e2 e3.
            [| ?Q st env [e1];
               !!x y x1 x2.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1;
                     do_if (hd x1) e2 e3 = Some x2 |]
                  ==> ?Q x env [x2] |]
            ==> ?Q st env [exp0.If e1 e2 e3];
         !!st env e pes.
            [| ?Q st env [e];
               !!x y x1.
                  [| (x, y) = fun_evaluate st env [e]; y = Rval x1 |]
                  ==> ?P x env (hd x1) pes Bindv |]
            ==> ?Q st env [Mat e pes];
         !!st env xo e1 e2.
            [| ?Q st env [e1];
               !!x y x1.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1 |]
                  ==> ?Q x
                       (update_v (%_. nsOptBind xo (hd x1) (sem_env.v env))
                         env)
                       [e2] |]
            ==> ?Q st env [exp0.Let xo e1 e2];
         !!st env funs e.
            (allDistinct (map (%(x, y, z). x) funs) ==>
             ?Q st
              (update_v (%_. build_rec_env funs env (sem_env.v env)) env)
              [e]) ==>
            ?Q st env [Letrec funs e];
         !!st env e t1. ?Q st env [e] ==> ?Q st env [Tannot e t1];
         !!st env e l. ?Q st env [e] ==> ?Q st env [Lannot e l];
         !!st env v2 err_v. ?P st env v2 [] err_v;
         !!st env v2 p e pes err_v.
            [| [| allDistinct (pat_bindings p []);
                  pmatch (c env) (refs st) p v2 [] = No_match |]
               ==> ?P st env v2 pes err_v;
               !!x3. [| allDistinct (pat_bindings p []);
                        pmatch (c env) (refs st) p v2 [] = Match x3 |]
                     ==> ?Q st
                          (update_v
                            (%_. nsAppend (alist_to_ns x3) (sem_env.v env))
                            env)
                          [e] |]
            ==> ?P st env v2 ((p, e) # pes) err_v |]
      ==> ?Q ?a5.0 ?a6.0 ?a7.0",
     template_implication
      ([template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 4, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Evaluate_Clock.fun_evaluate_induct",
     "[| !!st env. ?Q st env [];
         !!st env e1 e2 es.
            [| ?Q st env [e1];
               !!x y x1.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1 |]
                  ==> ?Q x env (e2 # es) |]
            ==> ?Q st env (e1 # e2 # es);
         !!st env l. ?Q st env [Lit l];
         !!st env e. ?Q st env [e] ==> ?Q st env [Raise e];
         !!st env e pes.
            [| ?Q st env [e];
               !!x y x2 x1.
                  [| (x, y) = fun_evaluate st env [e]; y = Rerr x2;
                     x2 = Rraise x1 |]
                  ==> ?P x env x1 pes x1 |]
            ==> ?Q st env [Handle e pes];
         !!st env cn es.
            (do_con_check (c env) cn (length es) ==> ?Q st env (rev es)) ==>
            ?Q st env [Con cn es];
         !!st env n. ?Q st env [Var n]; !!st env x e. ?Q st env [Fun x e];
         !!st env op1 es.
            [| ?Q st env (rev es);
               !!x y x1 x2 xa ya.
                  [| (x, y) = fun_evaluate st env (rev es); y = Rval x1;
                     op1 = Opapp; do_opapp (rev x1) = Some x2;
                     (xa, ya) = x2; clock x ~= 0 |]
                  ==> ?Q (dec_clock x) xa [ya] |]
            ==> ?Q st env [App op1 es];
         !!st env lop e1 e2.
            [| ?Q st env [e1];
               !!x y x1 x2 x1a.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1;
                     do_log lop (hd x1) e2 = Some x2; x2 = Exp x1a |]
                  ==> ?Q x env [x1a] |]
            ==> ?Q st env [Log lop e1 e2];
         !!st env e1 e2 e3.
            [| ?Q st env [e1];
               !!x y x1 x2.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1;
                     do_if (hd x1) e2 e3 = Some x2 |]
                  ==> ?Q x env [x2] |]
            ==> ?Q st env [exp0.If e1 e2 e3];
         !!st env e pes.
            [| ?Q st env [e];
               !!x y x1.
                  [| (x, y) = fun_evaluate st env [e]; y = Rval x1 |]
                  ==> ?P x env (hd x1) pes Bindv |]
            ==> ?Q st env [Mat e pes];
         !!st env xo e1 e2.
            [| ?Q st env [e1];
               !!x y x1.
                  [| (x, y) = fun_evaluate st env [e1]; y = Rval x1 |]
                  ==> ?Q x
                       (update_v (%_. nsOptBind xo (hd x1) (sem_env.v env))
                         env)
                       [e2] |]
            ==> ?Q st env [exp0.Let xo e1 e2];
         !!st env funs e.
            (allDistinct (map (%(x, y, z). x) funs) ==>
             ?Q st
              (update_v (%_. build_rec_env funs env (sem_env.v env)) env)
              [e]) ==>
            ?Q st env [Letrec funs e];
         !!st env e t1. ?Q st env [e] ==> ?Q st env [Tannot e t1];
         !!st env e l. ?Q st env [e] ==> ?Q st env [Lannot e l];
         !!st env v2 err_v. ?P st env v2 [] err_v;
         !!st env v2 p e pes err_v.
            [| [| allDistinct (pat_bindings p []);
                  pmatch (c env) (refs st) p v2 [] = No_match |]
               ==> ?P st env v2 pes err_v;
               !!x3. [| allDistinct (pat_bindings p []);
                        pmatch (c env) (refs st) p v2 [] = Match x3 |]
                     ==> ?Q st
                          (update_v
                            (%_. nsAppend (alist_to_ns x3) (sem_env.v env))
                            env)
                          [e] |]
            ==> ?P st env v2 ((p, e) # pes) err_v |]
      ==> ?P ?a0.0 ?a1.0 ?a2.0 ?a3.0 ?a4.0",
     template_implication
      ([template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty)),
        template_predicate (template_app (template_hole 95, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_var 5, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           )))]
