Loading theory "Draft.Minimum_Maximum" (required by "Draft.LP_DualityTemplates" via "Draft.LP_Duality")
Loading theory "Draft.Templates" (required by "Draft.LP_DualityTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Move_To_Matrix" (required by "Draft.LP_DualityTemplates" via "Draft.LP_Duality")
### theory "Draft.Move_To_Matrix"
### 0.054s elapsed time, 0.202s cpu time, 0.000s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.226s cpu time, 0.000s GC time
### theory "Draft.Minimum_Maximum"
### 0.067s elapsed time, 0.227s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LP_DualityTemplates")
Loading theory "Draft.LP_Duality" (required by "Draft.LP_DualityTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.528s elapsed time, 1.083s cpu time, 0.062s GC time
### theory "Draft.LP_Duality"
### 0.776s elapsed time, 1.362s cpu time, 0.132s GC time
Loading theory "Draft.LP_DualityTemplates"
val templateLemmas =
   [("LP_Duality.unbounded_primal_solutions",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc;
         ALL v.
            EX x:carrier_vec ?nc.
               ?A *\<^sub>v x <= ?b & v <= ?c \<bullet> x |]
      ==> ~ (EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_negation
        (template_predicate (template_app (template_hole 3, t_empty))))),
    ("LP_Duality.unbounded_dual_solutions",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc;
         ALL v.
            EX y>=0\<^sub>v ?nr.
               ?A\<^sup>T *\<^sub>v y = ?c & ?b \<bullet> y <= v |]
      ==> ~ (EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 12, template_var 2)),
                 t_empty)
               )
           ))),
    ("LP_Duality.weak_duality_theorem",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; ?x : carrier_vec ?nc; ?A *\<^sub>v ?x <= ?b;
         0\<^sub>v ?nr <= ?y; ?A\<^sup>T *\<^sub>v ?y = ?c |]
      ==> ?c \<bullet> ?x <= ?b \<bullet> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 6),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 4))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 6), template_var 1),
          template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 5),
          template_var 0),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 2, template_var 6)),
            template_var 0),
          template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("LP_Duality.strong_duality_theorem_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c |]
      ==> has_Maximum
           {?c \<bullet> x |x. x : carrier_vec ?nc & ?A *\<^sub>v x <= ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 12, template_var 2)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("LP_Duality.strong_duality_theorem_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c |]
      ==> has_Minimum
           {?b \<bullet> y |y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 12, template_var 2)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("LP_Duality.strong_duality_theorem_primal_sat_bounded_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         ALL x:carrier_vec ?nc.
            ?A *\<^sub>v x <= ?b --> ?c \<bullet> x <= ?bound |]
      ==> has_Maximum
           {?c \<bullet> x |x. x : carrier_vec ?nc & ?A *\<^sub>v x <= ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 12, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 12, template_var 3)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("LP_Duality.strong_duality_theorem_primal_sat_bounded_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         ALL x:carrier_vec ?nc.
            ?A *\<^sub>v x <= ?b --> ?c \<bullet> x <= ?bound |]
      ==> has_Minimum
           {?b \<bullet> y |y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app
               (template_app (template_hole 17, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app (template_hole 15, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app (template_hole 15, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 15, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 15, template_var 3)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("LP_Duality.strong_duality_theorem_dual_sat_bounded_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c;
         ALL y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c -->
            ?bound <= ?b \<bullet> y |]
      ==> has_Maximum
           {?c \<bullet> x |x. x : carrier_vec ?nc & ?A *\<^sub>v x <= ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 5),
              template_app
               (template_app (template_hole 16, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 14, template_var 3))
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("LP_Duality.strong_duality_theorem_dual_sat_bounded_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c;
         ALL y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c -->
            ?bound <= ?b \<bullet> y |]
      ==> has_Minimum
           {?b \<bullet> y |y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 5),
              template_app
               (template_app (template_hole 16, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 14, template_var 3))
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("LP_Duality.strong_duality_theorem_both_sat",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c |]
      ==> EX x y.
             x : carrier_vec ?nc &
             ?A *\<^sub>v x <= ?b &
             0\<^sub>v ?nr <= y &
             ?A\<^sup>T *\<^sub>v y = ?c & ?c \<bullet> x = ?b \<bullet> y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 10, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 10, template_var 2)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("LP_Duality.strong_duality_theorem_primal_sat_bounded",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         ALL x:carrier_vec ?nc.
            ?A *\<^sub>v x <= ?b --> ?c \<bullet> x <= ?bound |]
      ==> EX x y.
             x : carrier_vec ?nc &
             ?A *\<^sub>v x <= ?b &
             0\<^sub>v ?nr <= y &
             ?A\<^sup>T *\<^sub>v y = ?c & ?c \<bullet> x = ?b \<bullet> y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 5),
              template_app
               (template_app (template_hole 15, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app (template_hole 13, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app (template_hole 13, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 13, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 13, template_var 3)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("LP_Duality.strong_duality_theorem_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c |]
      ==> Maximum
           {?c \<bullet> x |x. x : carrier_vec ?nc & ?A *\<^sub>v x <= ?b} =
          Minimum
           {?b \<bullet> y |y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app (template_hole 15, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app (template_hole 13, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 13, template_var 2)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_hole 0, template_app (template_hole 2, t_empty))))),
    ("LP_Duality.strong_duality_theorem_dual_sat_bounded",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c;
         ALL y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c -->
            ?bound <= ?b \<bullet> y |]
      ==> EX x y.
             x : carrier_vec ?nc &
             ?A *\<^sub>v x <= ?b &
             0\<^sub>v ?nr <= y &
             ?A\<^sup>T *\<^sub>v y = ?c & ?c \<bullet> x = ?b \<bullet> y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("LP_Duality.strong_duality_theorem_primal_sat_bounded_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc; EX x:carrier_vec ?nc. ?A *\<^sub>v x <= ?b;
         ALL x:carrier_vec ?nc.
            ?A *\<^sub>v x <= ?b --> ?c \<bullet> x <= ?bound |]
      ==> Maximum
           {?c \<bullet> x |x. x : carrier_vec ?nc & ?A *\<^sub>v x <= ?b} =
          Minimum
           {?b \<bullet> y |y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 5),
              template_app
               (template_app (template_hole 18, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app (template_hole 16, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app (template_hole 16, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 16, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 16, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app
          (template_hole 3, template_app (template_hole 6, t_empty))))),
    ("LP_Duality.strong_duality_theorem_dual_sat_bounded_min_max",
     "[| ?A : carrier_mat ?nr ?nc; ?b : carrier_vec ?nr;
         ?c : carrier_vec ?nc;
         EX y>=0\<^sub>v ?nr. ?A\<^sup>T *\<^sub>v y = ?c;
         ALL y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c -->
            ?bound <= ?b \<bullet> y |]
      ==> Maximum
           {?c \<bullet> x |x. x : carrier_vec ?nc & ?A *\<^sub>v x <= ?b} =
          Minimum
           {?b \<bullet> y |y.
            0\<^sub>v ?nr <= y & ?A\<^sup>T *\<^sub>v y = ?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app
               (template_app (template_hole 17, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app (template_hole 15, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app (template_hole 15, template_var 3))
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app
          (template_hole 0, template_app (template_hole 1, t_empty)))))]:
   (string * thm * template) list
### theory "Draft.LP_DualityTemplates"
### 2.265s elapsed time, 2.681s cpu time, 0.346s GC time
val it = (): unit
