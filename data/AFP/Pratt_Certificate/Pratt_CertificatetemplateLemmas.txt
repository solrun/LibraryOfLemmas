   [("Pratt_Certificate.check_prime_factors_subset_0",
     "~ check_prime_factors_subset 0 ?ps",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)
             )
         )),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat 0 1 ?m' = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 1)),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat ?b' ?e' 1 = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat 0 (Suc 0) ?m' = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_hole 1)),
         template_var 0),
       template_hole 1)),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat 0 (numeral ?e) ?m' = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_hole 1)),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat ?b' ?e' (Suc 0) = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_hole 0)),
    ("Pratt_Certificate.eval_mod_exp_nat_aux",
     "mod_exp_nat_aux ?m ?y ?x 0 = ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_var 1)),
    ("Pratt_Certificate.valid_pratt_tree_imp_prime",
     "valid_pratt_tree ?t ==> prime (pratt_tree_number ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat 1 ?e' ?m' = 1 mod ?m'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("Pratt_Certificate.eval_mod_exp",
     "mod_exp_nat ?b' 1 ?m' = ?b' mod ?m'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat ?b' 0 ?m' = 1 mod ?m'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Pratt_Certificate.eval_mod_exp", "mod_exp_nat ?b' ?e' 0 = ?b' ^ ?e'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Pratt_Certificate.eval_mod_exp",
     "mod_exp_nat ?b' (Suc 0) ?m' = ?b' mod ?m'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Pratt_Certificate.eval_mod_exp",
     "mod_exp_nat (Suc 0) ?e' ?m' = 1 mod ?m'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Pratt_Certificate.check_prime_factors_subset_Cons",
     "check_prime_factors_subset 1 (?p # ?ps) =
      check_prime_factors_subset 1 ?ps",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Pratt_Certificate.length_fpc",
     "length (build_fpc ?p ?a ?r ?qs) = length ?qs + 1",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Pratt_Certificate.check_prime_factors_subset_Cons",
     "check_prime_factors_subset (Suc 0) (?p # ?ps) =
      check_prime_factors_subset (Suc 0) ?ps",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0))),
    ("Pratt_Certificate.prime_factors_of_prime",
     "prime ?p ==> prime_factors ?p = {?p}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Pratt_Certificate.valid_cert_concatI",
     "ALL x:set ?xs. valid_cert x ==> valid_cert (concat ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Pratt_Certificate.mod_exp_nat_code",
     "mod_exp_nat ?b ?e ?m = mod_exp_nat_aux ?m 1 ?b ?e mod ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Pratt_Certificate.eval_mod_exp_nat_aux",
     "mod_exp_nat_aux ?m ?y ?x (Suc 0) = ?x * ?y mod ?m",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 3, template_hole 2)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 2))),
    ("Pratt_Certificate.valid_cert_appendI",
     "[| valid_cert ?r; valid_cert ?s |] ==> valid_cert (?r @ ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pratt_Certificate.pratt",
     "prime ?p = (EX c. Prime ?p : set c & valid_cert c)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Pratt_Certificate.Suc_0_eq_Suc_0_mod_iff",
     "(Suc 0 = Suc 0 mod ?n) = (?n ~= Suc 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_hole 2)),
           template_var 0)),
       template_negation
        (
           template_equation
            (template_var 0,
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Pratt_Certificate.Suc_0_mod_eq_Suc_0_iff",
     "(Suc 0 mod ?n = Suc 0) = (?n ~= Suc 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_negation
        (
           template_equation
            (template_var 0,
             template_app (template_hole 2, template_hole 1))
           ))),
    ("Pratt_Certificate.prod_list_ge",
     "ALL x:set ?xs. 1 <= x ==> 1 <= prod_list ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Pratt_Certificate.pratt_primeI",
     "[| valid_cert ?xs; Prime ?p : set ?xs |] ==> prime ?p",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Pratt_Certificate.list_all_ConsI",
     "[| ?P ?x; list_all ?P ?xs |] ==> list_all ?P (?x # ?xs)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pratt_Certificate.pratt_triple_1",
     "[| 1 < ?p; ?x = 1 |] ==> pratt_triple ?p ?a ?x",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation (template_var 1, template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Pratt_Certificate.mod_exp_nat_aux_correct",
     "mod_exp_nat_aux ?m ?y ?x ?n mod ?m = ?x ^ ?n * ?y mod ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 3),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_var 3))),
    ("Pratt_Certificate.div_gt_0",
     "[| ?m <= ?n; 0 < ?m |] ==> 0 < ?n div ?m",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Pratt_Certificate.prime_gt_3_impl_p_minus_one_not_prime",
     "[| prime ?p; 3 < ?p |] ==> ~ prime (?p - 1)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))
               )
           ))),
    ("Pratt_Certificate.check_prime_factors_subset_correct",
     "[| check_prime_factors_subset ?n ?ps; list_all prime ?ps |]
      ==> prime_factors ?n <= set ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Pratt_Certificate.eval_mod_exp",
     "mod_exp_nat (numeral ?b) (numeral ?e) (numeral ?m) =
      mod_exp_nat_aux (numeral ?m) 1 (numeral ?b) (numeral ?e) mod
      numeral ?m",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 0),
               template_app (template_hole 3, template_var 2)),
             template_app (template_hole 3, template_var 1))),
         template_app (template_hole 3, template_var 0)))),
    ("Pratt_Certificate.eval_mod_exp_nat_aux",
     "mod_exp_nat_aux ?m ?y ?x (numeral (num.Bit0 ?n)) =
      mod_exp_nat_aux ?m ?y (?x\<^sup>2 mod ?m) (numeral ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 0)))),
             template_var 3)),
         template_app (template_hole 4, template_var 0)))),
    ("Pratt_Certificate.size_pratt_le",
     "ALL x:set ?c. Pratt_Certificate.size_pratt x <= ?d ==>
      size_cert ?c <= real (length ?c) * (1 + ?d)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Pratt_Certificate.prime_factors_list_prime",
     "prime ?n ==>
      EX qs. prime_factors ?n = set qs & prod_list qs = ?n & length qs = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Pratt_Certificate.check_prime_factors_subset_Cons",
     "?p <= 1 | ~ ?p dvd numeral ?n ==>
      check_prime_factors_subset (numeral ?n) (?p # ?ps) =
      check_prime_factors_subset (numeral ?n) ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Pratt_Certificate.concat_set",
     "ALL q:?qs. EX c:set ?cs. Prime q : set c ==>
      ALL q:?qs. Prime q : set (concat ?cs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Pratt_Certificate.eval_mod_exp_nat_aux",
     "mod_exp_nat_aux ?m ?y ?x (numeral (num.Bit1 ?n)) =
      mod_exp_nat_aux ?m (?x * ?y mod ?m) (?x\<^sup>2 mod ?m) (numeral ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2)),
               template_var 3)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 1, template_hole 0)))),
             template_var 3)),
         template_app (template_hole 6, template_var 0)))),
    ("Pratt_Certificate.concat_length_le",
     "ALL x:set ?xs. real (length (?f x)) <= ?g x ==>
      real (length (concat (map ?f ?xs))) <= sum_list (map ?g ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2)))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Pratt_Certificate.check_prime_factors_subset_Cons",
     "[| 1 < ?p; ?p dvd numeral ?n |]
      ==> check_prime_factors_subset (numeral ?n) (?p # ?ps) =
          check_prime_factors_subset (numeral ?n div ?p) (?p # ?ps)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 1)),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Pratt_Certificate.pratt_triple_imp_prime",
     "[| pratt_triple ?p ?a ?x; 1 < ?p; ?x = ?p - 1;
         [?a ^ (?p - 1) = 1] (mod ?p) |]
      ==> prime ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 5, template_var 2),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_hole 5))),
                template_hole 5),
              template_var 2)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Pratt_Certificate.prime_factors_list",
     "[| 3 < ?n; ~ prime ?n |]
      ==> EX qs.
             prime_factors ?n = set qs &
             prod_list qs = ?n & 2 <= length qs",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 15,
            template_app (template_hole 14, template_hole 13)),
          template_var 0),
        template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_var 0))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Pratt_Certificate.R2",
     "valid_cert (Prime ?p # ?xs) =
      (1 < ?p &
       valid_cert ?xs &
       (EX a. [a ^ (?p - 1) = 1] (mod ?p) &
              Triple ?p a (?p - 1) : set ?xs))",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app
            (template_hole 11,
             template_app (template_hole 10, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1)),
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 12, template_var 0)),
           template_app (template_hole 6, t_empty))))),
    ("Pratt_Certificate.sum_list_log",
     "[| 0 < ?b; ?b ~= 1; ALL x:set ?xs. ?b <= real x |]
      ==> sum_list (map (log ?b) (map real ?xs)) =
          log ?b (real (prod_list ?xs))",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 5),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 0)))))),
    ("Pratt_Certificate.p_in_prime_factorsE",
     "[| ?p :# prime_factorization ?n; 0 < ?n;
         [| 2 <= ?p; ?p <= ?n; ?p dvd ?n; prime ?p |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)))
            ),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_var 2)],
          template_implication
           ([template_inequation
              (less_equals, template_var 2, template_var 1)],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)
                   )],
              template_implication
               ([template_predicate
                  (template_app (template_hole 0, template_var 2))],
                template_predicate (template_var 0)))))],
       template_predicate (template_var 0))),
    ("Pratt_Certificate.valid_cert_Cons1",
     "valid_cert (Prime ?p # ?xs) =
      (1 < ?p &
       (EX t:set ?xs.
           case t of Prime x => False
           | Triple p' a x =>
               p' = ?p & x = ?p - 1 & mod_exp_nat a (?p - 1) ?p = 1) &
       valid_cert ?xs)",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app
            (template_hole 11,
             template_app (template_hole 10, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               t_empty)),
           template_app (template_hole 12, template_var 0))))),
    ("Pratt_Certificate.pratt_triple_extend",
     "[| prime ?q; pratt_triple ?p ?a ?y; 1 < ?p; 0 < ?x; ?x = ?q * ?y;
         [?a ^ ((?p - 1) div ?q) \<noteq> 1] (mod ?p) |]
      ==> pratt_triple ?p ?a ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 8, template_var 3),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 2),
                        template_app
                         (template_app
                           (template_hole 1,
                            template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_hole 8)),
                          template_var 4))),
                    template_hole 8),
                  template_var 3)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Pratt_Certificate.pratt_sound",
     "[| valid_cert ?c; ?t : set ?c |]
      ==> (?t = Prime ?p --> prime ?p) &
          (?t = Triple ?p ?a ?x -->
           (\<forall>q:#prime_factorization ?x.
               [?a ^ ((?p - 1) div q) \<noteq> 1] (mod ?p)) &
           0 < ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app (template_hole 17, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app (template_hole 14, template_var 3),
                     template_app (template_hole 13, template_var 2))),
                 template_app (template_hole 12, template_var 2))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 14, template_var 3),
                   template_app
                    (template_app
                      (template_app (template_hole 11, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 0))),
                     t_empty)),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))))
           ))),
    ("Pratt_Certificate.pratt_size",
     "prime ?p ==>
      EX c. Prime ?p : set c &
            valid_cert c &
            size_cert c
            <= (6 * log 2 (real ?p) - 4) * (1 + 3 * log 2 (real ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 0))],
       template_predicate (template_app (template_hole 17, t_empty)))),
    ("Pratt_Certificate.size_pratt_fpc",
     "[| ?a <= ?p; ?r <= ?p; 0 < ?a; 0 < ?r; 0 < ?p; prod_list ?qs = ?r |]
      ==> ALL x:set (build_fpc ?p ?a ?r ?qs).
             Pratt_Certificate.size_pratt x <= 3 * log 2 (real ?p)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_than, template_hole 14, template_var 3),
        template_inequation (less_than, template_hole 14, template_var 1),
        template_inequation (less_than, template_hole 14, template_var 2),
        template_equation
         (template_app (template_hole 12, template_var 0), template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 2),
                       template_var 3),
                     template_var 1),
                   template_var 0))),
             t_empty)
           ))),
    ("Pratt_Certificate.pratt_complete'",
     "prime ?p ==>
      EX c. Prime ?p : set c &
            valid_cert c &
            real (length c) <= 6 * log 2 (real ?p) - 4 &
            (ALL x:set c.
                Pratt_Certificate.size_pratt x <= 3 * log 2 (real ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 0))],
       template_predicate (template_app (template_hole 17, t_empty)))),
    ("Pratt_Certificate.valid_pratt_tree_code",
     "valid_pratt_tree (Pratt_Node (?n, ?a, ?ts)) =
      (2 <= ?n &
       check_prime_factors_subset (?n - 1) (map pratt_tree_number ?ts) &
       mod_exp_nat ?a (?n - 1) ?n = 1 &
       (ALL t:set ?ts.
           mod_exp_nat ?a ((?n - 1) div pratt_tree_number t) ?n ~= 1) &
       (ALL t:set ?ts. valid_pratt_tree t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 2),
                  template_app
                   (template_app (template_hole 16, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_hole 11))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 2),
                       template_hole 8)),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app (template_hole 4, template_var 1),
                           template_app
                            (template_app (template_hole 9, template_var 2),
                             template_hole 8)),
                         template_var 2)),
                     template_hole 8)),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 0)),
                       t_empty)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0)),
                     t_empty)))))
           ))),
    ("Pratt_Certificate.mod_exp_nat_aux_code",
     "mod_exp_nat_aux ?m ?y ?x ?n =
      (if ?n = 0 then ?y
       else if ?n = 1 then ?x * ?y mod ?m
            else if even ?n
                 then mod_exp_nat_aux ?m ?y (?x * ?x mod ?m) (?n div 2)
                 else mod_exp_nat_aux ?m (?x * ?y mod ?m) (?x * ?x mod ?m)
                       (?n div 2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 11, template_var 0),
                   template_hole 8)),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 11, template_var 0),
                     template_hole 7)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 2)),
                   template_var 3)),
               template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 10, template_var 3),
                         template_var 2),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 1),
                             template_var 1)),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2, template_hole 1))))),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 3),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 1),
                             template_var 2)),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_var 1)),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1)))))))
           ))),
    ("Pratt_Certificate.correct_fpc",
     "[| valid_cert ?xs; 1 < ?p; prod_list ?qs = ?r; ?r ~= 0;
         ALL q:set ?qs. Prime q : set ?xs;
         ALL q:set ?qs. [?a ^ ((?p - 1) div q) \<noteq> 1] (mod ?p) |]
      ==> valid_cert (build_fpc ?p ?a ?r ?qs @ ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 4)),
        template_inequation (less_than, template_hole 15, template_var 3),
        template_equation
         (template_app (template_hole 13, template_var 2), template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 17,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0),
                     template_var 1),
                   template_var 2)),
               template_var 4))
           ))),
    ("Pratt_Certificate.R1",
     "valid_cert (Triple ?p ?a ?x # ?xs) =
      (1 < ?p &
       0 < ?x &
       valid_cert ?xs &
       (?x = 1 |
        (EX q y.
            ?x = q * y &
            Prime q : set ?xs &
            Triple ?p ?a y : set ?xs &
            [?a ^ ((?p - 1) div q) \<noteq> 1] (mod ?p))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app
                     (template_app (template_hole 16, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 14, template_hole 12),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 15,
                   template_app (template_hole 18, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_var 1),
                       template_hole 13)),
                   template_app (template_hole 9, t_empty)))))
           ))),
    ("Pratt_Certificate.valid_cert_Cons2",
     "valid_cert (Triple ?p ?a ?x # ?xs) =
      (0 < ?x &
       1 < ?p &
       (?x = 1 |
        (EX t:set ?xs.
            case t of Prime x => False
            | Triple p' a' y =>
                p' = ?p &
                a' = ?a &
                y dvd ?x &
                (let q = ?x div y
                 in Prime q : set ?xs &
                    mod_exp_nat ?a ((?p - 1) div q) ?p ~= 1))) &
       valid_cert ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 20,
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_app (template_hole 18, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_hole 14),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_var 1),
                         template_hole 14)),
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app (template_hole 10, template_var 0)),
                       t_empty))),
                 template_app (template_hole 20, template_var 0))))
           )))]
