   [("MaxPrefix.is_maxsplitter_maxsplit",
     "is_maxsplitter ?P (%xs. maxsplit ?P ([], xs) [] xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 0), t_empty)
         )),
    ("MaxPrefix.is_maxpref_Nil",
     "\<nexists>us. prefix us ?xs & ?P us ==>
      is_maxpref ?P ?ps ?xs = (?ps = [])",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0),
                template_var 2)
              )],
         template_equation (template_var 0, template_hole 0)))),
    ("MaxPrefix.maxsplit_eq",
     "ALL xs ps qs.
         (maxsplit ?P ([], xs) [] xs = (ps, qs)) =
         (xs = ps @ qs & is_maxpref ?P ps xs)",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("MaxPrefix.maxsplit_lemma",
     "(maxsplit ?P ?res ?ps ?qs = (?xs, ?ys)) =
      (if EX us. prefix us ?qs & ?P (?ps @ us)
       then ?xs @ ?ys = ?ps @ ?qs & is_maxpref ?P ?xs (?ps @ ?qs)
       else (?xs, ?ys) = ?res)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0)),
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0)),
               template_var 4))
           )))]
