Loading theory "Draft.AutoProj" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp" via "Draft.Automata" via "Draft.DA")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
### theory "Draft.AutoProj"
### 0.049s elapsed time, 0.231s cpu time, 0.000s GC time
Loading theory "Draft.DA" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp" via "Draft.Automata")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.DA"
### 0.070s elapsed time, 0.264s cpu time, 0.035s GC time
Loading theory "Draft.NA" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp" via "Draft.Automata" via "Draft.NAe")
consts
  delta ::
    "'s * ('a => 's => 's set) * ('s => bool) => 'a list => 's => 's set"
### theory "HOL-Library.Function_Algebras"
### 0.147s elapsed time, 0.603s cpu time, 0.035s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  steps ::
    "'s * ('a => 's => 's set) * ('s => bool) => 'a list => ('s * 's) set"
### theory "Draft.NA"
### 0.059s elapsed time, 0.238s cpu time, 0.000s GC time
Loading theory "Draft.NAe" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp" via "Draft.Automata")
Found termination order: "size_list size <*mlex*> {}"
consts
  steps ::
    "'s * ('a option => 's => 's set) * ('s => bool)
     => 'a list => ('s * 's) set"
### theory "Draft.NAe"
### 0.070s elapsed time, 0.279s cpu time, 0.000s GC time
Loading theory "Draft.Automata" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp")
### theory "HOL-Library.Set_Algebras"
### 0.267s elapsed time, 1.081s cpu time, 0.035s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.327s elapsed time, 1.308s cpu time, 0.113s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Automata"
### 0.153s elapsed time, 0.598s cpu time, 0.077s GC time
Loading theory "Regular-Sets.Regular_Set" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp" via "Draft.RegExp2NA" via "Regular-Sets.Regular_Exp")
overloading
  lang_pow \<equiv> compow :: nat => 'a list set => 'a list set
consts
  lang_pow :: "nat => 'a list set => 'a list set"
### theory "Regular-Sets.Regular_Set"
### 0.200s elapsed time, 0.791s cpu time, 0.064s GC time
Loading theory "Regular-Sets.Regular_Exp" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp" via "Draft.RegExp2NA")
consts
  left :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.872s elapsed time, 3.292s cpu time, 0.768s GC time
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.891s elapsed time, 3.316s cpu time, 0.690s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  lang :: "'a rexp => 'a list set"
consts
  nullable :: "'a rexp => bool"
consts
  rexp_empty :: "'a rexp => bool"
instantiation
  rexp :: (order) order
  less_eq_rexp == less_eq :: 'a rexp => 'a rexp => bool
  less_rexp == less :: 'a rexp => 'a rexp => bool
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.781s elapsed time, 5.552s cpu time, 0.971s GC time
Loading theory "Draft.Templates" (required by "Draft.ExecuteMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.183s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ExecuteMoreTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  rexp :: (linorder) linorder
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.480s elapsed time, 1.091s cpu time, 0.065s GC time
### theory "Regular-Sets.Regular_Exp"
### 1.859s elapsed time, 5.049s cpu time, 0.893s GC time
Loading theory "Draft.RegExp2NA" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp")
Loading theory "Draft.RegExp2NAe" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute" via "Draft.AutoRegExp")
consts
  rexp2na ::
    "'a rexp
     => bool list *
        ('a => bool list => bool list set) * (bool list => bool)"
consts
  rexp2nae ::
    "'a rexp
     => bool list *
        ('a option => bool list => bool list set) * (bool list => bool)"
### theory "Draft.RegExp2NA"
### 0.375s elapsed time, 0.801s cpu time, 0.105s GC time
### theory "Draft.RegExp2NAe"
### 0.463s elapsed time, 0.885s cpu time, 0.105s GC time
Loading theory "Draft.AutoRegExp" (required by "Draft.ExecuteMoreTemplates" via "Draft.Execute")
### theory "Draft.AutoRegExp"
### 0.390s elapsed time, 0.856s cpu time, 0.657s GC time
Loading theory "Draft.Execute" (required by "Draft.ExecuteMoreTemplates")
### theory "Draft.Execute"
### 0.027s elapsed time, 0.029s cpu time, 0.000s GC time
Loading theory "Draft.ExecuteMoreTemplates"
"True"
  :: "bool"
"True"
  :: "bool"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.ExecuteMoreTemplates"
### 0.393s elapsed time, 0.904s cpu time, 0.056s GC time
val it = (): unit
