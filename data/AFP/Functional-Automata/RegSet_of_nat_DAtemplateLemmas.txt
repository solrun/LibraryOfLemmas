   [("RegSet_of_nat_DA.length_trace",
     "length (trace ?d ?i ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RegSet_of_nat_DA.trace_is_Nil", "(trace ?d ?i ?xs = []) = (?xs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("RegSet_of_nat_DA.butlast_empty",
     "(butlast ?xs = []) = (case ?xs of [] => True | y # ys => ys = [])",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), t_empty),
         template_var 0))),
    ("RegSet_of_nat_DA.deltas_append",
     "deltas ?d (?xs @ ?ys) ?i = deltas ?d ?ys (deltas ?d ?xs ?i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)))),
    ("RegSet_of_nat_DA.lem", "[| ?n < Suc ?k; ?n ~= ?k |] ==> ?n < ?k",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("RegSet_of_nat_DA.deltas_below",
     "[| bounded ?d ?k; ?i < ?k |] ==> deltas ?d ?w ?i < ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1),
         template_var 2))),
    ("RegSet_of_nat_DA.trace_append",
     "trace ?d ?i (?xs @ ?ys) =
      trace ?d ?i ?xs @ trace ?d (deltas ?d ?xs ?i) ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 2)),
           template_var 0)))),
    ("RegSet_of_nat_DA.deltas_concat",
     "ALL mid:set ?mids. deltas ?d mid ?k = ?k ==>
      deltas ?d (concat ?mids) ?k = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_var 0))),
    ("RegSet_of_nat_DA.in_set_butlast_concatI",
     "[| ?x : set (butlast ?xs); ?xs : set ?xss |]
      ==> ?x : set (butlast (concat ?xss))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("RegSet_of_nat_DA.trace_below",
     "bounded ?d ?k ==> ALL i<?k. ALL n:set (trace ?d i ?xs). n < ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("RegSet_of_nat_DA.set_trace_conv",
     "set (trace ?d ?i ?xs) =
      (if ?xs = [] then {}
       else insert (deltas ?d ?xs ?i) (set (butlast (trace ?d ?i ?xs))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_var 2),
                       template_var 1),
                     template_var 0)))))
           ))),
    ("RegSet_of_nat_DA.trace_concat",
     "ALL xs:set ?xss. deltas ?d xs ?i = ?i ==>
      trace ?d ?i (concat ?xss) = concat (map (trace ?d ?i) ?xss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("RegSet_of_nat_DA.regset_spec",
     "(?xs : regset ?d ?i ?j ?k) =
      ((ALL n:set (butlast (trace ?d ?i ?xs)). n < ?k) &
       deltas ?d ?xs ?i = ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 3),
                           template_var 2),
                         template_var 4)))),
                 t_empty)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 4),
                   template_var 2)),
               template_var 1))
           ))),
    ("RegSet_of_nat_DA.trace_is_Cons_conv",
     "(trace ?d ?i ?xs = ?n # ?ns) =
      (case ?xs of [] => False
       | y # ys => ?n = ?d y ?i & ?ns = trace ?d ?n ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         template_var 2))),
    ("RegSet_of_nat_DA.regset_DA_equiv",
     "[| bounded (next ?A) ?k; start ?A < ?k; ?j < ?k |]
      ==> (?w : regset_of_DA ?A ?k) = accepts ?A ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_var 2)
            ),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 3),
          template_var 2),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("RegSet_of_nat_DA.regset_below",
     "[| bounded ?d ?k; ?i < ?k; ?j < ?k |]
      ==> regset ?d ?i ?j ?k = {xs. deltas ?d xs ?i = ?j}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_hole 2, t_empty)))),
    ("RegSet_of_nat_DA.decompose",
     "?k : set (trace ?d ?i ?xs) ==>
      EX pref mids suf.
         ?xs = pref @ concat mids @ suf &
         deltas ?d pref ?i = ?k &
         (ALL n:set (butlast (trace ?d ?i pref)). n ~= ?k) &
         (ALL mid:set mids.
             deltas ?d mid ?k = ?k &
             (ALL n:set (butlast (trace ?d ?k mid)). n ~= ?k)) &
         (ALL n:set (butlast (trace ?d ?k suf)). n ~= ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 12, t_empty))))]
