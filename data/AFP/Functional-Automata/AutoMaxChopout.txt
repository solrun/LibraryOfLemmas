Loading theory "Draft.AutoProj" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.AutoMaxChop" via "Draft.DA")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.AutoProj"
### 0.054s elapsed time, 0.240s cpu time, 0.000s GC time
Loading theory "Draft.DA" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.AutoMaxChop")
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.530s cpu time, 0.042s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.AutoMaxChop" via "Draft.MaxChop" via "Draft.MaxPrefix")
### theory "Draft.DA"
### 0.084s elapsed time, 0.325s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.209s elapsed time, 0.849s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.348s elapsed time, 1.392s cpu time, 0.127s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs")
consts
  prefixes :: "'a list => 'a list list"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  suffixes :: "'a list => 'a list list"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.902s elapsed time, 3.431s cpu time, 0.822s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.975s elapsed time, 3.546s cpu time, 0.829s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.407s elapsed time, 4.866s cpu time, 0.991s GC time
Loading theory "Draft.MaxPrefix" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.AutoMaxChop" via "Draft.MaxChop")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd (snd (snd p)))) <*mlex*> {}"
### theory "Draft.MaxPrefix"
### 0.147s elapsed time, 0.383s cpu time, 0.071s GC time
Loading theory "Draft.MaxChop" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.AutoMaxChop")
### Rewrite rule not in simpset:
### Wellfounded.accp chop_rel (?splitf1, ?xs1) ==>
### chop ?splitf1 ?xs1 ==
### if reducing ?splitf1
### then let pp = ?splitf1 ?xs1
###      in if fst pp = [] then ([], ?xs1)
###         else let qq = chop ?splitf1 (snd pp) in (fst pp # fst qq, snd qq)
### else undefined
### theory "Draft.MaxChop"
### 0.107s elapsed time, 0.216s cpu time, 0.000s GC time
Loading theory "Draft.AutoMaxChop" (required by "Draft.AutoMaxChopMoreTemplates")
Found termination order: "size <*mlex*> {}"
consts
  auto_split ::
    "'s * ('a => 's => 's) * ('s => bool)
     => 's => 'a list * 'a list => 'a list => 'a list => 'a list * 'a list"
### theory "HOL-Library.Tree"
### 1.818s elapsed time, 5.814s cpu time, 1.113s GC time
Loading theory "Draft.Templates" (required by "Draft.AutoMaxChopMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.AutoMaxChop"
### 0.154s elapsed time, 0.328s cpu time, 0.050s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.067s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.AutoMaxChopMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.446s elapsed time, 0.495s cpu time, 0.062s GC time
Loading theory "Draft.AutoMaxChopMoreTemplates"
val templateLemmas =
   [("AutoMaxChop.is_maxchopper_auto_chop",
     "is_maxchopper (accepts ?A) (auto_chop ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("AutoMaxChop.is_maxsplitter_auto_split",
     "is_maxsplitter (accepts ?A)
       (%xs. auto_split ?A (start ?A) ([], xs) [] xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           t_empty)
         )),
    ("AutoMaxChop.auto_split_is_maxsplit",
     "auto_split ?A (start ?A) ?res [] ?xs =
      maxsplit (accepts ?A) ?res [] ?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 3, template_var 2)),
             template_var 1),
           template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_hole 2),
         template_var 0))),
    ("AutoMaxChop.delta_snoc",
     "delta ?A (?xs @ [?y]) ?q = next ?A ?y (delta ?A ?xs ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 0)))),
    ("AutoMaxChop.auto_split_lemma",
     "auto_split ?A (delta ?A ?ps ?q) ?res ?ps ?xs =
      maxsplit (%ys. fin ?A (delta ?A ys ?q)) ?res ?ps ?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 3),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 3),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.AutoMaxChopMoreTemplates"
### 0.343s elapsed time, 0.551s cpu time, 0.061s GC time
val it = (): unit
