Loading theory "HOL-Library.Function_Algebras" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_NatInf" via "HOL-Library.Extended_Nat" via "HOL-Library.Countable")
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.508s cpu time, 0.046s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.316s elapsed time, 1.267s cpu time, 0.149s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.365s elapsed time, 1.459s cpu time, 0.149s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.240s elapsed time, 0.953s cpu time, 0.103s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.484s elapsed time, 1.925s cpu time, 0.252s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_NatInf" via "HOL-Library.Extended_Nat")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### Additional type variable(s) in locale specification "countable": 'a
consts
  left :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  right :: "'a tree => 'a tree"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.840s elapsed time, 3.312s cpu time, 0.334s GC time
Loading theory "List-Infinite.Util_MinMax" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2")
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "List-Infinite.Util_MinMax"
### 0.268s elapsed time, 0.870s cpu time, 0.659s GC time
Loading theory "List-Infinite.Util_Nat" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_Div")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
### theory "HOL-Library.Stream"
### 1.158s elapsed time, 4.364s cpu time, 1.035s GC time
Loading theory "List-Infinite.Util_Set" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2")
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
Found termination order: "size <*mlex*> {}"
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
### theory "List-Infinite.Util_Set"
### 0.088s elapsed time, 0.351s cpu time, 0.000s GC time
?m + Suc ?n = Suc (?m + ?n)
?m + 1 = Suc ?m
?b - ?a - Suc 0 = ?b - Suc ?a
(?k * ?m = ?k * ?n) = (?m = ?n | ?k = 0)
(?m * ?k = ?n * ?k) = (?m = ?n | ?k = 0)
0 < ?k ==> (?k * ?m = ?k * ?n) = (?m = ?n)
0 < ?k ==> (?m * ?k = ?n * ?k) = (?m = ?n)
?i + ?j < ?k ==> ?i < ?k
?i + ?j < ?k ==> ?j < ?k
(0 < ?n - ?m) = (?m < ?n)
((0::?'a) < ?b - ?a) = (?a < ?b)
((0::?'a) <= ?b - ?a) = (?a <= ?b)
?a <= ?b ==> ?c <= ?b + ?c - ?a
?k <= ?n ==> ?m + ?k - ?n <= ?m
?k < ?n ==> ?m < ?n + ?m - ?k
[| ?k < ?n; 0 < ?m |] ==> ?m + ?k - ?n < ?m
(?j - ?k <= ?i) = (?j <= ?i + ?k)
?k <= ?j ==> (?i <= ?j - ?k) = (?i + ?k <= ?j)
(?i < ?j - ?k) = (?i + ?k < ?j)
?j - ?k < ?i ==> ?j < ?i + ?k
0 < ?i ==> (?j - ?k < ?i) = (?j < ?i + ?k)
### theory "List-Infinite.Util_Nat"
### 0.172s elapsed time, 0.651s cpu time, 0.042s GC time
Loading theory "List-Infinite.Util_Div" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2")
[| ?i <= ?k; ?j <= ?k |] ==> (?k - ?j <= ?i) = (?k - ?i <= ?j)
[| 0 < ?i; ?k - ?i < ?j |] ==> ?k - ?j < ?i
[| 0 < ?i; 0 < ?j |] ==> (?k - ?j < ?i) = (?k - ?i < ?j)
?i < ?j - ?m ==> ?i < ?j
?i <= ?j - ?m ==> ?i <= ?j
[| ?i < ?j - ?m; ?n <= ?m |] ==> ?i < ?j - ?n
[| ?i <= ?j - ?m; ?n <= ?m |] ==> ?i <= ?j - ?n
?j < ?k ==> ?j - ?n < ?k
?j <= ?k ==> ?j - ?n <= ?k
(?m < Suc ?n) = (?m <= ?n)
0 < ?n ==> (?m < ?n) = (?m <= ?n - Suc 0)
?m < ?n ==> ?m <= ?n - Suc 0
[| 0 < ?n; ?m <= ?n - Suc 0 |] ==> ?m < ?n
(Suc ?m <= ?n) = (?m < ?n)
0 < ?m ==> (?m - Suc 0 < ?n) = (?m <= ?n)
?m - Suc 0 < ?n ==> ?m <= ?n
[| 0 < ?m; ?m <= ?n |] ==> ?m - Suc 0 < ?n
[| 0 < ?n; ?n + ?i - ?j = ?n |] ==> ?i = ?j
?n < ?m ==> ?n + (?m - Suc ?n) = ?m - Suc 0
(?k + ?m < ?k + ?n) = (?m < ?n)
(?k + ?m <= ?k + ?n) = (?m <= ?n)
(?b + ?a = ?c + ?a) = (?b = ?c)
(?a + ?b = ?a + ?c) = (?b = ?c)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k = ?n - ?k) = (?m = ?n)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k < ?n - ?k) = (?m < ?n)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k <= ?n - ?k) = (?m <= ?n)
?k - ?m < ?k - ?n ==> ?n < ?m
?n - ?k < ?m - ?k ==> ?n < ?m
[| ?k - ?m <= ?k - ?n; ?m < ?k |] ==> ?n <= ?m
[| ?k - ?m <= ?k - ?n; ?n <= ?k |] ==> ?n <= ?m
[| ?m - ?k <= ?n - ?k; ?k < ?m |] ==> ?m <= ?n
[| ?m - ?k <= ?n - ?k; ?k <= ?n |] ==> ?m <= ?n
[| ?k - ?m = ?k - ?n; ?m < ?k |] ==> ?m = ?n
[| ?k - ?m = ?k - ?n; ?n < ?k |] ==> ?m = ?n
[| ?m - ?k = ?n - ?k; ?k < ?m |] ==> ?m = ?n
[| ?m - ?k = ?n - ?k; ?k < ?n |] ==> ?m = ?n
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k = ?n - ?k) = (?m = ?n)
[| ?m <= ?k; ?n <= ?k |] ==> (?k - ?m = ?k - ?n) = (?m = ?n)
(?b + ?a = ?c + ?a) = (?b = ?c)
(?a + ?b = ?a + ?c) = (?b = ?c)
?m <= ?n ==> ?m - ?l <= ?n - ?l
?m = ?n ==> ?m - ?k = ?n - ?k
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.398s elapsed time, 5.126s cpu time, 1.091s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_NatInf" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
?b * (?a div ?b) = ?a - ?a mod ?b
(?n mod ?m = 0) = (?n div ?m * ?m = ?n)
?n div ?m * ?m <= ?n
0 < ?m ==> ?n < Suc (?n div ?m) * ?m
?m ~= Suc 0 ==> Suc 0 mod ?m = Suc 0
[| ?m ~= Suc 0; ?P (Suc 0) |] ==> ?P (Suc 0 mod ?m)
?m ~= Suc 0 ==> ?f (Suc 0 mod ?m) = ?f (Suc 0)
(Suc ?a mod ?m = Suc ?b mod ?m) = (?a mod ?m = ?b mod ?m)
((?a + ?k) mod ?m = (?b + ?k) mod ?m) = (?a mod ?m = ?b mod ?m)
?k <= ?a ==> ((?a - ?k) mod ?m = ?b mod ?m) = (?a mod ?m = (?b + ?k) mod ?m)
?a + ?b <= ?n ==>
((?n - ?a) mod ?m = ?b mod ?m) = ((?n - (?a + ?b)) mod ?m = 0)
[| ?a <= ?n; ?b <= ?n |]
==> ((?n - ?a) mod ?m = ?b mod ?m) = ((?n - ?b) mod ?m = ?a mod ?m)
[| ?a <= ?b; ?b mod ?m < ?a mod ?m |] ==> ?a div ?m < ?b div ?m
?a <= ?b ==> (?b - ?a) mod ?m = (?b - ?a mod ?m) mod ?m
[| ?x mod ?m = ?y mod ?m; ?x <= ?t; ?y <= ?t |]
==> (?t - ?x) mod ?m = (?t - ?y) mod ?m
(?m + ?b mod ?m - ?a mod ?m) mod ?m =
(if ?a mod ?m <= ?b mod ?m then ?b mod ?m - ?a mod ?m
 else ?m + ?b mod ?m - ?a mod ?m)
?a mod ?m <= ?b mod ?m ==>
(?m + ?b mod ?m - ?a mod ?m) mod ?m = ?b mod ?m - ?a mod ?m
?b mod ?m < ?a mod ?m ==>
(?m + ?b mod ?m - ?a mod ?m) mod ?m = ?m + ?b mod ?m - ?a mod ?m
### theory "List-Infinite.Util_Div"
### 0.323s elapsed time, 0.994s cpu time, 0.076s GC time
(?a mod ?c + ?b mod ?c) mod ?c = (?a + ?b) mod ?c
(?a + ?b) mod ?m =
(if ?a mod ?m + ?b mod ?m < ?m then ?a mod ?m + ?b mod ?m
 else ?a mod ?m + ?b mod ?m - ?m)
[| 0 <= ?x; 0 <= ?y |] ==> nat (?x mod ?y) = nat ?x mod nat ?y
int (?a mod ?b) = int ?a mod int ?b
?a <= ?b ==>
(?b - ?a) mod ?m =
(if ?a mod ?m <= ?b mod ?m then ?b mod ?m - ?a mod ?m
 else ?m + ?b mod ?m - ?a mod ?m)
?a <= ?b ==> (?b - ?a) mod ?m = (?m + ?b mod ?m - ?a mod ?m) mod ?m
[| ?a <= ?b; ?a mod ?m <= ?b mod ?m |]
==> (?b - ?a) mod ?m = ?b mod ?m - ?a mod ?m
[| ?a <= ?b; ?b mod ?m < ?a mod ?m |]
==> (?b - ?a) mod ?m = ?m + ?b mod ?m - ?a mod ?m
(?a mod - ?m = ?b mod - ?m) = (?a mod ?m = ?b mod ?m)
?a mod ?m = ?b mod ?m ==> (?b - ?a) mod ?m = 0
?a mod ?m = ?b mod ?m ==> (?b - ?a) mod ?m = 0
(?a mod ?m = ?b mod ?m) = ((?b - ?a) mod ?m = 0)
?a <= ?b ==> (?a mod ?m = ?b mod ?m) = ((?b - ?a) mod ?m = 0)
[| ?a mod ?m ~= ?b mod ?m; ?a <= ?b |] ==> 0 < (?b - ?a) mod ?m
[| (?b - ?a) mod ?m = 0; ?a <= ?b |] ==> ?a mod ?m = ?b mod ?m
(?b - ?a) mod ?m = 0 ==> ?a mod ?m = ?b mod ?m
[| ?x < ?y; ?x mod ?m = ?y mod ?m |] ==> ?x + ?m <= ?y
((?n + ?k) mod ?m = ?n mod ?m) = (?k mod ?m = 0)
?a mod ?m = ?b mod ?m ==> ?a * ?k mod (?m * ?k) = ?b * ?k mod (?m * ?k)
?x mod (?m * ?k) = ?y * ?k mod (?m * ?k) ==> ?x mod ?k = 0
?x mod (?m * ?k) = ?y * ?k mod (?m * ?k) ==> ?x div ?k * ?k = ?x
[| ?x mod (?m * ?k) = ?y * ?k mod (?m * ?k); 0 < ?k |]
==> ?x div ?k mod ?m = ?y mod ?m
0 < ?n ==> (?m - ?n) mod ?m = ?m - ?n
?m <= ?n ==> (?n - ?m) mod ?m = ?n mod ?m
?k * ?m <= ?n ==> (?n - ?k * ?m) mod ?m = ?n mod ?m
?m * ?k <= ?n ==> (?n - ?m * ?k) mod ?m = ?n mod ?m
0 < ?n ==> (?m - ?n) div ?m = 0
(?n - ?m) div ?m = ?n div ?m - Suc 0
(?n - ?k * ?m) div ?m = ?n div ?m - ?k
(?n - ?m * ?k) div ?m = ?n div ?m - ?k
[| ?k * ?m <= ?n; ?n < Suc ?k * ?m |] ==> ?n div ?m = ?k
[| ?n div ?m = ?k; 0 < ?m |] ==> ?k * ?m <= ?n & ?n < Suc ?k * ?m
0 < ?m ==> (?k * ?m <= ?n & ?n < Suc ?k * ?m) = (?n div ?m = ?k)
(?n - ?n mod ?m) div ?m = ?n div ?m
[| ?x <= ?y; ?y - ?x < ?m |] ==> ?x = ?y - (?y - ?x) mod ?m
[| ?x <= ?y; ?m <= ?y - ?x; 0 < ?m |] ==> ?x < ?y - (?y - ?x) mod ?m
?x <= ?y ==> ?x <= ?y - (?y - ?x) mod ?m
(?n - Suc (?n mod ?m)) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m < ?r; ?r <= ?m + ?n mod ?m |]
==> (?n - ?r) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m = 0; 0 < ?r; ?r <= ?m |]
==> (?n - ?r) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m = 0; ?r < ?m |] ==> (?n - Suc ?r) div ?m = ?n div ?m - Suc 0
?n mod ?m = 0 ==> (?n - Suc 0) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m < ?r; ?r <= ?m; ?r <= ?n |]
==> (?n - ?r) mod ?m = ?m + ?n mod ?m - ?r
[| 0 < ?n; ?n mod ?m = 0 |] ==> (?n - Suc 0) mod ?m = ?m - Suc 0
0 < ?n ==>
(?n - Suc 0) mod ?m =
(if ?n mod ?m = 0 then ?m - Suc 0 else ?n mod ?m - Suc 0)
0 < ?n ==> Suc ((?n - Suc 0) mod ?m) mod ?m = ?n mod ?m
[| ?a < ?b; 0 < ?m; ?a mod ?m = ?b mod ?m |]
==> Suc ((?b - Suc ?a) mod ?m) = ?m
(?t - ?r) mod ?m <= ?t
?r <= ?t ==> (?t - (?t - ?r) mod ?m) mod ?m = ?r mod ?m
?r <= ?t ==> (?k * ?m + ?t - (?t - ?r) mod ?m) mod ?m = ?r mod ?m
0 < ?m ==> (?n div ?m <= ?k) = (?n <= Suc ?k * ?m - Suc 0)
(?b - ?a) div ?m =
?b div ?m - ?a div ?m - (if ?a mod ?m <= ?b mod ?m then 0 else Suc 0)
(?b - ?a) div ?m =
?b div ?m - ?a div ?m - (?m + ?a mod ?m - Suc (?b mod ?m)) div ?m
?a mod ?m <= ?b mod ?m ==> (?b - ?a) div ?m = ?b div ?m - ?a div ?m
?b mod ?m < ?a mod ?m ==> (?b - ?a) div ?m = ?b div ?m - Suc (?a div ?m)
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Countable_Set"
### 0.423s elapsed time, 1.064s cpu time, 0.153s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_NatInf" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.176s elapsed time, 7.231s cpu time, 1.396s GC time
Loading theory "Draft.Templates" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.123s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.IL_AF_StreamMoreTemplates")
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.526s elapsed time, 1.091s cpu time, 0.085s GC time
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 1.552s elapsed time, 2.423s cpu time, 0.159s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_NatInf" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Order_Continuity"
### 0.386s elapsed time, 0.404s cpu time, 0.000s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2" via "List-Infinite.Util_NatInf")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.482s elapsed time, 0.532s cpu time, 0.069s GC time
Loading theory "List-Infinite.Util_NatInf" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2" via "List-Infinite.SetInterval2")
instantiation
  enat :: modulo
  modulo_enat == modulo :: enat => enat => enat
  divide_enat == divide :: enat => enat => enat
### theory "List-Infinite.Util_NatInf"
### 0.118s elapsed time, 0.154s cpu time, 0.051s GC time
Loading theory "List-Infinite.SetInterval2" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.InfiniteSet2")
locale distrib_lattice
  fixes inf :: "'a => 'a => 'a"
    and less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
    and sup :: "'a => 'a => 'a"
  assumes "class.distrib_lattice inf less_eq less sup"
### theory "List-Infinite.SetInterval2"
### 0.931s elapsed time, 1.042s cpu time, 0.123s GC time
Loading theory "List-Infinite.InfiniteSet2" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval")
Loading theory "List-Infinite.SetIntervalCut" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval" via "List-Infinite.SetIntervalStep")
### theory "List-Infinite.InfiniteSet2"
### 0.133s elapsed time, 0.294s cpu time, 0.065s GC time
### theory "List-Infinite.SetIntervalCut"
### 0.849s elapsed time, 1.630s cpu time, 0.949s GC time
Loading theory "List-Infinite.List2" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Draft.AF_Stream" via "Draft.ListSlice" via "List-Infinite.ListInf")
Loading theory "List-Infinite.SetIntervalStep" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators" via "Nat-Interval-Logic.IL_Interval")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
"True"
  :: "bool"
"False"
  :: "bool"
consts
  sublist_list :: "'a list => nat list => 'a list"
consts
  sublist_list_if :: "'a list => nat list => 'a list"
"[10, 20, 30]"
  :: "int list"
"[10, 10, 20, 30]"
  :: "int list"
consts
  inext_nth :: "nat set => nat => nat"
"[10, 10, 20, 30, [] ! 4]"
  :: "int list"
consts
  map_list :: "('a => 'b) list => 'a list => 'b list"
"[10, 20, 30]"
  :: "int list"
consts
  iprev_nth :: "nat set => nat => nat"
"[10, 10, 20, 30]"
  :: "int list"
"[10, 10, 20, 30]"
  :: "int list"
consts
  map2 :: "('a => 'b => 'c) => 'a list => 'b list => 'c list"
### theory "List-Infinite.List2"
### 0.978s elapsed time, 3.013s cpu time, 1.310s GC time
Loading theory "List-Infinite.ListInf" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Draft.AF_Stream" via "Draft.ListSlice")
### theory "List-Infinite.SetIntervalStep"
### 0.975s elapsed time, 3.011s cpu time, 1.310s GC time
Loading theory "Nat-Interval-Logic.IL_Interval" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators" via "Nat-Interval-Logic.IL_IntervalOperators")
### theory "Nat-Interval-Logic.IL_Interval"
### 0.950s elapsed time, 2.002s cpu time, 0.243s GC time
Loading theory "Nat-Interval-Logic.IL_IntervalOperators" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Nat-Interval-Logic.IL_TemporalOperators")
### theory "List-Infinite.ListInf"
### 1.202s elapsed time, 2.555s cpu time, 0.345s GC time
Loading theory "Draft.ListSlice" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream" via "Draft.AF_Stream")
consts
  list_slice_aux :: "'a list => nat => nat => 'a list list"
?x < ?n div ?m ==> ?x * ?m + ?m <= ?n
### theory "Draft.ListSlice"
### 0.176s elapsed time, 0.392s cpu time, 0.086s GC time
Loading theory "Draft.AF_Stream" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream")
### No equation for constructor "NoMsg"
consts
  the_af :: "'a message_af => 'a"
overloading
  is_NoMsg \<equiv> is_NoMsg :: 'a message_af => bool
consts
  is_NoMsg :: "'a message_af => bool"
overloading
  is_NoMsg \<equiv> is_NoMsg :: 'a * 'b => bool
overloading
  is_NoMsg \<equiv> is_NoMsg :: 'a set => bool
Proofs for inductive predicate(s) "i_set_indp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "i_set0_indp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "NatMultiplesp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "i_set_contp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "i_set_cont_minp"
  Proving monotonicity ...
overloading
  is_NoMsg \<equiv> is_NoMsg :: 'a SomeRecordExample_scheme => bool
Proofs for inductive predicate(s) "i_set_multp"
  Proving monotonicity ...
### theory "Nat-Interval-Logic.IL_IntervalOperators"
### 1.292s elapsed time, 2.761s cpu time, 0.382s GC time
Loading theory "Nat-Interval-Logic.IL_TemporalOperators" (required by "Draft.IL_AF_StreamMoreTemplates" via "Draft.IL_AF_Stream")
consts
  untime :: "'a message_af list => 'a list"
consts
  untime_length_cnt :: "'a message_af list => nat"
instantiation
  bool :: {one,plus,times,zero,order}
  zero_bool == zero_class.zero :: bool
  times_bool == times :: bool => bool => bool
  plus_bool == plus :: bool => bool => bool
  one_bool == one_class.one :: bool
consts
  f_expand :: "'a message_af list => nat => 'a message_af list"
consts
  f_expand_Suc :: "'a message_af list => nat => 'a message_af list"
"False"
  :: "bool"
"True"
  :: "bool"
"True"
  :: "bool"
consts
  last_message :: "'a message_af list => 'a message_af"
consts
  last_message_hold_init ::
    "'a message_af list => 'a message_af => 'a message_af list"
### theory "Draft.AF_Stream"
### 1.637s elapsed time, 3.536s cpu time, 0.499s GC time
### theory "Nat-Interval-Logic.IL_TemporalOperators"
### 0.775s elapsed time, 1.619s cpu time, 0.203s GC time
Loading theory "Draft.IL_AF_Stream" (required by "Draft.IL_AF_StreamMoreTemplates")
consts
  f_join_aux :: "'a list => nat => nat set => 'a list"
### theory "Draft.IL_AF_Stream"
### 0.544s elapsed time, 0.611s cpu time, 0.092s GC time
Loading theory "Draft.IL_AF_StreamMoreTemplates"
val templateLemmas =
   [("IL_AF_Stream.i_join_UNIV", "?f \<Join>\<^sub> UNIV = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("IL_AF_Stream.f_join_Nil", "[] \<Join>\<^sub> ?I = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("IL_AF_Stream.f_join_empty", "?xs \<Join>\<^sub> {} = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("IL_AF_Stream.f_join_UNIV", "?xs \<Join>\<^sub> UNIV = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("IL_AF_Stream.i_f_join_empty", "?f \<Join>\<^sub> {} = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("IL_AF_Stream.i_join_iFROM",
     "?f \<Join>\<^sub> [?n\<dots>] = ?f \<Up> ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("IL_AF_Stream.f_join_iFROM",
     "?xs \<Join>\<^sub> [?n\<dots>] = ?xs \<up> ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("IL_AF_Stream.i_join_nth",
     "(?f \<Join>\<^sub> ?I) ?n = ?f (?I \<rightarrow> ?n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("IL_AF_Stream.i_join_singleton",
     "?f \<Join>\<^sub> {?a} = (%n. ?f ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       t_empty)),
    ("IL_AF_Stream.f_join_iTILL",
     "?xs \<Join>\<^sub> [\<dots>?n] = ?xs \<down> Suc ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("IL_AF_Stream.i_f_join_iTILL",
     "?f \<Join>\<^sub> [\<dots>?n] = ?f \<Down> Suc ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("IL_AF_Stream.f_join_length",
     "length (?xs \<Join>\<^sub> ?I) = card (?I \<down>< length ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 1))))),
    ("IL_AF_Stream.i_f_join_singleton", "?f \<Join>\<^sub> {?n} = [?f ?n]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_hole 0))),
    ("IL_AF_Stream.f_join_all_conv",
     "(?xs \<Join>\<^sub> ?I = ?xs) = ({..<length ?xs} <= ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("IL_AF_Stream.f_join_drop",
     "?xs \<up> ?n \<Join>\<^sub> ?I = ?xs \<Join>\<^sub> (?I \<oplus> ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("IL_AF_Stream.f_join_take",
     "?xs \<down> ?n \<Join>\<^sub> ?I =
      ?xs \<Join>\<^sub> (?I \<down>< ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("IL_AF_Stream.i_f_join_length",
     "finite ?I ==> length (?f \<Join>\<^sub> ?I) = card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("IL_AF_Stream.f_join_Nil_conv",
     "(?xs \<Join>\<^sub> ?I = []) = (?I \<down>< length ?xs = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_hole 4),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("IL_AF_Stream.f_join_iIN",
     "?xs \<Join>\<^sub> [?n\<dots>,?d] = ?xs \<up> ?n \<down> Suc ?d",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("IL_AF_Stream.i_f_join_iIN",
     "?f \<Join>\<^sub> [?n\<dots>,?d] = ?f \<Up> ?n \<Down> Suc ?d",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("IL_AF_Stream.f_join_all",
     "{..<length ?xs} <= ?I ==> ?xs \<Join>\<^sub> ?I = ?xs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("IL_AF_Stream.i_join_i_take",
     "?f \<Down> ?n \<Join>\<^sub> ?I =
      ?f \<Join>\<^sub> ?I \<Down> card (?I \<down>< ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("IL_AF_Stream.i_f_join_eq_i_join_i_take",
     "finite ?I ==>
      ?f \<Join>\<^sub> ?I = ?f \<Join>\<^sub> ?I \<Down> card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("IL_AF_Stream.i_join_i_expand_iMOD_0",
     "0 < ?k ==> ?f \<odot> ?k \<Join>\<^sub> [ 0, mod ?k ] = ?f",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IL_AF_Stream.f_join_f_expand_iMOD_0",
     "0 < ?k ==> ?xs \<odot> ?k \<Join>\<^sub> [ 0, mod ?k ] = ?xs",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IL_AF_Stream.f_join_aux_length",
     "length (f_join_aux ?xs ?n ?I) = card (?I Int {?n..<?n + length ?xs})",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 5, template_var 2))))))),
    ("IL_AF_Stream.i_f_join_i_drop",
     "finite ?I ==>
      ?f \<Up> ?n \<Join>\<^sub> ?I = ?f \<Join>\<^sub> (?I \<oplus> ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("IL_AF_Stream.f_join_take_Suc_Max_eq",
     "finite ?I ==>
      ?xs \<down> Suc (Max ?I) \<Join>\<^sub> ?I = ?xs \<Join>\<^sub> ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1))),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 1)))),
    ("IL_AF_Stream.f_join_cut_less_eq",
     "length ?xs <= ?t ==>
      ?xs \<Join>\<^sub> (?I \<down>< ?t) = ?xs \<Join>\<^sub> ?I",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("IL_AF_Stream.f_join_append",
     "(?xs @ ?ys) \<Join>\<^sub> ?I =
      ?xs \<Join>\<^sub> ?I @ ?ys \<Join>\<^sub> (?I \<oplus>- length ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("IL_AF_Stream.f_join_f_expand_iT_Mult",
     "0 < ?k ==>
      ?xs \<odot> ?k \<Join>\<^sub> (?I \<otimes> ?k) =
      ?xs \<Join>\<^sub> ?I",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("IL_AF_Stream.i_f_join_nth",
     "?n < card ?I ==>
      ?f \<Join>\<^sub> ?I ! ?n = ?f (?I \<rightarrow> ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.drop_f_join_eq2",
     "card (?I \<down>< length ?xs) <= ?n ==>
      ?xs \<Join>\<^sub> ?I \<up> ?n = []",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_hole 0))),
    ("IL_AF_Stream.f_join_Nil_conv'",
     "(?xs \<Join>\<^sub> ?I = []) = (ALL i<length ?xs. i ~: ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_hole 6),
       template_app (template_hole 5, t_empty))),
    ("IL_AF_Stream.f_join_singleton_if",
     "?xs \<Join>\<^sub> {?n} =
      (if ?n < length ?xs then [?xs ! ?n] else [])",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_hole 0))),
    ("IL_AF_Stream.i_join_i_drop",
     "?I ~= {} ==>
      ?f \<Up> ?n \<Join>\<^sub> ?I = ?f \<Join>\<^sub> (?I \<oplus> ?n)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("IL_AF_Stream.drop_i_f_join_eq2",
     "[| finite ?I; card ?I <= ?n |]
      ==> ?f \<Join>\<^sub> ?I \<up> ?n = []",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_hole 0))),
    ("IL_AF_Stream.i_take_i_join",
     "infinite ?I ==>
      ?f \<Join>\<^sub> ?I \<Down> ?n =
      ?f \<Down> (?I \<rightarrow> ?n) \<Join>\<^sub> ?I",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_var 2)))),
    ("IL_AF_Stream.i_take_i_join_eq_i_f_join",
     "infinite ?I ==>
      ?f \<Join>\<^sub> ?I \<Down> ?n =
      ?f \<Join>\<^sub> (?I \<down>< (?I \<rightarrow> ?n))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("IL_AF_Stream.i_join_i_expand_iMODb_0",
     "0 < ?k ==>
      ?f \<odot> ?k \<Join>\<^sub> [ 0, mod ?k, ?n ] =
      ?f \<Join>\<^sub> [\<dots>?n]",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 5),
               template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.i_join_i_shrink_iMOD_0",
     "0 < ?k ==>
      ?f \<longmapsto> ?k \<Join>\<^sub> [ ?k - 1, mod ?k ] = ?f \<div> ?k",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("IL_AF_Stream.f_join_f_expand_iMODb_0",
     "0 < ?k ==>
      ?xs \<odot> ?k \<Join>\<^sub> [ 0, mod ?k, ?n ] =
      ?xs \<Join>\<^sub> [\<dots>?n]",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 5),
               template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.i_f_join_i_expand_iMODb_0",
     "0 < ?k ==>
      ?f \<odot> ?k \<Join>\<^sub> [ 0, mod ?k, ?n ] =
      ?f \<Join>\<^sub> [\<dots>?n]",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 5),
               template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.f_join_f_shrink_iMOD_0",
     "0 < ?k ==>
      ?xs \<longmapsto> ?k \<Join>\<^sub> [ ?k - 1, mod ?k ] =
      ?xs \<div> ?k",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("IL_AF_Stream.take_f_join_eq2",
     "card (?I \<down>< length ?xs) <= ?n ==>
      ?xs \<Join>\<^sub> ?I \<down> ?n = ?xs \<Join>\<^sub> ?I",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("IL_AF_Stream.cut_less_eq_imp_f_join_eq",
     "?A \<down>< length ?xs = ?B \<down>< length ?xs ==>
      ?xs \<Join>\<^sub> ?A = ?xs \<Join>\<^sub> ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2),
            template_app (template_hole 2, template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app (template_hole 2, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("IL_AF_Stream.i_join_i_expand_iMOD",
     "0 < ?k ==>
      ?f \<odot> ?k \<Join>\<^sub> [ ?n * ?k, mod ?k ] =
      ?f \<Join>\<^sub> [?n\<dots>]",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.f_join_f_expand_iMOD",
     "0 < ?k ==>
      ?xs \<odot> ?k \<Join>\<^sub> [ ?n * ?k, mod ?k ] =
      ?xs \<Join>\<^sub> [?n\<dots>]",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.i_drop_i_join",
     "?I ~= {} ==>
      ?f \<Join>\<^sub> ?I \<Up> ?n =
      ?f \<Join>\<^sub> (?I \<down>\<ge> (?I \<rightarrow> ?n))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("IL_AF_Stream.drop_i_f_join_eq1",
     "?n < card ?I ==>
      ?f \<Join>\<^sub> ?I \<up> ?n =
      ?f \<Join>\<^sub> (?I \<down>\<ge> (?I \<rightarrow> ?n))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("IL_AF_Stream.take_i_f_join_eq1",
     "?n < card ?I ==>
      ?f \<Join>\<^sub> ?I \<down> ?n =
      ?f \<Join>\<^sub> (?I \<down>< (?I \<rightarrow> ?n))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("IL_AF_Stream.f_join_nth",
     "?n < length (?xs \<Join>\<^sub> ?I) ==>
      ?xs \<Join>\<^sub> ?I ! ?n = ?xs ! (?I \<rightarrow> ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("IL_AF_Stream.take_i_f_join_eq2",
     "[| finite ?I; card ?I <= ?n |]
      ==> ?f \<Join>\<^sub> ?I \<down> ?n = ?f \<Join>\<^sub> ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("IL_AF_Stream.f_join_nth2",
     "?n < card (?I \<down>< length ?xs) ==>
      ?xs \<Join>\<^sub> ?I ! ?n = ?xs ! (?I \<rightarrow> ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.i_take_Suc_Max_eq_imp_i_f_join_eq",
     "?f \<Down> Suc (Max ?I) = ?g \<Down> Suc (Max ?I) ==>
      ?f \<Join>\<^sub> ?I = ?g \<Join>\<^sub> ?I",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2))),
            template_var 1),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2))),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("IL_AF_Stream.i_f_join_i_expand_iT_Mult",
     "[| 0 < ?k; finite ?I |]
      ==> ?f \<odot> ?k \<Join>\<^sub> (?I \<otimes> ?k) =
          ?f \<Join>\<^sub> ?I",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("IL_AF_Stream.f_join_snoc",
     "(?xs @ [?x]) \<Join>\<^sub> ?I =
      ?xs \<Join>\<^sub> ?I @ (if length ?xs : ?I then [?x] else [])",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3)),
           template_hole 3)))),
    ("IL_AF_Stream.i_join_i_append",
     "infinite ?I ==>
      (?xs \<frown> ?f) \<Join>\<^sub> ?I =
      ?xs \<Join>\<^sub> ?I \<frown>
      ?f \<Join>\<^sub> (?I \<oplus>- length ?xs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))))))),
    ("IL_AF_Stream.i_join_i_expand_iMODb",
     "0 < ?k ==>
      ?f \<odot> ?k \<Join>\<^sub> [ ?n * ?k, mod ?k, ?d ] =
      ?f \<Join>\<^sub> [?n\<dots>,?d]",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 3)),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IL_AF_Stream.f_join_f_expand_iMODb",
     "0 < ?k ==>
      ?xs \<odot> ?k \<Join>\<^sub> [ ?n * ?k, mod ?k, ?d ] =
      ?xs \<Join>\<^sub> [?n\<dots>,?d]",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 3)),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IL_AF_Stream.i_f_join_i_expand_iMODb",
     "0 < ?k ==>
      ?f \<odot> ?k \<Join>\<^sub> [ ?n * ?k, mod ?k, ?d ] =
      ?f \<Join>\<^sub> [?n\<dots>,?d]",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 3)),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IL_AF_Stream.i_join_finite_i_drop_card_eq_const_nth_Max",
     "[| finite ?I; ?I ~= {} |]
      ==> ?f \<Join>\<^sub> ?I \<Up> card ?I = (%n. ?f (Max ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         t_empty))),
    ("IL_AF_Stream.drop_f_join_if",
     "?xs \<Join>\<^sub> ?I \<up> ?n =
      (if ?n < card (?I \<down>< length ?xs)
       then ?xs \<Join>\<^sub> (?I \<down>\<ge> (?I \<rightarrow> ?n))
       else [])",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app (template_hole 3, template_var 1))))),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)))),
         template_hole 0))),
    ("IL_AF_Stream.iT_Mult_iAll_i_expand_nth_iff",
     "0 < ?k ==>
      (\<box> t ?I \<otimes> ?k. ?P ((?f \<odot> ?k) t)) =
      (\<box> t ?I. ?P (?f t))",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 2), t_empty)))),
    ("IL_AF_Stream.f_join_f_shrink_iMODb_0",
     "0 < ?k ==>
      ?xs \<longmapsto> ?k \<Join>\<^sub> [ ?k - 1, mod ?k, ?n ] =
      ?xs \<div> ?k \<Join>\<^sub> [\<dots>?n]",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.i_f_join_i_shrink_iMODb_0",
     "0 < ?k ==>
      ?f \<longmapsto> ?k \<Join>\<^sub> [ ?k - 1, mod ?k, ?n ] =
      ?f \<div> ?k \<Join>\<^sub> [\<dots>?n]",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.drop_f_join_eq1",
     "?n < card (?I \<down>< length ?xs) ==>
      ?xs \<Join>\<^sub> ?I \<up> ?n =
      ?xs \<Join>\<^sub> (?I \<down>\<ge> (?I \<rightarrow> ?n))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("IL_AF_Stream.take_f_join_eq1",
     "?n < card (?I \<down>< length ?xs) ==>
      ?xs \<Join>\<^sub> ?I \<down> ?n =
      ?xs \<Join>\<^sub> (?I \<down>< (?I \<rightarrow> ?n))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("IL_AF_Stream.i_join_i_expand_iT_Mult",
     "[| 0 < ?k; ?I ~= {} |]
      ==> ?f \<odot> ?k \<Join>\<^sub> (?I \<otimes> ?k) =
          ?f \<Join>\<^sub> ?I",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("IL_AF_Stream.drop_i_f_join_if",
     "finite ?I ==>
      ?f \<Join>\<^sub> ?I \<up> ?n =
      (if ?n < card ?I
       then ?f \<Join>\<^sub> (?I \<down>\<ge> (?I \<rightarrow> ?n))
       else [])",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)))),
           template_hole 0)))),
    ("IL_AF_Stream.take_f_join_if",
     "?xs \<Join>\<^sub> ?I \<down> ?n =
      (if ?n < card (?I \<down>< length ?xs)
       then ?xs \<Join>\<^sub> (?I \<down>< (?I \<rightarrow> ?n))
       else ?xs \<Join>\<^sub> ?I)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 1))))),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_var 0)))),
    ("IL_AF_Stream.i_f_join_insert",
     "finite ?I ==>
      ?f \<Join>\<^sub> insert ?n ?I =
      ?f \<Join>\<^sub> (?I \<down>< ?n) @
      ?f ?n # ?f \<Join>\<^sub> (?I \<down>> ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))))),
    ("IL_AF_Stream.f_join_union",
     "[| finite ?A; Max ?A < iMin ?B |]
      ==> ?xs \<Join>\<^sub> (?A Un ?B) =
          ?xs \<Join>\<^sub> ?A @ ?xs \<Join>\<^sub> ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("IL_AF_Stream.take_Suc_Max_eq_imp_f_join_eq",
     "[| finite ?I; ?xs \<down> Suc (Max ?I) = ?ys \<down> Suc (Max ?I) |]
      ==> ?xs \<Join>\<^sub> ?I = ?ys \<Join>\<^sub> ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2))),
            template_var 1),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2))),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("IL_AF_Stream.take_i_f_join_if",
     "finite ?I ==>
      ?f \<Join>\<^sub> ?I \<down> ?n =
      (if ?n < card ?I
       then ?f \<Join>\<^sub> (?I \<down>< (?I \<rightarrow> ?n))
       else ?f \<Join>\<^sub> ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 2))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)))),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2))))),
    ("IL_AF_Stream.i_join_i_shrink_iMOD",
     "0 < ?k ==>
      ?f \<longmapsto> ?k \<Join>\<^sub> [ ?n * ?k + (?k - 1), mod ?k ] =
      ?f \<div> ?k \<Join>\<^sub> [?n\<dots>]",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2))),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.f_join_f_shrink_iMOD",
     "0 < ?k ==>
      ?xs \<longmapsto> ?k \<Join>\<^sub> [ ?n * ?k + (?k - 1), mod ?k ] =
      ?xs \<div> ?k \<Join>\<^sub> [?n\<dots>]",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2))),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("IL_AF_Stream.i_join_finite_nth_ge_card_eq_nth_Max",
     "[| finite ?I; ?I ~= {}; card ?I <= Suc ?n |]
      ==> (?f \<Join>\<^sub> ?I) ?n = ?f (Max ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_var 0,
           template_app (template_hole 0, template_var 2))))),
    ("IL_AF_Stream.i_shrink_eq_NoMsg_iAll_conv",
     "0 < ?k ==>
      ((?s \<div> ?k) ?t = NoMsg) =
      (\<box> t1 [?t * ?k\<dots>,?k - Suc 0]. ?s t1 = NoMsg)",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2),
               template_var 0)),
           template_hole 5),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_hole 9)))),
           t_empty)))),
    ("IL_AF_Stream.i_shrink_eq_NoMsg_iAll_conv2",
     "0 < ?k ==>
      ((?s \<div> ?k) ?t = NoMsg) =
      (\<box> t1 [\<dots>?k - 1] \<oplus> ?t * ?k. ?s t1 = NoMsg)",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 2),
               template_var 0)),
           template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2))),
           t_empty)))),
    ("IL_AF_Stream.i_join_finite_i_append_nth_Max_conv",
     "[| finite ?I; ?I ~= {} |]
      ==> ?f \<Join>\<^sub> ?I =
          ?f \<Down> Suc (Max ?I) \<Join>\<^sub> ?I \<frown>
          (%n. ?f (Max ?I))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1))),
                   template_var 0)),
               template_var 1)),
           t_empty)))),
    ("IL_AF_Stream.f_join_f_shrink_iMODb",
     "0 < ?k ==>
      ?xs \<longmapsto> ?k \<Join>\<^sub>
      [ ?n * ?k + (?k - 1), mod ?k, ?d ] =
      ?xs \<div> ?k \<Join>\<^sub> [?n\<dots>,?d]",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2))),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IL_AF_Stream.i_f_join_i_shrink_iMODb",
     "0 < ?k ==>
      ?f \<longmapsto> ?k \<Join>\<^sub>
      [ ?n * ?k + (?k - 1), mod ?k, ?d ] =
      ?f \<div> ?k \<Join>\<^sub> [?n\<dots>,?d]",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2))),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IL_AF_Stream.f_join_insert",
     "?n < length ?xs ==>
      ?xs \<Join>\<^sub> insert ?n ?I =
      ?xs \<Join>\<^sub> (?I \<down>< ?n) @
      ?xs ! ?n # ?xs \<Join>\<^sub> (?I \<down>> ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2))))))),
    ("IL_AF_Stream.i_f_join_union",
     "[| finite ?A; finite ?B; Max ?A < iMin ?B |]
      ==> ?f \<Join>\<^sub> (?A Un ?B) =
          ?f \<Join>\<^sub> ?A @ ?f \<Join>\<^sub> ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("IL_AF_Stream.f_join_f_shrink_iT_Div_mod",
     "[| 0 < ?k; ALL x:?I. x mod ?k = ?k - 1 |]
      ==> ?xs \<longmapsto> ?k \<Join>\<^sub> ?I =
          ?xs \<div> ?k \<Join>\<^sub> (?I \<oslash> ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.f_join_f_shrink_iT_Plus_iT_Div_mod",
     "[| 0 < ?k; ALL x:?I. x mod ?k = 0 |]
      ==> ?xs \<longmapsto> ?k \<Join>\<^sub> (?I \<oplus> ?k - 1) =
          ?xs \<div> ?k \<Join>\<^sub> (?I \<oslash> ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.i_join_insert",
     "?f \<Join>\<^sub> insert ?n ?I =
      ?f \<Down> ?n \<Join>\<^sub> (?I \<down>< ?n) \<frown>
      [?f ?n] \<frown>
      (if ?I \<down>> ?n = {} then %x. ?f ?n
       else ?f \<Join>\<^sub> (?I \<down>> ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_var 2, template_var 1)),
                   template_hole 4)),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1)),
                       template_hole 0)),
                   t_empty),
                 template_app
                  (template_app (template_hole 11, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)))))
           ))),
    ("IL_AF_Stream.f_join_aux_nth",
     "?i < card (?I Int {?n..<?n + length ?xs}) ==>
      f_join_aux ?xs ?n ?I ! ?i =
      ?xs ! (((?I Int {?n..<?n + length ?xs}) \<rightarrow> ?i) - ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app (template_hole 5, template_var 0))))))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1),
               template_var 2)),
           template_var 3),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_app (template_hole 5, template_var 0))))),
                 template_var 3)),
             template_var 1))))),
    ("IL_AF_Stream.i_join_union",
     "[| finite ?A; Max ?A < iMin ?B; ?B ~= {} |]
      ==> ?f \<Join>\<^sub> (?A Un ?B) =
          ?f \<Down> Suc (Max ?A) \<Join>\<^sub> ?A \<frown>
          ?f \<Join>\<^sub> ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 11, template_var 2))),
                   template_var 0)),
               template_var 2)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1))))),
    ("IL_AF_Stream.i_f_join_i_shrink_iT_Div_mod",
     "[| 0 < ?k; finite ?I; ALL x:?I. x mod ?k = ?k - 1 |]
      ==> ?f \<longmapsto> ?k \<Join>\<^sub> ?I =
          ?f \<div> ?k \<Join>\<^sub> (?I \<oslash> ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 2),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.i_f_join_i_shrink_iT_Plus_iT_Div_mod",
     "[| 0 < ?k; finite ?I; ALL x:?I. x mod ?k = 0 |]
      ==> ?f \<longmapsto> ?k \<Join>\<^sub> (?I \<oplus> ?k - 1) =
          ?f \<div> ?k \<Join>\<^sub> (?I \<oslash> ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 2),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.i_join_i_shrink_iT_Div_mod",
     "[| 0 < ?k; ?I ~= {}; ALL x:?I. x mod ?k = ?k - 1 |]
      ==> ?f \<longmapsto> ?k \<Join>\<^sub> ?I =
          ?f \<div> ?k \<Join>\<^sub> (?I \<oslash> ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iSince_conv",
     "[| 0 < ?k; ?m ~= NoMsg |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (?s t2 = NoMsg. t2 \<S> t1 [?t * ?k\<dots>,?k - Suc 0].
           ?s t1 = ?m)",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 3),
        template_negation
         (template_equation (template_var 2, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_hole 10)))),
             t_empty),
           t_empty)))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iSince_conv2",
     "[| 0 < ?k; ?m ~= NoMsg |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (?s t2 = NoMsg. t2 \<S> t1 [\<dots>?k - 1] \<oplus> ?t * ?k.
           ?s t1 = ?m)",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 3),
        template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_hole 1))),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3))),
             t_empty),
           t_empty)))),
    ("IL_AF_Stream.i_join_i_shrink_iT_Plus_iT_Div_mod",
     "[| 0 < ?k; ?I ~= {}; ALL x:?I. x mod ?k = 0 |]
      ==> ?f \<longmapsto> ?k \<Join>\<^sub> (?I \<oplus> ?k - 1) =
          ?f \<div> ?k \<Join>\<^sub> (?I \<oslash> ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 11)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("IL_AF_Stream.f_join_f_shrink_iT_Plus_iT_Div_mod_subst",
     "[| 0 < ?k; ALL x:?I. x mod ?k = 0; ?A = ?I \<oplus> ?k - 1;
         ?B = ?I \<oslash> ?k |]
      ==> ?xs \<longmapsto> ?k \<Join>\<^sub> ?A =
          ?xs \<div> ?k \<Join>\<^sub> ?B",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3), t_empty)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 6, template_var 4),
              template_hole 5))),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4)),
           template_var 1)))),
    ("IL_AF_Stream.i_f_join_i_shrink_iT_Plus_iT_Div_mod_subst",
     "[| 0 < ?k; finite ?I; ALL x:?I. x mod ?k = 0; ?A = ?I \<oplus> ?k - 1;
         ?B = ?I \<oslash> ?k |]
      ==> ?f \<longmapsto> ?k \<Join>\<^sub> ?A =
          ?f \<div> ?k \<Join>\<^sub> ?B",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 4),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3), t_empty)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 6, template_var 4),
              template_hole 5))),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4)),
           template_var 1)))),
    ("IL_AF_Stream.i_join_i_shrink_iT_Plus_iT_Div_mod_subst",
     "[| 0 < ?k; ?I ~= {}; ALL x:?I. x mod ?k = 0; ?A = ?I \<oplus> ?k - 1;
         ?B = ?I \<oslash> ?k |]
      ==> ?f \<longmapsto> ?k \<Join>\<^sub> ?A =
          ?f \<div> ?k \<Join>\<^sub> ?B",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 4),
        template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3), t_empty)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 6, template_var 4),
              template_hole 5))),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4)),
           template_var 1)))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iEx_iAll_cut_greater_conv",
     "[| 0 < ?k; ?m ~= NoMsg |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (\<diamond> t1 [?t * ?k\<dots>,?k - Suc 0].
              ?s t1 = ?m &
              (\<box> t2 [?t * ?k\<dots>,?k - Suc 0] \<down>> t1.
                  ?s t2 = NoMsg))",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 3),
        template_negation
         (template_equation (template_var 2, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app (template_hole 3, template_hole 13)))),
           t_empty)))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iEx_iAll_cut_greater_conv2",
     "[| 0 < ?k; ?m ~= NoMsg |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (\<diamond> t1 [\<dots>?k - 1] \<oplus> ?t * ?k.
              ?s t1 = ?m &
              (\<box> t2 ([\<dots>?k - 1] \<oplus> ?t * ?k) \<down>> t1.
                  ?s t2 = NoMsg))",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 3),
        template_negation
         (template_equation (template_var 2, template_hole 11))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 3))),
           t_empty)))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iEx_iAll_conv",
     "[| 0 < ?k; ?m ~= NoMsg |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (\<diamond> t1 [?t * ?k\<dots>,?k - Suc 0].
              ?s t1 = ?m &
              (\<box> t2 [Suc t1\<dots>].
                  t2 <= ?t * ?k + ?k - Suc 0 --> ?s t2 = NoMsg))",
     template_implication
      ([template_inequation (less_than, template_hole 16, template_var 3),
        template_negation
         (template_equation (template_var 2, template_hole 13))],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_app (template_hole 6, template_hole 16)))),
           t_empty)))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iEx_iAll_conv2",
     "[| 0 < ?k; ?m ~= NoMsg |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (\<diamond> t1 [\<dots>?k - 1] \<oplus> ?t * ?k.
              ?s t1 = ?m &
              (\<box> t2 [1\<dots>] \<oplus> t1.
                  t2 <= ?t * ?k + ?k - 1 --> ?s t2 = NoMsg))",
     template_implication
      ([template_inequation (less_than, template_hole 17, template_var 3),
        template_negation
         (template_equation (template_var 2, template_hole 14))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_app (template_hole 12, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_hole 7))),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3))),
           t_empty)))),
    ("IL_AF_Stream.i_shrink_eq_NoMsg_iAll_start_event_conv",
     "[| 0 < ?k; !!t. ?event t = (t mod ?k = 0); ?t0.0 = ?t * ?k |]
      ==> ((?s \<div> ?k) ?t = NoMsg) =
          (?s ?t0.0 = NoMsg &
           (\<circle> t' ?t0.0 [0\<dots>].
               ?s t1 = NoMsg. t1 \<U> t2 [0\<dots>] \<oplus> t'.
               ?event t2))",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 4),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 0),
               template_var 4),
             template_var 1),
           template_hole 5),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_var 0, template_var 2)),
                   template_hole 5)),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app (template_hole 2, template_hole 13)),
                 t_empty))
             )))),
    ("IL_AF_Stream.i_shrink_eq_NoMsg_iAll_finish_event_conv",
     "[| 1 < ?k; !!t. ?event t = (t mod ?k = ?k - 1); ?t0.0 = ?t * ?k |]
      ==> ((?s \<div> ?k) ?t = NoMsg) =
          (?s ?t0.0 = NoMsg &
           (\<circle> t' ?t0.0 [0\<dots>].
               ?s t1 = NoMsg. t1 \<U> t2 [0\<dots>] \<oplus> t'.
               ?event t2 & ?s t2 = NoMsg))",
     template_implication
      ([template_inequation (less_than, template_hole 15, template_var 4),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 0),
               template_var 4),
             template_var 1),
           template_hole 6),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_var 0, template_var 2)),
                   template_hole 6)),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app (template_hole 3, template_hole 2)),
                 t_empty))
             )))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iUntil_finish_event_conv",
     "[| 1 < ?k; ?m ~= NoMsg; !!t. ?event t = (t mod ?k = ?k - 1);
         ?t0.0 = ?t * ?k |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          ((~ ?event t1. t1 \<U> t2 [0\<dots>] \<oplus> ?t0.0.
            ?event t2 & ?s t2 = ?m) |
           (~ ?event t1. t1 \<U> t2 [0\<dots>] \<oplus> ?t0.0.
            ~ ?event t2 &
            ?s t2 = ?m &
            (\<circle> t' t2 [0\<dots>].
                ?s t3 = NoMsg. t3 \<U> t4 [0\<dots>] \<oplus> t'.
                ?event t4 & ?s t4 = NoMsg)))",
     template_implication
      ([template_inequation (less_than, template_hole 17, template_var 5),
        template_negation
         (template_equation (template_var 4, template_hole 14)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 5),
               template_var 1)),
           template_var 4),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)),
                     template_var 2)),
                 t_empty),
               t_empty)),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_var 2)),
               t_empty),
             t_empty))))),
    ("IL_AF_Stream.i_shrink_eq_Msg_iUntil_start_event_conv",
     "[| 0 < ?k; ?m ~= NoMsg; !!t. ?event t = (t mod ?k = 0);
         ?t0.0 = ?t * ?k |]
      ==> ((?s \<div> ?k) ?t = ?m) =
          (?s ?t0.0 = ?m &
           (\<circle> t' ?t0.0 [0\<dots>].
               ?s t1 = NoMsg. t1 \<U> t2 [0\<dots>] \<oplus> t'.
               ?event t2) |
           (\<circle> t' ?t0.0 [0\<dots>].
               ~ ?event t1. t1 \<U> t2 [0\<dots>] \<oplus> t'.
               ?s t2 = ?m &
               ~ ?event t2 &
               (\<circle> t'' t2 [0\<dots>].
                   ?s t3 = NoMsg. t3 \<U> t4 [0\<dots>] \<oplus> t''.
                   ?event t4)))",
     template_implication
      ([template_inequation (less_than, template_hole 15, template_var 5),
        template_negation
         (template_equation (template_var 4, template_hole 12)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 5))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 0),
               template_var 5),
             template_var 1),
           template_var 4),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app (template_var 0, template_var 2)),
                       template_var 4)),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 2),
                       template_app (template_hole 2, template_hole 15)),
                     t_empty))),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app (template_hole 2, template_hole 15)),
                 t_empty))
             ))))]:
   (string * thm * template) list
### theory "Draft.IL_AF_StreamMoreTemplates"
### 0.505s elapsed time, 0.697s cpu time, 0.115s GC time
val it = (): unit
