Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.153s elapsed time, 0.627s cpu time, 0.044s GC time
Loading theory "Draft.RatPower" (required by "Draft.LogMoreTemplates" via "Draft.Log" via "Draft.RealPower")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.229s elapsed time, 0.934s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.335s elapsed time, 1.349s cpu time, 0.137s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.RatPower"
### 0.204s elapsed time, 0.800s cpu time, 0.093s GC time
Loading theory "Draft.RealPower" (required by "Draft.LogMoreTemplates" via "Draft.Log")
instantiation
  rat :: dist
  dist_rat == dist :: rat => rat => real
instantiation
  rat :: dist_norm
  norm_rat == norm :: rat => real
instantiation
  rat :: metric_space
  uniformity_rat == uniformity :: (rat * rat) filter
  open_rat == open :: rat set => bool
consts
  incratseq :: "real => nat => rat"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  interlaced_index :: "(nat => rat) => (nat => rat) => nat => nat"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
### theory "Draft.RealPower"
### 0.517s elapsed time, 2.032s cpu time, 0.237s GC time
Loading theory "Draft.Log" (required by "Draft.LogMoreTemplates")
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Log"
### 0.314s elapsed time, 1.090s cpu time, 0.609s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.010s elapsed time, 3.790s cpu time, 0.939s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.100s elapsed time, 3.818s cpu time, 0.919s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.954s elapsed time, 5.745s cpu time, 1.104s GC time
Loading theory "Draft.Templates" (required by "Draft.LogMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LogMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.456s elapsed time, 0.499s cpu time, 0.050s GC time
Loading theory "Draft.LogMoreTemplates"
val templateLemmas =
   [("Log.Log_inj", "1 < ?b ==> inj_on (Log ?b) {0<..}",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Log.LIMSEQ_powreal_minus_nat",
     "1 < ?a ==>
      (%n. ?a pow\<^sub>\<real> - real n) \<longlonglongrightarrow> 0",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Log.Log_one", "[| 0 < ?a; ?a ~= 1 |] ==> Log ?a 1 = 0",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 1),
         template_hole 4))),
    ("Log.Log_eq_one", "[| 0 < ?a; ?a ~= 1 |] ==> Log ?a ?a = 1",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 0),
         template_hole 1))),
    ("Log.powreal_surj",
     "[| 1 < ?a; 0 < ?x |] ==> EX y. ?a pow\<^sub>\<real> y = ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Log.inj_on_powreal",
     "[| 0 < ?a; ?a ~= 1 |] ==> inj ((pow\<^sub>\<real>) ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("Log.powreal_IVT_lower_lemma",
     "[| 1 < ?a; 0 < ?x |] ==> EX n. ?x < ?a pow\<^sub>\<real> real n",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Log.Log_powreal_cancel",
     "[| 0 < ?a; ?a ~= 1 |] ==> Log ?a (?a pow\<^sub>\<real> ?y) = ?y",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Log.LIMSEQ_less_Ex",
     "[| ?X \<longlonglongrightarrow> ?x; ?x < ?y |] ==> EX n. ?X n < ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_hole 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Log.powreal_IVT_upper_lemma",
     "[| 1 < ?a; 0 < ?x |] ==> EX n. ?a pow\<^sub>\<real> - real n < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Log.one_less_Log_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (1 < Log ?a ?x) = (?a < ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Log.zero_less_Log_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (0 < Log ?a ?x) = (1 < ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("Log.Log_less_one_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (Log ?a ?x < 1) = (?x < ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 3),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("Log.Log_less_zero_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (Log ?a ?x < 0) = (?x < 1)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)))),
    ("Log.one_le_Log_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (1 <= Log ?a ?x) = (?a <= ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Log.zero_le_Log_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (0 <= Log ?a ?x) = (1 <= ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_var 0)))),
    ("Log.Log_le_one_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (Log ?a ?x <= 1) = (?x <= ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Log.Log_le_zero_cancel_iff",
     "[| 1 < ?a; 0 < ?x |] ==> (Log ?a ?x <= 0) = (?x <= 1)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 3),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 4)))),
    ("Log.powreal_surj2",
     "[| 0 < ?a; ?a < 1; 0 < ?x |] ==> EX y. ?a pow\<^sub>\<real> y = ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 3),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Log.powreal_ex1_eq",
     "[| 0 < ?a; ?a ~= 1; 0 < ?x |] ==> EX! y. ?a pow\<^sub>\<real> y = ?x",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Log.powreal_Log_cancel",
     "[| 0 < ?a; ?a ~= 1; 0 < ?x |]
      ==> ?a pow\<^sub>\<real> Log ?a ?x = ?x",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Log.Log_inverse",
     "[| 0 < ?a; ?a ~= 1; 0 < ?x |] ==> Log ?a (inverse ?x) = - Log ?a ?x",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Log.Log_less_cancel_iff",
     "[| 1 < ?a; 0 < ?x; 0 < ?y |] ==> (Log ?a ?x < Log ?a ?y) = (?x < ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Log.Log_le_cancel_iff",
     "[| 1 < ?a; 0 < ?x; 0 < ?y |]
      ==> (Log ?a ?x <= Log ?a ?y) = (?x <= ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Log.Log_powreal",
     "[| 0 < ?x; 1 < ?b; ?b ~= 1 |]
      ==> Log ?b (?x pow\<^sub>\<real> ?y) = ?y * Log ?b ?x",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Log.Log_nat_power",
     "[| 0 < ?x; 1 < ?b; ?b ~= 1 |]
      ==> Log ?b (?x ^ ?n) = real ?n * Log ?b ?x",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2))))),
    ("Log.Log_mult",
     "[| 0 < ?a; ?a ~= 1; 0 < ?x; 0 < ?y |]
      ==> Log ?a (?x * ?y) = Log ?a ?x + Log ?a ?y",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Log.Log_divide",
     "[| 0 < ?a; ?a ~= 1; 0 < ?x; 0 < ?y |]
      ==> Log ?a (?x / ?y) = Log ?a ?x - Log ?a ?y",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Log.IVT_simple",
     "[| ?f ?a <= ?y; ?y <= ?f ?b; ?a <= ?b;
         ALL x. ?a <= x & x <= ?b --> isCont ?f x |]
      ==> EX x. ?f x = ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 3, template_var 0)),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty))))]:
   (string * thm * template) list
### theory "Draft.LogMoreTemplates"
### 0.318s elapsed time, 0.443s cpu time, 0.054s GC time
val it = (): unit
