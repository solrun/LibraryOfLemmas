Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.154s elapsed time, 0.632s cpu time, 0.053s GC time
Loading theory "Draft.RatPower" (required by "Draft.RealPowerMoreTemplates" via "Draft.RealPower")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.254s elapsed time, 1.028s cpu time, 0.053s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.330s elapsed time, 1.318s cpu time, 0.158s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.RatPower"
### 0.215s elapsed time, 0.842s cpu time, 0.105s GC time
Loading theory "Draft.RealPower" (required by "Draft.RealPowerMoreTemplates")
instantiation
  rat :: dist
  dist_rat == dist :: rat => rat => real
instantiation
  rat :: dist_norm
  norm_rat == norm :: rat => real
instantiation
  rat :: metric_space
  uniformity_rat == uniformity :: (rat * rat) filter
  open_rat == open :: rat set => bool
consts
  incratseq :: "real => nat => rat"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  interlaced_index :: "(nat => rat) => (nat => rat) => nat => nat"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.RealPower"
### 0.529s elapsed time, 2.080s cpu time, 0.283s GC time
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 1.037s elapsed time, 3.748s cpu time, 1.003s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.085s elapsed time, 3.716s cpu time, 0.898s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.961s elapsed time, 5.700s cpu time, 1.183s GC time
Loading theory "Draft.Templates" (required by "Draft.RealPowerMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.RealPowerMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.477s elapsed time, 0.536s cpu time, 0.073s GC time
Loading theory "Draft.RealPowerMoreTemplates"
val templateLemmas =
   [("RealPower.incseq_incratseq", "incseq (incratseq ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("RealPower.incseq_incseq_of", "incseq (incseq_of ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("RealPower.powa_one_eq_one", "1 powa ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("RealPower.powreal_one_eq_one", "1 pow\<^sub>\<real> ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("RealPower.ex_less_of_rat", "EX r. ?x < of_rat r",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("RealPower.incratseq_0_less", "real_of_rat (incratseq ?x 0) < ?x",
     template_inequation
      (less_than,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("RealPower.incratseq_ub", "real_of_rat (incratseq ?x ?n) < ?x",
     template_inequation
      (less_than,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("RealPower.incseq_of_le_self", "real_of_rat (incseq_of ?x ?n) <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("RealPower.incseq_of_rat_incseq_of",
     "incseq (%n. of_rat (incseq_of ?x n))",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("RealPower.real_of_rat_abs",
     "real_of_rat \<bar>?a\<bar> = \<bar>real_of_rat ?a\<bar>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RealPower.inverse_of_real_nat_of_rat_of_nat",
     "inverse (real ?n) = real_of_rat (inverse (rat_of_nat ?n))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("RealPower.incratseq_incseq",
     "incratseq ?x ?n < incratseq ?x (Suc ?n)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("RealPower.incratseq_0_gt", "?x - 1 < real_of_rat (incratseq ?x 0)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("RealPower.incseq_of_Suc", "incseq_of ?x ?n <= incseq_of ?x (Suc ?n)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("RealPower.LIMSEQ_incseq_of",
     "(%n. real_of_rat (incseq_of ?x n)) \<longlonglongrightarrow> ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("RealPower.powreal_inverse",
     "inverse (?a pow\<^sub>\<real> ?x) = inverse ?a pow\<^sub>\<real> ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("RealPower.powreal_minus",
     "?a pow\<^sub>\<real> - ?x = inverse (?a pow\<^sub>\<real> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_minus_base_ge_one",
     "?a pow\<^sub>\<real> - ?x = inverse ?a pow\<^sub>\<real> ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("RealPower.incseq_of_rat", "incseq ?s ==> incseq (%n. of_rat (?s n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.powr_zero_eq_one_iff",
     "?x pow\<^sub>\<real> 0 = (if ?x <= 0 then 0 else 1)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 3)),
           template_hole 3),
         template_hole 0))),
    ("RealPower.powreal_zero_eq_one",
     "0 < ?a ==> ?a pow\<^sub>\<real> 0 = 1",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 3),
         template_hole 0))),
    ("RealPower.powreal_gt_zero", "0 < ?a ==> 0 < ?a pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powa_one_gt_zero", "1 <= ?a ==> ?a powa 1 = ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 2),
         template_var 0))),
    ("RealPower.powa_zero_eq_one", "1 <= ?a ==> ?a powa 0 = 1",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 3))),
    ("RealPower.powa_gt_zero", "1 <= ?a ==> 0 < ?a powa ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_one", "0 <= ?a ==> ?a pow\<^sub>\<real> 1 = ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_var 0))),
    ("RealPower.powreal_mult",
     "(?a pow\<^sub>\<real> ?x) pow\<^sub>\<real> ?y =
      ?a pow\<^sub>\<real> (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.lemma_incseq_incseq_of_diff_inverse",
     "incseq (%n. incseq_of ?x n - 1 / rat_of_nat (Suc n))",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("RealPower.powreal_not_zero",
     "0 < ?a ==> ?a pow\<^sub>\<real> ?x ~= 0",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 3)
           ))),
    ("RealPower.incratseq_lb",
     "?x - 1 / real (Suc ?n) < real_of_rat (incratseq ?x ?n)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.lemma_incseq_of_diff_inverse_ub",
     "real_of_rat (incseq_of ?x ?n - 1 / rat_of_nat (Suc ?n)) < ?x",
     template_inequation
      (less_than,
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))),
       template_var 1)),
    ("RealPower.powreal_eq_powa",
     "1 <= ?a ==> ?a pow\<^sub>\<real> ?x = ?a powa ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powa_minus_one", "1 <= ?a ==> ?a powa - 1 = inverse ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 4)),
         template_app (template_hole 0, template_var 0)))),
    ("RealPower.incseq_powrat_insec_of",
     "1 <= ?a ==> incseq (%n. ?a pow\<^sub>\<rat> incseq_of ?x n)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("RealPower.convergent_powrat_incseq_of",
     "1 <= ?a ==> convergent (%n. ?a pow\<^sub>\<rat> incseq_of ?x n)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("RealPower.powreal_minus_one",
     "0 <= ?a ==> ?a pow\<^sub>\<real> - 1 = inverse ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("RealPower.LIMSEQ_rat_real_ex",
     "EX r. incseq r &
            (%n. real_of_rat (r n)) \<longlonglongrightarrow> ?x",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("RealPower.powreal_add",
     "?a pow\<^sub>\<real> (?x + ?y) =
      ?a pow\<^sub>\<real> ?x * ?a pow\<^sub>\<real> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("RealPower.isCont_powa_exponent_at_zero",
     "1 < ?a ==> isCont ((powa) ?a) 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             t_empty)
           ))),
    ("RealPower.isCont_powa_exponent_gt_one",
     "1 < ?a ==> isCont ((powa) ?a) ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             t_empty)
           ))),
    ("RealPower.isCont_powreal_exponent_gt_one",
     "1 < ?a ==> isCont ((pow\<^sub>\<real>) ?a) ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             t_empty)
           ))),
    ("RealPower.powreal_power_eq",
     "0 < ?a ==> ?a pow\<^sub>\<real> real ?n = ?a ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.realpow_powrat_eq",
     "0 < ?a ==>
      ?a pow\<^sub>\<real> real_of_rat ?q = ?a pow\<^sub>\<rat> ?q",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.isCont_powrat_exponent",
     "0 < ?a ==> isCont ((pow\<^sub>\<rat>) ?a) ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             t_empty)
           ))),
    ("RealPower.isCont_powreal_exponent",
     "0 < ?a ==> isCont ((pow\<^sub>\<real>) ?a) ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             t_empty)
           ))),
    ("RealPower.powa_power_eq", "1 <= ?a ==> ?a powa real ?n = ?a ^ ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powa_powrat_eq",
     "1 <= ?a ==> ?a powa real_of_rat ?q = ?a pow\<^sub>\<rat> ?q",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.Bseq_powrat_incseq_of",
     "1 <= ?a ==> Bseq (%n. ?a pow\<^sub>\<rat> incseq_of ?x n)",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0)
           ))),
    ("RealPower.lemma_incseq_incseq_diff_inverse",
     "incseq ?s ==> incseq (%n. ?s n - 1 / rat_of_nat (Suc n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("RealPower.real_inverse_bet_one_one_lemma",
     "1 < ?a ==> 0 < inverse ?a & inverse ?a < 1",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_hole 1),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0)),
               template_hole 3))
           ))),
    ("RealPower.powreal_eq_one_iff",
     "1 < ?a ==> (?a pow\<^sub>\<real> ?x = 1) = (?x = 0)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 4),
         template_equation (template_var 0, template_hole 0)))),
    ("RealPower.powa_minus",
     "1 <= ?a ==> ?a powa - ?x = inverse (?a powa ?x)",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_numeral",
     "0 <= ?x ==> ?x pow\<^sub>\<real> numeral ?n = ?x ^ numeral ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("RealPower.incseqD2", "[| incseq ?r; ?r ?m < ?r ?n |] ==> ?m < ?n",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation
         (less_than, template_app (template_var 2, template_var 1),
          template_app (template_var 2, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("RealPower.real_inverse_gt_one_lemma",
     "[| 0 < ?a; ?a < 1 |] ==> 1 < inverse ?a",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("RealPower.real_inverse_ge_one_lemma",
     "[| 0 < ?a; ?a < 1 |] ==> 1 <= inverse ?a",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_hole 2,
         template_app (template_hole 0, template_var 0)))),
    ("RealPower.lemma_LIMSEQ_incseq_of_diff_inverse",
     "(%n. real_of_rat (incseq_of ?x n - 1 / rat_of_nat (Suc n)))
      \<longlonglongrightarrow> ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 9, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("RealPower.LIM_powa_exponent_at_zero",
     "1 < ?a ==> (powa) ?a \<midarrow>0\<rightarrow> 1",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 3, template_hole 6)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("RealPower.LIMSEQ_powa_inverse_of_nat",
     "1 <= ?a ==>
      (%n. ?a powa inverse (real n)) \<longlonglongrightarrow> 1",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("RealPower.powreal_gt_one",
     "[| 1 < ?a; 0 < ?x |] ==> 1 < ?a pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.incseq_incseq_powrat",
     "[| 1 <= ?a; incseq ?r |] ==> incseq (%n. ?a pow\<^sub>\<rat> ?r n)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.powa_ge_one", "[| 1 <= ?a; 0 <= ?x |] ==> 1 <= ?a powa ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_ge_one",
     "[| 1 <= ?a; 0 <= ?x |] ==> 1 <= ?a pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_inject_exp1",
     "1 < ?a ==>
      (?a pow\<^sub>\<real> ?r = ?a pow\<^sub>\<real> ?s) = (?s = ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 0, template_var 1)))),
    ("RealPower.powreal_less_cancel_iff",
     "1 < ?a ==>
      (?a pow\<^sub>\<real> ?r < ?a pow\<^sub>\<real> ?s) = (?r < ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_le_cancel_iff",
     "1 < ?a ==>
      (?a pow\<^sub>\<real> ?r <= ?a pow\<^sub>\<real> ?s) = (?r <= ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_mult_power",
     "0 < ?a ==>
      ?a pow\<^sub>\<real> (real ?n * ?x) = (?a pow\<^sub>\<real> ?x) ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("RealPower.LIMSEQ_powa",
     "1 <= ?a ==>
      (%n. ?a pow\<^sub>\<rat> incseq_of ?x n)
      \<longlonglongrightarrow> ?a powa ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("RealPower.LIMSEQ_powrat_incseq_of_ex1",
     "1 <= ?a ==>
      EX! y.
         (%n. ?a pow\<^sub>\<rat> incseq_of ?x n)
         \<longlonglongrightarrow> y",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 1)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("RealPower.powa_powrat_lemma",
     "1 <= ?a ==>
      (?a powa ?x) pow\<^sub>\<rat> ?p = ?a powa (?x * real_of_rat ?p)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("RealPower.incseq_le_all",
     "[| incseq ?X; ?X \<longlonglongrightarrow> ?L |]
      ==> ALL n. ?X n <= ?L",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.powa_less_mono",
     "[| ?r < ?s; 1 < ?a |] ==> ?a powa ?r < ?a powa ?s",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RealPower.powreal_less_mono",
     "[| ?r < ?s; 1 < ?a |]
      ==> ?a pow\<^sub>\<real> ?r < ?a pow\<^sub>\<real> ?s",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RealPower.powa_le_mono",
     "[| ?r <= ?s; 1 <= ?a |] ==> ?a powa ?r <= ?a powa ?s",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RealPower.powreal_le_mono",
     "[| ?r <= ?s; 1 <= ?a |]
      ==> ?a pow\<^sub>\<real> ?r <= ?a pow\<^sub>\<real> ?s",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RealPower.powreal_less_cancel",
     "[| ?a pow\<^sub>\<real> ?r < ?a pow\<^sub>\<real> ?s; 1 <= ?a |]
      ==> ?r < ?s",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_inequation (less_equals, template_hole 0, template_var 2)],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("RealPower.powa_le_cancel",
     "[| ?a powa ?r <= ?a powa ?s; 1 < ?a |] ==> ?r <= ?s",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_inequation (less_than, template_hole 0, template_var 2)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("RealPower.powreal_le_cancel",
     "[| ?a pow\<^sub>\<real> ?r <= ?a pow\<^sub>\<real> ?s; 1 < ?a |]
      ==> ?r <= ?s",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_inequation (less_than, template_hole 0, template_var 2)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("RealPower.interlaced_seq_even",
     "interlaced_seq ?r ?s (2 * ?n) = ?s (interlaced_index ?r ?s (2 * ?n))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0))))),
    ("RealPower.powa_add",
     "1 <= ?a ==> ?a powa (?x + ?y) = ?a powa ?x * ?a powa ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RealPower.powreal_divide2",
     "0 <= ?a ==>
      ?a pow\<^sub>\<real> (?x - ?y) =
      ?a pow\<^sub>\<real> ?x / ?a pow\<^sub>\<real> ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RealPower.powreal_inverse_of_nat_gt_one",
     "[| 1 < ?a; ?n ~= 0 |] ==> 1 < ?a pow\<^sub>\<real> inverse (real ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 6,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("RealPower.isCont_powreal_exponent_less_one",
     "[| 0 < ?a; ?a < 1 |] ==> isCont ((pow\<^sub>\<real>) ?a) ?x",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             t_empty)
           ))),
    ("RealPower.incseq_rat_le_real",
     "[| incseq ?s; (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x |]
      ==> real_of_rat (?s ?n) <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty),
                template_app (template_hole 2, template_var 1)),
              template_hole 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3, template_app (template_var 2, template_var 0)),
         template_var 1))),
    ("RealPower.interlaced_seq_odd",
     "interlaced_seq ?r ?s (Suc (2 * ?n)) =
      ?r (interlaced_index ?r ?s (Suc (2 * ?n)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0))),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0)))))),
    ("RealPower.incseq_of_le_mono",
     "?r <= ?s ==> EX N. ALL n>=N. incseq_of ?r n <= incseq_of ?s n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("RealPower.root_powreal_inverse",
     "[| 0 < ?n; 0 <= ?x |]
      ==> root ?n ?x = ?x pow\<^sub>\<real> (1 / real ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation (less_equals, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)))))),
    ("RealPower.powrat_incseq_of_bounded",
     "[| 1 <= ?a; ?x < real_of_rat ?r |]
      ==> ?a pow\<^sub>\<rat> incseq_of ?x ?n <= ?a pow\<^sub>\<rat> ?r",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 3),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 1)))),
    ("RealPower.powreal_ge_one2",
     "[| 0 < ?a; ?a < 1; ?x <= 0 |] ==> 1 <= ?a pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 2),
        template_inequation (less_equals, template_var 0, template_hole 3)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_inject_base_less_one",
     "[| 0 < ?a; ?a < 1 |]
      ==> (?a pow\<^sub>\<real> ?r = ?a pow\<^sub>\<real> ?s) = (?s = ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 3)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 0, template_var 1)))),
    ("RealPower.powreal_mult3",
     "[| 0 < ?a; 0 <= ?x |]
      ==> (?a pow\<^sub>\<real> ?x) pow\<^sub>\<real> ?y =
          ?a pow\<^sub>\<real> (?x * ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_equals, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_mult4",
     "[| 0 < ?a; ?x <= 0 |]
      ==> (?a pow\<^sub>\<real> ?x) pow\<^sub>\<real> ?y =
          ?a pow\<^sub>\<real> (?x * ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_equals, template_var 1, template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RealPower.powa_mult",
     "[| 1 <= ?a; 0 <= ?x |] ==> (?a powa ?x) powa ?y = ?a powa (?x * ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 2),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_mult1",
     "[| 1 <= ?a; 0 <= ?x |]
      ==> (?a pow\<^sub>\<real> ?x) pow\<^sub>\<real> ?y =
          ?a pow\<^sub>\<real> (?x * ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 2),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_inject",
     "[| 0 < ?a; ?a ~= 1 |]
      ==> (?a pow\<^sub>\<real> ?r = ?a pow\<^sub>\<real> ?s) = (?s = ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 0, template_var 1)))),
    ("RealPower.powa_powrat_lemma2",
     "[| 1 <= ?a; ?p < 0 |]
      ==> (?a powa ?x) pow\<^sub>\<rat> ?p = ?a powa (?x * real_of_rat ?p)",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 2),
        template_inequation (less_than, template_var 1, template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("RealPower.powa_powrat_lemma1",
     "[| 1 <= ?a; 0 <= ?p |]
      ==> (?a powa ?x) pow\<^sub>\<rat> ?p = ?a powa (?x * real_of_rat ?p)",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 2),
        template_inequation (less_equals, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("RealPower.lemma_seq_point_gt_ex",
     "[| (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x; ?y < ?x |]
      ==> EX m. ?y < real_of_rat (?r m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 1)),
              template_hole 2)
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("RealPower.lemma_seq_point_gt_ex2",
     "[| (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         real_of_rat ?y < ?x |]
      ==> EX m. ?y < ?r m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty),
                template_app (template_hole 4, template_var 1)),
              template_hole 3)
            ),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 0),
          template_var 1)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.powreal_less_mono_base",
     "[| 0 < ?r; 0 < ?a; ?a < ?b |]
      ==> ?a pow\<^sub>\<real> ?r < ?b pow\<^sub>\<real> ?r",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 2),
        template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("RealPower.powreal_less_antimono_base",
     "[| ?r < 0; 0 < ?a; ?a < ?b |]
      ==> ?b pow\<^sub>\<real> ?r < ?a pow\<^sub>\<real> ?r",
     template_implication
      ([template_inequation (less_than, template_var 2, template_hole 1),
        template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("RealPower.powreal_less_anti_mono",
     "[| ?r < ?s; 0 < ?a; ?a < 1 |]
      ==> ?a pow\<^sub>\<real> ?s < ?a pow\<^sub>\<real> ?r",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("RealPower.powreal_le_anti_mono",
     "[| ?r <= ?s; 0 < ?a; ?a < 1 |]
      ==> ?a pow\<^sub>\<real> ?s <= ?a pow\<^sub>\<real> ?r",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("RealPower.powa_mult_base",
     "[| 1 <= ?a; 1 <= ?b |]
      ==> (?a * ?b) powa ?x = ?a powa ?x * ?b powa ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_mult_base_lemma1",
     "[| 1 <= ?a; 1 <= ?b |]
      ==> (?a * ?b) pow\<^sub>\<real> ?x =
          ?a pow\<^sub>\<real> ?x * ?b pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_power_eq2",
     "[| 0 <= ?a; 0 < ?n |]
      ==> ?a ^ ?n = (if ?a = 0 then 0 else ?a pow\<^sub>\<real> real ?n)",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_hole 7)),
                 template_hole 7),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0)))
             )))),
    ("RealPower.powreal_mult_base",
     "[| 0 <= ?a; 0 <= ?b |]
      ==> (?a * ?b) pow\<^sub>\<real> ?x =
          ?a pow\<^sub>\<real> ?x * ?b pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RealPower.powreal_divide",
     "[| 0 <= ?a; 0 <= ?b |]
      ==> (?a / ?b) pow\<^sub>\<real> ?x =
          ?a pow\<^sub>\<real> ?x / ?b pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RealPower.LIMSEQ_powrat_exponent",
     "[| ?X \<longlonglongrightarrow> ?x; 0 < ?a |]
      ==> (%n. ?a pow\<^sub>\<rat> ?X n)
          \<longlonglongrightarrow> ?a pow\<^sub>\<rat> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_hole 5)
           ))),
    ("RealPower.LIMSEQ_real_root",
     "[| ?X \<longlonglongrightarrow> ?a; 0 < ?m |]
      ==> (%n. root ?m (?X n)) \<longlonglongrightarrow> root ?m ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_hole 3)
            ),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_hole 3)
           ))),
    ("RealPower.convergent_powrat_incseq",
     "[| 1 <= ?a; incseq ?r; ALL n. ?r n <= ?x |]
      ==> convergent (%n. ?a pow\<^sub>\<rat> ?r n)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 2),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.lemma_LIMSEQ_incseq_diff_inverse",
     "(%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x ==>
      (%n. real_of_rat (?s n - 1 / rat_of_nat (Suc n)))
      \<longlonglongrightarrow> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty),
               template_app (template_hole 6, template_var 0)),
             template_hole 5)
           ))),
    ("RealPower.powreal_int",
     "0 < ?x ==>
      ?x pow\<^sub>\<real> real_of_int ?i =
      (if 0 <= ?i then ?x ^ nat ?i else 1 / ?x ^ nat (- ?i))",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 1),
           template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0)))))))),
    ("RealPower.lemma_incseq_diff_inverse_ub",
     "[| incseq ?s; (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x |]
      ==> real_of_rat (?s ?n - 1 / rat_of_nat (Suc ?n)) < ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, t_empty),
                template_app (template_hole 7, template_var 1)),
              template_hole 6)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_var 2, template_var 0)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))),
         template_var 1))),
    ("RealPower.interlaced_seq_bounded",
     "[| ALL n. of_rat (?r n) < ?x; ALL n. of_rat (?s n) < ?x |]
      ==> of_rat (interlaced_seq ?r ?s ?n) < ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_var 2))),
    ("RealPower.Bseq_powrat_incseq",
     "[| 1 <= ?a; incseq ?r; ALL n. of_rat (?r n) <= ?x |]
      ==> Bseq (%n. ?a pow\<^sub>\<rat> ?r n)",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 2),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("RealPower.powreal_mult2",
     "[| 0 < ?a; ?a < 1; 0 <= ?x |]
      ==> (?a pow\<^sub>\<real> ?x) pow\<^sub>\<real> ?y =
          ?a pow\<^sub>\<real> (?x * ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 4),
        template_inequation (less_equals, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RealPower.powrat_incseq_bounded",
     "[| 1 <= ?a; ALL n. ?r n < of_rat ?q; incseq ?r |]
      ==> ?a pow\<^sub>\<rat> ?r ?n <= ?a pow\<^sub>\<rat> ?q",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 3),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("RealPower.LIMSEQ_iff2",
     "?X \<longlonglongrightarrow> ?L =
      (ALL m>0. EX no. ALL n>=no. dist (?X n) ?L < inverse (real m))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 1),
           template_app (template_hole 11, template_var 0)),
         template_hole 10),
       template_app (template_hole 9, t_empty))),
    ("RealPower.powreal_mult_base_lemma2",
     "[| 1 <= ?a; 0 < ?b; ?b < 1 |]
      ==> (?a * ?b) pow\<^sub>\<real> ?x =
          ?a pow\<^sub>\<real> ?x * ?b pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RealPower.lemma_LIMSEQ_powrat_diff_inverse",
     "[| 1 <= ?a;
         (%n. ?a pow\<^sub>\<rat> ?s n) \<longlonglongrightarrow> ?y |]
      ==> (%n. ?a pow\<^sub>\<rat> (?s n - 1 / rat_of_nat (Suc n)))
          \<longlonglongrightarrow> ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty),
               template_app (template_hole 6, template_var 0)),
             template_hole 5)
           ))),
    ("RealPower.lemma_LIMSEQ_powrat_diff_inverse2",
     "[| 1 <= ?a;
         (%n. ?a pow\<^sub>\<rat> (?s n - 1 / rat_of_nat (Suc n)))
         \<longlonglongrightarrow> ?y |]
      ==> (%n. ?a pow\<^sub>\<rat> ?s n) \<longlonglongrightarrow> ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("RealPower.LIMSEQ_even_odd_subseq_LIMSEQ",
     "[| (%n. ?X (2 * n)) \<longlonglongrightarrow> ?a;
         (%n. ?X (Suc (2 * n))) \<longlonglongrightarrow> ?a |]
      ==> ?X \<longlonglongrightarrow> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 1),
               template_app (template_hole 2, template_var 0)),
             template_hole 1)
           ))),
    ("RealPower.powreal_mult_base_lemma3",
     "[| 0 < ?a; ?a < 1; 0 < ?b; ?b < 1 |]
      ==> (?a * ?b) pow\<^sub>\<real> ?x =
          ?a pow\<^sub>\<real> ?x * ?b pow\<^sub>\<real> ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 3),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RealPower.LIMSEQ_squeeze",
     "[| ALL n. ?a n <= ?b n & ?b n <= ?c n;
         ?a \<longlonglongrightarrow> ?L; ?c \<longlonglongrightarrow> ?L |]
      ==> ?b \<longlonglongrightarrow> ?L",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("RealPower.powa_indep_incseq_of'",
     "[| 1 <= ?a; incseq ?r;
         (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. ?a pow\<^sub>\<rat> ?r n) \<longlonglongrightarrow> ?y |]
      ==> (%n. ?a pow\<^sub>\<rat> incseq_of ?x n)
          \<longlonglongrightarrow> ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 3),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 1)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 3, template_var 0)),
             template_hole 2)
           ))),
    ("RealPower.incseq_interlaced_seq",
     "[| (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         ALL n. real_of_rat (?r n) < ?x; ALL n. real_of_rat (?s n) < ?x |]
      ==> incseq (interlaced_seq ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("RealPower.incseq_of_rat_interlaced_seq",
     "[| (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         ALL n. real_of_rat (?r n) < ?x; ALL n. real_of_rat (?s n) < ?x |]
      ==> incseq (%n. real_of_rat (interlaced_seq ?r ?s n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.convergent_interlaced_seq",
     "[| (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         ALL n. real_of_rat (?r n) < ?x; ALL n. real_of_rat (?s n) < ?x |]
      ==> convergent (%n. real_of_rat (interlaced_seq ?r ?s n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RealPower.convergent_powrat_interlaced_seq",
     "[| 1 <= ?a; (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         ALL n. real_of_rat (?r n) < ?x; ALL n. real_of_rat (?s n) < ?x |]
      ==> convergent (%n. ?a pow\<^sub>\<rat> interlaced_seq ?r ?s n)",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("RealPower.subseq_interlaced_index_even",
     "[| incseq ?r; incseq ?s;
         (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         ALL n. real_of_rat (?r n) < ?x; ALL n. real_of_rat (?s n) < ?x |]
      ==> strict_mono (%n. interlaced_index ?r ?s (2 * n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, t_empty),
                template_app (template_hole 9, template_var 0)),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, t_empty),
                template_app (template_hole 9, template_var 0)),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("RealPower.subseq_interlaced_index_odd",
     "[| incseq ?r; incseq ?s;
         (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         ALL n. real_of_rat (?r n) < ?x; ALL n. real_of_rat (?s n) < ?x |]
      ==> strict_mono (%n. interlaced_index ?r ?s (Suc (2 * n)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, t_empty),
                template_app (template_hole 10, template_var 0)),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, t_empty),
                template_app (template_hole 10, template_var 0)),
              template_hole 9)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("RealPower.powa_indep_incseq_of",
     "[| 1 <= ?a; incseq ?r; incseq ?s;
         (%n. real_of_rat (?r n)) \<longlonglongrightarrow> ?x;
         (%n. real_of_rat (?s n)) \<longlonglongrightarrow> ?x;
         (%n. ?a pow\<^sub>\<rat> ?r n) \<longlonglongrightarrow> ?y;
         (%n. ?a pow\<^sub>\<rat> ?s n) \<longlonglongrightarrow> ?z |]
      ==> ?y = ?z",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 5),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 2)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 2)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 1)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_equation (template_var 1, template_var 0)))]:
   (string * thm * template) list
### theory "Draft.RealPowerMoreTemplates"
### 0.333s elapsed time, 0.422s cpu time, 0.000s GC time
val it = (): unit
