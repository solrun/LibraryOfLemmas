   [("RealPower.powa_one_eq_one", "1 powa ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("RealPower.powreal_one_eq_one", "1 pow\<^sub>\<real> ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("RealPower.real_of_rat_abs",
     "real_of_rat \<bar>?a\<bar> = \<bar>real_of_rat ?a\<bar>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RealPower.inverse_of_real_nat_of_rat_of_nat",
     "inverse (real ?n) = real_of_rat (inverse (rat_of_nat ?n))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("RealPower.powreal_inverse",
     "inverse (?a pow\<^sub>\<real> ?x) = inverse ?a pow\<^sub>\<real> ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("RealPower.powreal_minus",
     "?a pow\<^sub>\<real> - ?x = inverse (?a pow\<^sub>\<real> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_minus_base_ge_one",
     "?a pow\<^sub>\<real> - ?x = inverse ?a pow\<^sub>\<real> ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("RealPower.powr_zero_eq_one_iff",
     "?x pow\<^sub>\<real> 0 = (if ?x <= 0 then 0 else 1)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 3)),
           template_hole 3),
         template_hole 0))),
    ("RealPower.powreal_mult",
     "(?a pow\<^sub>\<real> ?x) pow\<^sub>\<real> ?y =
      ?a pow\<^sub>\<real> (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RealPower.powreal_add",
     "?a pow\<^sub>\<real> (?x + ?y) =
      ?a pow\<^sub>\<real> ?x * ?a pow\<^sub>\<real> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("RealPower.interlaced_seq_even",
     "interlaced_seq ?r ?s (2 * ?n) = ?s (interlaced_index ?r ?s (2 * ?n))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0))))),
    ("RealPower.interlaced_seq_odd",
     "interlaced_seq ?r ?s (Suc (2 * ?n)) =
      ?r (interlaced_index ?r ?s (Suc (2 * ?n)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0))),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0)))))),
    ("RealPower.LIMSEQ_iff2",
     "?X \<longlonglongrightarrow> ?L =
      (ALL m>0. EX no. ALL n>=no. dist (?X n) ?L < inverse (real m))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 1),
           template_app (template_hole 11, template_var 0)),
         template_hole 10),
       template_app (template_hole 9, t_empty)))]
