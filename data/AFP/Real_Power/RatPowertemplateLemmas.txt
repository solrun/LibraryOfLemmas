   [("RatPower.powrat_one_eq_one", "1 pow\<^sub>\<rat> ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("RatPower.powrat_one", "?x pow\<^sub>\<rat> 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("RatPower.powrat_zero_eq_one", "?x pow\<^sub>\<rat> 0 = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("RatPower.powrat_minus",
     "?x pow\<^sub>\<rat> - ?r = inverse (?x pow\<^sub>\<rat> ?r)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_inverse",
     "inverse ?y pow\<^sub>\<rat> ?r = inverse (?y pow\<^sub>\<rat> ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_gt_zero", "0 < ?x ==> 0 < ?x pow\<^sub>\<rat> ?r",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatPower.gcd_add_mult_commute", "gcd ?m (?n + ?k * ?m) = gcd ?m ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1))),
    ("RatPower.gcd_mult_div_cancel_left1",
     "gcd ?a ?b * (?a div gcd ?a ?b) = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_var 1)),
    ("RatPower.gcd_mult_div_cancel_left2",
     "gcd ?b ?a * (?a div gcd ?b ?a) = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_var 0)),
    ("RatPower.gcd_mult_div_cancel_right1",
     "?a div gcd ?a ?b * gcd ?a ?b = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("RatPower.gcd_mult_div_cancel_right2",
     "?a div gcd ?b ?a * gcd ?b ?a = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 1)),
    ("RatPower.coprime_add_mult_iff1",
     "coprime (?n + ?k * ?m) ?m = coprime ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("RatPower.coprime_add_mult_iff2",
     "coprime (?k * ?m + ?n) ?m = coprime ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("RatPower.powrat_zero_base", "?r ~= 0 ==> 0 pow\<^sub>\<rat> ?r = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("RatPower.powrat_inverse_of_nat_ge_one",
     "1 <= ?a ==> 1 <= ?a pow\<^sub>\<rat> inverse (rat_of_nat ?n)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("RatPower.powrat_inverse_of_nat_le_self",
     "1 <= ?a ==> ?a pow\<^sub>\<rat> inverse (rat_of_nat ?n) <= ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("RatPower.convergent_powrat_inverse_of_nat_ge_one",
     "1 <= ?a ==>
      convergent (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat n))",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 0)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("RatPower.powrat_not_zero", "?x ~= 0 ==> ?x pow\<^sub>\<rat> ?r ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("RatPower.powrat_mult_base",
     "(?x * ?y) pow\<^sub>\<rat> ?r =
      ?x pow\<^sub>\<rat> ?r * ?y pow\<^sub>\<rat> ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_divide",
     "(?x / ?y) pow\<^sub>\<rat> ?r =
      ?x pow\<^sub>\<rat> ?r / ?y pow\<^sub>\<rat> ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_power_eq",
     "0 < ?a ==> ?a pow\<^sub>\<rat> rat_of_nat ?n = ?a ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatPower.isCont_powrat",
     "0 < ?x ==> isCont (%x. x pow\<^sub>\<rat> ?r) ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             t_empty)
           ))),
    ("RatPower.Bseq_powrat_inverse_of_nat_ge_one",
     "1 <= ?a ==> Bseq (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat n))",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0)
           ))),
    ("RatPower.decseq_powrat_inverse_of_nat_ge_one",
     "1 <= ?a ==>
      decseq (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat (Suc n)))",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("RatPower.convergent_powrat_inverse_Suc_of_nat_ge_one",
     "1 <= ?a ==>
      convergent (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat (Suc n)))",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("RatPower.real_root_eq_powrat_inverse",
     "0 < ?n ==> root ?n ?x = ?x pow\<^sub>\<rat> inverse (rat_of_nat ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("RatPower.LIMSEQ_powrat_inverse_of_nat",
     "0 < ?a ==>
      (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat n))
      \<longlonglongrightarrow> 1",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("RatPower.LIMSEQ_powrat_inverse_of_nat_ge_one",
     "1 <= ?a ==>
      (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat n))
      \<longlonglongrightarrow> 1",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("RatPower.powrat_ge_one",
     "[| 1 <= ?x; 0 <= ?r |] ==> 1 <= ?x pow\<^sub>\<rat> ?r",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_inject_exp",
     "1 < ?x ==>
      (?x pow\<^sub>\<rat> ?r = ?x pow\<^sub>\<rat> ?s) = (?s = ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 0, template_var 1)))),
    ("RatPower.powrat_less_cancel_iff",
     "1 < ?x ==>
      (?x pow\<^sub>\<rat> ?r < ?x pow\<^sub>\<rat> ?s) = (?r < ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_le_cancel_iff",
     "1 < ?x ==>
      (?x pow\<^sub>\<rat> ?r <= ?x pow\<^sub>\<rat> ?s) = (?r <= ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatPower.powrat_mult",
     "0 < ?x ==>
      ?x pow\<^sub>\<rat> (?r * ?s) =
      (?x pow\<^sub>\<rat> ?r) pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("RatPower.BseqI2'", "ALL n>=?N. norm (?X n) <= ?K ==> Bseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)
           ))),
    ("RatPower.powrat_less_mono",
     "[| ?r < ?s; 1 < ?x |]
      ==> ?x pow\<^sub>\<rat> ?r < ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RatPower.powrat_le_mono",
     "[| ?r <= ?s; 1 <= ?x |]
      ==> ?x pow\<^sub>\<rat> ?r <= ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RatPower.powrat_less_cancel",
     "[| ?x pow\<^sub>\<rat> ?r < ?x pow\<^sub>\<rat> ?s; 1 < ?x |]
      ==> ?r < ?s",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0)),
        template_inequation (less_than, template_hole 1, template_var 2)],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("RatPower.powrat_diff",
     "0 < ?x ==>
      ?x pow\<^sub>\<rat> (?a - ?b) =
      ?x pow\<^sub>\<rat> ?a / ?x pow\<^sub>\<rat> ?b",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RatPower.powrat_add",
     "0 < ?x ==>
      ?x pow\<^sub>\<rat> (?r + ?s) =
      ?x pow\<^sub>\<rat> ?r * ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RatPower.nat_eq_cancel",
     "[| 0 < ?a; 0 < ?b |] ==> (nat ?a = nat ?b) = (?a = ?b)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_bimplication
        (template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("RatPower.LIMSEQ_powrat_inverse_of_nat_pos_less_one",
     "[| 0 < ?a; ?a < 1 |]
      ==> (%n. ?a pow\<^sub>\<rat> inverse (rat_of_nat n))
          \<longlonglongrightarrow> 1",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("RatPower.power_inject_exp_less_one",
     "[| (0::?'a) < ?a; ?a < (1::?'a) |]
      ==> (?a ^ ?m = ?a ^ ?n) = (?m = ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 4)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("RatPower.real_root_mult_exp_cancel1",
     "[| 0 < ?x; 0 < ?n |] ==> root ?n (?x ^ (?k * ?n)) = ?x ^ ?k",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("RatPower.real_root_mult_exp_cancel3",
     "[| 0 < ?x; 0 < ?n |] ==> root ?n (?x ^ (?n * ?k)) = ?x ^ ?k",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("RatPower.powrat_inject_exp_less_one",
     "[| 0 < ?x; ?x < 1 |]
      ==> (?x pow\<^sub>\<rat> ?r = ?x pow\<^sub>\<rat> ?s) = (?s = ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 4)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 0, template_var 1)))),
    ("RatPower.powrat_less_1_cancel_iff",
     "[| 0 < ?x; ?x < 1 |]
      ==> (?x pow\<^sub>\<rat> ?r < ?x pow\<^sub>\<rat> ?s) = (?s < ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RatPower.powrat_le_1_cancel_iff",
     "[| 0 < ?x; ?x < 1 |]
      ==> (?x pow\<^sub>\<rat> ?r <= ?x pow\<^sub>\<rat> ?s) = (?s <= ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RatPower.power_inject_exp_strong",
     "[| (0::?'a) < ?a; ?a ~= (1::?'a) |]
      ==> (?a ^ ?m = ?a ^ ?n) = (?m = ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("RatPower.powrat_inject_exp_strong",
     "[| 0 < ?x; ?x ~= 1 |]
      ==> (?x pow\<^sub>\<rat> ?r = ?x pow\<^sub>\<rat> ?s) = (?s = ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 0, template_var 1)))),
    ("RatPower.power_le_imp_le_base2",
     "[| ?a ^ ?n <= ?b ^ ?n; (0::?'a) <= ?b; 0 < ?n |] ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1)),
        template_inequation (less_equals, template_hole 2, template_var 0),
        template_inequation (less_than, template_hole 0, template_var 1)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("RatPower.LIMSEQ_powrat_base",
     "[| ?X \<longlonglongrightarrow> ?a; 0 < ?a |]
      ==> (%n. ?X n pow\<^sub>\<rat> ?q)
          \<longlonglongrightarrow> ?a pow\<^sub>\<rat> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_hole 3)
            ),
        template_inequation (less_than, template_hole 1, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("RatPower.powrat_mult_pos",
     "[| 0 < ?x; 0 < ?r; 0 < ?s |]
      ==> ?x pow\<^sub>\<rat> (?r * ?s) =
          (?x pow\<^sub>\<rat> ?r) pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("RatPower.powrat_mult_pos_neg",
     "[| 0 < ?x; 0 < ?r; ?s < 0 |]
      ==> ?x pow\<^sub>\<rat> (?r * ?s) =
          (?x pow\<^sub>\<rat> ?r) pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_var 0, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("RatPower.powrat_mult_neg_pos",
     "[| 0 < ?x; ?r < 0; 0 < ?s |]
      ==> ?x pow\<^sub>\<rat> (?r * ?s) =
          (?x pow\<^sub>\<rat> ?r) pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_var 1, template_hole 3),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("RatPower.powrat_mult_neg",
     "[| 0 < ?x; ?r < 0; ?s < 0 |]
      ==> ?x pow\<^sub>\<rat> (?r * ?s) =
          (?x pow\<^sub>\<rat> ?r) pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_var 1, template_hole 3),
        template_inequation (less_than, template_var 0, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("RatPower.powrat_add_pos",
     "[| 0 < ?x; 0 < ?r; 0 < ?s |]
      ==> ?x pow\<^sub>\<rat> (?r + ?s) =
          ?x pow\<^sub>\<rat> ?r * ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RatPower.powrat_add_pos_neg",
     "[| 0 < ?x; 0 < ?r; ?s < 0 |]
      ==> ?x pow\<^sub>\<rat> (?r + ?s) =
          ?x pow\<^sub>\<rat> ?r * ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RatPower.powrat_add_neg_pos",
     "[| 0 < ?x; ?r < 0; 0 < ?s |]
      ==> ?x pow\<^sub>\<rat> (?r + ?s) =
          ?x pow\<^sub>\<rat> ?r * ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_var 1, template_hole 4),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RatPower.powrat_add_neg",
     "[| 0 < ?x; ?r < 0; ?s < 0 |]
      ==> ?x pow\<^sub>\<rat> (?r + ?s) =
          ?x pow\<^sub>\<rat> ?r * ?x pow\<^sub>\<rat> ?s",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_var 1, template_hole 4),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("RatPower.real_root_mult_exp_cancel",
     "[| 0 < ?x; 0 < ?m; 0 < ?n |]
      ==> root (?m * ?n) (?x ^ (?k * ?n)) = root ?m (?x ^ ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3),
        template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("RatPower.real_root_mult_exp_cancel2",
     "[| 0 < ?x; 0 < ?m; 0 < ?n |]
      ==> root (?n * ?m) (?x ^ (?n * ?k)) = root ?m (?x ^ ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3),
        template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("RatPower.real_root_normalize_cancel",
     "[| 0 < ?x; ?a ~= 0; 0 < ?b |]
      ==> root (nat (snd (Rat.normalize (?a, ?b))))
           (?x ^ nat (fst (Rat.normalize (?a, ?b)))) =
          root (nat ?b) (?x ^ nat ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_inequation (less_than, template_hole 9, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0))))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_hole 5,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)))))),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 5, template_var 1))))))]
