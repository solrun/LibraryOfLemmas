Loading theory "AWN.Lib" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "Draft.A_Aodv_Data" via "Draft.A_Norreqid" via "Draft.Aodv_Basic" via "AWN.AWN_SOS" via "AWN.AWN")
Loading theory "AWN.TransitionSystems" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "Draft.A_Aodv_Data" via "Draft.A_Norreqid" via "Draft.Aodv_Basic" via "AWN.AWN_SOS")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "AWN.Lib"
### 0.048s elapsed time, 0.223s cpu time, 0.000s GC time
Loading theory "AWN.AWN" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "Draft.A_Aodv_Data" via "Draft.A_Norreqid" via "Draft.Aodv_Basic" via "AWN.AWN_SOS")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.546s cpu time, 0.045s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class msg = type +
  fixes newpkt :: "nat * nat => 'a"
    and eq_newpkt :: "'a => bool"
  assumes "eq_newpkt_eq": "!!d i. eq_newpkt (newpkt (d, i))"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "AWN.TransitionSystems"
### 0.322s elapsed time, 1.293s cpu time, 0.126s GC time
Loading theory "AWN.Invariants" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "AWN.AWN_Invariants")
### theory "HOL-Library.Nat_Bijection"
### 0.351s elapsed time, 1.400s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.232s elapsed time, 0.912s cpu time, 0.081s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
### theory "AWN.Invariants"
### 0.326s elapsed time, 1.294s cpu time, 0.095s GC time
Loading theory "AWN.OInvariants" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "AWN.OAWN_Convert" via "AWN.OAWN_Invariants")
Proofs for inductive predicate(s) "oreachablep"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "AWN.OInvariants"
### 0.814s elapsed time, 3.018s cpu time, 0.858s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.175s elapsed time, 4.447s cpu time, 1.055s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.060s elapsed time, 3.313s cpu time, 1.092s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.455s elapsed time, 8.134s cpu time, 2.184s GC time
Loading theory "Draft.Templates" (required by "Draft.A_OAodvMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.076s elapsed time, 0.175s cpu time, 0.059s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.A_OAodvMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.526s elapsed time, 1.074s cpu time, 0.049s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class tau = type +
  fixes tau :: "'a"
instantiation
  seq_action :: (type) tau
  tau_seq_action == tau :: 'a seq_action
instantiation
  node_action :: (type) tau
  tau_node_action == tau :: 'a node_action
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "AWN.AWN"
### 7.192s elapsed time, 15.490s cpu time, 3.808s GC time
Loading theory "AWN.AWN_Cterms" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "AWN.AWN_SOS_Labels" via "AWN.Inv_Cterms" via "AWN.AWN_Labels")
Loading theory "AWN.AWN_SOS" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "Draft.A_Aodv_Data" via "Draft.A_Norreqid" via "Draft.Aodv_Basic")
Loading theory "AWN.OAWN_SOS" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "AWN.OAWN_SOS_Labels")
Proofs for inductive predicate(s) "microstep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "seqp_sosp"
Proofs for inductive predicate(s) "oseqp_sosp"
  Proving monotonicity ...
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "parp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "oparp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "node_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ctermsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "onode_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "pnet_sosp"
  Proving monotonicity ...
### theory "AWN.AWN_Cterms"
### 2.057s elapsed time, 6.438s cpu time, 0.570s GC time
Loading theory "AWN.AWN_Labels" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "AWN.AWN_SOS_Labels" via "AWN.Inv_Cterms")
consts
  labelfrom ::
    "int => int => ('s, 'm, 'p, 'a) seqp => int * ('s, 'm, 'p, int) seqp"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "cnet_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "opnet_sosp"
  Proving monotonicity ...
### theory "AWN.AWN_SOS"
### 2.920s elapsed time, 9.091s cpu time, 0.811s GC time
Loading theory "Draft.Aodv_Basic" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "Draft.A_Aodv_Data" via "Draft.A_Norreqid")
instantiation
  label :: (ord) ord
  less_eq_label == less_eq :: 'a label => 'a label => bool
  less_label == less :: 'a label => 'a label => bool
Found termination order: "{}"
### theory "AWN.AWN_Labels"
### 1.052s elapsed time, 3.215s cpu time, 0.309s GC time
Loading theory "AWN.Inv_Cterms" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "AWN.AWN_SOS_Labels")
Loading theory "AWN.AWN_Invariants" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv")
### theory "Draft.Aodv_Basic"
### 0.890s elapsed time, 3.332s cpu time, 0.268s GC time
Loading theory "Draft.A_Norreqid" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv" via "Draft.A_Aodv_Data")
### theory "Draft.A_Norreqid"
### 0.028s elapsed time, 0.112s cpu time, 0.000s GC time
Loading theory "Draft.A_Aodv_Data" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
val simp_only = fn: thm list -> Proof.context -> int -> tactic
val shallow_simp = fn: Proof.context -> int -> tactic
val create_vcs = fn: Proof.context -> int -> tactic
val try_invs = fn: Proof.context -> int -> tactic
val try_final = fn: Proof.context -> int -> tactic
val each = fn: Proof.context -> int -> tactic
val simp_all = fn: Proof.context -> tactic
val intro_and_invs = fn: Proof.context -> int -> tactic
val process_vcs = fn: Proof.context -> 'a -> tactic
### theory "AWN.Inv_Cterms"
### 0.837s elapsed time, 3.298s cpu time, 0.275s GC time
Loading theory "AWN.AWN_SOS_Labels" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv")
Proofs for inductive predicate(s) "ocnet_sosp"
  Proving monotonicity ...
### theory "AWN.AWN_Invariants"
### 1.021s elapsed time, 4.027s cpu time, 0.329s GC time
Loading theory "Draft.A_Aodv_Message" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "Draft.A_Aodv")
### theory "AWN.AWN_SOS_Labels"
### 0.359s elapsed time, 1.417s cpu time, 0.103s GC time
### theory "AWN.OAWN_SOS"
### 4.573s elapsed time, 15.210s cpu time, 1.357s GC time
Loading theory "AWN.OAWN_Invariants" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv" via "AWN.OAWN_Convert")
Loading theory "AWN.OAWN_SOS_Labels" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv")
### theory "Draft.A_Aodv_Data"
### 0.816s elapsed time, 2.987s cpu time, 0.341s GC time
instantiation
  msg :: msg
  newpkt_msg == newpkt :: nat * nat => msg
  eq_newpkt_msg == eq_newpkt :: msg => bool
### theory "AWN.OAWN_SOS_Labels"
### 0.351s elapsed time, 1.151s cpu time, 0.123s GC time
### theory "Draft.A_Aodv_Message"
### 0.807s elapsed time, 2.671s cpu time, 0.273s GC time
Loading theory "Draft.A_Aodv" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv")
### theory "AWN.OAWN_Invariants"
### 0.862s elapsed time, 2.199s cpu time, 0.218s GC time
Loading theory "AWN.OAWN_Convert" (required by "Draft.A_OAodvMoreTemplates" via "Draft.A_OAodv")
### theory "AWN.OAWN_Convert"
### 0.305s elapsed time, 0.650s cpu time, 0.071s GC time
Found termination order: "{}"
instantiation
  pseqp :: ord
  less_eq_pseqp == less_eq :: pseqp => pseqp => bool
  less_pseqp == less :: pseqp => pseqp => bool
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.A_Aodv"
### 24.525s elapsed time, 55.159s cpu time, 1.794s GC time
Loading theory "Draft.A_OAodv" (required by "Draft.A_OAodvMoreTemplates")
### theory "Draft.A_OAodv"
### 0.329s elapsed time, 0.494s cpu time, 0.030s GC time
Loading theory "Draft.A_OAodvMoreTemplates"
val templateLemmas =
   [("A_OAodv.oaodv_control_within",
     "control_within \<Gamma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V
       (init (opaodv ?i))",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 5),
                   template_var 0)),
               template_hole 0)))
         )),
    ("A_OAodv.oaodv_trans",
     "automaton.trans (opaodv ?i) =
      oseqp_sos \<Gamma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V ?i",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("A_OAodv.oaodv_init_kD_empty",
     "(?\<sigma>, ?p) : \<sigma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V' ==>
      kD (rt (?\<sigma> ?i)) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0))),
         template_hole 0))),
    ("A_OAodv.oaodv_init_vD_empty",
     "(?\<sigma>, ?p) : \<sigma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V' ==>
      vD (rt (?\<sigma> ?i)) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0))),
         template_hole 0))),
    ("A_OAodv.initiali_aodv",
     "initiali ?i (init (opaodv ?i)) (init (paodv ?i))",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 10, template_var 0),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0)),
                 template_hole 4))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_hole 5)),
               template_hole 4)))
         )),
    ("A_OAodv.\<sigma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V'_labels",
     "(?\<sigma>, ?p) : \<sigma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V' ==>
      labels \<Gamma>\<^sub>A\<^sub>O\<^sub>D\<^sub>V ?p = {PAodv-:0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_hole 8)
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_hole 0))))]:
   (string * thm * template) list
### theory "Draft.A_OAodvMoreTemplates"
### 0.521s elapsed time, 0.726s cpu time, 0.076s GC time
val it = (): unit
