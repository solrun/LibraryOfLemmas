Loading theory "AWN.Lib" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.E_Aodv_Message" via "Draft.E_All_ABCD" via "Draft.Aodv_Basic" via "AWN.AWN_SOS" via "AWN.AWN")
Loading theory "AWN.TransitionSystems" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.E_Aodv_Message" via "Draft.E_All_ABCD" via "Draft.Aodv_Basic" via "AWN.AWN_SOS")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "AWN.Lib"
### 0.051s elapsed time, 0.239s cpu time, 0.000s GC time
Loading theory "AWN.AWN" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.E_Aodv_Message" via "Draft.E_All_ABCD" via "Draft.Aodv_Basic" via "AWN.AWN_SOS")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.518s cpu time, 0.041s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class msg = type +
  fixes newpkt :: "nat * nat => 'a"
    and eq_newpkt :: "'a => bool"
  assumes "eq_newpkt_eq": "!!d i. eq_newpkt (newpkt (d, i))"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "AWN.TransitionSystems"
### 0.307s elapsed time, 1.233s cpu time, 0.124s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.328s elapsed time, 1.316s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.205s elapsed time, 0.803s cpu time, 0.083s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.894s elapsed time, 3.389s cpu time, 0.817s GC time
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.034s elapsed time, 3.819s cpu time, 0.907s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.741s elapsed time, 5.402s cpu time, 1.114s GC time
Loading theory "Draft.Templates" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.274s elapsed time, 0.803s cpu time, 0.676s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.E_Aodv_MessageMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.560s elapsed time, 1.144s cpu time, 0.066s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class tau = type +
  fixes tau :: "'a"
instantiation
  seq_action :: (type) tau
  tau_seq_action == tau :: 'a seq_action
instantiation
  node_action :: (type) tau
  tau_node_action == tau :: 'a node_action
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "AWN.AWN"
### 6.195s elapsed time, 12.031s cpu time, 2.365s GC time
Loading theory "AWN.AWN_SOS" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.E_Aodv_Message" via "Draft.E_All_ABCD" via "Draft.Aodv_Basic")
Proofs for inductive predicate(s) "seqp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "parp_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "node_sosp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "pnet_sosp"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "cnet_sosp"
  Proving monotonicity ...
### theory "AWN.AWN_SOS"
### 2.122s elapsed time, 2.390s cpu time, 0.151s GC time
Loading theory "Draft.Aodv_Basic" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.E_Aodv_Message" via "Draft.E_All_ABCD")
### theory "Draft.Aodv_Basic"
### 0.568s elapsed time, 0.616s cpu time, 0.054s GC time
Loading theory "Draft.E_All_ABCD" (required by "Draft.E_Aodv_MessageMoreTemplates" via "Draft.E_Aodv_Message")
### theory "Draft.E_All_ABCD"
### 0.019s elapsed time, 0.021s cpu time, 0.000s GC time
Loading theory "Draft.E_Aodv_Message" (required by "Draft.E_Aodv_MessageMoreTemplates")
instantiation
  msg :: msg
  newpkt_msg == newpkt :: nat * nat => msg
  eq_newpkt_msg == eq_newpkt :: msg => bool
### theory "Draft.E_Aodv_Message"
### 0.540s elapsed time, 0.584s cpu time, 0.060s GC time
Loading theory "Draft.E_Aodv_MessageMoreTemplates"
val templateLemmas =
   [("E_Aodv_Message.not_eq_newpkt_rerr", "~ eq_newpkt (Rerr ?dests ?sip)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("E_Aodv_Message.not_eq_newpkt_pkt", "~ eq_newpkt (Pkt ?d ?dip ?sip)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0))
             )
         )),
    ("E_Aodv_Message.not_eq_newpkt_rrep",
     "~ eq_newpkt (Rrep ?hops ?dip ?dsn ?oip ?sip)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0))
             )
         )),
    ("E_Aodv_Message.rerr_simp", "rerr (?dests, ?sip) = Rerr ?dests ?sip",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("E_Aodv_Message.not_eq_newpkt_rreq",
     "~ eq_newpkt (Rreq ?hops ?dip ?dsn ?dsk ?oip ?osn ?sip ?handled)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 0, template_var 7),
                             template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0))
             )
         )),
    ("E_Aodv_Message.pkt_simp", "pkt (?d, ?dip, ?sip) = Pkt ?d ?dip ?sip",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("E_Aodv_Message.rrep_simp",
     "rrep (?hops, ?dip, ?dsn, ?oip, ?sip) =
      Rrep ?hops ?dip ?dsn ?oip ?sip",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("E_Aodv_Message.rreq_simp",
     "rreq (?hops, ?dip, ?dsn, ?dsk, ?oip, ?osn, ?sip, ?handled) =
      Rreq ?hops ?dip ?dsn ?dsk ?oip ?osn ?sip ?handled",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 7),
           template_app
            (template_app (template_hole 6, template_var 6),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)))))))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.E_Aodv_MessageMoreTemplates"
### 0.406s elapsed time, 0.537s cpu time, 0.000s GC time
val it = (): unit
