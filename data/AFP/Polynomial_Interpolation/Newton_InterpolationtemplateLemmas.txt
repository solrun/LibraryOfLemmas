   [("Newton_Interpolation.Xii_1",
     "??.Newton_Interpolation.Xij ?xs ?i ?i = 1",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("Newton_Interpolation.smult_1", "smult ?d 1 = [:?d:]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Newton_Interpolation.newton_poly_degree",
     "degree (newton_poly ?xs ?fs ?n) <= ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Newton_Interpolation.degree_newton_interpolation_poly",
     "degree (newton_interpolation_poly ?xs_ys) <= length ?xs_ys - 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Newton_Interpolation.poly_N_xi",
     "poly (??.Newton_Interpolation.N ?xs ?i)
       (??.Newton_Interpolation.x ?xs ?j) =
      ??.Newton_Interpolation.pprod ?xs ?j 0 ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_hole 0),
         template_var 1))),
    ("Newton_Interpolation.poly_N_xi_cond",
     "poly (??.Newton_Interpolation.N ?xs ?i)
       (??.Newton_Interpolation.x ?xs ?j) =
      (if ?j < ?i then 0::?'a
       else ??.Newton_Interpolation.pprod ?xs ?j 0 ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_hole 0),
           template_var 1)))),
    ("Newton_Interpolation.newton_poly_sum",
     "newton_poly ?xs ?fs ?n =
      (SUM i<-[0..<
               Suc ?n]. smult (??.Newton_Interpolation.c ?xs ?fs i)
                         (??.Newton_Interpolation.N ?xs i))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Newton_Interpolation.div_Ints_mod_0",
     "[| rat_of_int ?a / rat_of_int ?b : \<int>; ?b ~= 0 |]
      ==> ?a mod ?b = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_app (template_hole 5, template_var 0))),
              template_hole 4)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 1))),
    ("Newton_Interpolation.horner_coeffs_ints",
     "length ?cs <= Suc (length ?ys) ==>
      (set (coeffs (horner_composition ?cs (map rat_of_int ?ys)))
       <= \<int>) =
      (set ?cs <= \<int>)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0))))),
           template_hole 0),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_hole 0)))),
    ("Newton_Interpolation.poly_newton_poly",
     "poly (newton_poly ?xs ?fs ?n) ?y =
      (SUM i<-[0..<
               Suc ?n]. ??.Newton_Interpolation.c ?xs ?fs i *
                        poly (??.Newton_Interpolation.N ?xs i) ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)))))),
    ("Newton_Interpolation.newton_coefficients",
     "[| length ?xs = ?n; length ?fs = ?n |]
      ==> newton_coefficients ?xs ?fs =
          rev (map (??.Newton_Interpolation.c ?xs ?fs) [0..<?n])",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 7, template_var 0), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)))))),
    ("Newton_Interpolation.newton_interpolation_poly",
     "[| distinct (map fst ?xs_ys); ?p = newton_interpolation_poly ?xs_ys;
         (?x, ?y) : set ?xs_ys |]
      ==> poly ?p ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 3))
            ),
        template_equation
         (template_var 2, template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Newton_Interpolation.newton_poly_impl",
     "[| length ?xs = ?n; length ?fs = ?n; ?n = Suc ?nn |]
      ==> newton_poly_impl ?xs ?fs = newton_poly ?xs ?fs ?nn",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3), template_var 2),
        template_equation
         (template_app (template_hole 4, template_var 1), template_var 2),
        template_equation
         (template_var 2, template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Newton_Interpolation.poly_newton_poly_xj",
     "?j <= ?n ==>
      poly (newton_poly ?xs ?fs ?n) (??.Newton_Interpolation.x ?xs ?j) =
      (SUM i<-[0..<
               Suc ?j]. ??.Newton_Interpolation.c ?xs ?fs i *
                        poly (??.Newton_Interpolation.N ?xs i)
                         (??.Newton_Interpolation.x ?xs ?j))",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 3)),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 3))))))),
    ("Newton_Interpolation.newton_coefficients_int",
     "[| distinct ?xs; length ?xs = length ?fs |]
      ==> newton_coefficients_int ?xs ?fs =
          (let cs = newton_coefficients (map rat_of_int ?xs)
                     (map rat_of_int ?fs)
           in if set cs <= \<int> then Some (map int_of_rat cs) else None)",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_equation
         (template_app (template_hole 14, template_var 1),
          template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 1)),
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 0))),
           t_empty)))),
    ("Newton_Interpolation.newton_poly_impl_int",
     "[| length ?xs = length ?fs; distinct ?xs |]
      ==> newton_poly_impl_int ?xs ?fs =
          (let p = newton_poly_impl (map rat_of_int ?xs)
                    (map rat_of_int ?fs)
           in if set (coeffs p) <= \<int> then Some (map_poly int_of_rat p)
              else None)",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 1),
          template_app (template_hole 16, template_var 0)),
        template_predicate
         (template_app (template_hole 15, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 13, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 1)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 0))),
           t_empty)))),
    ("Newton_Interpolation.newton_interpolation_poly_int",
     "distinct (map fst ?xs_ys) ==>
      newton_interpolation_poly_int ?xs_ys =
      (let rxs_ys = map (%(x, y). (rat_of_int x, rat_of_int y)) ?xs_ys;
           rp = newton_interpolation_poly rxs_ys
       in if ALL x:set (coeffs rp). is_int_rat x
          then Some (map_poly int_of_rat rp) else None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 20,
              template_app
               (template_app (template_hole 19, template_hole 18),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 16, template_var 0),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 14,
                 template_app (template_hole 13, t_empty)),
               template_var 0)),
           t_empty)))),
    ("Newton_Interpolation.divided_differences_impl_int_Some",
     "[| length ?gs <= length ?ys;
         divided_differences_impl_int ?gs ?g ?x ?ys = Some ?res |]
      ==> divided_differences_impl (map rat_of_int ?gs) (rat_of_int ?g)
           (rat_of_int ?x) (map rat_of_int ?ys) =
          map rat_of_int ?res &
          length ?res = Suc (length ?gs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 4),
          template_app (template_hole 10, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 2),
              template_var 1),
            template_var 3),
          template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_var 4)),
                         template_app (template_hole 2, template_var 2)),
                       template_app (template_hole 2, template_var 1)),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 3))),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 10, template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 10, template_var 4))))
           ))),
    ("Newton_Interpolation.newton_poly_sound",
     "[| !!i j.
            [| i < j; j <= ?n |]
            ==> ??.Newton_Interpolation.x ?xs i ~=
                ??.Newton_Interpolation.x ?xs j;
         ?k <= ?n |]
      ==> poly (newton_poly ?xs ?fs ?n) (??.Newton_Interpolation.x ?xs ?k) =
          ??.Newton_Interpolation.f ?fs ?k",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Newton_Interpolation.divided_differences_impl_int_None",
     "[| length ?gs <= length ?ys;
         divided_differences_impl_int ?gs ?g ?x ?ys = None;
         ?x ~: set (take (length ?gs) ?ys) |]
      ==> hd (divided_differences_impl (map rat_of_int ?gs) (rat_of_int ?g)
               (rat_of_int ?x) (map rat_of_int ?ys))
          ~: \<int>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, template_var 3),
          template_app (template_hole 13, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 1),
              template_var 0),
            template_var 2),
          template_hole 10),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app (template_hole 13, template_var 3)),
                      template_var 2)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_hole 1),
                               template_var 3)),
                           template_app (template_hole 1, template_var 1)),
                         template_app (template_hole 1, template_var 0)),
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 2)))),
                 template_hole 0)
               )
           ))),
    ("Newton_Interpolation.xd_diff",
     "[| !!i j.
            [| i < j; j <= ?n |]
            ==> ??.Newton_Interpolation.x ?xs i ~=
                ??.Newton_Interpolation.x ?xs j;
         ?i < ?j; ?j <= ?n |]
      ==> ??.Newton_Interpolation.xd ?xs ?i ?j ~= (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Newton_Interpolation.xd_diff",
     "[| !!i j.
            [| i < j; j <= ?n |]
            ==> ??.Newton_Interpolation.x ?xs i ~=
                ??.Newton_Interpolation.x ?xs j;
         ?i < ?j; ?j <= ?n |]
      ==> ??.Newton_Interpolation.xd ?xs ?j ?i ~= (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("Newton_Interpolation.newton_coefficients_main",
     "[| length ?xs = ?n; length ?fs = ?n; ?k < ?n |]
      ==> newton_coefficients_main ?xs
           (rev (map (??.Newton_Interpolation.f ?fs) [0..<Suc ?k]))
           (rev (map (??.Newton_Interpolation.x ?xs) [0..<Suc ?k])) =
          rev (map (%i. map (%j. ??.Newton_Interpolation.xij_f ?xs ?fs j i)
                         [0..<Suc i])
                [0..<Suc ?k])",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 3), template_var 2),
        template_equation
         (template_app (template_hole 13, template_var 1), template_var 2),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 3),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 0))))),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 3, template_var 3)),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 0))))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 0))))))),
    ("Newton_Interpolation.newton_coefficients_main_int_None",
     "[| distinct ?xs; length ?gs = length ?ys; length ?ys <= length ?xs;
         newton_coefficients_main_int ?xs ?gs ?ys = None;
         ?ys = drop (length ?xs - length ?ys) (rev ?xs) |]
      ==> EX row:set (newton_coefficients_main (map rat_of_int ?xs)
                       (map rat_of_int ?gs) (map rat_of_int ?ys)).
             hd row ~: \<int>",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 2)),
        template_equation
         (template_app (template_hole 17, template_var 1),
          template_app (template_hole 17, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 0),
          template_app (template_hole 17, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 13),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 17, template_var 2)),
                template_app (template_hole 17, template_var 0))),
            template_app (template_hole 9, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 0)))),
             t_empty)
           ))),
    ("Newton_Interpolation.newton_coefficients_main_int_Some",
     "[| length ?gs = length ?ys; length ?ys <= length ?xs;
         newton_coefficients_main_int ?xs ?gs ?ys = Some ?res |]
      ==> newton_coefficients_main (map rat_of_int ?xs) (map rat_of_int ?gs)
           (map rat_of_int ?ys) =
          map (map rat_of_int) ?res &
          (ALL x:set ?res. x ~= [] & length x <= length ?ys) &
          length ?res = length ?gs",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 3),
          template_app (template_hole 16, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 16, template_var 2),
          template_app (template_hole 16, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 13, template_var 1),
              template_var 3),
            template_var 2),
          template_app (template_hole 12, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 8, template_hole 7)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0)),
                   t_empty)),
               template_app
                (template_app
                  (template_hole 17,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 16, template_var 3))))
           ))),
    ("Newton_Interpolation.divided_differences",
     "[| !!i j.
            [| i < j; j <= ?n |]
            ==> ??.Newton_Interpolation.x ?xs i ~=
                ??.Newton_Interpolation.x ?xs j;
         ?k <= ?n; ?i <= ?k |]
      ==> (SUM j<-[0..<
                   Suc ?k -
                   ?i]. ??.Newton_Interpolation.xij_f ?xs ?fs ?i (?i + j) *
                        ??.Newton_Interpolation.pprod ?xs ?k ?i (?i + j)) =
          ??.Newton_Interpolation.f ?fs ?k",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_var 1)))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Newton_Interpolation.divided_differences_main",
     "[| !!i j.
            [| i < j; j <= ?n |]
            ==> ??.Newton_Interpolation.x ?xs i ~=
                ??.Newton_Interpolation.x ?xs j;
         ?k <= ?n; ?i < ?k |]
      ==> (SUM j<-[0..<
                   Suc ?k -
                   ?i]. ??.Newton_Interpolation.xij_f ?xs ?fs ?i (?i + j) *
                        ??.Newton_Interpolation.pprod ?xs ?k ?i (?i + j)) =
          (SUM j<-[0..<
                   Suc ?k -
                   Suc ?i]. ??.Newton_Interpolation.xij_f ?xs ?fs (Suc ?i)
                             (Suc ?i + j) *
                            ??.Newton_Interpolation.pprod ?xs ?k (Suc ?i)
                             (Suc ?i + j))",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)))),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_app (template_hole 0, template_var 1))))))))]
