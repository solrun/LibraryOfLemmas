   [("Ring_Hom_Poly.smult_as_map_poly", "smult ?a = map_poly ((*) ?a)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Ring_Hom_Poly.degree_map_poly_le",
     "degree (map_poly ?f ?p) <= degree ?p",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Ring_Hom_Poly.x_pow_n", "monom (1::?'a) 1 ^ ?n = monom (1::?'a) ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Ring_Hom_Poly.coeff_div_poly",
     "coeff (div_poly ?a ?f) ?n = coeff ?f ?n div ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 2))),
    ("Ring_Hom_Poly.coeff_const",
     "coeff [:?a:] ?i = (if ?i = 0 then ?a else (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_var 1),
             template_hole 0)
           ))),
    ("Ring_Hom_Poly.eval_poly_code",
     "eval_poly ?h ?p ?x = fold_coeffs (%a b. ?h a + ?x * b) ?p (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_hole 0))),
    ("Ring_Hom_Poly.degree_map_poly",
     "(?f (lead_coeff ?p) = (0::?'a)) = (?p = 0) ==>
      degree (map_poly ?f ?p) = degree ?p",
     template_implication
      ([template_bimplication
         (template_equation
           (template_app
             (template_var 1,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_app (template_hole 6, template_var 0))),
            template_hole 5),
          template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 6, template_var 0)))),
    ("Ring_Hom_Poly.smult_div_poly",
     "(!!c. c : set (coeffs ?p) ==> ?a dvd c) ==>
      smult ?a (div_poly ?a ?p) = ?p",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Ring_Hom_Poly.map_poly_eval_poly",
     "?h (0::?'b) = (0::?'a) ==>
      map_poly ?h ?p = eval_poly (%a. [:?h a:]) ?p [:0::?'a, 1::?'a:]",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 7), template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 6),
             template_app
              (template_app (template_hole 2, template_hole 0),
               template_hole 1)))))),
    ("Ring_Hom_Poly.coeffs_map_poly",
     "(?f (lead_coeff ?p) = (0::?'a)) = (?p = 0) ==>
      coeffs (map_poly ?f ?p) = map ?f (coeffs ?p)",
     template_implication
      ([template_bimplication
         (template_equation
           (template_app
             (template_var 1,
              template_app
               (template_app (template_hole 9, template_var 0),
                template_app (template_hole 8, template_var 0))),
            template_hole 7),
          template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Ring_Hom_Poly.eval_poly_as_sum",
     "?h (0::?'a) = (0::?'b) ==>
      eval_poly ?h ?p ?x = (SUM i<=degree ?p. ?x ^ i * ?h (coeff ?p i))",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 8), template_hole 7)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))))))]
