   [("Missing_Polynomial.unit_factor_field", "unit_factor ?x = ?x",
     template_equation
      (template_app (template_hole 0, template_var 0), template_var 0)),
    ("Missing_Polynomial.irreducible_connect_field",
     "irreducible\<^sub>d ?f = irreducible ?f",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Polynomial.smult_map_poly", "smult ?a = map_poly ((*) ?a)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Missing_Polynomial.zero_divisor_iff_eq_0",
     "zero_divisor ?a = (?a = (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation (template_var 0, template_hole 0))),
    ("Missing_Polynomial.coeff_Poly",
     "coeff (Poly ?xs) ?i = nth_default (0::?'a) ?xs ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0))),
    ("Missing_Polynomial.const_poly_dvd_1",
     "([:?a:] dvd 1) = (?a dvd (1::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Missing_Polynomial.monom_mult_unfold",
     "?f * monom (1::?'a) ?n = monom_mult ?n ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Missing_Polynomial.monom_mult_unfold",
     "monom (1::?'a) ?n * ?f = monom_mult ?n ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Missing_Polynomial.range_coeff",
     "range (coeff ?p) = insert (0::?'a) (set (coeffs ?p))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Missing_Polynomial.coeff_f_0_code",
     "coeff ?f 0 = (case coeffs ?f of [] => 0::?'a | x # xa => x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Missing_Polynomial.coeff_sdiv_poly",
     "coeff (sdiv_poly ?f ?a) ?n = coeff ?f ?n div ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Missing_Polynomial.degree_linear_power_neg",
     "degree ([:?a, - (1::?'a):] ^ ?n) = ?n",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)),
                 template_hole 0))),
           template_var 0)),
       template_var 0)),
    ("Missing_Polynomial.poly_compare_0_code",
     "(?f = 0) = (case coeffs ?f of [] => True | a # list => False)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Missing_Polynomial.const_poly_dvd",
     "([:?a:] dvd [:?b:]) = (?a dvd ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Missing_Polynomial.map_div_is_smult_inverse",
     "map_poly (%x. x / ?a) ?p = smult (inverse ?a) ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Missing_Polynomial.pCons_0_as_mult",
     "pCons (0::?'a) ?p = [:0::?'a, 1::?'a:] * ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 4, template_hole 1),
               template_hole 0))),
         template_var 0))),
    ("Missing_Polynomial.poly_const_pow", "[:?a:] ^ ?b = [:?a ^ ?b:]",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("Missing_Polynomial.pderiv_sum",
     "pderiv (sum ?f ?I) = (SUM i:?I. pderiv (?f i))",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Missing_Polynomial.poly_sum_list",
     "poly (sum_list ?ps) ?x = (SUM p<-?ps. poly p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Missing_Polynomial.poly_prod_list",
     "poly (prod_list ?ps) ?x = (PROD p<-?ps. poly p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Missing_Polynomial.irreducible_smult_field",
     "irreducible (smult ?c ?p) = (?c ~= (0::?'a) & irreducible ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Missing_Polynomial.is_unit_field_poly",
     "is_unit ?p = (?p ~= 0 & degree ?p = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7)
            )],
       template_dunno)),
    ("Missing_Polynomial.monom_power",
     "monom ?a ?b ^ ?n = monom (?a ^ ?n) (?b * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Missing_Polynomial.smult_power",
     "smult ?a ?p ^ ?n = smult (?a ^ ?n) (?p ^ ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Missing_Polynomial.pCons_0_add",
     "pCons (0::?'a) (?p + ?q) = pCons (0::?'a) ?p + pCons (0::?'a) ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Missing_Polynomial.sum_pCons_0_commute",
     "(SUM i:?S. pCons (0::?'a) (?f i)) = pCons (0::?'a) (sum ?f ?S)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Missing_Polynomial.leading_coeff_code",
     "leading_coeff ?f =
      (let xs = coeffs ?f in if xs = [] then 0::?'a else last xs)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         t_empty))),
    ("Missing_Polynomial.degree_linear_factors",
     "degree (PROD a<-?as. [:?f a, 1::?'a:]) = length ?as",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Polynomial.poly_dvd_1",
     "(?p dvd 1) = (degree ?p = 0 & coeff ?p 0 dvd (1::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7)
            )],
       template_dunno)),
    ("Missing_Polynomial.poly_root_factor",
     "(poly [:?r, 1::?'a:] ?k = (0::?'a)) = (?k = - ?r)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2))),
           template_var 0),
         template_hole 1),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Missing_Polynomial.coeff_linear_power_neg",
     "coeff ([:?a, - (1::?'a):] ^ ?n) ?n = (- (1::?'a)) ^ ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_hole 1))),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app (template_hole 3, template_hole 2)),
         template_var 0))),
    ("Missing_Polynomial.smult_sum2",
     "smult ?m (sum ?f ?S) = (SUM i:?S. smult ?m (?f i))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Missing_Polynomial.smult_sum",
     "smult (sum ?f ?S) ?p = (SUM i:?S. smult (?f i) ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Missing_Polynomial.poly_as_sum",
     "poly ?p ?x = (SUM i<=degree ?p. ?x ^ i * coeff ?p i)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Missing_Polynomial.poly_prod_list_zero_iff",
     "(poly (prod_list ?ps) ?x = (0::?'a)) =
      (EX p:set ?ps. poly p ?x = (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         t_empty))),
    ("Missing_Polynomial.monom_pCons_0_monom",
     "monom (pCons (0::?'a) (monom ?a ?n)) ?d =
      map_poly (pCons (0::?'a)) (monom (monom ?a ?n) ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Missing_Polynomial.coeff_monom_Suc",
     "coeff (monom ?a (Suc ?d) * ?p) (Suc ?i) =
      coeff (monom ?a ?d * ?p) ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 2))),
             template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0))),
    ("Missing_Polynomial.poly_smult_zero_iff",
     "(poly (smult ?a ?p) ?x = (0::?'a)) =
      (?a = (0::?'a) | poly ?p ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_dunno)),
    ("Missing_Polynomial.expand_powers",
     "(PROD (n, a)<-?n_as. ?f a ^ n) =
      prod_list (map ?f (expand_powers ?n_as))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Missing_Polynomial.poly_power_zero_iff",
     "(poly (?p ^ ?n) ?x = (0::?'a)) = (?n ~= 0 & poly ?p ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 4),
       template_dunno)),
    ("Missing_Polynomial.poly_mult_zero_iff",
     "(poly (?p * ?q) ?x = (0::?'a)) =
      (poly ?p ?x = (0::?'a) | poly ?q ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_dunno)),
    ("Missing_Polynomial.monom_mult_code",
     "coeffs (monom_mult ?n ?f) =
      (let xs = coeffs ?f
       in if xs = [] then xs else replicate ?n (0::?'a) @ xs)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 7, template_var 0)),
         t_empty))),
    ("Missing_Polynomial.coeff_monom_mult",
     "coeff (monom ?a ?d * ?p) ?i =
      (if ?d <= ?i then ?a * coeff ?p (?i - ?d) else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)))),
         template_hole 0))),
    ("Missing_Polynomial.map_poly_simps",
     "map_poly ?f (pCons ?c ?p) =
      (if ?c = (0::?'b) & ?p = 0 then 0
       else pCons (?f ?c) (map_poly ?f ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Missing_Polynomial.poly_root_factor",
     "(poly (?q * [:?r, 1::?'a:]) ?k = (0::?'a)) =
      (?k = - ?r | poly ?q ?k = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3)))),
           template_var 0),
         template_hole 2),
       template_dunno)),
    ("Missing_Polynomial.poly_root_factor",
     "(poly ([:?r, 1::?'a:] * ?q) ?k = (0::?'a)) =
      (?k = - ?r | poly ?q ?k = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_hole 3))),
               template_var 1)),
           template_var 0),
         template_hole 2),
       template_dunno)),
    ("Missing_Polynomial.monic_prod_list_pow",
     "monic (PROD (x, i)<-?xis. [:- x, 1::?'a:] ^ Suc i)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_var 0)))),
       template_hole 3))]
