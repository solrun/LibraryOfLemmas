   [("MDP_reward_Util.push_exp_bounded_linear",
     "bounded_linear (push_exp ?d)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("MDP_reward_Util.onorm_push_exp", "onorm (push_exp ?d) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("MDP_reward_Util.norm_push_exp_le_norm",
     "norm (push_exp ?d ?x) <= norm ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MDP_reward_Util.integrable_bfun_prob_space",
     "integrable (measure_pmf ?P) (%t. apply_bfun ?f (?F t))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)
         )),
    ("MDP_reward_Util.bounded_abs", "bounded ?X' ==> bounded (abs ` ?X')",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("MDP_reward_Util.is_arg_max_linorderD",
     "is_arg_max ?f ?P ?x ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("MDP_reward_Util.banach'", "is_contraction ?C ==> EX! v. ?C v = v",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("MDP_reward_Util.has_arg_max_arg_max",
     "has_arg_max ?f ?X ==> (ARG_MAX ?f x. x : ?X) : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1), t_empty)),
             template_var 0)
           ))),
    ("MDP_reward_Util.bounded_abs_range",
     "bounded (range ?f) ==> bounded (range (%x. \<bar>?f x\<bar>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_hole 1))
           ))),
    ("MDP_reward_Util.summable_powser_const",
     "\<bar>?c\<bar> < 1 ==> summable (%n. ?c ^ n * ?x)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_hole 3)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("MDP_reward_Util.app_arg_max_eq_SUP",
     "has_arg_max ?f ?X ==> ?f (arg_max_on ?f ?X) = \<Squnion> (?f ` ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("MDP_reward_Util.suminf_split_head'",
     "summable ?f ==> suminf ?f = ?f 0 + (\<Sum>n. ?f (Suc n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 0, template_hole 1)),
           template_app (template_hole 3, t_empty))))),
    ("MDP_reward_Util.arg_max_on_in",
     "[| finite ?X; ?X ~= {} |] ==> arg_max_on ?f ?X : ?X",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 1)
           ))),
    ("MDP_reward_Util.is_arg_max_linorderD",
     "[| is_arg_max ?f ?P ?x; ?P ?y |] ==> ?f ?y <= ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 0),
         template_app (template_var 3, template_var 1)))),
    ("MDP_reward_Util.arg_max_SUP",
     "is_arg_max ?f (%x. x : ?X) ?m ==> ?f ?m = \<Squnion> (?f ` ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2), t_empty),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("MDP_reward_Util.sum_apply_bfun",
     "apply_bfun (sum ?f {..<?n}) ?x = (SUM i<?n. apply_bfun (?f i) ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 1, template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty),
         template_app (template_hole 1, template_var 1)))),
    ("MDP_reward_Util.suminf_apply_bfun",
     "summable ?f ==>
      apply_bfun (\<Sum>i. ?f i) ?x = (\<Sum>i. apply_bfun (?f i) ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0),
         template_app (template_hole 0, t_empty)))),
    ("MDP_reward_Util.has_arg_max_is_arg_max",
     "has_arg_max ?f ?X ==>
      is_arg_max ?f (%x. x : ?X) (ARG_MAX ?f x. x : ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1), t_empty),
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("MDP_reward_Util.app_arg_max_ge",
     "[| has_arg_max ?f ?X; ?x : ?X |] ==> ?f ?x <= ?f (arg_max_on ?f ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("MDP_reward_Util.banach'",
     "is_contraction ?C ==>
      (%n. (?C ^^ n) ?v) \<longlonglongrightarrow> (THE v. ?C v = v)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))),
             template_hole 0)
           ))),
    ("MDP_reward_Util.bounded_integrable",
     "[| bounded (range ?v); measure_pmf.random_variable ?p borel ?v |]
      ==> integrable (measure_pmf ?p) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0)),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("MDP_reward_Util.sum_disc_lim",
     "\<bar>?c\<bar> < 1 ==> (\<Sum>x. ?c ^ x * ?B) = ?B / (1 - ?c)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_hole 6)],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_hole 6),
             template_var 1))))),
    ("MDP_reward_Util.finite_is_arg_max",
     "[| finite ?X; ?X ~= {} |] ==> EX x. is_arg_max ?f (%x. x : ?X) x",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("MDP_reward_Util.finite_arg_max_eq_Max",
     "[| finite ?X; ?X ~= {} |] ==> ?f (arg_max_on ?f ?X) = Max (?f ` ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_var 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("MDP_reward_Util.is_arg_max_linorderI",
     "[| ?P ?x; !!y. ?P y ==> ?f y <= ?f ?x |] ==> is_arg_max ?f ?P ?x",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("MDP_reward_Util.is_arg_max_cong",
     "(!!x. ?P x ==> ?f x = ?g x) ==>
      is_arg_max ?f ?P ?x = is_arg_max ?g ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("MDP_reward_Util.finite_arg_max_le",
     "[| finite ?X; ?X ~= {}; ?s : ?X |]
      ==> ?f ?s <= ?f (arg_max_on ?f ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_inequation
        (less_equals, template_app (template_var 0, template_var 1),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("MDP_reward_Util.is_arg_max_congI",
     "[| is_arg_max ?f ?P ?x; !!x. ?P x ==> ?f x = ?g x |]
      ==> is_arg_max ?g ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("MDP_reward_Util.abs_cSUP_le",
     "[| ?X ~= {}; bounded (?F ` ?X) |]
      ==> \<bar>\<Squnion> (?F ` ?X)\<bar>
          <= (\<Squnion>x\<in>?X. \<bar>?F x\<bar>)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, t_empty), template_var 1))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, t_empty), template_var 1))))),
    ("MDP_reward_Util.SUP_is_arg_max",
     "[| ?x : ?X; bdd_above (?f ` ?X); ?f ?x = \<Squnion> (?f ` ?X) |]
      ==> is_arg_max ?f (%x. x : ?X) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            ),
        template_equation
         (template_app (template_var 0, template_var 2),
          template_app
           (template_hole 1,
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0), t_empty),
             template_var 2)
           ))),
    ("MDP_reward_Util.lemma_4_3_1",
     "[| set_pmf ?p <= ?W; integrable (measure_pmf ?p) ?w;
         bounded (?w ` ?W) |]
      ==> measure_pmf.expectation ?p ?w <= \<Squnion> (?w ` ?W)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 2)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))))),
    ("MDP_reward_Util.integral_measure_pmf_bind",
     "(!!x. \<bar>?f x\<bar> <= ?B) ==>
      integral\<^sup>L (measure_pmf ?M >>= (%x. measure_pmf (?N x))) ?f =
      measure_pmf.expectation ?M (%x. measure_pmf.expectation (?N x) ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               t_empty)),
           t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           t_empty)))),
    ("MDP_reward_Util.bounded_SUP_mul",
     "[| ?X ~= {}; 0 <= ?l; bounded (?f ` ?X) |]
      ==> (\<Squnion>x\<in>?X. ?l * ?f x) = ?l * \<Squnion> (?f ` ?X)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_inequation (less_equals, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, t_empty), template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, t_empty),
               template_var 2)))))),
    ("MDP_reward_Util.tendsto_bfun_sandwich",
     "[| ?f \<longlonglongrightarrow> ?x; ?g \<longlonglongrightarrow> ?x;
         \<forall>\<^sub>F n in sequentially. ?f n <= ?h n;
         \<forall>\<^sub>F n in sequentially. ?h n <= ?g n |]
      ==> ?h \<longlonglongrightarrow> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 2)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 2)),
             template_hole 2)
           ))),
    ("MDP_reward_Util.SUP_add_le",
     "[| ?X ~= {}; bounded (?B ` ?X); bounded (?A' ` ?X) |]
      ==> (\<Squnion>c\<in>?X. ?B c + ?A' c)
          <= \<Squnion> (?B ` ?X) + \<Squnion> (?A' ` ?X)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, t_empty), template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, t_empty), template_var 2))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, t_empty),
               template_var 2)))))),
    ("MDP_reward_Util.contraction_dist",
     "[| !!v u. dist (?C v) (?C u) <= ?c * dist v u; 0 <= ?c; ?c < 1 |]
      ==> (1 - ?c) * dist ?v (THE v. ?C v = v) <= dist ?v (?C ?v)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_equals, template_hole 5, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 2, template_hole 3),
               template_var 1)),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app (template_hole 1, t_empty))),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_app (template_var 2, template_var 0))))),
    ("MDP_reward_Util.le_SUP_diff",
     "[| ?X ~= {}; bounded (?B ` ?X); bounded (?A' ` ?X);
         \<Squnion> (?A' ` ?X) <= \<Squnion> (?B ` ?X) |]
      ==> 0 <= (\<Squnion>c\<in>?X. ?B c - ?A' c)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 4, t_empty), template_var 2)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 4, t_empty), template_var 2)))],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, t_empty), template_var 2))))),
    ("MDP_reward_Util.lemma_4_3_1'",
     "[| set_pmf ?p <= ?W; bounded (?w ` ?W); ?W ~= {};
         measure_pmf.expectation ?p ?w =
         (\<Squnion>p\<in>{p. set_pmf p <= ?W}.
             measure_pmf.expectation p ?w) |]
      ==> EX x:?W. measure_pmf.expectation ?p ?w = ?w x",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 0),
                template_var 1))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_var 0),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, t_empty),
              template_app (template_hole 1, t_empty))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("MDP_reward_Util.le_SUP_diff'",
     "[| ?X ~= {}; bounded (?B ` ?X); bounded (?A' ` ?X);
         \<Squnion> (?A' ` ?X) <= \<Squnion> (?B ` ?X) |]
      ==> \<Squnion> (?B ` ?X) - \<Squnion> (?A' ` ?X)
          <= (\<Squnion>c\<in>?X. ?B c - ?A' c)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 1,
            template_app
             (template_app (template_hole 3, t_empty), template_var 2)),
          template_app
           (template_hole 1,
            template_app
             (template_app (template_hole 3, t_empty), template_var 2)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, t_empty), template_var 2))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, t_empty), template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, t_empty), template_var 2)))))]
