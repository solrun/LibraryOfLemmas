   [("MDP_disc.prefix_restrict",
     "Omega_Words_Fun.prefix ?i (restrict ?y {0..<?i}) =
      Omega_Words_Fun.prefix ?i ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))),
           template_hole 0),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 0),
         template_var 0))),
    ("MDP_disc.prefix_cons",
     "Omega_Words_Fun.prefix (Suc ?n) ?seq =
      ?seq 0 # Omega_Words_Fun.prefix ?n (%n. ?seq (Suc n))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 1, template_hole 2)),
         template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_hole 2),
           template_var 0)))),
    ("MDP_disc.prefix_measurable",
     "Omega_Words_Fun.prefix ?i
      : Pi\<^sub>M {0..<?i} (%_. count_space UNIV) \<rightarrow>\<^sub>M
        count_space UNIV",
     template_predicate
      (
         template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 7),
                     template_var 0)),
                 t_empty)),
             template_app (template_hole 1, template_hole 0)))
         )),
    ("MDP_disc.restrict_Suc",
     "restrict ?y {0..<Suc ?i} (Suc ?n) =
      (\<lambda>n\<in>{0..<?i}. ?y (Suc n)) ?n",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0)))]
