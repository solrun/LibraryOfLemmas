   [("Macaulay_Matrix.distinct_nzrows_row_echelon",
     "distinct (nzrows (row_echelon ?A))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Macaulay_Matrix.dim_row_echelon",
     "dim_col (row_echelon ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Macaulay_Matrix.dim_row_echelon",
     "dim_row (row_echelon ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Macaulay_Matrix.dim_resize_vec", "dim_vec (resize_vec ?n ?v) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Macaulay_Matrix.row_space_row_echelon",
     "row_space (row_echelon ?A) = row_space ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Macaulay_Matrix.resize_vec_dim", "resize_vec (dim_vec ?v) ?v = ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Macaulay_Matrix.length_nzrows", "length (nzrows ?A) <= dim_row ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Macaulay_Matrix.resize_vec_carrier",
     "resize_vec ?n ?v : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1))
         )),
    ("Macaulay_Matrix.dim_poly_to_row",
     "dim_vec (poly_to_row ?ts ?p) = length ?ts",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Macaulay_Matrix.vec_of_list_alt",
     "vec_of_list ?xs = vec (length ?xs) ((!) ?xs)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Macaulay_Matrix.row_space_alt",
     "row_space ?A = range (%v. v \<^sub>v* ?A)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("Macaulay_Matrix.mult_mat_vec_resize",
     "?v \<^sub>v* ?A = resize_vec (dim_row ?A) ?v \<^sub>v* ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_var 0))),
    ("Macaulay_Matrix.row_spaceI",
     "?x = ?v \<^sub>v* ?A ==> ?x : row_space ?A",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Macaulay_Matrix.set_nzrows",
     "set (nzrows ?A) = set (rows ?A) - {0\<^sub>v (dim_col ?A)}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 7,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("Macaulay_Matrix.vec_scalar_mult_fun",
     "vec ?n (%x. ?c * ?f x) = ?c \<cdot>\<^sub>v vec ?n ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Macaulay_Matrix.row_echelon_carrier",
     "?A : carrier_mat ?nr ?nc ==> row_echelon ?A : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Macaulay_Matrix.resize_vec_index",
     "?i < ?n ==> resize_vec ?n ?v $ ?i = ?v $ ?i",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Macaulay_Matrix.scalar_prod_comm",
     "dim_vec ?v = dim_vec ?w ==> ?v \<bullet> ?w = ?w \<bullet> ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Macaulay_Matrix.mult_vec_mat_transpose",
     "dim_vec ?v = dim_row ?A ==>
      ?v \<^sub>v* ?A = ?A\<^sup>T *\<^sub>v ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Macaulay_Matrix.row_echelon_pivot_fun",
     "(!!f. pivot_fun (row_echelon ?A) f (dim_col (row_echelon ?A)) ==>
            ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Macaulay_Matrix.nzrows_nth_not_zero",
     "?i < length (nzrows ?A) ==> nzrows ?A ! ?i ~= 0\<^sub>v (dim_col ?A)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 5, template_var 0)),
               template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Macaulay_Matrix.poly_to_row_index",
     "?i < length ?ts ==> poly_to_row ?ts ?p $ ?i = lookup ?p (?ts ! ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Macaulay_Matrix.row_space_mult_unit",
     "?P : Units (ring_mat TYPE(?'a) (dim_row ?A) ?b) ==>
      row_space (?P * ?A) = row_space ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 1)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("Macaulay_Matrix.row_space_mult",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nr |]
      ==> row_space (?B * ?A) <= row_space ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app (template_hole 1, template_var 3)))),
    ("Macaulay_Matrix.pivot_fun_mono",
     "[| pivot_fun ?A ?f ?nc; ?i1.0 <= ?i2.0; ?i2.0 < dim_row ?A |]
      ==> ?f ?i1.0 <= ?f ?i2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 0, template_var 4))],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 1),
         template_app (template_var 3, template_var 0)))),
    ("Macaulay_Matrix.row_echelon_transform",
     "(!!P. [| P : Units (ring_mat TYPE(?'a) (dim_row ?A) ?b);
               row_echelon ?A = P * ?A |]
            ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Macaulay_Matrix.vec_cong",
     "[| ?n = ?m; !!i. i < ?m ==> ?f i = ?g i |] ==> vec ?n ?f = vec ?m ?g",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Macaulay_Matrix.row_spaceE",
     "[| ?x : row_space ?A;
         !!v. [| v : carrier_vec (dim_row ?A); ?x = v \<^sub>v* ?A |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Macaulay_Matrix.row_eq_zero_iff_pivot_fun",
     "[| pivot_fun ?A ?f (dim_col ?A); ?i < dim_row ?A |]
      ==> (row ?A ?i = 0\<^sub>v (dim_col ?A)) = (?f ?i = dim_col ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 2))),
         template_equation
          (template_app (template_var 1, template_var 0),
           template_app (template_hole 7, template_var 2))))),
    ("Macaulay_Matrix.row_not_zero_iff_pivot_fun",
     "[| pivot_fun ?A ?f (dim_col ?A); ?i < dim_row ?A |]
      ==> (row ?A ?i ~= 0\<^sub>v (dim_col ?A)) = (?f ?i < dim_col ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 7, template_var 2)))),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_var 1, template_var 0)),
           template_app (template_hole 7, template_var 2))))),
    ("Macaulay_Matrix.pivot_fun_stabilizes",
     "[| pivot_fun ?A ?f ?nc; ?i1.0 <= ?i2.0; ?i2.0 < dim_row ?A;
         ?nc <= ?f ?i1.0 |]
      ==> ?f ?i2.0 = ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 1, template_var 4)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_var 3, template_var 1))],
       template_equation
        (template_app (template_var 3, template_var 0), template_var 2))),
    ("Macaulay_Matrix.pivot_fun_mono_strict",
     "[| pivot_fun ?A ?f ?nc; ?i1.0 < ?i2.0; ?i2.0 < dim_row ?A;
         ?f ?i1.0 < ?nc |]
      ==> ?f ?i1.0 < ?f ?i2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 0, template_var 4)),
        template_inequation
         (less_than, template_app (template_var 3, template_var 1),
          template_var 2)],
       template_inequation
        (less_than, template_app (template_var 3, template_var 1),
         template_app (template_var 3, template_var 0)))),
    ("Macaulay_Matrix.assoc_mult_vec_mat",
     "[| ?v : carrier_vec ?n1.0; ?A : carrier_mat ?n1.0 ?n2.0;
         ?B : carrier_mat ?n2.0 ?n3.0 |]
      ==> ?v \<^sub>v* (?A * ?B) = ?v \<^sub>v* ?A \<^sub>v* ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 3)),
           template_var 1))))]
