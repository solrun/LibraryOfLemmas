   [("Graph_Topological_Ordering.is_top_sorted_empty_list",
     "is_top_sorted ?R []",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Graph_Topological_Ordering.is_top_sorted_empty_rel",
     "is_top_sorted {} ?l = distinct ?l",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Graph_Topological_Ordering.list_before_irrefl_eq_distinct",
     "irrefl (list_before_rel ?l) = distinct ?l",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Graph_Topological_Ordering.list_before_asym",
     "distinct ?l ==> asym (list_before_rel ?l)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Graph_Topological_Ordering.list_before_trans",
     "distinct ?l ==> trans (list_before_rel ?l)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Graph_Topological_Ordering.is_top_sorted_distinct",
     "is_top_sorted ?R ?l ==> distinct ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Graph_Topological_Ordering.list_before_rel_on_elems",
     "list_before_rel ?l <= set ?l \<times> set ?l",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Graph_Topological_Ordering.is_top_sorted_antimono",
     "[| ?R <= ?R'; is_top_sorted ?R' ?l |] ==> is_top_sorted ?R ?l",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Graph_Topological_Ordering.is_top_sorted_remove_elem",
     "is_top_sorted ?R (?l1.0 @ ?x # ?l2.0) ==>
      is_top_sorted ?R (?l1.0 @ ?l2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Graph_Topological_Ordering.list_before_rel_cons",
     "list_before_rel (?x # ?l) =
      {?x} \<times> set ?l Un list_before_rel ?l",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             t_empty)),
         template_app (template_hole 6, template_var 0)))),
    ("Graph_Topological_Ordering.is_top_sorted_alt",
     "is_top_sorted ?R ?l =
      (ALL x y. (x, y) : list_before_rel ?l --> (y, x) ~: ?R^*)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Graph_Topological_Ordering.is_top_sorted_cons",
     "is_top_sorted ?R (?x # ?l) =
      ({?x} \<times> set ?l Int (?R^*)^-1 = {} & is_top_sorted ?R ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 1),
                             template_hole 4)),
                         t_empty)),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)))),
                 template_hole 0)),
             template_app
              (template_app (template_hole 11, template_var 2),
               template_var 0))
           ))),
    ("Graph_Topological_Ordering.is_top_sorted_append",
     "is_top_sorted ?R (?l1.0 @ ?l2.0) =
      (set ?l1.0 \<times> set ?l2.0 Int (?R^*)^-1 = {} &
       is_top_sorted ?R ?l1.0 & is_top_sorted ?R ?l2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 1)),
                         t_empty)),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)))),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_var 0)))
           ))),
    ("Graph_Topological_Ordering.list_before_rel_alt",
     "list_before_rel ?l = {(?l ! i, ?l ! j) |i j. i < j & j < length ?l}",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Graph_Topological_Ordering.is_top_sorted_isolated_constraint",
     "[| ?R' <= ?R Un {?x} \<times> ?X; ?R' Int UNIV \<times> {?x} = {};
         ?x ~: set ?l; is_top_sorted ?R ?l |]
      ==> is_top_sorted ?R' ?l",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_hole 8)),
              t_empty))),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 4),
            template_app
             (template_app (template_hole 10, template_hole 5), t_empty)),
          template_hole 4),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 0))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4), template_var 0)
           )))]
