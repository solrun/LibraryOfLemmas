   [("Van_der_Waerden.vdw_1_right", "vdw ?k 1 1",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_hole 0)
         )),
    ("Van_der_Waerden.vdw_2_right", "vdw ?k 2 (?k + 1)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Van_der_Waerden.vdw_1_left", "0 < ?l ==> vdw 1 ?l ?l",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 0)
           ))),
    ("Van_der_Waerden.vdw_0_left", "0 < ?n ==> vdw 0 ?l ?n",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 0),
             template_var 1)
           ))),
    ("Van_der_Waerden.arith_prog_to_multi",
     "arith_prog ?start ?step ?c =
      multi_arith_prog 1 ?start (%_. ?step) (%_. ?c)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           t_empty),
         t_empty))),
    ("Van_der_Waerden.multi_to_arith_prog",
     "multi_arith_prog 1 ?start ?steps ?c =
      arith_prog ?start (?steps 0) (?c 0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_var 1, template_hole 0)),
         template_app (template_var 0, template_hole 0)))),
    ("Van_der_Waerden.vdw_lemma_imp_vdw",
     "vdw_lemma ?k ?k ?l ?N ==> vdw ?k (Suc ?l) ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Van_der_Waerden.arith_prog_mono",
     "?c <= ?c' ==>
      arith_prog ?start ?step ?c <= arith_prog ?start ?step ?c'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Van_der_Waerden.vdw_imp_pos", "[| vdw ?k ?l ?n; 0 < ?l |] ==> 0 < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 0, template_var 1)],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("Van_der_Waerden.van_der_Waerden",
     "[| 0 < ?l; 0 < ?k |] ==> EX n. vdw ?k ?l n",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Van_der_Waerden.sum_mod_poly",
     "0 < ?k ==> (?k - 1) * sum ((^) ?k) {..<?q} < ?k ^ ?q",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3)),
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Van_der_Waerden.is_arith_prog_onD",
     "[| is_arith_prog_on ?l ?start ?step ?a ?b; ?c : {0..<?l} |]
      ==> arith_prog ?start ?step ?c : {?a..?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Van_der_Waerden.multi_arith_prog_mono",
     "(!!i. i < ?m ==> ?c i <= ?c' i) ==>
      multi_arith_prog ?m ?start ?steps ?c
      <= multi_arith_prog ?m ?start ?steps ?c'",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0),
           template_var 2)))),
    ("Van_der_Waerden.is_multi_arith_prog_onD",
     "[| is_multi_arith_prog_on ?l ?m ?start ?steps ?a ?b;
         ?c : {0..<?m} \<rightarrow> {0..<?l} |]
      ==> multi_arith_prog ?m ?start ?steps ?c : {?a..?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 5)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Van_der_Waerden.vdw_imp_vdw_lemma",
     "[| !!k'. 0 < k' ==> EX n_k'. vdw k' ?l n_k'; 2 <= ?l; 0 < ?m;
         0 < ?k |]
      ==> EX N. vdw_lemma ?k ?m ?l N",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_hole 1)),
          template_var 2),
        template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Van_der_Waerden.vdwE",
     "[| vdw ?k ?l ?n; ?a + int ?n <= ?b + 1;
         ?col : {?a..?b} \<rightarrow> {..<?k};
         !!j start step.
            [| j < ?k; 0 < step; is_arith_prog_on ?l start step ?a ?b;
               arith_prog start step ` {..<?l}
               <= ?col -` {j} Int {?a..?b} |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 18, template_var 3),
            template_app (template_hole 17, template_var 4)),
          template_app
           (template_app (template_hole 18, template_var 2),
            template_hole 16)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 3),
                    template_var 2)),
                t_empty))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Van_der_Waerden.vdw_lemmaE",
     "[| vdw_lemma ?k ?m ?l ?n; ?a + int ?n <= ?b + 1;
         ?col : {?a..?b} \<rightarrow> {..<?k};
         !!start steps.
            [| !!i. i < ?m ==> 0 < steps i;
               is_multi_arith_prog_on (?l + 1) ?m start steps ?a ?b;
               let f = multi_arith_prog ?m start steps
               in ALL c:{0..<?m} \<rightarrow> {0..?l}.
                     ALL s<?m.
                        (ALL j<=s. c j < ?l) -->
                        ?col (f c) =
                        ?col (f (%i. if i <= s then 0 else c i)) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 27, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 25, template_var 3),
            template_app (template_hole 24, template_var 4)),
          template_app
           (template_app (template_hole 25, template_var 2),
            template_hole 23)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 1),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 3),
                    template_var 2)),
                t_empty))
            ),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_var 0)))]
