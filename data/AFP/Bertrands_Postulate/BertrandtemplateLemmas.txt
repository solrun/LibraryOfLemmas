   [("Bertrand.pre_mangoldt_pos", "0 < pre_mangoldt ?n",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.mangoldt_odd_pos", "0 <= mangoldt_odd ?d",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.psi_pos", "0 <= psi ?n",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.psi_odd_pos", "0 <= psi_odd ?n",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.psi_residues_compare", "psi_odd ?n <= psi_even ?n",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.psi_sqrt", "psi (Discrete.sqrt ?n) = psi_even ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.primepow_even_imp_primepow",
     "primepow_even ?n ==> primepow ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Bertrand.primepow_odd_imp_primepow",
     "primepow_odd ?n ==> primepow ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Bertrand.of_nat_prod_mset",
     "\<Prod>\<^sub># (image_mset of_nat ?A) = of_nat (\<Prod>\<^sub># ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Bertrand.of_nat_ge_1_iff", "((1::?'a) <= of_nat ?x) = (1 <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Bertrand.primepow_iff_even_sqr",
     "primepow ?n = primepow_even (?n\<^sup>2)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Bertrand.psi_theta", "theta ?n + psi (Discrete.sqrt ?n) <= psi ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 1, template_var 0))),
    ("Bertrand.pre_mangoldt_notprimepow",
     "~ primepow ?n ==> pre_mangoldt ?n = 1",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Bertrand.psi_conv_pre_mangoldt",
     "psi ?n = ln (real (prod pre_mangoldt {1..?n}))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Bertrand.psi_mono", "?m <= ?n ==> psi ?m <= psi ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.psi_odd_mono", "?m <= ?n ==> psi_odd ?m <= psi_odd ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.psi_split", "psi ?n = theta ?n + psi_even ?n + psi_odd ?n",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.mangoldt_split",
     "mangoldt ?d = mangoldt_1 ?d + mangoldt_even ?d + mangoldt_odd ?d",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.Ball_insertD", "ALL x:insert ?y ?A. ?P x ==> ?P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              t_empty)
            )],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("Bertrand.ln_fact", "ln (fact ?n) = (SUM d = 1..?n. ln (real d))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Bertrand.floor_conv_div_nat",
     "real_of_int \<lfloor>real ?m / real ?n\<rfloor> = real (?m div ?n)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Bertrand.psi_theta",
     "psi ?n <= theta ?n + 2 * psi (Discrete.sqrt ?n)",
     template_inequation
      (less_equals, template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0)))))),
    ("Bertrand.psi_ubound_3_2", "psi ?n <= 3 / 2 * real ?n",
     template_inequation
      (less_equals, template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_hole 4,
               template_app (template_hole 1, template_hole 2)))),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.primepow_even_altdef",
     "primepow_even ?n =
      (primepow ?n & even (multiplicity (aprimedivisor ?n) ?n))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0))))),
    ("Bertrand.frac_conv_mod_nat",
     "frac (real ?m / real ?n) = real (?m mod ?n) / real ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 1, template_var 0)))),
    ("Bertrand.primepow_odd_mult",
     "Suc 0 < ?d ==>
      primepow_odd (aprimedivisor ?d * ?d) = primepow_even ?d",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_hole 5),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.Ball_insertD", "ALL x:insert ?y ?A. ?P x ==> ALL x:?A. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Bertrand.pre_mangoldt_primepow",
     "[| primepow ?n; aprimedivisor ?n = ?p |] ==> pre_mangoldt ?n = ?p",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 1), template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Bertrand.bertrand", "1 < ?n ==> EX p:{?n<..<2 * ?n}. prime p",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_var 0))),
             t_empty)
           ))),
    ("Bertrand.prod_mset_pos",
     "(!!x. x :# ?A ==> (0::?'a) < x) ==> (0::?'a) < \<Prod>\<^sub># ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.psi_bounds_ln_fact",
     "ln (fact ?n) - 2 * ln (fact (?n div 2)) <= psi ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))),
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 4, template_hole 3))))))),
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.ln_fact_conv_mangoldt",
     "ln (fact ?n) =
      (SUM d = 1..?n.
       mangoldt d * real_of_int \<lfloor>real ?n / real d\<rfloor>)",
     template_equation
      (template_app
        (template_hole 10, template_app (template_hole 9, template_var 0)),
       template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Bertrand.psi_residues_compare_2",
     "sum mangoldt_odd {2..?n} <= sum mangoldt_even {2..?n}",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)))),
    ("Bertrand.sum_minus_one",
     "(SUM x = 1..?y. (- 1) ^ (x + 1)) = (if odd ?y then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 13, t_empty),
         template_app
          (template_app (template_hole 7, template_hole 8),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0))),
           template_hole 10),
         template_hole 0))),
    ("Bertrand.n_div_d_eq_1",
     "?d : {?n div 2 + 1..?n} ==> \<lfloor>real ?n / real ?d\<rfloor> = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 0),
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 7, template_hole 6)))),
                    template_hole 5)),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 1))),
         template_hole 0))),
    ("Bertrand.primepow_odd_altdef",
     "primepow_odd ?n =
      (primepow ?n &
       odd (multiplicity (aprimedivisor ?n) ?n) &
       1 < multiplicity (aprimedivisor ?n) ?n)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_var 0)))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_var 0)))))),
    ("Bertrand.div_invert",
     "[| 0 < ?x; 0 < ?y; ?y <= ?n div ?x |] ==> ?x <= ?n div ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Bertrand.divisors",
     "[| ?x : {1..?n}; ?d dvd ?x |] ==> EX k:{1..?n div ?d}. ?x = ?d * k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))),
             t_empty)
           ))),
    ("Bertrand.fact_psi_bound_2_3",
     "psi ?n - psi (?n div 2) <= ln (fact ?n) - 2 * ln (fact (?n div 2))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))))),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))))))))),
    ("Bertrand.ln_fact_bounds",
     "0 < ?n ==>
      \<bar>ln (fact ?n) - real ?n * ln (real ?n) + real ?n\<bar>
      <= 1 + ln (real ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 1, template_var 0))))),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 6, template_hole 0),
           template_app
            (template_hole 4,
             template_app (template_hole 1, template_var 0)))))),
    ("Bertrand.theta_double_lemma",
     "1200 <= ?n ==> theta (?n div 2) < theta ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app
               (template_hole 5,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 5, template_hole 3))))))))))),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 3)))),
         template_app (template_hole 1, template_var 0)))),
    ("Bertrand.Mertens_lemma",
     "?n ~= 0 ==>
      \<bar>(SUM d = 1..?n. mangoldt d / real d) - ln (real ?n)\<bar> <= 4",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, t_empty),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0))),
             template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 0)))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_hole 0)))))),
    ("Bertrand.ln_primefact",
     "?n ~= 0 ==>
      ln (real ?n) =
      (SUM d = 1..?n.
       if primepow d & d dvd ?n then ln (real (aprimedivisor d)) else 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_equation
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_app (template_hole 8, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Bertrand.psi_bounds_induct",
     "real ?n * ln 2 - (4 * ln (real (if ?n = 0 then 1 else ?n)) + 3)
      <= psi ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app (template_hole 11, template_var 0)),
             template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 8, template_hole 7)))),
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_hole 3)),
                       template_hole 2),
                     template_var 0))))),
           template_app
            (template_hole 9,
             template_app (template_hole 1, template_hole 7)))),
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.div_2_mult_2_bds",
     "0 < ?d ==>
      0 <= \<lfloor>real ?n / real ?d\<rfloor> -
           2 * \<lfloor>real (?n div 2) / real ?d\<rfloor>",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 1)],
       template_inequation
        (less_equals, template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app (template_hole 6, template_var 1)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 3, template_hole 2))))),
                 template_app (template_hole 6, template_var 1)))))))),
    ("Bertrand.div_2_mult_2_bds",
     "0 < ?d ==>
      \<lfloor>real ?n / real ?d\<rfloor> -
      2 * \<lfloor>real (?n div 2) / real ?d\<rfloor>
      <= 1",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 0)),
                 template_app (template_hole 7, template_var 1)))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 4, template_hole 3))))),
                 template_app (template_hole 7, template_var 1))))),
         template_hole 0))),
    ("Bertrand.ln_msetprod",
     "(!!x. x :# ?I ==> 0 < x) ==>
      (SUM p:#?I. ln (real p)) = ln (\<Prod>\<^sub># (image_mset real ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, t_empty),
               template_var 0)))))),
    ("Bertrand.theta_lessE",
     "[| theta ?m < theta ?n; 1 <= ?m;
         !!p. [| p : {?m<..?n}; prime p |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_inequation (less_equals, template_hole 4, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Bertrand.fact_expand_psi",
     "ln (fact ?n) - 2 * ln (fact (?n div 2)) =
      (SUM d = 1..?n. (- 1) ^ (d + 1) * psi (?n div d))",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_hole 15,
             template_app (template_hole 14, template_var 0))),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app (template_hole 11, template_hole 10))),
           template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_app
                  (template_hole 8,
                   template_app (template_hole 11, template_hole 10))))))),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Bertrand.fact_psi_bound_2_3",
     "ln (fact ?n) - 2 * ln (fact (?n div 2))
      <= psi ?n - psi (?n div 2) + psi (?n div 3)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 0))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 6, template_hole 5))))))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 11,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 6, template_hole 5)))))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 3,
               template_app (template_hole 0, template_hole 5))))))),
    ("Bertrand.Mertens",
     "?n ~= 0 ==>
      \<bar>(SUM p | prime p & p <= ?n. ln (real p) / real p) -
            ln (real ?n)\<bar>
      <= 7",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 14))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, t_empty),
                 template_app (template_hole 6, t_empty))),
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_hole 0)))))),
    ("Bertrand.psi_ubound_log", "psi ?n <= 551 / 256 * ln 2 * real ?n",
     template_inequation
      (less_equals, template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 3, template_hole 2))))))))))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_hole 2))))))))))),
             template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app (template_hole 3, template_hole 2))))),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.psi_double_lemma",
     "1200 <= ?n ==> real ?n / 6 <= psi ?n - psi (?n div 2)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_hole 9,
              template_app
               (template_hole 9,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 9,
                              template_app
                               (template_hole 9, template_hole 7))))))))))),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 9,
               template_app (template_hole 8, template_hole 7)))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_hole 10,
                 template_app (template_hole 9, template_hole 7)))))))),
    ("Bertrand.primepow_cases",
     "primepow ?d =
      (primepow_even ?d & ~ primepow_odd ?d & ~ prime ?d |
       ~ primepow_even ?d & primepow_odd ?d & ~ prime ?d |
       ~ primepow_even ?d & ~ primepow_odd ?d & prime ?d)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0))))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 0))))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, template_var 0))))))),
    ("Bertrand.psi_bounds_induct",
     "psi ?n - psi (?n div 2)
      <= real ?n * ln 2 + (4 * ln (real (if ?n = 0 then 1 else ?n)) + 3)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 0)),
         template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_var 0),
             template_app
              (template_hole 12,
               template_app (template_hole 11, template_hole 10))))),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 11, template_hole 10))))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 11, template_hole 10)))),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 0),
                           template_hole 2)),
                       template_hole 1),
                     template_var 0))))),
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_hole 10)))))),
    ("Bertrand.floor_half_interval",
     "?d ~= 0 ==>
      real (?n div ?d) - real (2 * (?n div 2 div ?d)) =
      (if odd (?n div ?d) then 1 else 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)))),
                 template_var 1)))),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_var 1)))),
             template_hole 1),
           template_hole 0)))),
    ("Bertrand.sum_expand_lemma",
     "(SUM d = 1..?n. (- 1) ^ (d + 1) * psi (?n div d)) =
      (SUM d = 1..?n. (if odd (?n div d) then 1 else 0) * mangoldt d)",
     template_equation
      (template_app
        (template_app (template_hole 17, t_empty),
         template_app
          (template_app (template_hole 8, template_hole 11),
           template_var 0)),
       template_app
        (template_app (template_hole 17, t_empty),
         template_app
          (template_app (template_hole 8, template_hole 11),
           template_var 0)))),
    ("Bertrand.eval_psi_aux2",
     "[| psi ?m = ln (real (numeral ?x)); pre_mangoldt ?n = ?y; ?m + 1 = ?n;
         numeral ?x * ?y = ?z |]
      ==> psi ?n = ln (real ?z)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 4),
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 3)))),
        template_equation
         (template_app (template_hole 3, template_var 2), template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 4),
            template_hole 1),
          template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app (template_hole 5, template_var 3)),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))))),
    ("Bertrand.Mertens_mangoldt_versus_ln",
     "?I <= {1..?n} ==>
      \<bar>(SUM i:?I. mangoldt i / real i) -
            (SUM p | prime p & p : ?I. ln (real p) / real p)\<bar>
      <= 3",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, t_empty), template_var 1)),
             template_app
              (template_app (template_hole 11, t_empty),
               template_app (template_hole 6, t_empty)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Bertrand.eval_psi_ineq_aux2",
     "(numeral ?m)\<^sup>2 <= 2 ^ (3 * ?n) ==>
      ln (real (numeral ?m)) <= 3 / 2 * ln 2 * real ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1)),
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8))),
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 10,
                  template_app (template_hole 6, template_hole 8))),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 10, template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 6, template_hole 8))),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 9, template_hole 8)))),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 9, template_hole 8))))),
           template_app (template_hole 3, template_var 0))))),
    ("Bertrand.fact_psi_bound_even",
     "even ?k ==>
      (SUM d = 1..?k. (- 1) ^ (d + 1) * psi (?n div d))
      <= ln (fact ?n) - 2 * ln (fact (?n div 2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_hole 15))),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 7),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 0,
                 template_app (template_hole 16, template_hole 15))),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_hole 17,
                     template_app
                      (template_hole 16, template_hole 15)))))))))),
    ("Bertrand.fact_psi_bound_odd",
     "odd ?k ==>
      ln (fact ?n) - 2 * ln (fact (?n div 2))
      <= (SUM d = 1..?k. (- 1) ^ (d + 1) * psi (?n div d))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_hole 17,
                      template_app (template_hole 16, template_hole 15))),
                  template_var 1)
                )
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app (template_hole 11, template_var 0))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 16, template_hole 15))),
             template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_app
                    (template_hole 17,
                     template_app
                      (template_hole 16, template_hole 15))))))),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1))))),
    ("Bertrand.ln_fact_diff_bounds",
     "\<bar>ln (fact ?n) - 2 * ln (fact (?n div 2)) - real ?n * ln 2\<bar>
      <= 4 * ln (real (if ?n = 0 then 1 else ?n)) + 3",
     template_inequation
      (less_equals,
       template_app
        (template_hole 16,
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 0))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_hole 9))),
                 template_app
                  (template_hole 14,
                   template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 10, template_hole 9)))))))),
           template_app
            (template_app
              (template_hole 12,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 14,
               template_app
                (template_hole 11,
                 template_app (template_hole 10, template_hole 9)))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app (template_hole 10, template_hole 9)))),
             template_app
              (template_hole 14,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_hole 2)),
                     template_hole 1),
                   template_var 0))))),
         template_app
          (template_hole 11,
           template_app (template_hole 0, template_hole 9))))),
    ("Bertrand.eval_psi_ineq_aux",
     "[| psi ?n = ?x; ?x <= 3 / 2 * ln 2 * real ?n |]
      ==> psi ?n <= 3 / 2 * ln 2 * real ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1), template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_hole 3))),
                    template_app
                     (template_hole 5,
                      template_app (template_hole 2, template_hole 3)))),
                template_app
                 (template_hole 1,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 2, template_hole 3))))),
            template_app (template_hole 0, template_var 1)))],
       template_inequation
        (less_equals, template_app (template_hole 9, template_var 1),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_hole 3))),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 2, template_hole 3)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_hole 3))))),
           template_app (template_hole 0, template_var 1))))),
    ("Bertrand.psi_expansion_cutoff",
     "?m <= ?p ==>
      (SUM d = 1..2 * ?m. (- 1) ^ (d + 1) * psi (?n div d))
      <= (SUM d = 1..2 * ?p. (- 1) ^ (d + 1) * psi (?n div d))",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 7),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 2))),
         template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 7),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 1)))))),
    ("Bertrand.psi_ubound_aux",
     "[| 2 <= ?x; ?x <= ?y |]
      ==> (4 * ln ?y + 3) / (ln 2 * ?y) <= (4 * ln ?x + 3) / (ln 2 * ?x)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 6, template_hole 5)))),
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 7,
                 template_app (template_hole 0, template_hole 5)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 6, template_hole 5)))),
                   template_app (template_hole 1, template_var 1))),
               template_app
                (template_hole 7,
                 template_app (template_hole 0, template_hole 5)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)))),
             template_var 1))))),
    ("Bertrand.psi_expansion_cutoff",
     "?m <= ?p ==>
      (SUM d = 1..2 * ?p + 1. (- 1) ^ (d + 1) * psi (?n div d))
      <= (SUM d = 1..2 * ?m + 1. (- 1) ^ (d + 1) * psi (?n div d))",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 7),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0))),
                   template_var 1)),
               template_hole 7))),
         template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 7),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0))),
                   template_var 2)),
               template_hole 7)))))),
    ("Bertrand.overpower_lemma",
     "[| ?f ?a <= ?g ?a;
         !!x. ?a <= x ==>
              ((%x. ?g x - ?f x) has_real_derivative ?d x) (at x);
         !!x. ?a <= x ==> 0 <= ?d x; ?a <= ?x |]
      ==> ?f ?x <= ?g ?x",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 4, template_var 3),
          template_app (template_var 2, template_var 3)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 4, template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("Bertrand.eval_psi_ineq_aux_mono",
     "[| psi ?n = ?x; psi ?m = ?x; psi ?n <= 3 / 2 * ln 2 * real ?n;
         ?n <= ?m |]
      ==> psi ?m <= 3 / 2 * ln 2 * real ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 10, template_var 0), template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 2),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4))),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 3, template_hole 4)))),
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 3, template_hole 4))))),
            template_app (template_hole 1, template_var 2))),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 10, template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 3, template_hole 4)))),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 3, template_hole 4))))),
           template_app (template_hole 1, template_var 0))))),
    ("Bertrand.sum_integral_ubound_decreasing'",
     "[| ?m <= ?n;
         !!x. x : {real ?m - 1..real ?n} ==>
              (?g has_real_derivative ?f x) (at x);
         !!x y.
            [| real ?m - 1 <= x; x <= y; y <= real ?n |] ==> ?f y <= ?f x |]
      ==> (SUM k = ?m..?n. ?f (real k)) <= ?g (real ?n) - ?g (real ?m - 1)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_var 1,
               template_app (template_hole 7, template_var 2))),
           template_app
            (template_var 1,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 3)),
               template_hole 6)))))),
    ("Bertrand.Ball_atLeast0AtMost_insert",
     "[| ALL x:{0..?m}. psi x <= 3 / 2 * ln 2 * real x;
         psi (numeral ?n) <= 3 / 2 * ln 2 * real (numeral ?n);
         ?m = pred_numeral ?n |]
      ==> ALL x:{0..numeral ?n}. psi x <= 3 / 2 * ln 2 * real x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 1)),
              t_empty)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app (template_hole 2, template_var 0)),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_hole 6))),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 5, template_hole 6)))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 5, template_hole 6))))),
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0)))),
        template_equation
         (template_var 1, template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app (template_hole 2, template_var 0))),
             t_empty)
           ))),
    ("Bertrand.psi_ubound_log_double_cases",
     "[| ALL n<=?m. psi n <= ?c * ln 2 * real n;
         1 + ?c / 2 + (4 * ln (real ?m + 1) + 3) / (ln 2 * (real ?m + 1))
         <= ?c';
         ?m' = 2 * ?m; ?c <= ?c'; 0 <= ?c; 1 <= ?m |]
      ==> ALL n<=?m'. psi n <= ?c' * ln 2 * real n",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10))))),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 12,
                          template_app
                           (template_hole 11,
                            template_app
                             (template_hole 11, template_hole 10)))),
                      template_app
                       (template_hole 13,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app (template_hole 9, template_var 3)),
                          template_hole 7)))),
                  template_app
                   (template_hole 12,
                    template_app (template_hole 5, template_hole 10)))),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10)))),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 9, template_var 3)),
                  template_hole 7)))),
          template_var 1),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app (template_hole 11, template_hole 10))),
            template_var 3)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 2),
        template_inequation (less_equals, template_hole 0, template_var 3)],
       template_predicate (template_app (template_hole 19, t_empty)))),
    ("Bertrand.psi_ubound_log_double_cases'",
     "[| !!n. n <= ?m ==> psi n <= ?c * ln 2 * real n; ?n <= ?m';
         ?m' = 2 * ?m; ?c <= ?c'; 0 <= ?c; 1 <= ?m;
         1 + ?c / 2 + (4 * ln (real ?m + 1) + 3) / (ln 2 * (real ?m + 1))
         <= ?c' |]
      ==> psi ?n <= ?c' * ln 2 * real ?n",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 11, template_hole 10))),
            template_var 4)),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation (less_equals, template_hole 5, template_var 3),
        template_inequation (less_equals, template_hole 4, template_var 4),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10))))),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 12,
                          template_app
                           (template_hole 11,
                            template_app
                             (template_hole 11, template_hole 10)))),
                      template_app
                       (template_hole 13,
                        template_app
                         (template_app
                           (template_hole 3,
                            template_app (template_hole 9, template_var 4)),
                          template_hole 2)))),
                  template_app
                   (template_hole 12,
                    template_app (template_hole 0, template_hole 10)))),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10)))),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 9, template_var 4)),
                  template_hole 2)))),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 15, template_var 2),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 14, template_var 0),
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_hole 10))))),
           template_app (template_hole 9, template_var 2))))),
    ("Bertrand.psi_bounds_sustained",
     "[| !!n. n <= 2 ^ ?k ==> psi n <= ?c * ln 2 * real n;
         4 * ln (1 + 2 ^ ?k) + 3 <= (?c / 2 - 1) * ln 2 * (1 + 2 ^ ?k);
         4 / (1 + 2 ^ ?k) <= (?c / 2 - 1) * ln 2; 0 <= ?c |]
      ==> psi ?n <= ?c * ln 2 * real ?n",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 14,
                      template_app (template_hole 14, template_hole 13)))),
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 14, template_hole 13))),
                      template_var 2))))),
            template_app
             (template_hole 8,
              template_app (template_hole 3, template_hole 13))),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 1),
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 14, template_hole 13)))),
                    template_hole 5)),
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 14, template_hole 13))))),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 14, template_hole 13))),
                template_var 2)))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 1,
              template_app
               (template_hole 8,
                template_app
                 (template_hole 14,
                  template_app (template_hole 14, template_hole 13)))),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 14, template_hole 13))),
                template_var 2))),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 14, template_hole 13)))),
                template_hole 5)),
            template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 14, template_hole 13))))),
        template_inequation (less_equals, template_hole 0, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 11, template_var 0),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 10, template_var 1),
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 14, template_hole 13))))),
           template_app (template_hole 7, template_var 0))))),
    ("Bertrand.psi_bounds_sustained_induct",
     "[| 4 * ln (1 + 2 ^ ?j) + 3 <= ?d * ln 2 * (1 + 2 ^ ?j);
         4 / (1 + 2 ^ ?j) <= ?d * ln 2; 0 <= ?c; ?c / 2 + ?d + 1 <= ?c;
         ?j <= ?k; !!n. n <= 2 ^ ?k ==> psi n <= ?c * ln 2 * real n;
         ?n <= 2 ^ Suc ?k |]
      ==> psi ?n <= ?c * ln 2 * real ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 17,
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_hole 15,
                    template_app
                     (template_hole 14,
                      template_app (template_hole 14, template_hole 13)))),
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 17, template_hole 11),
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_hole 15,
                          template_app
                           (template_hole 14, template_hole 13))),
                      template_var 4))))),
            template_app
             (template_hole 15,
              template_app (template_hole 9, template_hole 13))),
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 16, template_var 3),
                template_app
                 (template_hole 12,
                  template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 13))))),
            template_app
             (template_app (template_hole 17, template_hole 11),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 13))),
                template_var 4)))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app (template_hole 14, template_hole 13)))),
            template_app
             (template_app (template_hole 17, template_hole 11),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 13))),
                template_var 4))),
          template_app
           (template_app (template_hole 16, template_var 3),
            template_app
             (template_hole 12,
              template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13))))),
        template_inequation (less_equals, template_hole 7, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 17,
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_hole 13)))),
                template_var 3)),
            template_hole 11),
          template_var 2),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 14, template_hole 13))),
            template_app (template_hole 0, template_var 1)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 16, template_var 2),
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 15,
                   template_app (template_hole 14, template_hole 13))))),
           template_app (template_hole 1, template_var 0)))))]
