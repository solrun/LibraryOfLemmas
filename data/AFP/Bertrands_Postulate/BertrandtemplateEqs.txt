   [("Bertrand.psi_sqrt", "psi (Discrete.sqrt ?n) = psi_even ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bertrand.of_nat_prod_mset",
     "\<Prod>\<^sub># (image_mset of_nat ?A) = of_nat (\<Prod>\<^sub># ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Bertrand.of_nat_ge_1_iff", "((1::?'a) <= of_nat ?x) = (1 <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Bertrand.primepow_iff_even_sqr",
     "primepow ?n = primepow_even (?n\<^sup>2)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Bertrand.psi_conv_pre_mangoldt",
     "psi ?n = ln (real (prod pre_mangoldt {1..?n}))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Bertrand.psi_split", "psi ?n = theta ?n + psi_even ?n + psi_odd ?n",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.mangoldt_split",
     "mangoldt ?d = mangoldt_1 ?d + mangoldt_even ?d + mangoldt_odd ?d",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bertrand.ln_fact", "ln (fact ?n) = (SUM d = 1..?n. ln (real d))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Bertrand.floor_conv_div_nat",
     "real_of_int \<lfloor>real ?m / real ?n\<rfloor> = real (?m div ?n)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Bertrand.primepow_even_altdef",
     "primepow_even ?n =
      (primepow ?n & even (multiplicity (aprimedivisor ?n) ?n))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0))))),
    ("Bertrand.frac_conv_mod_nat",
     "frac (real ?m / real ?n) = real (?m mod ?n) / real ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 1, template_var 0)))),
    ("Bertrand.ln_fact_conv_mangoldt",
     "ln (fact ?n) =
      (SUM d = 1..?n.
       mangoldt d * real_of_int \<lfloor>real ?n / real d\<rfloor>)",
     template_equation
      (template_app
        (template_hole 10, template_app (template_hole 9, template_var 0)),
       template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Bertrand.sum_minus_one",
     "(SUM x = 1..?y. (- 1) ^ (x + 1)) = (if odd ?y then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 13, t_empty),
         template_app
          (template_app (template_hole 7, template_hole 8),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0))),
           template_hole 10),
         template_hole 0))),
    ("Bertrand.primepow_odd_altdef",
     "primepow_odd ?n =
      (primepow ?n &
       odd (multiplicity (aprimedivisor ?n) ?n) &
       1 < multiplicity (aprimedivisor ?n) ?n)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_var 0)))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_var 0)))))),
    ("Bertrand.fact_expand_psi",
     "ln (fact ?n) - 2 * ln (fact (?n div 2)) =
      (SUM d = 1..?n. (- 1) ^ (d + 1) * psi (?n div d))",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_hole 15,
             template_app (template_hole 14, template_var 0))),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app (template_hole 11, template_hole 10))),
           template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_app
                  (template_hole 8,
                   template_app (template_hole 11, template_hole 10))))))),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Bertrand.primepow_cases",
     "primepow ?d =
      (primepow_even ?d & ~ primepow_odd ?d & ~ prime ?d |
       ~ primepow_even ?d & primepow_odd ?d & ~ prime ?d |
       ~ primepow_even ?d & ~ primepow_odd ?d & prime ?d)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0))))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 0))))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, template_var 0))))))),
    ("Bertrand.sum_expand_lemma",
     "(SUM d = 1..?n. (- 1) ^ (d + 1) * psi (?n div d)) =
      (SUM d = 1..?n. (if odd (?n div d) then 1 else 0) * mangoldt d)",
     template_equation
      (template_app
        (template_app (template_hole 17, t_empty),
         template_app
          (template_app (template_hole 8, template_hole 11),
           template_var 0)),
       template_app
        (template_app (template_hole 17, t_empty),
         template_app
          (template_app (template_hole 8, template_hole 11),
           template_var 0))))]
