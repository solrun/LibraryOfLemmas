   [("Tetrahedron.simple_rotations_inj", "?r : simple_rotations ==> inj ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Tetrahedron.complex_rotations_bij",
     "?r : complex_rotations ==> bij ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_hole 0)
           ))),
    ("Tetrahedron.simple_rotations_bij", "?r : simple_rotations ==> bij ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_hole 0)
           ))),
    ("Tetrahedron.simple_rotations_surj",
     "?r : simple_rotations ==> surj ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Tetrahedron.simple_rotations_fix",
     "?r : simple_rotations ==> EX v. ?r v = v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Tetrahedron.simple_rotations_rotate_id",
     "?r : simple_rotations ==> ?r o ?r o ?r = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_var 0),
         template_hole 0))),
    ("Tetrahedron.complex_rotations_inverses",
     "?r : complex_rotations ==> EX y:complex_rotations. y o ?r = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 4), t_empty)
           ))),
    ("Tetrahedron.simple_rotations_inverses",
     "?r : simple_rotations ==> EX y:complex_rotations. y o ?r = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3), t_empty)
           ))),
    ("Tetrahedron.complex_rotations_comp",
     "[| ?r : complex_rotations; ?s : complex_rotations |]
      ==> ?r o ?s : complex_rotations",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Tetrahedron.rotation_bij_corollary",
     "?r : complex_rotations ==> (?r ?x ~= ?r ?y) = (?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            )],
       template_bimplication
        (template_negation
          (
             template_equation
              (template_app (template_var 2, template_var 1),
               template_app (template_var 2, template_var 0))
             ),
         template_negation
          (template_equation (template_var 1, template_var 0))))),
    ("Tetrahedron.simple_rotation_bij_corollary",
     "?r : simple_rotations ==> (?r ?x ~= ?r ?y) = (?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            )],
       template_bimplication
        (template_negation
          (
             template_equation
              (template_app (template_var 2, template_var 1),
               template_app (template_var 2, template_var 0))
             ),
         template_negation
          (template_equation (template_var 1, template_var 0))))),
    ("Tetrahedron.distinct_vertices",
     "distinct [?a, ?b, ?c, ?d] ==> ALL e. e : {?a, ?b, ?c, ?d}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_app
                     (template_app (template_hole 5, template_var 0),
                      template_hole 4)))))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Tetrahedron.complex_rotations_fix",
     "[| ?r : complex_rotations; ?r ?a = ?a; ?r ?b = ?b; ?a ~= ?b |]
      ==> ?r = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            ),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 1),
        template_equation
         (template_app (template_var 2, template_var 0), template_var 0),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation (template_var 2, template_hole 0))),
    ("Tetrahedron.simple_rotations_fix_unique",
     "[| ?r : simple_rotations; ?r ~= id; ?r ?v = ?v; ?r ?w = ?w |]
      ==> ?v = ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 1),
        template_equation
         (template_app (template_var 2, template_var 0), template_var 0)],
       template_equation (template_var 1, template_var 0))),
    ("Tetrahedron.simple_rotations_cycle",
     "[| ?r : simple_rotations; ?r ~= id; ?r ?v = ?w; ?v ~= ?w |]
      ==> ?r ?w ~= ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 0),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_var 2, template_var 0), template_var 1)
           ))),
    ("Tetrahedron.id_decomp",
     "[| distinct [?a, ?b, ?c, ?d]; ALL x:{?a, ?b, ?c, ?d}. ?r x = x |]
      ==> ?r = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_hole 6)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_app
                       (template_app (template_hole 4, template_var 1),
                        template_hole 3))))),
              t_empty)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Tetrahedron.distinct_map",
     "[| ?r : complex_rotations; distinct [?a, ?b, ?c, ?d];
         ALL e:{?a, ?b, ?c}. ?r e ~= ?f |]
      ==> ?r ?d = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_hole 2)))),
              t_empty)
            )],
       template_equation
        (template_app (template_var 5, template_var 1), template_var 0))),
    ("Tetrahedron.distinct_map'",
     "[| ?r : complex_rotations; distinct [?a, ?b, ?c, ?d];
         ALL e:{?a, ?b, ?c}. ?r ?f ~= e |]
      ==> ?r ?f = ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_hole 2)))),
              t_empty)
            )],
       template_equation
        (template_app (template_var 5, template_var 0), template_var 1))),
    ("Tetrahedron.simple_distinct_ident",
     "[| ?r : simple_rotations; distinct [?a, ?b, ?c, ?d];
         ALL e:{?a, ?b, ?c}. ?r e ~= e |]
      ==> ?r ?d = ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app
                     (template_app (template_hole 6, template_var 0),
                      template_hole 5)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2)))),
              t_empty)
            )],
       template_equation
        (template_app (template_var 4, template_var 0), template_var 0))),
    ("Tetrahedron.simple_distinct_map",
     "[| ?r : simple_rotations; distinct [?a, ?b, ?c, ?d];
         ALL e:{?a, ?b, ?c}. ?r e ~= ?f |]
      ==> ?r ?d = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_hole 2)))),
              t_empty)
            )],
       template_equation
        (template_app (template_var 5, template_var 1), template_var 0))),
    ("Tetrahedron.simple_distinct_map'",
     "[| ?r : simple_rotations; distinct [?a, ?b, ?c, ?d];
         ALL e:{?a, ?b, ?c}. ?r ?f ~= e |]
      ==> ?r ?f = ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_hole 2)))),
              t_empty)
            )],
       template_equation
        (template_app (template_var 5, template_var 0), template_var 1))),
    ("Tetrahedron.complex_rotations_invariants",
     "?r : complex_rotations ==>
      ((ALL v. ?r v ~= v) --> ?r ?v = ?w --> ?r ?w = ?v) &
      (?r ?v = ?v --> ?r ?w = ?w --> ?v ~= ?w --> ?r = id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_var 2, template_var 1)),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_var 2, template_var 0)),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_var 2, template_var 1)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_var 2, template_var 0)),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_hole 0)))))
           ))),
    ("Tetrahedron.cycle_map",
     "[| ?r : complex_rotations; distinct [?a, ?b, ?c, ?d]; ?r ?a = ?b;
         ?r ?b = ?a; ?r ?c = ?d; ?r ?d = ?c |]
      ==> ALL v w. ?r v = w --> ?r w = v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app
                     (template_app (template_hole 4, template_var 0),
                      template_hole 3)))))
            ),
        template_equation
         (template_app (template_var 4, template_var 3), template_var 2),
        template_equation
         (template_app (template_var 4, template_var 2), template_var 3),
        template_equation
         (template_app (template_var 4, template_var 1), template_var 0),
        template_equation
         (template_app (template_var 4, template_var 0), template_var 1)],
       template_predicate (template_app (template_hole 1, t_empty))))]
