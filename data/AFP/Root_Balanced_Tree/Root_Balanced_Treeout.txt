Loading theory "HOL-Data_Structures.Less_False" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Data_Structures.Tree_Set" via "HOL-Data_Structures.Set_Specs" via "HOL-Data_Structures.List_Ins_Del" via "HOL-Data_Structures.Sorted_Less")
Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "Draft.Time_Monad" via "HOL-Library.Monad_Syntax")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Library.Tree_Multiset" via "HOL-Library.Multiset")
Loading theory "HOL-Data_Structures.Cmp" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Data_Structures.Tree_Set")
### theory "HOL-Data_Structures.Less_False"
### 0.037s elapsed time, 0.178s cpu time, 0.000s GC time
Loading theory "HOL-Data_Structures.Sorted_Less" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Data_Structures.Tree_Set" via "HOL-Data_Structures.Set_Specs" via "HOL-Data_Structures.List_Ins_Del")
### theory "HOL-Data_Structures.Sorted_Less"
### 0.046s elapsed time, 0.182s cpu time, 0.000s GC time
Loading theory "HOL-Data_Structures.List_Ins_Del" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Data_Structures.Tree_Set" via "HOL-Data_Structures.Set_Specs")
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.087s elapsed time, 0.377s cpu time, 0.000s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "Draft.Time_Monad")
### theory "HOL-Library.Monad_Syntax"
### 0.041s elapsed time, 0.149s cpu time, 0.021s GC time
Loading theory "Draft.Time_Monad" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Data_Structures.List_Ins_Del"
### 0.218s elapsed time, 0.859s cpu time, 0.021s GC time
Loading theory "HOL-Data_Structures.Set_Specs" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Data_Structures.Tree_Set")
locale Set
  fixes empty :: "'s"
    and insert :: "'a => 's => 's"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
  assumes "Set empty insert delete isin set invar"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Data_Structures.Cmp"
### 0.370s elapsed time, 1.491s cpu time, 0.072s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
locale Set_by_Ordered
  fixes empty :: "'t"
    and insert :: "'a => 't => 't"
    and delete :: "'a => 't => 't"
    and isin :: "'t => 'a => bool"
    and inorder :: "'t => 'a list"
    and inv :: "'t => bool"
  assumes "Set_by_Ordered empty insert delete isin inorder inv"
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
locale Set2
  fixes empty :: "'s"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
    and insert :: "'a => 's => 's"
    and union :: "'s => 's => 's"
    and inter :: "'s => 's => 's"
    and diff :: "'s => 's => 's"
  assumes "Set2 empty delete isin set invar insert union inter diff"
### theory "HOL-Data_Structures.Set_Specs"
### 0.113s elapsed time, 0.446s cpu time, 0.051s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.469s elapsed time, 1.879s cpu time, 0.072s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Library.Tree_Multiset")
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.530s cpu time, 0.075s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "{}"
Found termination order: "{}"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Time_Monad"
### 0.508s elapsed time, 2.013s cpu time, 0.125s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.227s elapsed time, 0.898s cpu time, 0.095s GC time
Loading theory "Amortized_Complexity.Amortized_Framework0" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree")
### theory "HOL-Library.Nat_Bijection"
### 0.345s elapsed time, 1.353s cpu time, 0.170s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs")
locale Amortized
  fixes init :: "'s"
    and nxt :: "'o => 's => 's"
    and inv :: "'s => bool"
    and T :: "'o => 's => real"
    and \<Phi> :: "'s => real"
    and U :: "'o => 's => real"
  assumes "Amortized init nxt inv T \<Phi> U"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale BinCounter
Found termination order: "length <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "{}"
locale table_insert
  fixes a :: "real"
    and c :: "real"
  assumes "table_insert a c"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
consts
  left :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  snth :: "'a stream => nat => 'a"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.131s elapsed time, 4.254s cpu time, 0.874s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
### theory "HOL-Library.BigO"
### 1.200s elapsed time, 4.530s cpu time, 1.443s GC time
(SUM i<?n. T_incr (incr.state ?f i)) <= (SUM i<?n. 2)
(SUM i<?n. T_ins (local.ins.state ?f i)) <= (SUM i<?n. a + 1)
### theory "HOL-Library.Tree"
### 2.623s elapsed time, 9.809s cpu time, 2.485s GC time
Loading theory "Draft.Templates" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Data_Structures.Tree_Set" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.060s elapsed time, 0.234s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Root_Balanced_TreeMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### Missing patterns in function definition:
### split_min \<langle>\<rangle> = undefined
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.684s elapsed time, 2.701s cpu time, 0.196s GC time
Loading theory "HOL-Library.Tree_Real" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree" via "HOL-Data_Structures.Balance")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
### theory "HOL-Data_Structures.Tree_Set"
### 0.971s elapsed time, 3.829s cpu time, 0.249s GC time
  Proving monotonicity ...
### theory "HOL-Library.Tree_Real"
### 0.353s elapsed time, 1.294s cpu time, 0.124s GC time
Loading theory "HOL-Data_Structures.Balance" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
### theory "Amortized_Complexity.Amortized_Framework0"
### 3.806s elapsed time, 14.217s cpu time, 2.773s GC time
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Data_Structures.Balance"
### 0.322s elapsed time, 0.843s cpu time, 0.063s GC time
### theory "HOL-Library.Multiset"
### 4.186s elapsed time, 15.366s cpu time, 2.868s GC time
Loading theory "HOL-Library.Tree_Multiset" (required by "Draft.Root_Balanced_TreeMoreTemplates" via "Draft.Root_Balanced_Tree")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree_Multiset"
### 0.315s elapsed time, 0.477s cpu time, 0.076s GC time
Loading theory "Draft.Root_Balanced_Tree" (required by "Draft.Root_Balanced_TreeMoreTemplates")
### Ignoring duplicate rewrite rule:
### Let ?s ?f == ?f ?s
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
### Additional type variable(s) in locale specification "RBTi1": 'a
locale RBTi1
  fixes bal_i :: "nat => nat => bool"
  assumes "RBTi1 TYPE('a) bal_i"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### Missing patterns in function definition:
### hchild \<langle>\<rangle> = undefined
Found termination order: "{}"
### Additional type variable(s) in locale specification "RBTi2": 'a
locale RBTi2
  fixes bal_i :: "nat => nat => bool"
    and e :: "real"
  assumes "RBTi2 TYPE('a) bal_i e"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
locale RBTi2_Amor
  fixes bal_i :: "nat => nat => bool"
    and e :: "real"
  assumes "RBTi2_Amor TYPE('a) bal_i e"
Found termination order: "{}"
Found termination order: "{}"
### Abstraction on left hand side of equation, in theorem:
### I_RBTi2.up3 ?x ?sib ?twist ?u ==
### case ?u of Same2 => Same2 | Bal2 t => Bal2 (node ?twist t ?x ?sib)
### | Unbal2 t n1 h1 =>
###     let n2 = Root_Balanced_Tree.size_tree ?sib; t' = node ?twist t ?x ?sib;
###         n' = n1 + n2 + 1; h' = h1 + 1
###     in if int h' <= \<lceil>c * log 2 (real n' + 1)\<rceil>
###        then Unbal2 t' n' h'
###        else Let (Root_Balanced_Tree.bal_tree n' t') Bal2
### Abstraction on left hand side of equation, in theorem:
### I_RBTi2.ins3 ?n ?d ?x \<langle>\<rangle> ==
### if int (?d + 1) <= \<lceil>c * log 2 (real (?n + 1) + 1)\<rceil>
### then Bal2 \<langle>\<langle>\<rangle>, ?x, \<langle>\<rangle>\<rangle>
### else Unbal2 \<langle>\<langle>\<rangle>, ?x, \<langle>\<rangle>\<rangle> 1 1
### Abstraction on left hand side of equation, in theorem:
### I_RBTi2.ins3 ?n ?d ?x \<langle>?l, ?y, ?r\<rangle> ==
### case cmp ?x ?y of
### LT => Let (I_RBTi2.ins3 ?n (?d + 1) ?x ?l) (I_RBTi2.up3 ?y ?r False)
### | EQ => Same2
### | GT => Let (I_RBTi2.ins3 ?n (?d + 1) ?x ?r) (I_RBTi2.up3 ?y ?l True)
locale RBTid1
  fixes bal_i :: "nat => nat => bool"
  assumes "RBTid1 TYPE('a) bal_i"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
locale RBTid2
  fixes bal_i :: "nat => nat => bool"
    and e :: "real"
  assumes "RBTid2 TYPE('a) bal_i e"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Abstraction on left hand side of equation, in theorem:
### I_RBTid2.insert3_d ?x (?t, ?n, ?dl) ==
### Let (I_RBTi2.ins3 (?n + ?dl) 0 ?x ?t)
###  (case_up2 (?t, ?n, ?dl) (%t'. (t', ?n + 1, ?dl)) (%x xa xb. undefined))
### theory "Draft.Root_Balanced_Tree"
### 6.381s elapsed time, 8.624s cpu time, 3.079s GC time
Loading theory "Draft.Root_Balanced_TreeMoreTemplates"
val templateLemmas =
   [("Root_Balanced_Tree.bal_d0", "bal_d ?n 0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Root_Balanced_Tree.size_tree",
     "Root_Balanced_Tree.size_tree ?t = size ?t",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Root_Balanced_Tree.T_inorder2_Leaf",
     "T_inorder2 \<langle>\<rangle> ?xs = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Root_Balanced_Tree.inorder2_Leaf",
     "Root_Balanced_Tree.inorder2 \<langle>\<rangle> ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Root_Balanced_Tree.inorder2",
     "Root_Balanced_Tree.inorder2 ?t ?xs = Tree.inorder2 ?t ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Root_Balanced_Tree.bal_list",
     "Root_Balanced_Tree.bal_list ?n ?xs = Balance.bal_list ?n ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Root_Balanced_Tree.bal_tree",
     "Root_Balanced_Tree.bal_tree ?n ?t = Balance.bal_tree ?n ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Root_Balanced_Tree.bal_simps",
     "bal 0 ?xs = (\<langle>\<rangle>, ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Root_Balanced_Tree.bal_eq", "bal ?n ?xs = Balance.bal ?n ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Root_Balanced_Tree.imbal0_if_wbalanced",
     "wbalanced ?t ==> imbal ?t = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Root_Balanced_Tree.bal_tm_simps",
     "bal_tm 0 ?xs =1 return (\<langle>\<rangle>, ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0))),
         template_hole 0))),
    ("Root_Balanced_Tree.T_size_tree", "T_size_tree ?t = 2 * size ?t + 1",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Root_Balanced_Tree.T_bal", "T_bal ?n ?xs = 2 * ?n + 1",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 1)),
         template_hole 0))),
    ("Root_Balanced_Tree.T_inorder2", "T_inorder2 ?t ?xs = 2 * size ?t + 1",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, template_var 1))),
         template_hole 0))),
    ("Root_Balanced_Tree.T_size_tree_Node",
     "T_size_tree \<langle>?l, ?x, ?r\<rangle> =
      T_size_tree ?l + T_size_tree ?r + 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 2)),
             template_app (template_hole 3, template_var 0))),
         template_hole 0))),
    ("Root_Balanced_Tree.mono_bal_d",
     "[| bal_d ?n ?dl; ?n <= ?n' |] ==> bal_d ?n' ?dl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Root_Balanced_Tree.T_split_min_Node",
     "T_split_min \<langle>?l, ?x, ?r\<rangle> =
      (if ?l = \<langle>\<rangle> then 1 else T_split_min ?l + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 2)),
               template_hole 1))
           ))),
    ("Root_Balanced_Tree.inorder2_Node",
     "Root_Balanced_Tree.inorder2 \<langle>?l, ?x, ?r\<rangle> ?xs =
      (let rs = Root_Balanced_Tree.inorder2 ?r ?xs
       in Root_Balanced_Tree.inorder2 ?l (?x # rs))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         t_empty))),
    ("Root_Balanced_Tree.size_tree_Node",
     "Root_Balanced_Tree.size_tree \<langle>?l, ?x, ?r\<rangle> =
      (let m = Root_Balanced_Tree.size_tree ?l;
           n = Root_Balanced_Tree.size_tree ?r
       in m + n + 1)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 2)),
         t_empty))),
    ("Root_Balanced_Tree.T_inorder2_Node",
     "T_inorder2 \<langle>?l, ?x, ?r\<rangle> ?xs =
      T_inorder2 ?r ?xs +
      T_inorder2 ?l (?x # Root_Balanced_Tree.inorder2 ?r ?xs) +
      1",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))))),
         template_hole 0))),
    ("Root_Balanced_Tree.T_bal_tree",
     "?n = size ?xs ==> T_bal_tree ?n ?xs = 4 * ?n + 3",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 2, template_hole 1)))),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_hole 1)))))),
    ("Root_Balanced_Tree.split_minD",
     "[| Root_Balanced_Tree.split_min ?t = (?x, ?t');
         ?t ~= \<langle>\<rangle> |]
      ==> ?x # inorder ?t' = inorder ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("Root_Balanced_Tree.split_min_Node",
     "Root_Balanced_Tree.split_min \<langle>?l, ?x, ?r\<rangle> =
      (if ?l = \<langle>\<rangle> then (?x, ?r)
       else let (y, l') = Root_Balanced_Tree.split_min ?l
            in (y, \<langle>l', ?x, ?r\<rangle>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 3)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 7, template_var 2)),
               template_app (template_hole 0, t_empty)))
           ))),
    ("Root_Balanced_Tree.size1_imbal",
     "[| ~ bal_log ?t; bal_log (hchild ?t); ?t ~= \<langle>\<rangle> |]
      ==> (2 powr (1 - 1 / c) - 1) * real (size1 ?t) - 1 < real (imbal ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 16, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7, template_hole 6))),
                       template_app
                        (template_app (template_hole 11, template_hole 5),
                         template_app
                          (template_app (template_hole 4, template_hole 5),
                           template_hole 3)))),
                   template_hole 5)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)))),
           template_hole 5),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Root_Balanced_Tree.bal_simps",
     "0 < ?n ==>
      bal ?n ?xs =
      (let m = ?n div 2; (l, ys) = bal m ?xs;
           (r, zs) = bal (?n - 1 - m) (tl ys)
       in (\<langle>l, hd ys, r\<rangle>, zs))",
     template_implication
      ([template_inequation (less_than, template_hole 15, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 13, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 1),
               template_app
                (template_hole 10,
                 template_app (template_hole 9, template_hole 8)))),
           t_empty)))),
    ("Root_Balanced_Tree.bal_tm_simps",
     "0 < ?n ==>
      bal_tm ?n ?xs =1
      (let m = ?n div 2
       in bal_tm m ?xs >>=
          (%(l, ys).
              bal_tm (?n - 1 - m) (tl ys) >>=
              (%(r, zs). return (\<langle>l, hd ys, r\<rangle>, zs))))",
     template_implication
      ([template_inequation (less_than, template_hole 17, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 15, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_hole 9)))),
               t_empty)),
           template_hole 0)))),
    ("Root_Balanced_Tree.size1_imbal2",
     "[| ~ bal_log ?t; bal_log (hchild ?t); ?t ~= \<langle>\<rangle> |]
      ==> real (size1 ?t)
          < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal ?t + 1)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 18, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 17, template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_inequation
        (less_than,
         template_app
          (template_hole 13,
           template_app (template_hole 12, template_var 0)),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_app
                    (template_app (template_hole 10, template_hole 5),
                     template_hole 4))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_app
                    (template_app (template_hole 10, template_hole 5),
                     template_hole 4))))),
           template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))))))]:
   (string * thm * template) list
### theory "Draft.Root_Balanced_TreeMoreTemplates"
### 0.523s elapsed time, 0.837s cpu time, 0.105s GC time
val it = (): unit
