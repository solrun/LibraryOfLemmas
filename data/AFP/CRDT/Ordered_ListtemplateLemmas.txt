   [("Ordered_List.insert_insert'",
     "Ordered_List.insert ?xs ?e ?i = insert' ?xs ?e ?i",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Ordered_List.insert_body_insert'",
     "insert' ?xs ?e None = Some (insert_body ?xs ?e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Ordered_List.insert_None_index_neq_None",
     "Ordered_List.insert ?xs ?e ?i = None ==> ?i ~= None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 3)],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Ordered_List.delete_None_index_not_in",
     "delete ?xs ?i = None ==> ?i ~: fst ` set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 0),
          template_hole 5)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 1)))
               )
           ))),
    ("Ordered_List.index_not_in_delete_None",
     "?i ~: fst ` set ?xs ==> delete ?xs ?i = None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 0)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Ordered_List.insert_body_preserve_indices",
     "fst ` set (insert_body ?xs ?e) = fst ` set ?xs Un {fst ?e}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 0)),
           template_hole 0)))),
    ("Ordered_List.delete_no_failure",
     "?i : fst ` set ?xs ==> EX xs'. delete ?xs ?i = Some xs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ordered_List.index_not_in_insert_Some_None",
     "?i ~: fst ` set ?xs ==> Ordered_List.insert ?xs ?e (Some ?i) = None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_app (template_hole 4, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app (template_hole 1, template_var 2)),
         template_hole 0))),
    ("Ordered_List.insert_Some_None_index_not_in",
     "Ordered_List.insert ?xs ?e (Some ?i) = None ==> ?i ~: fst ` set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1),
            template_app (template_hole 6, template_var 0)),
          template_hole 5)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 2)))
               )
           ))),
    ("Ordered_List.delete_commutes",
     "delete ?xs ?i1.0 >>= (%ys. delete ys ?i2.0) =
      delete ?xs ?i2.0 >>= (%ys. delete ys ?i1.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         t_empty))),
    ("Ordered_List.delete_preserve_indices",
     "delete ?xs ?i = Some ?ys ==> fst ` set ?xs = fst ` set ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Ordered_List.insert_body_stop_iteration",
     "fst ?x < fst ?e ==> insert_body (?x # ?xs) ?e = ?e # ?x # ?xs",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Ordered_List.insert_body_contains_new_elem",
     "EX p s. ?xs = p @ s & insert_body ?xs ?e = p @ ?e # s",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Ordered_List.insert_body_commutes",
     "fst ?e1.0 ~= fst ?e2.0 ==>
      insert_body (insert_body ?xs ?e1.0) ?e2.0 =
      insert_body (insert_body ?xs ?e2.0) ?e1.0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Ordered_List.insert_delete_commute",
     "?i2.0 ~= fst ?e ==>
      Ordered_List.insert ?xs ?e ?i1.0 >>= (%ys. delete ys ?i2.0) =
      delete ?xs ?i2.0 >>= (%ys. Ordered_List.insert ys ?e ?i1.0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 3,
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           t_empty)))),
    ("Ordered_List.insert_preserve_indices'",
     "Ordered_List.insert ?xs ?e ?i = Some ?ys ==>
      fst ` set (the (Ordered_List.insert ?xs ?e ?i)) =
      fst ` set ?xs Un {fst ?e}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 2),
                 template_var 1)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 3))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 5, template_var 2)),
             template_hole 0))))),
    ("Ordered_List.insert_no_failure",
     "?i = None | (EX i'. ?i = Some i' & i' : fst ` set ?xs) ==>
      EX xs'. Ordered_List.insert ?xs ?e ?i = Some xs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)),
              template_app (template_hole 10, t_empty))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ordered_List.insert_preserve_indices",
     "EX ys. Ordered_List.insert ?xs ?e ?i = Some ys ==>
      fst ` set (the (Ordered_List.insert ?xs ?e ?i)) =
      fst ` set ?xs Un {fst ?e}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 5, template_var 1)),
             template_hole 0))))),
    ("Ordered_List.insert_body_delete_commute",
     "?i2.0 ~= fst ?e ==>
      delete (insert_body ?xs ?e) ?i2.0 >>= (%t. Some (?x # t)) =
      delete ?xs ?i2.0 >>= (%y. Some (?x # insert_body y ?e))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 3,
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2)),
               template_var 3)),
           t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 3)),
           t_empty)))),
    ("Ordered_List.insert_insert_body",
     "[| fst ?e1.0 ~= fst ?e2.0; ?i2.0 ~= Some (fst ?e1.0) |]
      ==> Ordered_List.insert (insert_body ?xs ?e1.0) ?e2.0 ?i2.0 =
          Ordered_List.insert ?xs ?e2.0 ?i2.0 >>=
          (%ys. Some (insert_body ys ?e1.0))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 7, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_hole 5,
                template_app (template_hole 7, template_var 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2),
               template_var 1)),
           t_empty)))),
    ("Ordered_List.insert_insert_body_commute",
     "[| ?i ~= fst ?e1.0; fst ?e1.0 ~= fst ?e2.0 |]
      ==> Ordered_List.insert (insert_body ?xs ?e1.0) ?e2.0 (Some ?i) =
          Ordered_List.insert ?xs ?e2.0 (Some ?i) >>=
          (%y. Some (insert_body y ?e1.0))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 3,
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)),
             template_var 1),
           template_app (template_hole 2, template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1),
               template_app (template_hole 2, template_var 3))),
           t_empty)))),
    ("Ordered_List.insert_Nil_None",
     "[| fst ?e1.0 ~= fst ?e2.0; ?i ~= fst ?e2.0;
         ?i2.0 ~= Some (fst ?e1.0) |]
      ==> Ordered_List.insert [] ?e2.0 ?i2.0 >>=
          (%ys. Ordered_List.insert ys ?e1.0 (Some ?i)) =
          None",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 7, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 7, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app
               (template_hole 5,
                template_app (template_hole 7, template_var 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_var 0)),
           t_empty),
         template_hole 0))),
    ("Ordered_List.split_tuple_list_by_id",
     "[| (?a, ?b, ?c) : set ?xs; distinct (map fst ?xs) |]
      ==> EX pre suf.
             ?xs = pre @ (?a, ?b, ?c) # suf & (ALL y:set pre. fst y ~= ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_var 1))),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Ordered_List.insert_preserves_order",
     "[| ?i = None | (EX i'. ?i = Some i' & i' : fst ` set ?xs);
         distinct (map fst ?xs) |]
      ==> EX pre suf.
             ?xs = pre @ suf &
             Ordered_List.insert ?xs ?e ?i = Some (pre @ ?e # suf)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 2),
                  template_hole 16)),
              template_app (template_hole 15, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 10),
                template_var 1))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Ordered_List.insert_between_elements",
     "[| ?xs = ?pre @ ?ref # ?suf; distinct (map fst ?xs);
         !!i'. i' : fst ` set ?xs ==> i' < fst ?e |]
      ==> Ordered_List.insert ?xs ?e (Some (fst ?ref)) =
          Some (?pre @ ?ref # ?e # ?suf)",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 4))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 9, template_var 2))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 13, template_var 3),
             template_app
              (template_app (template_hole 12, template_var 2),
               template_app
                (template_app (template_hole 12, template_var 0),
                 template_var 1))))))),
    ("Ordered_List.insert_commutes",
     "[| fst ?e1.0 ~= fst ?e2.0; ?i1.0 = None | ?i1.0 ~= Some (fst ?e2.0);
         ?i2.0 = None | ?i2.0 ~= Some (fst ?e1.0) |]
      ==> Ordered_List.insert ?xs ?e1.0 ?i1.0 >>=
          (%ys. Ordered_List.insert ys ?e2.0 ?i2.0) =
          Ordered_List.insert ?xs ?e2.0 ?i2.0 >>=
          (%ys. Ordered_List.insert ys ?e1.0 ?i1.0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_hole 3,
                    template_app (template_hole 7, template_var 3)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 3,
                    template_app (template_hole 7, template_var 4)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4),
               template_var 2)),
           t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1)),
           t_empty)))),
    ("Ordered_List.insert_position_element_technical",
     "[| ALL x:set ?as. ?a ~= fst x;
         insert_body (?cs @ ?ds) ?e = ?cs @ ?e # ?ds |]
      ==> Ordered_List.insert (?as @ (?a, ?aa, ?b) # ?cs @ ?ds) ?e
           (Some ?a) =
          Some (?as @ (?a, ?aa, ?b) # ?cs @ ?e # ?ds)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 6)),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 3)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 7, template_var 6),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 7, template_var 4),
                     template_var 3)))),
             template_var 2),
           template_app (template_hole 1, template_var 5)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 7, template_var 6),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 3))))))))]
