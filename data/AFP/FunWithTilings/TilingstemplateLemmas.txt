   [("Tilings.pos_pow2", "0 < 2 ^ ?n",
     template_inequation
      (less_than, template_hole 4,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Tilings.domino_finite", "?d : domino ==> finite ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Tilings.tilingp_tiling_eq",
     "tilingp (%x. x : ?A) = (%x. x : tiling ?A)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Tilings.DisjI2", "?A Int ?B = {} ==> ?A Int (?B - ?X) = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("Tilings.DisjI1", "?A Int ?B = {} ==> (?A - ?X) Int ?B = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_hole 1))),
    ("Tilings.dominoes_tile_row",
     "{?i} \<times> {0..<2 * ?n} : tiling domino",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_hole 8)),
               t_empty)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Tilings.dominoes_tile_matrix",
     "{0..<?m} \<times> {0..<2 * ?n} : tiling domino",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 1)),
               t_empty)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Tilings.tiling_domino_0_1",
     "?t : tiling domino ==> card (whites Int ?t) = card (blacks Int ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_hole 6))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_hole 1))),
             template_var 0))))),
    ("Tilings.tiling_finite",
     "[| !!a. a : ?A ==> finite a; ?t : tiling ?A |] ==> finite ?t",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Tilings.Sigma_Suc2",
     "?A \<times> {0..<Suc ?n} = ?A \<times> {?n} Un ?A \<times> {0..<?n}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 6, template_var 1), t_empty)))),
    ("Tilings.Sigma_Suc1",
     "{0..<Suc ?n} \<times> ?B = {?n} \<times> ?B Un {0..<?n} \<times> ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             t_empty)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           t_empty)))),
    ("Tilings.Diff_insert_if",
     "[| ?B ~= {}; ?a ~: ?A |] ==> ?A - insert ?a ?B = ?A - ?B",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Tilings.tiling_Diff1E",
     "[| ?t - ?a : tiling ?A; ?a : ?A; ?a <= ?t |] ==> ?t : tiling ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Tilings.LinLs",
     "L0 ?i ?j : Ls & L1 ?i ?j : Ls & L2 ?i ?j : Ls & L3 ?i ?j : Ls",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_hole 3))))
         )),
    ("Tilings.Diff_insert_if",
     "[| ?B ~= {}; ?a : ?A |] ==> ?A - insert ?a ?B = ?A - ?B - {?a}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 3))))),
    ("Tilings.tiling_UnI",
     "[| ?t : tiling ?A; ?u : tiling ?A; ?t Int ?u = {} |]
      ==> ?t Un ?u : tiling ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 4, template_var 1))
           ))),
    ("Tilings.coloured_insert",
     "coloured ?b Int insert (?i, ?j) ?t =
      (if (?i + ?j) mod 2 = ?b then insert (?i, ?j) (coloured ?b Int ?t)
       else coloured ?b Int ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1)),
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0)))),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_var 3)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_var 3)),
               template_var 0))
           ))),
    ("Tilings.Ls_can_tile00",
     "[| ?a < 2 ^ ?n; ?b < 2 ^ ?n |]
      ==> square2 ?n 0 0 - {(?a, ?b)} : tiling Ls",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_hole 9))),
            template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_hole 9))),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 1),
                       template_hole 5),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 0)),
                   template_hole 2))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Tilings.domino_singletons",
     "?d : domino ==>
      (EX i j. whites Int ?d = {(i, j)}) &
      (EX m n. blacks Int ?d = {(m, n)})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app (template_hole 8, t_empty))
           ))),
    ("Tilings.in_square2",
     "((?a, ?b) : square2 ?n ?i ?j) =
      (?i <= ?a & ?a < 2 ^ ?n + ?i & ?j <= ?b & ?b < 2 ^ ?n + ?j)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 4)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0))),
                     template_var 2)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0))),
                     template_var 2)),
                 template_var 0))))))),
    ("Tilings.Ls_can_tile",
     "[| ?i <= ?a; ?a < 2 ^ ?n + ?i; ?j <= ?b; ?b < 2 ^ ?n + ?j |]
      ==> square2 ?n ?i ?j - {(?a, ?b)} : tiling Ls",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 8))),
                template_var 2)),
            template_var 4)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 8))),
                template_var 2)),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 4),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 0)),
                   template_hole 2))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Tilings.square2_Suc",
     "square2 (Suc ?n) ?i ?j =
      square2 ?n ?i ?j Un square2 ?n (2 ^ ?n + ?i) ?j Un
      square2 ?n ?i (2 ^ ?n + ?j) Un
      square2 ?n (2 ^ ?n + ?i) (2 ^ ?n + ?j)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_var 2),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 1, template_hole 0))),
                           template_var 2)),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0))),
                     template_var 2)),
                 template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0))),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 2)),
             template_var 0))))),
    ("Tilings.mutil_not_tiling",
     "?t = {0..<2 * Suc ?m} \<times> {0..<2 * Suc ?n} ==>
      ?t - {(0, 0)} - {(Suc (2 * ?m), Suc (2 * ?n))} ~: tiling domino",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 10, template_hole 9))),
                  template_app (template_hole 8, template_var 1)))),
            t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 3, template_hole 13),
                               template_hole 13)),
                           template_hole 2))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 10, template_hole 9))),
                                 template_var 1))),
                           template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 10, template_hole 9))),
                               template_var 0)))),
                       template_hole 2))),
                 template_app (template_hole 1, template_hole 0))
               )
           ))),
    ("Tilings.square2_disj",
     "(square2 ?n ?i ?j Int square2 ?n ?x ?y = {}) =
      ((2 ^ ?n + ?i <= ?x | 2 ^ ?n + ?x <= ?i) |
       2 ^ ?n + ?j <= ?y | 2 ^ ?n + ?y <= ?j)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 4),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 8, template_var 4),
                 template_var 1),
               template_var 0))),
         template_hole 7),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_hole 0))),
                         template_var 4)),
                     template_var 3)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_hole 0))),
                       template_var 4)),
                   template_var 1)),
               template_var 3))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_hole 0))),
                       template_var 4)),
                   template_var 2)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_hole 0))),
                     template_var 4)),
                 template_var 0)),
             template_var 2))))),
    ("Tilings.gen_mutil_not_tiling",
     "[| ?t : tiling domino; (?i + ?j) mod 2 = 0; (?m + ?n) mod 2 = 0;
         {(?i, ?j), (?m, ?n)} <= ?t |]
      ==> ?t - {(?i, ?j)} - {(?m, ?n)} ~: tiling domino",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app (template_hole 14, template_hole 13))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2)),
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_hole 7))),
          template_hole 6),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0)),
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_hole 7))),
          template_hole 6),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2)),
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)),
          template_var 4)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 3, template_var 3),
                               template_var 2)),
                           template_hole 2))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 1),
                           template_var 0)),
                       template_hole 2))),
                 template_app (template_hole 14, template_hole 13))
               )
           )))]
