   [("Simple_Algorithm.rlex2_irrefl",
     "~ ?x <\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2 ?x",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)
             )
         )),
    ("Simple_Algorithm.sorted_wrt_gen",
     "sorted_wrt (<\<^sub>r\<^sub>l\<^sub>e\<^sub>x) (gen ?B ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Simple_Algorithm.gen_ne", "gen ?B ?n ~= []",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Simple_Algorithm.sorted_wrt_generate",
     "sorted_wrt (<\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2)
       (generate ?A ?B ?m ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Simple_Algorithm.gen_nth0", "gen ?B ?n ! 0 = zeroes ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Simple_Algorithm.rlex2_not_sym",
     "?x <\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2 ?y ==>
      ~ ?y <\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2 ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)
               )
           ))),
    ("Simple_Algorithm.sorted_wrt_gen2",
     "sorted_wrt (<\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2)
       (gen2 ?A ?B ?m ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("Simple_Algorithm.sorted_wrt_check_generate",
     "sorted_wrt (<\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2)
       (check_generate ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0))),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1))),
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Simple_Algorithm.gen2_ne", "gen2 ?A ?B ?m ?n ~= []",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_hole 0)
         )),
    ("Simple_Algorithm.less_imp_rlex2",
     "~ (case ?x of (x, y) => %(u, v). ~ x @ y <\<^sub>v u @ v) ?y ==>
      ?x <\<^sub>r\<^sub>l\<^sub>e\<^sub>x\<^sub>2 ?y",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 4, t_empty),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Simple_Algorithm.set_gen",
     "set (gen ?B ?n) = {xs. length xs = ?n & (ALL i<?n. xs ! i <= ?B)}",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Simple_Algorithm.gen2_nth0",
     "gen2 ?A ?B ?m ?n ! 0 = (zeroes ?m, zeroes ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))),
         template_hole 1),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_hole 1)))),
    ("Simple_Algorithm.zeroes_ni_tl_gen2",
     "(zeroes ?m, zeroes ?n) ~: set (tl (gen2 ?A ?B ?m ?n))",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_hole 6)),
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_hole 6))),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 2))))))
             )
         )),
    ("Simple_Algorithm.concat_map_nth0",
     "[| ?xs ~= []; ?f (?xs ! 0) ~= [] |]
      ==> concat (map ?f ?xs) ! 0 = ?f (?xs ! 0) ! 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (
            template_equation
             (template_app
               (template_var 0,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_hole 5),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_var 0,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_hole 5)))),
    ("Simple_Algorithm.in_tl_gen2",
     "?x : set (tl (gen2 ?A ?B ?m ?n)) ==> ?x : set (gen2 ?A ?B ?m ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, t_empty),
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 0))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 4),
             template_app
              (template_hole 6,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))))
           ))),
    ("Simple_Algorithm.set_generate",
     "set (generate ?A ?B ?m ?n) =
      {(x, y).
       (x, y) ~= (zeroes ?m, zeroes ?n) & (x, y) : set (gen2 ?A ?B ?m ?n)}",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 13, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 12, template_app (template_hole 11, t_empty)))),
    ("Simple_Algorithm.set_gen2",
     "set (gen2 ?A ?B ?m ?n) =
      {(x, y).
       length x = ?m &
       length y = ?n & (ALL i<?m. x ! i <= ?A) & (ALL j<?n. y ! j <= ?B)}",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, t_empty),
             template_app
              (template_app (template_hole 10, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("Simple_Algorithm.set_solutions_iff",
     "set (solutions ?a ?b) =
      {(x, y).
       (x, y) : set (check_generate ?a ?b) &
       ~ (EX (u, v):set (check_generate ?a ?b). u @ v <\<^sub>v x @ y)}",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app (template_hole 14, template_var 1),
           template_var 0)),
       template_app
        (template_hole 13, template_app (template_hole 12, t_empty)))),
    ("Simple_Algorithm.gen2_unique",
     "[| ?i < ?j; ?j < length (gen2 ?A ?B ?m ?n) |]
      ==> gen2 ?A ?B ?m ?n ! ?i ~= gen2 ?A ?B ?m ?n ! ?j",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_inequation
         (less_than, template_var 4,
          template_app
           (template_hole 8,
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, t_empty),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, t_empty),
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0)))),
               template_var 5),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, t_empty),
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0)))),
               template_var 4))
           ))),
    ("Simple_Algorithm.set_minimize_check_generate",
     "set (minimize (check_generate ?a ?b)) =
      {(x, y).
       (x, y) : set (check_generate ?a ?b) &
       ~ (EX (u, v):set (check_generate ?a ?b). u @ v <\<^sub>v x @ y)}",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_app (template_hole 13, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_hole 11,
                       template_app (template_hole 10, template_var 0))),
                   template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_var 1))),
                 template_app (template_hole 9, template_var 1)),
               template_app (template_hole 9, template_var 0))))),
       template_app
        (template_hole 8, template_app (template_hole 7, t_empty)))),
    ("Simple_Algorithm.set_check_generate",
     "set (check_generate ?a ?b) =
      {(x, y).
       (x, y) ~= (zeroes (length ?a), zeroes (length ?b)) &
       length x = length ?a &
       length y = length ?b &
       ?a \<bullet> x = ?b \<bullet> y &
       (ALL i<length ?a. x ! i <= Max (set ?b)) &
       (ALL j<length ?b. y ! j <= Max (set ?a))}",
     template_equation
      (template_app
        (template_hole 20,
         template_app
          (template_app
            (template_app (template_hole 19, template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 18,
                   template_app
                    (template_hole 17,
                     template_app (template_hole 16, template_var 0))),
                 template_app
                  (template_hole 17,
                   template_app (template_hole 16, template_var 1))),
               template_app (template_hole 15, template_var 1)),
             template_app (template_hole 15, template_var 0)))),
       template_app
        (template_hole 14, template_app (template_hole 13, t_empty))))]
