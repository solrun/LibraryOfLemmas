   [("List_Vector.rlex_irrefl", "~ ?x <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?x",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)
             )
         )),
    ("List_Vector.maxne0_Nil", "maxne0 [] ?as = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("List_Vector.maxne0_Nil", "maxne0 ?xs [] = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List_Vector.le0", "zeroes (length ?xs) \<le>\<^sub>v ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)),
           template_var 0)
         )),
    ("List_Vector.maxne0_le_Max", "maxne0 ?x ?a <= Max (set ?a)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("List_Vector.dotprod_0_right", "?xs \<bullet> zeroes (length ?xs) = 0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)),
       template_hole 0)),
    ("List_Vector.less_imp_rlex",
     "?xs <\<^sub>v ?ys ==> ?xs <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("List_Vector.dotprod_1_right",
     "?xs \<bullet> replicate (length ?xs) 1 = sum_list ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("List_Vector.rev_less",
     "(rev ?xs <\<^sub>v rev ?ys) = (?xs <\<^sub>v ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("List_Vector.rev_le",
     "(rev ?xs \<le>\<^sub>v rev ?ys) = (?xs \<le>\<^sub>v ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("List_Vector.rlex_not_sym",
     "?xs <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?ys ==>
      ~ ?ys <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)
               )
           ))),
    ("List_Vector.not_nonzero_iff",
     "(~ nonzero ?x) = (?x = zeroes (length ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("List_Vector.nonzero_append",
     "nonzero (?xs @ ?ys) = (nonzero ?xs | nonzero ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("List_Vector.zero_less",
     "nonzero ?x ==> zeroes (length ?x) <\<^sub>v ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)),
             template_var 0)
           ))),
    ("List_Vector.less_vec_sum_list_less",
     "?v <\<^sub>v ?w ==> sum_list ?v < sum_list ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List_Vector.less_length", "?x <\<^sub>v ?y ==> length ?x = length ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List_Vector.le_length",
     "?xs \<le>\<^sub>v ?ys ==> length ?xs = length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List_Vector.le_sum_list_mono",
     "?xs \<le>\<^sub>v ?ys ==> sum_list ?xs <= sum_list ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List_Vector.nonzero_iff",
     "nonzero ?xs = (EX x:set ?xs. x ~= (0::?'a))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         t_empty))),
    ("List_Vector.less_imp_lex",
     "?xs <\<^sub>v ?ys ==> ?xs <\<^sub>l\<^sub>e\<^sub>x ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("List_Vector.maxne0_mono",
     "?y \<le>\<^sub>v ?x ==> maxne0 ?y ?a <= maxne0 ?x ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Vector.lex_lengthD",
     "(?x, ?y) : lex ?P ==> length ?x = length ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("List_Vector.rlex_trans",
     "[| ?x <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?y;
         ?y <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?z |]
      ==> ?x <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("List_Vector.not_le_code",
     "(~ ?xs \<le>\<^sub>v ?ys) = exists2 True (%x y. y < x) ?xs ?ys",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1), t_empty),
           template_var 1),
         template_var 0))),
    ("List_Vector.dotprod_commute",
     "length ?xs = length ?ys ==> ?xs \<bullet> ?ys = ?ys \<bullet> ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List_Vector.dotprod_code",
     "?xs \<bullet> ?ys = sum_list (map2 (*) ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("List_Vector.dotprod_Cons",
     "(?x # ?xs) \<bullet> (?y # ?ys) = ?x * ?y + ?xs \<bullet> ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("List_Vector.le_Cons",
     "(?x # ?xs \<le>\<^sub>v ?y # ?ys) =
      (?x <= ?y & ?xs \<le>\<^sub>v ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("List_Vector.map_upt_Suc",
     "map ?f [Suc ?m..<Suc ?n] = map (?f o Suc) [?m..<?n]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("List_Vector.vdiff_Cons",
     "?x # ?xs -\<^sub>v (?y # ?ys) = (?x - ?y) # ?xs -\<^sub>v ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List_Vector.sum_list_vdiff_distr",
     "?v \<le>\<^sub>v ?u ==>
      sum_list (?u -\<^sub>v ?v) = sum_list ?u - sum_list ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("List_Vector.lex_not_sym",
     "?xs <\<^sub>l\<^sub>e\<^sub>x ?ys ==> (?ys, ?xs) ~: lex less_than",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 1)),
                 template_app (template_hole 2, template_hole 1))
               )
           ))),
    ("List_Vector.le_replicateI",
     "ALL x:set ?xs. x <= ?b ==>
      ?xs \<le>\<^sub>v replicate (length ?xs) ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("List_Vector.le_sum_list_less",
     "[| ?xs \<le>\<^sub>v ?ys; sum_list ?xs < sum_list ?ys |]
      ==> ?xs <\<^sub>v ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("List_Vector.upt_Cons_conv",
     "?j < ?n ==> [?j..<?n] = ?j # [?j + 1..<?n]",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0))))),
    ("List_Vector.replicate_dotprod",
     "length ?y = ?n ==> replicate ?n ?x \<bullet> ?y = ?x * sum_list ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("List_Vector.max_times_sum_list_gt_dotprod",
     "length ?b = length ?ys ==>
      ?b \<bullet> ?ys <= Max (set ?b) * sum_list ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 0, template_var 0))))),
    ("List_Vector.maxne0_times_sum_list_gt_dotprod",
     "length ?b = length ?ys ==>
      ?b \<bullet> ?ys <= maxne0 ?ys ?b * sum_list ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("List_Vector.less_append",
     "[| ?xs <\<^sub>v ?vs; ?ys \<le>\<^sub>v ?ws |]
      ==> ?xs @ ?ys <\<^sub>v ?vs @ ?ws",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("List_Vector.vdiff_le",
     "[| ?v \<le>\<^sub>v ?w; length ?v = length ?x |]
      ==> ?v -\<^sub>v ?x \<le>\<^sub>v ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("List_Vector.eq_0_iff",
     "(?xs = zeroes ?n) = (length ?xs = ?n & (ALL x:set ?xs. x = 0))",
     template_bimplication
      (template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty))
           ))),
    ("List_Vector.le_take",
     "[| ?x \<le>\<^sub>v ?y; ?i <= length ?x |]
      ==> take ?i ?x \<le>\<^sub>v take ?i ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List_Vector.rlex_Cons",
     "(?x # ?xs <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?y # ?ys) =
      (?xs <\<^sub>r\<^sub>l\<^sub>e\<^sub>x ?ys | ?ys = ?xs & ?x < ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("List_Vector.dotprod_le_right",
     "[| ?v \<le>\<^sub>v ?w; length ?b = length ?w |]
      ==> ?b \<bullet> ?v <= ?b \<bullet> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List_Vector.dotprod_le_left",
     "[| ?v \<le>\<^sub>v ?w; length ?b = length ?w |]
      ==> ?v \<bullet> ?b <= ?w \<bullet> ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Vector.neq_0_iff'",
     "(?xs ~= zeroes ?n) = (length ?xs ~= ?n | (EX x:set ?xs. 0 < x))",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               t_empty))
           ))),
    ("List_Vector.all_leq_Max",
     "[| ?x \<le>\<^sub>v ?y; ?x ~= [] |]
      ==> ALL xi:set ?x. xi <= Max (set ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty)
           ))),
    ("List_Vector.dotprod_append",
     "length ?a = length ?b ==>
      (?a @ ?x) \<bullet> (?b @ ?y) = ?a \<bullet> ?b + ?x \<bullet> ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("List_Vector.le_append",
     "length ?xs = length ?vs ==>
      (?xs @ ?ys \<le>\<^sub>v ?vs @ ?ws) =
      (?xs \<le>\<^sub>v ?vs & ?ys \<le>\<^sub>v ?ws)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("List_Vector.le_append_swap_iff",
     "length ?y = length ?v ==>
      (?y @ ?x \<le>\<^sub>v ?v @ ?w) = (?x @ ?y \<le>\<^sub>v ?w @ ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("List_Vector.lex_trans",
     "[| ?x <\<^sub>l\<^sub>e\<^sub>x ?y; ?y <\<^sub>l\<^sub>e\<^sub>x ?z |]
      ==> ?x <\<^sub>l\<^sub>e\<^sub>x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_hole 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("List_Vector.le_append_swap",
     "[| length ?y = length ?v; ?x @ ?y \<le>\<^sub>v ?w @ ?v |]
      ==> ?y @ ?x \<le>\<^sub>v ?v @ ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("List_Vector.less_append_swap",
     "[| ?x @ ?y <\<^sub>v ?u @ ?v; length ?x = length ?u |]
      ==> ?y @ ?x <\<^sub>v ?v @ ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 0, template_var 3),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))
           ))),
    ("List_Vector.less_appendD",
     "[| ?xs @ ?ys <\<^sub>v ?vs @ ?ws; length ?xs = length ?vs |]
      ==> ?xs <\<^sub>v ?vs | ?ys <\<^sub>v ?ws",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("List_Vector.dotprod_le_drop",
     "[| length ?a = length ?b; ?k <= length ?a |]
      ==> drop ?k ?a \<bullet> drop ?k ?b <= ?a \<bullet> ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("List_Vector.dotprod_le_take",
     "[| length ?a = length ?b; ?k <= length ?a |]
      ==> take ?k ?a \<bullet> take ?k ?b <= ?a \<bullet> ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("List_Vector.dotprod_pointwise_le",
     "[| length ?as = length ?xs; ?i < length ?as |]
      ==> ?as ! ?i * ?xs ! ?i <= ?as \<bullet> ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("List_Vector.le_not_less_replicate",
     "[| ALL x:set ?xs. x <= ?b;
         ~ ?xs <\<^sub>v replicate (length ?xs) ?b |]
      ==> ?xs = replicate (length ?xs) ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 1)),
                    template_var 0))
                )
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("List_Vector.le_list_update",
     "[| ?xs \<le>\<^sub>v ?ys; ?i < length ?ys; ?z <= ?ys ! ?i |]
      ==> ?xs[?i := ?z] \<le>\<^sub>v ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("List_Vector.dotprod_unit",
     "[| length ?a = ?n; ?k < ?n |]
      ==> ?a \<bullet> (zeroes ?n)[?k := ?zk] = ?a ! ?k * ?zk",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3), template_var 2),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("List_Vector.vdiff_dotprod_distr",
     "[| length ?b = length ?w; ?v \<le>\<^sub>v ?w |]
      ==> (?w -\<^sub>v ?v) \<bullet> ?b =
          ?w \<bullet> ?b - ?v \<bullet> ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("List_Vector.sum_list_less_diff_Ex",
     "[| ?u \<le>\<^sub>v ?y; sum_list ?u < sum_list ?y |]
      ==> EX i<length ?y. ?u ! i < ?y ! i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("List_Vector.less_eqI",
     "[| length ?xs = length ?ys; ALL i<length ?xs. ?xs ! i <= ?ys ! i |]
      ==> ?xs \<le>\<^sub>v ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("List_Vector.dotprod_less_left",
     "[| length ?b = length ?w; 0 ~: set ?b; ?v <\<^sub>v ?w |]
      ==> ?v \<bullet> ?b < ?w \<bullet> ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("List_Vector.maxne0_Cons",
     "maxne0 (?x # ?xs) (?a # ?as) =
      (if length ?xs = length ?as
       then if ?x = 0 then maxne0 ?xs ?as else max ?a (maxne0 ?xs ?as)
       else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 2, template_var 2)),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_hole 1)),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)))),
             template_hole 1)
           ))),
    ("List_Vector.mods_with_nats",
     "[| ?w < ?v; ?v * ?b mod ?a = ?w * ?b mod ?a |]
      ==> (?v - ?w) * ?b mod ?a = 0",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_var 0),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1)),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 3)),
               template_var 1)),
           template_var 0),
         template_hole 0))),
    ("List_Vector.dotprod_eq_0_iff",
     "[| length ?x = length ?a; 0 ~: set ?a |]
      ==> (?x \<bullet> ?a = 0) = (ALL e:set ?x. e = 0)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           t_empty)))),
    ("List_Vector.less_Cons",
     "(?x # ?xs <\<^sub>v ?y # ?ys) =
      (length ?xs = length ?ys &
       (?x <= ?y & ?xs <\<^sub>v ?ys | ?x < ?y & ?xs \<le>\<^sub>v ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 2)),
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))))
           ))),
    ("List_Vector.dotprod_is_0",
     "length ?x = length ?y ==>
      (?x \<bullet> ?y = 0) = (ALL i<length ?y. ?x ! i = 0 | ?y ! i = 0)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_hole 5),
         template_app (template_hole 4, t_empty)))),
    ("List_Vector.dotprod_gt0_iff",
     "length ?x = length ?y ==>
      (0 < ?x \<bullet> ?y) = (EX i<length ?y. 0 < ?x ! i & 0 < ?y ! i)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, t_empty)))),
    ("List_Vector.dotprod_le",
     "[| ?x \<le>\<^sub>v ?u; ?y \<le>\<^sub>v ?v; length ?y = length ?x;
         length ?v = length ?u |]
      ==> ?x \<bullet> ?y <= ?u \<bullet> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 3)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Vector.dotprod_gt0D",
     "[| length ?x = length ?y; 0 < ?x \<bullet> ?y |]
      ==> EX i<length ?y. 0 < ?x ! i & 0 < ?y ! i",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("List_Vector.dotprod_gt0",
     "[| length ?x = length ?y; EX i<length ?y. 0 < ?x ! i & 0 < ?y ! i |]
      ==> 0 < ?x \<bullet> ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Vector.rep_upd_unit",
     "?x = (zeroes ?n)[?i := ?a] ==>
      ALL j<length ?x. (j ~= ?i --> ?x ! j = 0) & (j = ?i --> ?x ! j = ?a)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_hole 8)),
              template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("List_Vector.unit_less",
     "[| ?i < ?n; ?x <\<^sub>v (zeroes ?n)[?i := ?b] |]
      ==> ?x ! ?i < ?b & (ALL j<?n. j ~= ?i --> ?x ! j = 0)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      template_hole 6)),
                  template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 3)),
                 template_var 0)),
             template_app (template_hole 3, t_empty))
           ))),
    ("List_Vector.dotprod_pointwise_le_right",
     "[| length ?z = length ?u; length ?u = length ?v;
         ALL i<length ?v. ?u ! i <= ?v ! i |]
      ==> ?z \<bullet> ?u <= ?z \<bullet> ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Vector.lex_append_rightD",
     "[| ?xs @ ?us <\<^sub>l\<^sub>e\<^sub>x ?ys @ ?vs;
         length ?xs = length ?ys; (?xs, ?ys) ~: lex less_than |]
      ==> ?ys = ?xs & ?us <\<^sub>l\<^sub>e\<^sub>x ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_var 0))),
              template_app (template_hole 6, template_hole 5))
            ),
        template_equation
         (template_app (template_hole 3, template_var 3),
          template_app (template_hole 3, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 1)),
                  template_app (template_hole 6, template_hole 5))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 0)),
               template_app (template_hole 6, template_hole 5)))
           ))),
    ("List_Vector.mods_with_vec_2",
     "[| ?v <\<^sub>v ?w; 0 ~: set ?b; length ?b = length ?w;
         ?b \<bullet> ?v mod ?a = ?b \<bullet> ?w mod ?a |]
      ==> ?b \<bullet> (?w -\<^sub>v ?v) mod ?a = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app (template_hole 5, template_var 1))
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3)),
            template_var 0),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2)),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3))),
           template_var 0),
         template_hole 6))),
    ("List_Vector.mods_with_vec",
     "[| ?v <\<^sub>v ?w; 0 ~: set ?b; length ?b = length ?w;
         ?v \<bullet> ?b mod ?a = ?w \<bullet> ?b mod ?a |]
      ==> (?w -\<^sub>v ?v) \<bullet> ?b mod ?a = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app (template_hole 5, template_var 1))
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1)),
            template_var 0),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1)),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_var 1)),
           template_var 0),
         template_hole 6))),
    ("List_Vector.dotprod_eq_nonzero_iff",
     "[| ?a \<bullet> ?x = ?b \<bullet> ?y; length ?x = length ?a;
         length ?y = length ?b; 0 ~: set ?a; 0 ~: set ?b |]
      ==> nonzero ?x = nonzero ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 3)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 6, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("List_Vector.less_append_cases",
     "[| ?xs @ ?ys <\<^sub>v ?vs @ ?ws; length ?xs = length ?vs;
         [| ?xs <\<^sub>v ?vs; ?ys \<le>\<^sub>v ?ws |] ==> ?thesis;
         [| ?xs \<le>\<^sub>v ?vs; ?ys <\<^sub>v ?ws |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 1, template_var 4),
          template_app (template_hole 1, template_var 2)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("List_Vector.lex_take_index",
     "[| (?xs, ?ys) : lex ?r;
         !!i. [| length ?ys = length ?xs; i < length ?xs;
                 take i ?xs = take i ?ys; (?xs ! i, ?ys ! i) : ?r |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0)))]
