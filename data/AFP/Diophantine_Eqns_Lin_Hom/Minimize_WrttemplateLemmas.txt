   [("Minimize_Wrt.sorted_wrt_minimize_wrt",
     "sorted_wrt ?P (minimize_wrt ?P ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Minimize_Wrt.minimize_wrt_subset",
     "set (minimize_wrt ?P ?xs) <= set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Minimize_Wrt.sorted_wrt_imp_sorted_wrt_minimize_wrt",
     "sorted_wrt ?Q ?xs ==> sorted_wrt ?Q (minimize_wrt ?P ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Minimize_Wrt.minimize_wrtD",
     "?c : set (minimize_wrt ?P ?xs) ==> ?c : set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Minimize_Wrt.in_minimize_wrtI",
     "[| ?x : set ?xs; ALL y:set ?xs. ?P y ?x |]
      ==> ?x : set (minimize_wrt ?P ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Minimize_Wrt.minimize_wrt_ni",
     "[| ?x : set ?xs; ?x ~: set (minimize_wrt ?Q ?xs) |]
      ==> EX y:set ?xs. ~ ?Q y ?x & ?x ~= y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 1)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 1)),
             t_empty)
           ))),
    ("Minimize_Wrt.minimize_wrt_append",
     "ALL x:set ?xs. ALL y:set (?xs @ ?ys). ?P y x ==>
      minimize_wrt ?P (?xs @ ?ys) =
      ?xs @ filter (%y. ALL x:set ?xs. ?P x y) (minimize_wrt ?P ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))))),
    ("Minimize_Wrt.minimize_wrt_eq",
     "[| distinct ?xs;
         !!x y.
            [| x : set ?xs; y : set ?xs |] ==> ?P x y = (?Q x y | x = y) |]
      ==> minimize_wrt ?P ?xs = minimize_wrt ?Q ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Minimize_Wrt.in_minimize_wrt_False",
     "[| !!x y. ?Q x y ==> ~ ?Q y x; sorted_wrt ?Q ?xs;
         ?x : set (minimize_wrt ?P ?xs); ~ ?P ?y ?x; ?Q ?y ?x; ?y : set ?xs;
         ?y ~= ?x |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 3)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_var 1, template_var 0),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 0), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 3))
            ),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_predicate (template_hole 0))),
    ("Minimize_Wrt.set_minimize_wrt",
     "[| !!x y. ?Q x y ==> ~ ?Q y x; sorted_wrt ?Q ?xs;
         !!x y. ~ ?P x y ==> ?Q x y; !!x. ?P x x |]
      ==> set (minimize_wrt ?P ?xs) = {x: set ?xs. ALL y:set ?xs. ?P y x}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app (template_hole 3, t_empty)))),
    ("Minimize_Wrt.in_minimize_wrt_iff",
     "[| !!x y. ?Q x y ==> ~ ?Q y x; sorted_wrt ?Q ?xs;
         !!x y. ~ ?P x y ==> ?Q x y; !!x. ?P x x |]
      ==> (?x : set (minimize_wrt ?P ?xs)) =
          (?x : set ?xs & (ALL y:set ?xs. ?P y ?x))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 2))),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty))))),
    ("Minimize_Wrt.in_minimize_wrtD",
     "[| !!x y. ?Q x y ==> ~ ?Q y x; sorted_wrt ?Q ?xs;
         ?x : set (minimize_wrt ?P ?xs); !!x y. ~ ?P x y ==> ?Q x y;
         !!x. ?P x x |]
      ==> ?x : set ?xs & (ALL y:set ?xs. ?P y ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 2)))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 2)),
               t_empty))
           )))]
