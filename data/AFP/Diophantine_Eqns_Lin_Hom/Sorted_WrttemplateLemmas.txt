   [("Sorted_Wrt.sorted_wrt_filter",
     "sorted_wrt ?P ?xs ==> sorted_wrt ?P (filter ?Q ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Sorted_Wrt.sorted_wrt_tl",
     "[| ?xs ~= []; sorted_wrt ?P ?xs |] ==> sorted_wrt ?P (tl ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Sorted_Wrt.sorted_wrt_map_distr",
     "sorted_wrt ?P (map ?f ?xs) ==>
      sorted_wrt (%x y. ?P (?f x) (?f y)) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_var 0)
           ))),
    ("Sorted_Wrt.sorted_wrt_map_mono",
     "[| sorted_wrt ?Q ?xs; !!x y. ?Q x y ==> ?P (?f x) (?f y) |]
      ==> sorted_wrt ?P (map ?f ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Sorted_Wrt.sorted_wrt_concat_map_map",
     "[| sorted_wrt ?Q ?xs; sorted_wrt ?Q ?ys;
         !!a x y. ?Q x y ==> ?P (?f x a) (?f y a);
         !!x y u v.
            [| x : set ?xs; y : set ?xs; ?Q u v |]
            ==> ?P (?f x u) (?f y v) |]
      ==> sorted_wrt ?P (concat (map (%y. map (%x. ?f x y) ?xs) ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 2)))
           ))),
    ("Sorted_Wrt.sorted_wrt_concat_map",
     "[| sorted_wrt ?P (map ?h ?xs);
         !!x. x : set ?xs ==> sorted_wrt ?P (map ?h (?f x));
         !!x y u v.
            [| ?P (?h x) (?h y); x : set ?xs; y : set ?xs; u : set (?f x);
               v : set (?f y) |]
            ==> ?P (?h u) (?h v) |]
      ==> sorted_wrt ?P (concat (map (map ?h o ?f) ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 6, template_var 2)),
                     template_var 0)),
                 template_var 1)))
           )))]
