   [("Linear_Diophantine_Equations.length_us",
     "length (\<^bold>u ?y ?i) = length ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Linear_Diophantine_Equations.lcm_div_le'", "lcm ?a ?b div ?a <= ?b",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("Linear_Diophantine_Equations.lcm_div_le", "lcm ?a ?b div ?b <= ?a",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 1)),
    ("Linear_Diophantine_Equations.length_inc",
     "length (inc ?y ?i ?u) = length ?u",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Linear_Diophantine_Equations.sum_list_us_le",
     "sum_list (\<^bold>u ?y ?i) <= ?i + 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Linear_Diophantine_Equations.huets_us_simps",
     "\<^bold>u ?y 0 = inc ?y 0 (zeroes (length ?y))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 3),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_hole 3)))),
    ("Linear_Diophantine_Equations.huets_us_simps",
     "\<^bold>u ?y (Suc ?i) = inc ?y 0 (\<^bold>u ?y ?i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Linear_Diophantine_Equations.sum_list_us_bounded",
     "?i < ?k ==> sum_list (\<^bold>u ?y ?i) <= ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("Linear_Diophantine_Equations.us_le",
     "0 < length ?y ==> \<^bold>u ?y ?i \<le>\<^sub>v ?y",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("Linear_Diophantine_Equations.us_le_mono",
     "?i < ?j ==> \<^bold>u ?y ?i \<le>\<^sub>v \<^bold>u ?y ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Linear_Diophantine_Equations.sum_list_inc_le",
     "?u \<le>\<^sub>v ?y ==> sum_list (inc ?y ?i ?u) <= sum_list ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_app (template_hole 1, template_var 1)))),
    ("Linear_Diophantine_Equations.sum_list_us_gt0",
     "sum_list ?y ~= 0 ==> 0 < sum_list (\<^bold>u ?y ?i)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Linear_Diophantine_Equations.inc_ge",
     "length ?u = length ?y ==> ?u \<le>\<^sub>v inc ?y ?i ?u",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Linear_Diophantine_Equations.sum_list_us_eq",
     "?i < sum_list ?y ==> sum_list (\<^bold>u ?y ?i) = ?i + 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Linear_Diophantine_Equations.Solutions_sym",
     "((?x, ?y) : Solutions ?a ?b) = ((?y, ?x) : Solutions ?b ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Linear_Diophantine_Equations.Minimal_Solutions_gt0",
     "(?x, ?y) : Minimal_Solutions ?a ?b ==>
      zeroes (length ?x) <\<^sub>v ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 3)
           ))),
    ("Linear_Diophantine_Equations.Minimal_Solutions_imp_Solutions",
     "(?x, ?y) : Minimal_Solutions ?a ?b ==> (?x, ?y) : Solutions ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linear_Diophantine_Equations.sum_list_inc_le'",
     "length ?u = length ?y ==> sum_list (inc ?y ?i ?u) <= sum_list ?u + 1",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_hole 0)))),
    ("Linear_Diophantine_Equations.lcm_div_gt_0",
     "[| 0 < ?a; 0 < ?b |] ==> 0 < lcm ?a ?b div ?a",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)))),
    ("Linear_Diophantine_Equations.sum_list_list_update_Suc",
     "?i < length ?u ==>
      sum_list (?u[?i := Suc (?u ! ?i)]) = Suc (sum_list ?u)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))),
         template_app
          (template_hole 1,
           template_app (template_hole 3, template_var 0))))),
    ("Linear_Diophantine_Equations.us_mono",
     "[| ?i < ?j; ?j < sum_list ?y |]
      ==> \<^bold>u ?y ?i <\<^sub>v \<^bold>u ?y ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Linear_Diophantine_Equations.lessThan_conv",
     "[| card ?A = ?n; ALL x:?A. x < ?n |] ==> ?A = {..<?n}",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Linear_Diophantine_Equations.Minimal_Solutions_length",
     "(?x, ?y) : Minimal_Solutions ?a ?b ==>
      length ?x = length ?a & length ?y = length ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Linear_Diophantine_Equations.sum_list_inc_gt0",
     "[| 0 < sum_list ?u; length ?y = length ?u |]
      ==> 0 < sum_list (inc ?y ?i ?u)",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 2))],
       template_inequation
        (less_than, template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2))))),
    ("Linear_Diophantine_Equations.inc_le",
     "[| length ?u = length ?y; ?i < length ?y; ?u \<le>\<^sub>v ?y |]
      ==> inc ?y ?i ?u \<le>\<^sub>v ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Linear_Diophantine_Equations.Minimal_Solutions_sym",
     "[| 0 ~: set ?a; 0 ~: set ?b |]
      ==> (?xs, ?ys) : Minimal_Solutions ?a ?b -->
          (?ys, ?xs) : Minimal_Solutions ?b ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)))
           ))),
    ("Linear_Diophantine_Equations.sum_list_inc_gt0'",
     "[| length ?u = length ?y; ?i < length ?y; 0 < ?y ! ?i; ?j <= ?i |]
      ==> 0 < sum_list (inc ?y ?j ?u)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_than, template_hole 4,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 3))))),
    ("Linear_Diophantine_Equations.Minimal_SolutionsI'",
     "[| (?x, ?y) : Solutions ?a ?b; nonzero ?x;
         ~ (EX (u, v):Minimal_Solutions ?a ?b. u @ v <\<^sub>v ?x @ ?y) |]
      ==> (?x, ?y) : Minimal_Solutions ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_app (template_hole 2, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Linear_Diophantine_Equations.minimize_nonzero_solution",
     "[| (?x, ?y) : Solutions ?a ?b; nonzero ?x;
         !!u v.
            [| u @ v \<le>\<^sub>v ?x @ ?y;
               (u, v) : Minimal_Solutions ?a ?b |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Linear_Diophantine_Equations.Minimal_SolutionsI",
     "[| (?x, ?y) : Solutions ?a ?b; nonzero ?x;
         ~ (EX (u, v):Solutions ?a ?b.
               nonzero u & u @ v <\<^sub>v ?x @ ?y) |]
      ==> (?x, ?y) : Minimal_Solutions ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_var 0)),
                  template_app (template_hole 4, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linear_Diophantine_Equations.sum_list_inc_eq_sum_list_Suc",
     "[| length ?u = length ?y; ?i < length ?y;
         EX j>=?i. j < length ?y & ?u ! j < ?y ! j |]
      ==> sum_list (inc ?y ?i ?u) = Suc (sum_list ?u)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 2))))),
    ("Linear_Diophantine_Equations.list_mod_cases",
     "[| length ?xs = ?n; 0 < ?n |]
      ==> (EX x:set ?xs. x mod ?n = 0) |
          (EX i<length ?xs.
              EX j<length ?xs. i ~= j & ?xs ! i mod ?n = ?xs ! j mod ?n)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 1), template_var 0),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 t_empty)),
             template_app (template_hole 3, t_empty))
           )))]
