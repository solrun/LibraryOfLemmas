Loading theory "Draft.Auxiliary" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.168s elapsed time, 0.688s cpu time, 0.043s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
### theory "Draft.Auxiliary"
### 0.171s elapsed time, 0.701s cpu time, 0.043s GC time
Loading theory "Draft.Type" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.316s elapsed time, 1.282s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.413s elapsed time, 1.640s cpu time, 0.163s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.520s elapsed time, 2.034s cpu time, 0.217s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices" via "Jinja.Err" via "Jinja.Semilat")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.Type"
### 0.783s elapsed time, 3.070s cpu time, 0.307s GC time
Loading theory "Draft.Decl" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.Decl"
### 0.125s elapsed time, 0.485s cpu time, 0.087s GC time
Loading theory "Draft.TypeRel" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
consts
  cycle :: "'a list => 'a stream"
Found termination order: "{}"
consts
  left :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  right :: "'a tree => 'a tree"
Found termination order: "{}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
### theory "HOL-Library.While_Combinator"
### 0.754s elapsed time, 2.819s cpu time, 0.740s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  supercls_lst :: "'m prog => char list list => bool"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "widen"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
  Proving monotonicity ...
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.234s elapsed time, 4.704s cpu time, 0.885s GC time
Loading theory "Jinja.Semilat" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices" via "Jinja.Err")
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "Fields"
locale Semilat
  fixes A :: "'a set"
    and r :: "'a => 'a => bool"
    and f :: "'a => 'a => 'a"
  assumes "Semilat A r f"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Jinja.Semilat"
### 0.379s elapsed time, 1.500s cpu time, 0.190s GC time
Loading theory "Jinja.Err" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
Found termination order: "size <*mlex*> {}"
### theory "Draft.TypeRel"
### 1.080s elapsed time, 4.101s cpu time, 0.905s GC time
Loading theory "Draft.Value" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions" via "Draft.Objects")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.967s elapsed time, 3.812s cpu time, 0.448s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### No equation for constructor "Err"
consts
  ok_val :: "'a err => 'a"
Found termination order: "size <*mlex*> {}"
consts
  strict :: "('a => 'b err) => 'a err => 'b err"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "Draft.Value"
### 0.483s elapsed time, 1.729s cpu time, 0.196s GC time
Loading theory "Draft.Objects" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  typeof_h :: "heap => val => ty option"
### theory "Jinja.Err"
### 0.761s elapsed time, 2.687s cpu time, 0.378s GC time
Loading theory "Jinja.Listn" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
Loading theory "Jinja.Opt" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
consts
  coalesce :: "'a err list => 'a list err"
### theory "Jinja.Opt"
### 0.145s elapsed time, 0.566s cpu time, 0.080s GC time
Loading theory "Jinja.Product" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
Found termination order: "size <*mlex*> {}"
### theory "Jinja.Product"
### 0.131s elapsed time, 0.508s cpu time, 0.084s GC time
### theory "HOL-Library.Tree"
### 2.844s elapsed time, 10.640s cpu time, 1.737s GC time
Loading theory "Draft.Templates" (required by "Draft.ClassAddMoreTemplates" via "Draft.ExtrEqs")
### theory "Jinja.Listn"
### 0.365s elapsed time, 1.344s cpu time, 0.164s GC time
Loading theory "Jinja.Semilattices" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.362s elapsed time, 1.215s cpu time, 0.999s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ClassAddMoreTemplates")
Proofs for inductive predicate(s) "iprog"
  Proving monotonicity ...
### theory "Draft.Objects"
### 1.016s elapsed time, 3.447s cpu time, 1.285s GC time
Loading theory "Draft.Exceptions" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses")
Loading theory "Draft.JVMState" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVMExceptions" via "Draft.JVMInstructions")
### theory "Jinja.Semilattices"
### 0.661s elapsed time, 2.267s cpu time, 1.129s GC time
### theory "Draft.Exceptions"
### 0.223s elapsed time, 0.830s cpu time, 0.085s GC time
Loading theory "Draft.Conform" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform")
Loading theory "Draft.SystemClasses" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
### Ambiguous input (line 34 of "$AFP/JinjaDCI/Common/Conform.thy") produces 2 parse trees:
### ("\<^const>Pure.eq" ("\<^fixed>hconf" ("_position" P) ("_position" h))
###   ("\<^const>HOL.conj"
###     ("_tuple"
###       ("\<^const>HOL.All_binder" ("_idts" ("_position" a) ("_position" obj))
###         ("\<^const>HOL.implies"
###           ("\<^const>HOL.eq" ("_applC" ("_position" h) ("_position" a))
###             ("_applC" ("_position" Some) ("_position" obj)))
###           ("_position" P)))
###       ("_tuple_arg" ("\<^fixed>hconf" ("_position" h) ("_position" obj))))
###     ("_applC" ("_position" preallocated) ("_position" h))))
### ("\<^const>Pure.eq" ("\<^fixed>hconf" ("_position" P) ("_position" h))
###   ("\<^const>HOL.conj"
###     ("\<^const>HOL.All_binder" ("_idts" ("_position" a) ("_position" obj))
###       ("\<^const>HOL.implies"
###         ("\<^const>HOL.eq" ("_applC" ("_position" h) ("_position" a))
###           ("_applC" ("_position" Some) ("_position" obj)))
###         ("\<^const>Conform.oconf" ("_position" P) ("_position" h)
###           ("_position" obj))))
###     ("_applC" ("_position" preallocated) ("_position" h))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 39 of "$AFP/JinjaDCI/Common/Conform.thy") produces 2 parse trees:
### ("\<^const>Pure.eq"
###   ("\<^fixed>shconf" ("_position" P) ("_position" h) ("_position" sh))
###   ("_tuple"
###     ("\<^const>HOL.All_binder"
###       ("_idts" ("_position" C) ("_idts" ("_position" sfs) ("_position" i)))
###       ("\<^const>HOL.implies"
###         ("\<^const>HOL.eq" ("_applC" ("_position" sh) ("_position" C))
###           ("_applC" ("_position" Some)
###             ("_tuple" ("_position" sfs) ("_tuple_arg" ("_position" i)))))
###         ("_position" P)))
###     ("_tuple_arg"
###       ("\<^fixed>shconf" ("_position" h) ("_position" C)
###         ("_position" sfs)))))
### ("\<^const>Pure.eq"
###   ("\<^fixed>shconf" ("_position" P) ("_position" h) ("_position" sh))
###   ("\<^const>HOL.All_binder"
###     ("_idts" ("_position" C) ("_idts" ("_position" sfs) ("_position" i)))
###     ("\<^const>HOL.implies"
###       ("\<^const>HOL.eq" ("_applC" ("_position" sh) ("_position" C))
###         ("_applC" ("_position" Some)
###           ("_tuple" ("_position" sfs) ("_tuple_arg" ("_position" i)))))
###       ("\<^const>Conform.soconf" ("_position" P) ("_position" h)
###         ("_position" C) ("_position" sfs)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.SystemClasses"
### 0.114s elapsed time, 0.450s cpu time, 0.000s GC time
Loading theory "Draft.WellForm" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType")
### theory "Draft.Conform"
### 0.266s elapsed time, 1.060s cpu time, 0.103s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.743s elapsed time, 2.674s cpu time, 0.318s GC time
### theory "Draft.WellForm"
### 0.386s elapsed time, 1.191s cpu time, 0.188s GC time
Loading theory "Draft.SemiType" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### No equation for constructor "Void"
### No equation for constructor "Boolean"
### No equation for constructor "Integer"
### No equation for constructor "NT"
consts
  the_Class :: "ty => char list"
Found termination order: "{}"
### theory "Draft.SemiType"
### 0.292s elapsed time, 0.633s cpu time, 0.110s GC time
Loading theory "Draft.JVM_SemiType" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.JVMState"
### 1.110s elapsed time, 3.317s cpu time, 0.384s GC time
Loading theory "Draft.JVMInstructions" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVMExceptions")
### theory "Draft.JVM_SemiType"
### 0.601s elapsed time, 1.767s cpu time, 1.305s GC time
### theory "Draft.JVMInstructions"
### 2.037s elapsed time, 3.323s cpu time, 1.570s GC time
Loading theory "Draft.JVMExceptions" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec" via "Draft.Effect")
consts
  match_ex_table ::
    "'m prog => char list => nat => ex_table => (nat * nat) option"
Found termination order:
  "(%p. size_list (%p. size (snd (snd (snd (snd (snd p))))))
         (fst (snd (snd (snd p))))) <*mlex*>
   {}"
### theory "Draft.JVMExceptions"
### 0.804s elapsed time, 0.948s cpu time, 0.181s GC time
Loading theory "Draft.JVMExecInstr" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.JVMExec")
Loading theory "Draft.Effect" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform" via "Draft.BVSpec")
Found termination order: "{}"
locale prog
  fixes P :: "'a prog"
locale jvm_method
  fixes P :: "'a prog"
    and mxs :: "nat"
    and mxl\<^sub>0 :: "nat"
    and Ts :: "ty list"
    and T\<^sub>r :: "ty"
    and "is" :: "bytecode"
    and xt :: "ex_table"
    and mxl :: "nat"
  defines "mxl == 1 + length Ts + mxl\<^sub>0"
consts
  succs :: "instr => ty list * ty err list => nat => nat list"
### Missing patterns in function definition:
### the_class Void = undefined
### the_class Boolean = undefined
### the_class Integer = undefined
### (1 more)
Found termination order: "{}"
### Missing patterns in function definition:
### !!vb v ve. eff\<^sub>i (Store vb, v, [], ve) = undefined
### !!vb vc v vf. eff\<^sub>i (Getfield vb vc, v, [], vf) = undefined
### !!vb vc v vf. eff\<^sub>i (Putfield vb vc, v, [], vf) = undefined
### (11 more)
consts
  exec_instr ::
    "instr
     => jvm_prog
        => heap
           => val list
              => val list
                 => char list
                    => char list
                       => nat
                          => init_call_status
                             => frame list => sheap => jvm_state"
### theory "Draft.JVMExecInstr"
### 1.064s elapsed time, 2.295s cpu time, 0.302s GC time
Loading theory "Draft.JVMExec" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "exec_1p"
  Proving monotonicity ...
### theory "Draft.JVMExec"
### 2.255s elapsed time, 5.623s cpu time, 0.748s GC time
Found termination order: "{}"
locale eff
  fixes P :: "'a prog"
    and mxs :: "nat"
    and mxl\<^sub>0 :: "nat"
    and Ts :: "ty list"
    and T\<^sub>r :: "ty"
    and "is" :: "bytecode"
    and xt :: "ex_table"
    and mxl :: "nat"
    and
    eff\<^sub>i :: "instr => ty list * ty err list => ty list * ty err list"
    and app\<^sub>i :: "instr => nat => ty list * ty err list => bool"
    and
    eff ::
      "instr
       => nat
          => (ty list * ty err list) option
             => (nat * (ty list * ty err list) option) list"
    and app :: "instr => nat => (ty list * ty err list) option => bool"
    and
    norm_eff ::
      "instr
       => nat
          => ty list * ty err list
             => (nat * (ty list * ty err list) option) list"
    and xcpt_app :: "instr => nat => ty list * ty err list => bool"
    and
    xcpt_eff ::
      "instr
       => nat
          => ty list * ty err list
             => (nat * (ty list * ty err list) option) list"
    and mpc :: "nat"
  defines "mxl == 1 + length Ts + mxl\<^sub>0"
    and "mpc == length is"
    and "!!i \<tau>. eff\<^sub>i i \<tau> == eff\<^sub>i (i, P, \<tau>)"
    and
    "!!i pc \<tau>.
        app\<^sub>i i pc \<tau> ==
        app\<^sub>i (i, P, pc, mxs, T\<^sub>r, \<tau>)"
    and "!!i pc \<tau>. xcpt_eff i pc \<tau> == xcpt_eff i P pc \<tau> xt"
    and "!!i pc \<tau>. norm_eff i pc \<tau> == norm_eff i P pc \<tau>"
    and "!!i pc. eff i pc == eff i P pc xt"
    and
    "!!i pc \<tau>. xcpt_app i pc \<tau> == xcpt_app i P pc mxs xt \<tau>"
    and "!!i pc. app i pc == app i P mxs T\<^sub>r pc mpc xt"
### theory "Draft.Effect"
### 8.514s elapsed time, 17.206s cpu time, 1.821s GC time
Loading theory "Draft.BVSpec" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd" via "Draft.BVConform")
### theory "Draft.BVSpec"
### 0.102s elapsed time, 0.143s cpu time, 0.000s GC time
Loading theory "Draft.BVConform" (required by "Draft.ClassAddMoreTemplates" via "Draft.ClassAdd")
Found termination order: "{}"
Found termination order: "{}"
consts
  conf_fs ::
    "jvm_prog
     => heap
        => sheap
           => (char list
               => char list => (ty list * ty err list) option list)
              => char list => char list => nat => ty => frame list => bool"
Found termination order: "{}"
Found termination order: "{}"
### Ambiguous input (line 429 of "$AFP/JinjaDCI/BV/BVConform.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BVConform.correct_state" ("_position" P) ("_position" \<Phi>)
###     ("_tuple" ("_position" xp)
###       ("_tuple_args" ("_position" h)
###         ("_tuple_args"
###           ("\<^const>List.list.Cons"
###             ("_tuple" ("_position" stk)
###               ("_tuple_args" ("_position" loc)
###                 ("_tuple_args" ("_position" C)
###                   ("_tuple_args" ("_position" M)
###                     ("_tuple_args" ("_position" pc)
###                       ("_tuple_arg" ("_position" ics)))))))
###             ("_position" frs))
###           ("_tuple_arg" ("_position" sh)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Conform.oconf" ("_position" P) ("_position" \<Phi>)
###     ("_tuple" ("_position" xp)
###       ("_tuple_args" ("_position" h)
###         ("_tuple_args"
###           ("\<^const>List.list.Cons"
###             ("_tuple" ("_position" stk)
###               ("_tuple_args" ("_position" loc)
###                 ("_tuple_args" ("_position" C)
###                   ("_tuple_args" ("_position" M)
###                     ("_tuple_args" ("_position" pc)
###                       ("_tuple_arg" ("_position" ics)))))))
###             ("_position" frs))
###           ("_tuple_arg" ("_position" sh)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.BVConform"
### 2.759s elapsed time, 4.689s cpu time, 2.400s GC time
Loading theory "Draft.ClassAdd" (required by "Draft.ClassAddMoreTemplates")
### Ambiguous input (line 622 of "$AFP/JinjaDCI/BV/ClassAdd.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BVConform.correct_state" ("_position" P) ("_position" h)
###     ("_position" obj)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Conform.oconf" ("_position" P) ("_position" h)
###     ("_position" obj)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 624 of "$AFP/JinjaDCI/BV/ClassAdd.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BVConform.correct_state"
###     ("_applC" ("_position" class_add)
###       ("_cargs" ("_position" P)
###         ("_tuple" ("_position" C) ("_tuple_arg" ("_position" cdec)))))
###     ("_position" h) ("_position" obj)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Conform.oconf"
###     ("_applC" ("_position" class_add)
###       ("_cargs" ("_position" P)
###         ("_tuple" ("_position" C) ("_tuple_arg" ("_position" cdec)))))
###     ("_position" h) ("_position" obj)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.ClassAdd"
### 0.441s elapsed time, 0.525s cpu time, 0.115s GC time
Loading theory "Draft.ClassAddMoreTemplates"
val templateLemmas =
   [("ClassAdd.err_mono", "?A <= ?B ==> err ?A <= err ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ClassAdd.opt_mono", "?A <= ?B ==> opt ?A <= opt ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ClassAdd.class_add_types",
     "types ?P <= types (class_add ?P (?C, ?cdec))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 2)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("ClassAdd.class_add_is_type",
     "is_type ?P ?T ==> is_type (class_add ?P (?C, ?cdec)) ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("ClassAdd.list_mono", "?A <= ?B ==> list ?n ?A <= list ?n ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("ClassAdd.class_add_states",
     "states ?P ?mxs ?mxl <= states (class_add ?P (?C, ?cdec)) ?mxs ?mxl",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 3),
         template_var 2),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 4)),
           template_var 3),
         template_var 2))),
    ("ClassAdd.class_add_check_types",
     "check_types ?P ?mxs ?mxl ?\<tau>s ==>
      check_types (class_add ?P (?C, ?cdec)) ?mxs ?mxl ?\<tau>s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 5)),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_distinct_fst",
     "[| distinct_fst ?P; ~ is_class ?P ?C |]
      ==> distinct_fst (class_add ?P (?C, ?cdec))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("ClassAdd.class_add_is_relevant_class",
     "[| is_relevant_class ?i ?P ?C\<^sub>0; ~ is_class ?P ?C |]
      ==> is_relevant_class ?i (class_add ?P (?C, ?cdec)) ?C\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sup_state",
     "[| ?P |- ?\<tau> <=i ?\<tau>'; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) |- ?\<tau> <=i ?\<tau>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sup_state_opt",
     "[| ?P |- ?\<tau> <=?\<tau>'; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) |- ?\<tau> <=?\<tau>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sup_ty_opt",
     "[| ?P |- ?l1.0 <=T ?l2.0; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) |- ?l1.0 <=T ?l2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_has_fields",
     "[| ?P \<turnstile> ?D has_fields ?FDTs; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> ?D has_fields ?FDTs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sees_methods",
     "[| ?P \<turnstile> ?D sees_methods ?Mm; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> ?D sees_methods ?Mm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sees_methods_Obj",
     "[| ?P \<turnstile> Object sees_methods ?Mm; ?C ~= Object |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> Object sees_methods ?Mm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_hole 4),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 3)),
               template_hole 4),
             template_var 2)
           ))),
    ("ClassAdd.class_add_subtype",
     "[| subtype ?P ?x ?y; ~ is_class ?P ?C |]
      ==> subtype (class_add ?P (?C, ?cdec)) ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sees_methods_rev_Obj",
     "[| class_add ?P (?C, ?cdec) \<turnstile> Object sees_methods ?Mm;
         ?C ~= Object |]
      ==> ?P \<turnstile> Object sees_methods ?Mm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2)),
                    template_var 1)),
                template_hole 2),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 2),
             template_var 0)
           ))),
    ("ClassAdd.class_add_conf",
     "[| ?P,?h \<turnstile> ?v :\<le> ?T; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec),?h \<turnstile> ?v :\<le> ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 5)),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_is_relevant_entry",
     "[| is_relevant_entry ?P ?i ?pc ?e; ~ is_class ?P ?C |]
      ==> is_relevant_entry (class_add ?P (?C, ?cdec)) ?i ?pc ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 5)),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sup_loc",
     "[| ?P |- ?LT [<=T] ?LT'; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) |- ?LT [<=T] ?LT'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 4))),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_widens",
     "[| ?P \<turnstile> ?Ts [\<le>] ?Ts'; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> ?Ts [\<le>] ?Ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 4))),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_relevant_entries",
     "~ is_class ?P ?C ==>
      set (relevant_entries ?P ?i ?pc ?xt)
      <= set (relevant_entries (class_add ?P (?C, ?cdec)) ?i ?pc ?xt)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4)
                )
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 0)),
                     template_var 5)),
                 template_var 3),
               template_var 2),
             template_var 1))))),
    ("ClassAdd.class_add_has_fields_rev",
     "[| class_add ?P (?C, ?cdec) \<turnstile> ?D has_fields ?FDTs;
         (?D, ?C) ~: (subcls1 ?P)^* |]
      ==> ?P \<turnstile> ?D has_fields ?FDTs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_var 3)),
                    template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 4)),
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_relevant_entries_eq",
     "[| wf_prog ?wf_md ?P; ~ is_class ?P ?C |]
      ==> relevant_entries ?P ?i ?pc ?xt =
          relevant_entries (class_add ?P (?C, ?cdec)) ?i ?pc ?xt",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 0)),
                   template_var 5)),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("ClassAdd.class_add_wt_start",
     "[| wt_start ?P ?C\<^sub>0 ?b ?Ts ?mxl ?\<tau>s; ~ is_class ?P ?C |]
      ==> wt_start (class_add ?P (?C, ?cdec)) ?C\<^sub>0 ?b ?Ts ?mxl
           ?\<tau>s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0)),
                         template_var 7)),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_subcls",
     "[| ?P \<turnstile> ?D \<preceq>\<^sup>* ?D'; ~ is_class ?P ?C |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> ?D \<preceq>\<^sup>* ?D'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 2))))
           ))),
    ("ClassAdd.class_add_has_field",
     "[| ?P \<turnstile> ?C\<^sub>0 has ?F,?b:?T in ?D; ~ is_class ?P ?C |]
      ==> class_add ?P
           (?C, ?cdec) \<turnstile> ?C\<^sub>0 has ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0)),
                         template_var 7)),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sees_field",
     "[| ?P \<turnstile> ?C\<^sub>0 sees ?F,?b:?T in ?D; ~ is_class ?P ?C |]
      ==> class_add ?P
           (?C, ?cdec) \<turnstile> ?C\<^sub>0 sees ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0)),
                         template_var 7)),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_xcpt_eff_eq",
     "[| wf_prog ?wf_md ?P; ~ is_class ?P ?C |]
      ==> xcpt_eff ?i ?P ?pc ?\<tau> ?xt =
          xcpt_eff ?i (class_add ?P (?C, ?cdec)) ?pc ?\<tau> ?xt",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 7),
              template_var 6)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 6),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 0)),
                   template_var 6)),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("ClassAdd.class_add_field",
     "[| ?P \<turnstile> ?C\<^sub>0 sees ?F,?b:?T in ?D; ~ is_class ?P ?C |]
      ==> field ?P ?C\<^sub>0 ?F =
          field (class_add ?P (?C, ?cdec)) ?C\<^sub>0 ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 7),
             template_var 6),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 7)),
             template_var 6),
           template_var 5)))),
    ("ClassAdd.class_add_method",
     "[| ?P \<turnstile> ?C\<^sub>0 sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D;
         ~ is_class ?P ?C |]
      ==> method ?P ?C\<^sub>0 ?M\<^sub>0 =
          method (class_add ?P (?C, ?cdec)) ?C\<^sub>0 ?M\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 9),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 9),
             template_var 8),
           template_var 7),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 9)),
             template_var 8),
           template_var 7)))),
    ("ClassAdd.class_add_sees_method",
     "[| ?P \<turnstile> ?C\<^sub>0 sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D;
         ~ is_class ?P ?C |]
      ==> class_add ?P
           (?C,
            ?cdec) \<turnstile> ?C\<^sub>0 sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 4, template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 9),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0)),
                             template_var 9)),
                         template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_sees_method_Obj",
     "[| ?P \<turnstile> Object sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D;
         ?C ~= Object |]
      ==> class_add ?P
           (?C,
            ?cdec) \<turnstile> Object sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 8),
                          template_hole 4),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0)),
                             template_var 8)),
                         template_hole 4),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_subcls_rev",
     "[| class_add ?P (?C, ?cdec) \<turnstile> ?D \<preceq>\<^sup>* ?D';
         (?D, ?C) ~: (subcls1 ?P)^* |]
      ==> ?P \<turnstile> ?D \<preceq>\<^sup>* ?D'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1)),
                    template_var 0))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 4),
                      template_var 2)),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)))
           ))),
    ("ClassAdd.class_add_sees_method_rev_Obj",
     "[| class_add ?P
          (?C,
           ?cdec) \<turnstile> Object sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D;
         ?C ~= Object |]
      ==> ?P \<turnstile> Object sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 5,
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 8),
                                  template_var 7)),
                              template_var 6)),
                          template_hole 2),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 8, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 6),
                         template_hole 2),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_sees_methods_rev",
     "[| class_add ?P (?C, ?cdec) \<turnstile> ?D sees_methods ?Mm;
         !!D'. ?P \<turnstile> ?D \<preceq>\<^sup>* D' ==> D' ~= ?C |]
      ==> ?P \<turnstile> ?D sees_methods ?Mm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 4),
                        template_var 3)),
                    template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_xcpt_app",
     "[| xcpt_app ?i ?P ?pc ?mxs ?xt ?\<tau>; wf_prog ?wf_md ?P;
         ~ is_class ?P ?C |]
      ==> xcpt_app ?i (class_add ?P (?C, ?cdec)) ?pc ?mxs ?xt ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 7)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 8),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0)),
                       template_var 7)),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           ))),
    ("ClassAdd.class_add_norm_eff_pc",
     "ALL (pc', \<tau>'):set (norm_eff ?i ?P ?pc ?\<tau>). pc' < ?mpc ==>
      ALL (pc', \<tau>')
          :set (norm_eff ?i (class_add ?P (?C, ?cdec)) ?pc ?\<tau>).
         pc' < ?mpc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3))),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0)),
                         template_var 5)),
                     template_var 4),
                   template_var 3))),
             template_app (template_hole 3, t_empty))
           ))),
    ("ClassAdd.class_add_sees_method_rev",
     "[| class_add ?P
          (?C,
           ?cdec) \<turnstile> ?C\<^sub>0 sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D;
         (?C\<^sub>0, ?C) ~: (subcls1 ?P)^* |]
      ==> ?P \<turnstile> ?C\<^sub>0 sees ?M\<^sub>0, ?b :  ?Ts\<rightarrow>?T = ?m in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 6,
                                template_app
                                 (template_app
                                   (template_hole 5, template_var 9),
                                  template_var 8)),
                              template_var 7)),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 9)),
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 7)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 7, template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_wt_instr",
     "[| ?P,?T,?mxs,?mpc,?xt \<turnstile> ?i,?pc :: ?\<tau>s;
         wf_prog ?wf_md ?P; ~ is_class ?P ?C |]
      ==> class_add ?P
           (?C, ?cdec),?T,?mxs,?mpc,?xt \<turnstile> ?i,?pc :: ?\<tau>s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 10)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 10),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0)),
                             template_var 10)),
                         template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           ))),
    ("ClassAdd.class_add_app",
     "[| app ?i ?P ?mxs ?T ?pc ?mpc ?xt ?t; wf_prog ?wf_md ?P;
         ~ is_class ?P ?C |]
      ==> app ?i (class_add ?P (?C, ?cdec)) ?mxs ?T ?pc ?mpc ?xt ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 9)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 9),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 10),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0)),
                           template_var 9)),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           ))),
    ("ClassAdd.class_add_wf_mdecl",
     "[| wf_mdecl ?wf_md ?P ?C\<^sub>0 ?md;
         !!C\<^sub>0 md.
            ?wf_md ?P C\<^sub>0 md ==>
            ?wf_md (class_add ?P (?C, ?cdec)) C\<^sub>0 md |]
      ==> wf_mdecl ?wf_md (class_add ?P (?C, ?cdec)) ?C\<^sub>0 ?md",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_has_field_rev",
     "[| class_add ?P
          (?C, ?cdec) \<turnstile> ?C\<^sub>0 has ?F,?b:?T in ?D;
         !!D'. ?P \<turnstile> ?C\<^sub>0 \<preceq>\<^sup>* D' ==>
               D' ~= ?C |]
      ==> ?P \<turnstile> ?C\<^sub>0 has ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app
                             (template_app
                               (template_hole 7, template_var 7),
                              template_var 6)),
                          template_var 5)),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_sees_field_rev",
     "[| class_add ?P
          (?C, ?cdec) \<turnstile> ?C\<^sub>0 sees ?F,?b:?T in ?D;
         !!D'. ?P \<turnstile> ?C\<^sub>0 \<preceq>\<^sup>* D' ==>
               D' ~= ?C |]
      ==> ?P \<turnstile> ?C\<^sub>0 sees ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app
                             (template_app
                               (template_hole 7, template_var 7),
                              template_var 6)),
                          template_var 5)),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_oconf",
     "[| ?P,?h \<turnstile> ?obj \<surd>; ~ is_class ?P ?C;
         !!D'. ?P \<turnstile> fst ?obj \<preceq>\<^sup>* D' ==> D' ~= ?C |]
      ==> class_add ?P (?C, ?cdec),?h \<turnstile> ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_soconf",
     "[| ?P,?h,?C\<^sub>0 \<turnstile>\<^sub>s ?sfs \<surd>;
         ~ is_class ?P ?C;
         !!D'. ?P \<turnstile> ?C\<^sub>0 \<preceq>\<^sup>* D' ==>
               D' ~= ?C |]
      ==> class_add ?P
           (?C, ?cdec),?h,?C\<^sub>0 \<turnstile>\<^sub>s ?sfs \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 5)),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_is_relevant_class_rev",
     "[| is_relevant_class ?i (class_add ?P (?C, ?cdec)) ?C\<^sub>0;
         !!cd D'. cd : set ?P ==> (fst cd, ?C) ~: (subcls1 ?P)^*;
         wf_syscls ?P |]
      ==> is_relevant_class ?i ?P ?C\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_app\<^sub>i",
     "[| app\<^sub>i (?i, ?P, ?pc, ?mxs, ?T\<^sub>r, ?ST, ?LT);
         ~ is_class ?P ?C |]
      ==> app\<^sub>i
           (?i, class_add ?P (?C, ?cdec), ?pc, ?mxs, ?T\<^sub>r, ?ST, ?LT)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 8),
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app
                     (template_app (template_hole 6, template_var 5),
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 2)))))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 8),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_var 7)),
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_app
                    (template_app (template_hole 6, template_var 5),
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 2)))))))
           ))),
    ("ClassAdd.class_add_is_relevant_entry_rev",
     "[| is_relevant_entry (class_add ?P (?C, ?cdec)) ?i ?pc ?e;
         !!cd D'. cd : set ?P ==> (fst cd, ?C) ~: (subcls1 ?P)^*;
         wf_syscls ?P |]
      ==> is_relevant_entry ?P ?i ?pc ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app (template_hole 11, template_var 5),
                          template_var 4)),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 13, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ClassAdd.class_add_hconf_wf",
     "[| wf_prog ?wf_md ?P; ?P \<turnstile> ?h \<surd>; ~ is_class ?P ?C;
         !!a obj. ?h a = \<lfloor>obj\<rfloor> ==> fst obj ~= ?C |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> ?h \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("ClassAdd.class_add_shconf_wf",
     "[| wf_prog ?wf_md ?P; ?P,?h \<turnstile>\<^sub>s ?sh \<surd>;
         ~ is_class ?P ?C;
         !!C sobj. ?sh C = \<lfloor>sobj\<rfloor> ==> C ~= C |]
      ==> class_add ?P (?C, ?cdec),?h \<turnstile>\<^sub>s ?sh \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_wt_method",
     "[| wt_method ?P ?C\<^sub>0 ?b ?Ts ?T\<^sub>r ?mxs ?mxl\<^sub>0 ?is ?xt
          (?\<Phi> ?C\<^sub>0 ?M\<^sub>0);
         wf_prog ?wf_md ?P; ~ is_class ?P ?C |]
      ==> wt_method (class_add ?P (?C, ?cdec)) ?C\<^sub>0 ?b ?Ts ?T\<^sub>r
           ?mxs ?mxl\<^sub>0 ?is ?xt (?\<Phi> ?C\<^sub>0 ?M\<^sub>0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_var 13),
                              template_var 12),
                            template_var 11),
                          template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_app
               (template_app (template_var 4, template_var 12),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 13)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 13),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 0, template_var 1),
                                     template_var 0)),
                                 template_var 13)),
                             template_var 12),
                           template_var 11),
                         template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_var 4, template_var 12),
               template_var 3))
           ))),
    ("ClassAdd.class_add_hconf",
     "[| ?P \<turnstile> ?h \<surd>; ~ is_class ?P ?C;
         !!a obj D'.
            [| ?h a = \<lfloor>obj\<rfloor>;
               ?P \<turnstile> fst obj \<preceq>\<^sup>* D' |]
            ==> D' ~= ?C |]
      ==> class_add ?P (?C, ?cdec) \<turnstile> ?h \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("ClassAdd.class_add_eff_pc",
     "[| ALL (pc', \<tau>')
             :set (eff ?i ?P ?pc ?xt \<lfloor>?\<tau>\<rfloor>).
            pc' < ?mpc;
         wf_prog ?wf_md ?P; ~ is_class ?P ?C |]
      ==> ALL (pc', \<tau>')
              :set (eff ?i (class_add ?P (?C, ?cdec)) ?pc ?xt
                     \<lfloor>?\<tau>\<rfloor>).
             pc' < ?mpc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 8, template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app (template_hole 7, template_var 4)))),
              template_app (template_hole 6, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 7)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 8, template_var 8),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0)),
                           template_var 7)),
                       template_var 6),
                     template_var 5),
                   template_app (template_hole 7, template_var 4)))),
             template_app (template_hole 6, t_empty))
           ))),
    ("ClassAdd.class_add_shconf",
     "[| ?P,?h \<turnstile>\<^sub>s ?sh \<surd>; ~ is_class ?P ?C;
         !!C sobj D'.
            [| ?sh C = \<lfloor>sobj\<rfloor>;
               ?P \<turnstile> C \<preceq>\<^sup>* D' |]
            ==> D' ~= C |]
      ==> class_add ?P (?C, ?cdec),?h \<turnstile>\<^sub>s ?sh \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("ClassAdd.class_add_wf_cdecl",
     "[| wf_cdecl ?wf_md ?P ?cd; ?cd : set ?P;
         (fst ?cd, ?C) ~: (subcls1 ?P)^*; distinct_fst ?P;
         !!C\<^sub>0 md.
            ?wf_md ?P C\<^sub>0 md ==>
            ?wf_md (class_add ?P (?C, ?cdec)) C\<^sub>0 md;
         ~ is_class ?P ?C |]
      ==> wf_cdecl ?wf_md (class_add ?P (?C, ?cdec)) ?cd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app (template_hole 8, template_var 2)),
                      template_var 1)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 3)))
                )
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 14, template_var 4),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("ClassAdd.class_add_norm_eff_sup_state_opt",
     "[| ALL (pc', \<tau>'):set (norm_eff ?i ?P ?pc ?\<tau>).
            ?P |- \<tau>' <=?\<tau>s ! pc';
         ~ is_class ?P ?C; app\<^sub>i (?i, ?P, ?pc, ?mxs, ?T, ?\<tau>) |]
      ==> ALL (pc', \<tau>')
              :set (norm_eff ?i (class_add ?P (?C, ?cdec)) ?pc ?\<tau>).
             class_add ?P (?C, ?cdec) |- \<tau>' <=?\<tau>s ! pc'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5))),
              template_app (template_hole 12, t_empty))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 3)
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 8),
                template_app
                 (template_app (template_hole 5, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_app
                       (template_app (template_hole 2, template_var 1),
                        template_var 5))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 13, template_var 8),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 0)),
                         template_var 7)),
                     template_var 6),
                   template_var 5))),
             template_app (template_hole 12, t_empty))
           ))),
    ("ClassAdd.class_add_eff_sup_state_opt",
     "[| ALL (pc', \<tau>')
             :set (eff ?i ?P ?pc ?xt \<lfloor>?\<tau>\<rfloor>).
            ?P |- \<tau>' <=?\<tau>s ! pc';
         wf_prog ?wf_md ?P; ~ is_class ?P ?C;
         app\<^sub>i (?i, ?P, ?pc, ?mxs, ?T, ?\<tau>) |]
      ==> ALL (pc', \<tau>')
              :set (eff ?i (class_add ?P (?C, ?cdec)) ?pc ?xt
                     \<lfloor>?\<tau>\<rfloor>).
             class_add ?P (?C, ?cdec) |- \<tau>' <=?\<tau>s ! pc'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 15, template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_app (template_hole 14, template_var 6)))),
              template_app (template_hole 13, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_var 9)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 9),
                  template_var 3)
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 10),
                template_app
                 (template_app (template_hole 5, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_app
                       (template_app (template_hole 2, template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 15, template_var 10),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_var 0)),
                           template_var 9)),
                       template_var 8),
                     template_var 7),
                   template_app (template_hole 14, template_var 6)))),
             template_app (template_hole 13, t_empty))
           ))),
    ("ClassAdd.class_add_wf_mdecl'",
     "[| wf_mdecl ?wf_md ?P ?C\<^sub>0 ?md;
         (?C\<^sub>0, ?S, ?fs, ?ms) : set ?P; ?md : set ?ms;
         !!C\<^sub>0 S fs ms m.
            [| (C\<^sub>0, S, fs, ms) : set ?P; m : set ms |]
            ==> ?wf_md' (class_add ?P (?C, ?cdec)) C\<^sub>0 m |]
      ==> wf_mdecl ?wf_md' (class_add ?P (?C, ?cdec)) ?C\<^sub>0 ?md",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 7),
                  template_app
                   (template_app (template_hole 9, template_var 5),
                    template_app
                     (template_app (template_hole 8, template_var 4),
                      template_var 3)))),
              template_app (template_hole 7, template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_var 2),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 10, template_var 1),
                       template_var 0)),
                   template_var 8)),
               template_var 7),
             template_var 6)
           ))),
    ("ClassAdd.class_add_wt_method'",
     "[| case ?md of
         (M, b, Ts, T\<^sub>r, mxs, mxl\<^sub>0, is, xt) =>
           wt_method ?P ?C\<^sub>0 b Ts T\<^sub>r mxs mxl\<^sub>0 is xt
            (?\<Phi> ?C\<^sub>0 M);
         wf_prog ?wf_md ?P; ~ is_class ?P ?C |]
      ==> case ?md of
          (M, b, Ts, T\<^sub>r, mxs, mxl\<^sub>0, is, xt) =>
            wt_method (class_add ?P (?C, ?cdec)) ?C\<^sub>0 b Ts T\<^sub>r
             mxs mxl\<^sub>0 is xt (?\<Phi> ?C\<^sub>0 M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, t_empty), template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 6)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, t_empty), template_var 3)
           ))),
    ("ClassAdd.class_add_wf_cdecl'",
     "[| wf_cdecl ?wf_md ?P ?cd; ?cd : set ?P;
         (fst ?cd, ?C) ~: (subcls1 ?P)^*; distinct_fst ?P;
         !!C\<^sub>0 S fs ms m.
            [| (C\<^sub>0, S, fs, ms) : set ?P; m : set ms |]
            ==> ?wf_md' (class_add ?P (?C, ?cdec)) C\<^sub>0 m;
         ~ is_class ?P ?C |]
      ==> wf_cdecl ?wf_md' (class_add ?P (?C, ?cdec)) ?cd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app (template_hole 18, template_var 4))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app (template_hole 14, template_var 3)),
                      template_var 2)),
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 4)))
                )
            ),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 20, template_var 1),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)),
                 template_var 4)),
             template_var 3)
           )))]:
   (string * thm * template) list
### theory "Draft.ClassAddMoreTemplates"
### 0.582s elapsed time, 0.777s cpu time, 0.122s GC time
val it = (): unit
