Loading theory "Draft.Auxiliary" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.128s elapsed time, 0.519s cpu time, 0.043s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
Proofs for inductive predicate(s) "rtrancl_path"
### theory "Draft.Auxiliary"
### 0.154s elapsed time, 0.630s cpu time, 0.043s GC time
Loading theory "Draft.Type" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl")
  Proving monotonicity ...
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.207s elapsed time, 0.837s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.344s elapsed time, 1.367s cpu time, 0.143s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.306s elapsed time, 1.198s cpu time, 0.100s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices" via "Jinja.Err" via "Jinja.Semilat")
Found termination order: "{}"
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.While_Combinator"
### 0.420s elapsed time, 1.657s cpu time, 0.168s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Type"
### 0.740s elapsed time, 2.910s cpu time, 0.355s GC time
Loading theory "Draft.Decl" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Decl"
### 0.252s elapsed time, 0.838s cpu time, 0.530s GC time
Loading theory "Draft.TypeRel" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  supercls_lst :: "'m prog => char list list => bool"
Proofs for inductive predicate(s) "widen"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
  Proving monotonicity ...
### theory "HOL-Library.Stream"
### 1.136s elapsed time, 4.315s cpu time, 0.905s GC time
Loading theory "Jinja.Semilat" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices" via "Jinja.Err")
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
locale Semilat
  fixes A :: "'a set"
    and r :: "'a => 'a => bool"
    and f :: "'a => 'a => 'a"
  assumes "Semilat A r f"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "Fields"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Jinja.Semilat"
### 0.337s elapsed time, 1.325s cpu time, 0.189s GC time
Loading theory "Jinja.Err" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.027s elapsed time, 3.892s cpu time, 0.839s GC time
### theory "Draft.TypeRel"
### 0.837s elapsed time, 3.251s cpu time, 0.396s GC time
Loading theory "Draft.Value" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions" via "Draft.Objects")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### No equation for constructor "Err"
consts
  ok_val :: "'a err => 'a"
Found termination order: "size <*mlex*> {}"
consts
  strict :: "('a => 'b err) => 'a err => 'b err"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "HOL-Library.Tree"
### 2.195s elapsed time, 8.069s cpu time, 1.398s GC time
Loading theory "Draft.Templates" (required by "Draft.BVSpecMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Value"
### 0.415s elapsed time, 1.261s cpu time, 0.117s GC time
Loading theory "Draft.Objects" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions")
### theory "Jinja.Err"
### 0.589s elapsed time, 1.901s cpu time, 0.204s GC time
Loading theory "Jinja.Listn" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
Loading theory "Jinja.Opt" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.085s elapsed time, 0.319s cpu time, 0.078s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.BVSpecMoreTemplates")
consts
  coalesce :: "'a err list => 'a list err"
consts
  typeof_h :: "heap => val => ty option"
### theory "Jinja.Opt"
### 0.180s elapsed time, 0.703s cpu time, 0.144s GC time
Loading theory "Jinja.Product" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Jinja.Semilattices")
### theory "Jinja.Product"
### 0.097s elapsed time, 0.384s cpu time, 0.000s GC time
### theory "Jinja.Listn"
### 0.362s elapsed time, 1.345s cpu time, 0.213s GC time
Loading theory "Jinja.Semilattices" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType")
Proofs for inductive predicate(s) "iprog"
  Proving monotonicity ...
### theory "Draft.Objects"
### 0.621s elapsed time, 2.137s cpu time, 0.266s GC time
Loading theory "Draft.Exceptions" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses")
Loading theory "Draft.JVMState" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVMExceptions" via "Draft.JVMInstructions")
### theory "Jinja.Semilattices"
### 0.258s elapsed time, 0.800s cpu time, 0.053s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.642s elapsed time, 2.157s cpu time, 0.188s GC time
### theory "Draft.Exceptions"
### 0.180s elapsed time, 0.503s cpu time, 0.048s GC time
Loading theory "Draft.SystemClasses" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
### theory "Draft.SystemClasses"
### 0.065s elapsed time, 0.130s cpu time, 0.000s GC time
Loading theory "Draft.WellForm" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType")
### theory "Draft.WellForm"
### 0.516s elapsed time, 1.432s cpu time, 0.956s GC time
Loading theory "Draft.SemiType" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVM_SemiType")
Found termination order: "{}"
Found termination order: "{}"
### No equation for constructor "Void"
### No equation for constructor "Boolean"
### No equation for constructor "Integer"
### No equation for constructor "NT"
consts
  the_Class :: "ty => char list"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.SemiType"
### 0.257s elapsed time, 0.523s cpu time, 0.025s GC time
Loading theory "Draft.JVM_SemiType" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.JVMState"
### 1.183s elapsed time, 2.942s cpu time, 1.074s GC time
Loading theory "Draft.JVMInstructions" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect" via "Draft.JVMExceptions")
### theory "Draft.JVM_SemiType"
### 0.224s elapsed time, 0.472s cpu time, 0.045s GC time
### theory "Draft.JVMInstructions"
### 1.702s elapsed time, 2.617s cpu time, 1.167s GC time
Loading theory "Draft.JVMExceptions" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec" via "Draft.Effect")
consts
  match_ex_table ::
    "'m prog => char list => nat => ex_table => (nat * nat) option"
Found termination order:
  "(%p. size_list (%p. size (snd (snd (snd (snd (snd p))))))
         (fst (snd (snd (snd p))))) <*mlex*>
   {}"
### theory "Draft.JVMExceptions"
### 0.719s elapsed time, 0.768s cpu time, 0.055s GC time
Loading theory "Draft.Effect" (required by "Draft.BVSpecMoreTemplates" via "Draft.BVSpec")
locale prog
  fixes P :: "'a prog"
locale jvm_method
  fixes P :: "'a prog"
    and mxs :: "nat"
    and mxl\<^sub>0 :: "nat"
    and Ts :: "ty list"
    and T\<^sub>r :: "ty"
    and "is" :: "bytecode"
    and xt :: "ex_table"
    and mxl :: "nat"
  defines "mxl == 1 + length Ts + mxl\<^sub>0"
consts
  succs :: "instr => ty list * ty err list => nat => nat list"
### Missing patterns in function definition:
### the_class Void = undefined
### the_class Boolean = undefined
### the_class Integer = undefined
### (1 more)
Found termination order: "{}"
### Missing patterns in function definition:
### !!vb v ve. eff\<^sub>i (Store vb, v, [], ve) = undefined
### !!vb vc v vf. eff\<^sub>i (Getfield vb vc, v, [], vf) = undefined
### !!vb vc v vf. eff\<^sub>i (Putfield vb vc, v, [], vf) = undefined
### (11 more)
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale eff
  fixes P :: "'a prog"
    and mxs :: "nat"
    and mxl\<^sub>0 :: "nat"
    and Ts :: "ty list"
    and T\<^sub>r :: "ty"
    and "is" :: "bytecode"
    and xt :: "ex_table"
    and mxl :: "nat"
    and
    eff\<^sub>i :: "instr => ty list * ty err list => ty list * ty err list"
    and app\<^sub>i :: "instr => nat => ty list * ty err list => bool"
    and
    eff ::
      "instr
       => nat
          => (ty list * ty err list) option
             => (nat * (ty list * ty err list) option) list"
    and app :: "instr => nat => (ty list * ty err list) option => bool"
    and
    norm_eff ::
      "instr
       => nat
          => ty list * ty err list
             => (nat * (ty list * ty err list) option) list"
    and xcpt_app :: "instr => nat => ty list * ty err list => bool"
    and
    xcpt_eff ::
      "instr
       => nat
          => ty list * ty err list
             => (nat * (ty list * ty err list) option) list"
    and mpc :: "nat"
  defines "mxl == 1 + length Ts + mxl\<^sub>0"
    and "mpc == length is"
    and "!!i \<tau>. eff\<^sub>i i \<tau> == eff\<^sub>i (i, P, \<tau>)"
    and
    "!!i pc \<tau>.
        app\<^sub>i i pc \<tau> ==
        app\<^sub>i (i, P, pc, mxs, T\<^sub>r, \<tau>)"
    and "!!i pc \<tau>. xcpt_eff i pc \<tau> == xcpt_eff i P pc \<tau> xt"
    and "!!i pc \<tau>. norm_eff i pc \<tau> == norm_eff i P pc \<tau>"
    and "!!i pc. eff i pc == eff i P pc xt"
    and
    "!!i pc \<tau>. xcpt_app i pc \<tau> == xcpt_app i P pc mxs xt \<tau>"
    and "!!i pc. app i pc == app i P mxs T\<^sub>r pc mpc xt"
### theory "Draft.Effect"
### 6.555s elapsed time, 9.937s cpu time, 0.596s GC time
Loading theory "Draft.BVSpec" (required by "Draft.BVSpecMoreTemplates")
### theory "Draft.BVSpec"
### 0.084s elapsed time, 0.117s cpu time, 0.000s GC time
Loading theory "Draft.BVSpecMoreTemplates"
val templateLemmas =
   [("BVSpec.wt_jvm_progD",
     "wf_jvm_prog\<^bsub>?\<Phi>\<^esub> ?P ==> EX wt. wf_prog wt ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("BVSpec.wt_jvm_prog_impl_wt_start",
     "[| wf_jvm_prog\<^bsub>?\<Phi>\<^esub> ?P;
         ?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = (?mxs,
                           ?mxl\<^sub>0, ?ins, ?xt) in ?C |]
      ==> 0 < length ?ins &
          wt_start ?P ?C ?b ?Ts ?mxl\<^sub>0 (?\<Phi> ?C ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 10),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 8, template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 0)))),
              template_var 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 9),
                       template_var 8),
                     template_var 6),
                   template_var 5),
                 template_var 2),
               template_app
                (template_app (template_var 10, template_var 8),
                 template_var 7)))
           ))),
    ("BVSpec.wt_jvm_prog_impl_wt_instr",
     "[| wf_jvm_prog\<^bsub>?\<Phi>\<^esub> ?P;
         ?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = (?mxs,
                           ?mxl\<^sub>0, ?ins, ?xt) in ?C;
         ?pc < length ?ins |]
      ==> ?P,?T,?mxs,length
                      ?ins,?xt \<turnstile> ?ins !
      ?pc,?pc :: ?\<Phi> ?C ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 11),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 7, template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)))),
              template_var 9)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 10),
                         template_var 5),
                       template_var 4),
                     template_app (template_hole 2, template_var 2)),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 0),
             template_app
              (template_app (template_var 11, template_var 9),
               template_var 8))
           ))),
    ("BVSpec.wf_jvm_prog_nclinit",
     "[| wf_jvm_prog\<^bsub>?\<Phi>\<^esub> ?P;
         ?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = (?mxs,
                           ?mxl\<^sub>0, ?ins, ?xt) in ?D;
         ?P,?T,?mxs,length
                     ?ins,?xt \<turnstile> ?ins ! ?pc,?pc :: ?\<Phi> ?C ?M;
         ?pc < length ?ins;
         ?\<Phi> ?C ?M ! ?pc = \<lfloor>(?ST, ?LT)\<rfloor>;
         ?ins ! ?pc = Invokestatic ?C\<^sub>0 ?M\<^sub>0 ?n |]
      ==> ?M\<^sub>0 ~= clinit",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 17),
              template_var 16)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 16, template_var 16),
                          template_var 15),
                        template_var 14),
                      template_var 13),
                    template_var 12),
                  template_var 11),
                template_app
                 (template_app (template_hole 15, template_var 10),
                  template_app
                   (template_app (template_hole 14, template_var 9),
                    template_app
                     (template_app (template_hole 13, template_var 8),
                      template_var 7)))),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 12, template_var 16),
                          template_var 11),
                        template_var 10),
                      template_app (template_hole 11, template_var 8)),
                    template_var 7),
                  template_app
                   (template_app (template_hole 10, template_var 8),
                    template_var 5)),
                template_var 5),
              template_app
               (template_app (template_var 17, template_var 15),
                template_var 14))
            ),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 11, template_var 8)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_var 17, template_var 15),
                template_var 14)),
            template_var 5),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 8),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0))],
       template_negation
        (template_equation (template_var 1, template_hole 0))))]:
   (string * thm * template) list
### theory "Draft.BVSpecMoreTemplates"
### 0.412s elapsed time, 0.554s cpu time, 0.065s GC time
val it = (): unit
