   [("SemiType.exec_lub_refl", "exec_lub ?r ?f ?T ?T = ?T",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 0),
       template_var 0)),
    ("SemiType.wf_subtype_acc", "wf_prog ?wf_mb ?P ==> acc (subtype ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SemiType.err_semilat_JType_esl",
     "wf_prog ?wf_mb ?P ==> err_semilat (SemiType.esl ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SemiType.wf_converse_subcls1_impl_acc_subtype",
     "wf ((subcls1 ?P)^-1) ==> acc (subtype ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SemiType.order_widen",
     "wf_prog ?m ?P ==> order (subtype ?P) (types ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SemiType.closed_err_types",
     "wf_prog ?wf_mb ?P ==>
      Semilat.closed (err (types ?P)) (lift2 (SemiType.sup ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SemiType.superI",
     "?P \<turnstile> ?C \<prec>\<^sup>1 ?D ==> super ?P ?C = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("SemiType.NT_widen",
     "subtype ?P NT ?T = (?T = NT | (EX C. ?T = Class C))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 4)),
             template_app (template_hole 1, t_empty))
           ))),
    ("SemiType.is_class_is_subcls",
     "wf_prog ?m ?P ==>
      is_class ?P ?C = ?P \<turnstile> ?C \<preceq>\<^sup>* Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("SemiType.Class_widen2",
     "subtype ?P (Class ?C) ?T =
      (EX D. ?T = Class D & ?P \<turnstile> ?C \<preceq>\<^sup>* D)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app (template_hole 6, t_empty))),
    ("SemiType.widen_antisym",
     "[| wf_prog ?m ?P; subtype ?P ?T ?U; subtype ?P ?U ?T |] ==> ?T = ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("SemiType.sup_exists",
     "[| subtype ?P ?a ?c; subtype ?P ?b ?c |]
      ==> EX T. SemiType.sup ?P ?a ?b = OK T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SemiType.subcls_antisym",
     "[| wf_prog ?m ?P; ?P \<turnstile> ?C \<preceq>\<^sup>* ?D;
         ?P \<turnstile> ?D \<preceq>\<^sup>* ?C |]
      ==> ?C = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_equation (template_var 1, template_var 0))),
    ("SemiType.sup_subtype_greater",
     "[| wf_prog ?wf_mb ?P; is_type ?P ?t1.0; is_type ?P ?t2.0;
         SemiType.sup ?P ?t1.0 ?t2.0 = OK ?s |]
      ==> subtype ?P ?t1.0 ?s & subtype ?P ?t2.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0))
           ))),
    ("SemiType.sup_subtype_smallest",
     "[| wf_prog ?wf_mb ?P; is_type ?P ?a; is_type ?P ?b; is_type ?P ?c;
         subtype ?P ?a ?c; subtype ?P ?b ?c;
         SemiType.sup ?P ?a ?b = OK ?d |]
      ==> subtype ?P ?d ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 0),
             template_var 1)
           )))]
