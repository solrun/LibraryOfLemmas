   [("Compiler2.max_stack1'", "~ sub_RI ?e ==> 1 <= max_stack ?e",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Compiler2.compE\<^sub>2_not_Nil'",
     "~ sub_RI ?e ==> compE\<^sub>2 ?e ~= []",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Compiler2.compE\<^sub>2_nRet",
     "?i : set (compE\<^sub>2 ?e\<^sub>1) ==> ?i ~= Return",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Compiler2.bop_expr_length_aux",
     "length (case ?bop of Eq => [CmpEq] | Add => [IAdd]) = Suc 0",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3)),
             template_app
              (template_app (template_hole 5, template_hole 2),
               template_hole 3)),
           template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Compiler2.compMb\<^sub>2",
     "compMb\<^sub>2 ?b ?e =
      (max_stack ?e, max_vars ?e, compE\<^sub>2 ?e @ [Return],
       compxE\<^sub>2 ?e 0 0)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0),
               template_hole 0))))))]
