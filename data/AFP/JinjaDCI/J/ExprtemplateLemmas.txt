   [("Expr.nsub_RI_Vals", "~ sub_RIs (map Val ?vs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("Expr.map_vals_of_Vals",
     "map_vals_of (map Val ?vs) = \<lfloor>?vs\<rfloor>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Expr.init_rhs_neq", "?e ~= INIT ?C (?Cs,?b) \<leftarrow> ?e",
     template_negation
      (
         template_equation
          (template_var 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3))
         )),
    ("Expr.ri_rhs_neq", "?e ~= RI (?C,?e') ; ?Cs \<leftarrow> ?e",
     template_negation
      (
         template_equation
          (template_var 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3))
         )),
    ("Expr.init_rhs_neq'", "INIT ?C (?Cs,?b) \<leftarrow> ?e ~= ?e",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Expr.ri_rhs_neq'", "RI (?C,?e') ; ?Cs \<leftarrow> ?e ~= ?e",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Expr.final_fv", "final ?e ==> fv ?e = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Expr.nsub_RI_not_init", "~ sub_RI ?e ==> not_init ?C ?e",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Expr.nsub_RIs_not_inits", "~ sub_RIs ?es ==> not_inits ?C ?es",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Expr.finals_app_map", "finals (map Val ?vs @ ?es) = finals ?es",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Expr.not_finals_ConsI", "~ final ?e ==> ~ finals (?e # ?es)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Expr.lass_val_of_nsub_RI",
     "lass_val_of ?e = \<lfloor>?a\<rfloor> ==> ~ sub_RI ?e",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 1))
           ))),
    ("Expr.map_vals_of_throw",
     "map_vals_of (map Val ?vs @ throw ?e # ?es') = None",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_hole 0)),
    ("Expr.init_exp_of_neq'",
     "init_exp_of ?e = \<lfloor>?e'\<rfloor> ==> ?e ~= ?e'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Expr.init_exp_of_neq",
     "init_exp_of ?e = \<lfloor>?e'\<rfloor> ==> ?e' ~= ?e",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_var 1)))),
    ("Expr.throw_of_spec",
     "throw_of ?e = \<lfloor>?e'\<rfloor> ==> ?e = throw ?e'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Expr.val_of_spec", "val_of ?e = \<lfloor>?v\<rfloor> ==> ?e = Val ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Expr.bool_of_specF",
     "bool_of ?e = \<lfloor>False\<rfloor> ==> ?e = false",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_hole 3))))),
    ("Expr.bool_of_specT",
     "bool_of ?e = \<lfloor>True\<rfloor> ==> ?e = true",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_hole 3))))),
    ("Expr.map_vals_of_spec",
     "map_vals_of ?es = \<lfloor>?vs\<rfloor> ==> ?es = map Val ?vs",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Expr.map_Val_eq", "map Val ?vs = map Val ?vs' ==> ?vs = ?vs'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Expr.lass_val_of_spec",
     "lass_val_of ?e = \<lfloor>?a\<rfloor> ==> ?e = fst ?a:=Val (snd ?a)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Expr.map_Val_nthrow_neq",
     "map Val ?vs = map Val ?vs' @ throw ?ex' # ?es' ==> False",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_hole 4),
            template_var 3),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2)),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)))],
       template_predicate (template_hole 0))),
    ("Expr.not_finals_ConsI2",
     "[| ?e = Val ?v; ~ finals ?es |] ==> ~ finals (?e # ?es)",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 3, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))
               )
           ))),
    ("Expr.sub_RI_base",
     "?e = INIT ?C (?Cs,?b) \<leftarrow> ?e' |
      ?e = RI (?C,?e\<^sub>0) ; ?Cs \<leftarrow> ?e' ==>
      sub_RI ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 0),
                    template_var 3),
                  template_var 1)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 5)))),
    ("Expr.nsub_RIs_not_inits_aux",
     "[| ALL e:set ?es. ~ sub_RI e --> not_init ?C e; ~ sub_RIs ?es |]
      ==> not_inits ?C ?es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Expr.subexp_size_le",
     "(subexp_of ?e' ?e --> size ?e' < size ?e) &
      (?e' : subexps ?es --> size ?e' < size_list size ?es)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app (template_hole 4, template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 2, template_var 1)))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0))))
         )),
    ("Expr.map_Val_throw_eq",
     "map Val ?vs @ throw ?ex # ?es = map Val ?vs' @ throw ?ex' # ?es' ==>
      ?ex = ?ex'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 5)),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 4)),
              template_var 3)),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 2)),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)))],
       template_equation (template_var 4, template_var 1))),
    ("Expr.finalE",
     "[| final ?e; !!v. ?e = Val v ==> ?R; !!a. ?e = Throw a ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Expr.finalsE",
     "[| finals ?es; !!vs. ?es = map Val vs ==> ?R;
         !!vs a es'. ?es = map Val vs @ Throw a # es' ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Expr.subexp_induct",
     "[| !!e. subexp e = {} ==> ?R e;
         !!e. (!!e'. subexp_of e' e ==> ?R e') ==> ?R e;
         !!es. (!!e'. e' : subexps es ==> ?R e') ==> ?Rs es |]
      ==> (ALL e'. subexp_of e' ?e --> ?R e') & ?R ?e",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Expr.subexps_induct",
     "[| !!es. subexps es = {} ==> ?Rs es;
         !!e. (!!e'. subexp_of e' e ==> ?R e') ==> ?R e;
         !!es. (!!e'. e' : subexps es ==> ?R e') ==> ?Rs es |]
      ==> (ALL e'. e' : subexps ?es --> ?R e') & ?Rs ?es",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Expr.sub_RI_sub_RIs_induct",
     "[| !!x. ?P1.0 (new x); !!x1 x2. ?P1.0 x2 ==> ?P1.0 (Cast x1 x2);
         !!x. ?P1.0 (Val x);
         !!x1 x2 x3.
            [| ?P1.0 x1; ?P1.0 x3 |]
            ==> ?P1.0 (x1 \<guillemotleft>x2\<guillemotright> x3);
         !!x. ?P1.0 (Var x); !!x1 x2. ?P1.0 x2 ==> ?P1.0 (x1:=x2);
         !!x1 x2 x3. ?P1.0 x1 ==> ?P1.0 (x1\<bullet>x2{x3});
         !!x1 x2 x3. ?P1.0 (x1\<bullet>\<^sub>sx2{x3});
         !!x1 x2 x3 x4.
            [| ?P1.0 x1; ?P1.0 x4 |] ==> ?P1.0 (x1\<bullet>x2{x3} := x4);
         !!x1 x2 x3 x4.
            ?P1.0 x4 ==> ?P1.0 (x1\<bullet>\<^sub>sx2{x3} := x4);
         !!x1 x2 x3. [| ?P1.0 x1; ?P2.0 x3 |] ==> ?P1.0 (x1\<bullet>x2(x3));
         !!x1 x2 x3. ?P2.0 x3 ==> ?P1.0 (x1\<bullet>\<^sub>sx2(x3));
         !!x1 x2 x3. ?P1.0 x3 ==> ?P1.0 {x1:x2; x3};
         !!x1 x2. [| ?P1.0 x1; ?P1.0 x2 |] ==> ?P1.0 (x1;; x2);
         !!x1 x2 x3.
            [| ?P1.0 x1; ?P1.0 x2; ?P1.0 x3 |]
            ==> ?P1.0 (if (x1) x2 else x3);
         !!x1 x2. [| ?P1.0 x1; ?P1.0 x2 |] ==> ?P1.0 (while (x1) x2);
         !!x. ?P1.0 x ==> ?P1.0 (throw x);
         !!x1 x2 x3 x4.
            [| ?P1.0 x1; ?P1.0 x4 |] ==> ?P1.0 (try x1 catch(x2 x3) x4);
         !!x1 x2 x3 x4.
            ?P1.0 x4 ==> ?P1.0 (INIT x1 (x2,x3) \<leftarrow> x4);
         !!x1 x2 x3 x4.
            [| ?P1.0 x2; ?P1.0 x4 |]
            ==> ?P1.0 (RI (x1,x2) ; x3 \<leftarrow> x4);
         ?P2.0 []; !!x1 x2. [| ?P1.0 x1; ?P2.0 x2 |] ==> ?P2.0 (x1 # x2) |]
      ==> ?P1.0 ?exp",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_var 1, template_hole 1)),
        template_predicate (template_app (template_hole 28, t_empty))],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("Expr.sub_RI_sub_RIs_induct",
     "[| !!x. ?P1.0 (new x); !!x1 x2. ?P1.0 x2 ==> ?P1.0 (Cast x1 x2);
         !!x. ?P1.0 (Val x);
         !!x1 x2 x3.
            [| ?P1.0 x1; ?P1.0 x3 |]
            ==> ?P1.0 (x1 \<guillemotleft>x2\<guillemotright> x3);
         !!x. ?P1.0 (Var x); !!x1 x2. ?P1.0 x2 ==> ?P1.0 (x1:=x2);
         !!x1 x2 x3. ?P1.0 x1 ==> ?P1.0 (x1\<bullet>x2{x3});
         !!x1 x2 x3. ?P1.0 (x1\<bullet>\<^sub>sx2{x3});
         !!x1 x2 x3 x4.
            [| ?P1.0 x1; ?P1.0 x4 |] ==> ?P1.0 (x1\<bullet>x2{x3} := x4);
         !!x1 x2 x3 x4.
            ?P1.0 x4 ==> ?P1.0 (x1\<bullet>\<^sub>sx2{x3} := x4);
         !!x1 x2 x3. [| ?P1.0 x1; ?P2.0 x3 |] ==> ?P1.0 (x1\<bullet>x2(x3));
         !!x1 x2 x3. ?P2.0 x3 ==> ?P1.0 (x1\<bullet>\<^sub>sx2(x3));
         !!x1 x2 x3. ?P1.0 x3 ==> ?P1.0 {x1:x2; x3};
         !!x1 x2. [| ?P1.0 x1; ?P1.0 x2 |] ==> ?P1.0 (x1;; x2);
         !!x1 x2 x3.
            [| ?P1.0 x1; ?P1.0 x2; ?P1.0 x3 |]
            ==> ?P1.0 (if (x1) x2 else x3);
         !!x1 x2. [| ?P1.0 x1; ?P1.0 x2 |] ==> ?P1.0 (while (x1) x2);
         !!x. ?P1.0 x ==> ?P1.0 (throw x);
         !!x1 x2 x3 x4.
            [| ?P1.0 x1; ?P1.0 x4 |] ==> ?P1.0 (try x1 catch(x2 x3) x4);
         !!x1 x2 x3 x4.
            ?P1.0 x4 ==> ?P1.0 (INIT x1 (x2,x3) \<leftarrow> x4);
         !!x1 x2 x3 x4.
            [| ?P1.0 x2; ?P1.0 x4 |]
            ==> ?P1.0 (RI (x1,x2) ; x3 \<leftarrow> x4);
         ?P2.0 []; !!x1 x2. [| ?P1.0 x1; ?P2.0 x2 |] ==> ?P2.0 (x1 # x2) |]
      ==> ?P2.0 ?exp_list",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_hole 31, t_empty)),
        template_predicate (template_app (template_var 1, template_hole 1)),
        template_predicate (template_app (template_hole 28, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
