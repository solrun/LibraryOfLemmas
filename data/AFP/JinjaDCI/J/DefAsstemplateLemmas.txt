   [("DefAss.Ds_Vals", "\<D>s (map Val ?vs) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)
         )),
    ("DefAss.As_map_Val", "\<A>s (map Val ?vs) = \<lfloor>{}\<rfloor>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("DefAss.hyperUn_assoc",
     "?A \<squnion> ?B \<squnion> ?C = ?A \<squnion> (?B \<squnion> ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("DefAss.A_fv", "\<A> ?e = \<lfloor>?A\<rfloor> ==> ?A <= fv ?e",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("DefAss.diff_lem",
     "?A \<sqsubseteq> ?A' ==>
      ?A \<ominus> ?b \<sqsubseteq> ?A' \<ominus> ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("DefAss.sqUn_lem",
     "?A \<sqsubseteq> ?A' ==>
      ?A \<squnion> ?B \<sqsubseteq> ?A' \<squnion> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("DefAss.hyper_isin_union",
     "?x \<in>\<in> \<lfloor>?A\<rfloor> ==>
      ?x \<in>\<in> \<lfloor>?A\<rfloor> \<squnion> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))
           ))),
    ("DefAss.D_mono'",
     "[| \<D> ?e ?A; ?A \<sqsubseteq> ?A' |] ==> \<D> ?e ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("DefAss.Ds_mono'",
     "[| \<D>s ?es ?A; ?A \<sqsubseteq> ?A' |] ==> \<D>s ?es ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("DefAss.D_mono",
     "[| ?A \<sqsubseteq> ?A'; \<D> ?e ?A |] ==> \<D> ?e ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("DefAss.Ds_mono",
     "[| ?A \<sqsubseteq> ?A'; \<D>s ?es ?A |] ==> \<D>s ?es ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("DefAss.D_append",
     "\<D>s (?es @ ?es') ?A =
      (\<D>s ?es ?A & \<D>s ?es' (?A \<squnion> \<A>s ?es))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("DefAss.hyper_comm",
     "?A \<squnion> ?B = ?B \<squnion> ?A &
      ?A \<squnion> ?B \<squnion> ?C = ?B \<squnion> ?A \<squnion> ?C",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_var 0)))
         )),
    ("DefAss.hyper_insert_comm",
     "?A \<squnion> \<lfloor>{?a}\<rfloor> =
      \<lfloor>{?a}\<rfloor> \<squnion> ?A &
      ?A \<squnion> (\<lfloor>{?a}\<rfloor> \<squnion> ?B) =
      \<lfloor>{?a}\<rfloor> \<squnion> (?A \<squnion> ?B)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_hole 0)))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_hole 0))),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_hole 0))),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_hole 0))),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0))))
         ))]
