   [("TypeRel.finite_subcls1", "finite (subcls1 ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("TypeRel.widens_refl", "?P \<turnstile> ?xs [\<le>] ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0),
           template_var 0)
         )),
    ("TypeRel.has_fields_is_class",
     "?P \<turnstile> ?C has_fields ?FDTs ==> is_class ?P ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("TypeRel.has_fields_is_class_Object",
     "?P \<turnstile> ?D has_fields ?FDTs ==> is_class ?P Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)
           ))),
    ("TypeRel.sees_methods_is_class",
     "?P \<turnstile> ?C sees_methods ?Mm ==> is_class ?P ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("TypeRel.sees_methods_is_class_Object",
     "?P \<turnstile> ?D sees_methods ?Mm ==> is_class ?P Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)
           ))),
    ("TypeRel.subcls1p_subcls1_eq", "subcls1p ?P = subcls1' ?P",
     template_equation
      (template_app (template_hole 3, template_var 0), t_empty)),
    ("TypeRel.has_field_is_class",
     "?P \<turnstile> ?C has ?F,?b:?T in ?D ==> is_class ?P ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 5), template_var 4)
           ))),
    ("TypeRel.has_field_is_class'",
     "?P \<turnstile> ?C has ?F,?b:?T in ?D ==> is_class ?P ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 5), template_var 0)
           ))),
    ("TypeRel.sees_methods_sub_Obj",
     "?P \<turnstile> ?C sees_methods ?Mm ==>
      ?P \<turnstile> ?C \<preceq>\<^sup>* Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)))
           ))),
    ("TypeRel.Class_widen",
     "?P \<turnstile> Class ?C \<le> ?T ==> EX D. ?T = Class D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("TypeRel.Class_widen_Class",
     "?P \<turnstile> Class ?C \<le> Class ?D =
      ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("TypeRel.sees_method_is_class",
     "?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D ==>
      is_class ?P ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 7), template_var 6)
           ))),
    ("TypeRel.sees_method_is_class'",
     "?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D ==>
      is_class ?P ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 7), template_var 0)
           ))),
    ("TypeRel.has_fields_fun",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         ?P \<turnstile> ?C has_fields ?FDTs' |]
      ==> ?FDTs' = ?FDTs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("TypeRel.sees_methods_fun",
     "[| ?P \<turnstile> ?C sees_methods ?Mm;
         ?P \<turnstile> ?C sees_methods ?Mm' |]
      ==> ?Mm' = ?Mm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("TypeRel.has_field_sees",
     "?P \<turnstile> ?C has ?F,?b:?T in ?C ==>
      ?P \<turnstile> ?C sees ?F,?b:?T in ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("TypeRel.has_field_decl_above",
     "?P \<turnstile> ?C has ?F,?b:?T in ?D ==>
      ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("TypeRel.has_field_idemp",
     "?P \<turnstile> ?C has ?F,?b:?T in ?D ==>
      ?P \<turnstile> ?D has ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("TypeRel.sees_field_decl_above",
     "?P \<turnstile> ?C sees ?F,?b:?T in ?D ==>
      ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("TypeRel.has_visible_field",
     "?P \<turnstile> ?C sees ?F,?b:?T in ?D ==>
      ?P \<turnstile> ?C has ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("TypeRel.sees_field_idemp",
     "?P \<turnstile> ?C sees ?F,?b:?T in ?D ==>
      ?P \<turnstile> ?D sees ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("TypeRel.widen_trans",
     "[| ?P \<turnstile> ?S \<le> ?U; ?P \<turnstile> ?U \<le> ?T |]
      ==> ?P \<turnstile> ?S \<le> ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("TypeRel.sees_method_decl_above",
     "?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D ==>
      ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 4, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 7)))
           ))),
    ("TypeRel.sees_method_sub_Obj",
     "?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D ==>
      ?P \<turnstile> ?C \<preceq>\<^sup>* Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 6),
                 template_hole 2)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 7)))
           ))),
    ("TypeRel.Object_fields",
     "[| ?P \<turnstile> Object has_fields ?FDTs; ?C ~= Object |]
      ==> map_of ?FDTs (?F, ?C) = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_hole 6),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("TypeRel.widens_trans",
     "[| ?P \<turnstile> ?Ss [\<le>] ?Ts; ?P \<turnstile> ?Ts [\<le>] ?Us |]
      ==> ?P \<turnstile> ?Ss [\<le>] ?Us",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 0)
           ))),
    ("TypeRel.sees_method_idemp",
     "?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D ==>
      ?P \<turnstile> ?D sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 0),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("TypeRel.sees_methods_decl_above",
     "[| ?P \<turnstile> ?C sees_methods ?Mm;
         ?Mm ?M = \<lfloor>(?m, ?D)\<rfloor> |]
      ==> ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("TypeRel.supercls_lst_app",
     "[| supercls_lst ?P (?C # ?Cs);
         ?P \<turnstile> ?C \<preceq>\<^sup>* ?C' |]
      ==> supercls_lst ?P (?C' # ?C # ?Cs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)))
           ))),
    ("TypeRel.widen_Class",
     "?P \<turnstile> ?T \<le> Class ?C =
      (?T = NT |
       (EX D. ?T = Class D & ?P \<turnstile> D \<preceq>\<^sup>* ?C))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_app (template_hole 9, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 6)),
             template_app (template_hole 5, t_empty))
           ))),
    ("TypeRel.has_fields_decl_above",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         ((?F, ?D), ?b, ?T) : set ?FDTs |]
      ==> ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_app (template_hole 3, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 2)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 6)))
           ))),
    ("TypeRel.has_field_mono",
     "[| ?P \<turnstile> ?C has ?F,?b:?T in ?D;
         ?P \<turnstile> ?C' \<preceq>\<^sup>* ?C |]
      ==> ?P \<turnstile> ?C' has ?F,?b:?T in ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 5)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 6)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 6),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypeRel.has_field_fun",
     "[| ?P \<turnstile> ?C has ?F,?b:?T in ?D;
         ?P \<turnstile> ?C has ?F,?b':?T' in ?D |]
      ==> ?b = ?b' & ?T' = ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("TypeRel.subcls_notin_has_fields",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         ((?F, ?D), ?b, ?T) : set ?FDTs |]
      ==> (?D, ?C) ~: (subcls1 ?P)^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))),
              template_app (template_hole 4, template_var 4))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 5)),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 6)))
               )
           ))),
    ("TypeRel.subcls1D",
     "?P \<turnstile> ?C \<prec>\<^sup>1 ?D ==>
      ?C ~= Object &
      (EX fs ms. class ?P ?C = \<lfloor>(?D, fs, ms)\<rfloor>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_app (template_hole 11, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_hole 7))),
             template_app (template_hole 6, t_empty))
           ))),
    ("TypeRel.widens_Cons",
     "?P \<turnstile> (?x # ?xs) [\<le>] ?ys =
      (EX z zs.
          ?ys = z # zs &
          ?P \<turnstile> ?x \<le> z & ?P \<turnstile> ?xs [\<le>] zs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("TypeRel.subcls_notin_has_fields2",
     "[| ?P \<turnstile> ?C has_fields ?FDTs; ?C ~= Object;
         ?P \<turnstile> ?C \<prec>\<^sup>1 ?D |]
      ==> (?D, ?C) ~: (subcls1 ?P)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_var 3))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 3)))
               )
           ))),
    ("TypeRel.map_of_remap_SomeD",
     "map_of (map (%((k, k'), x). (k, k', x)) ?t) ?k =
      \<lfloor>(?k', ?x)\<rfloor> ==>
      map_of ?t (?k, ?k') = \<lfloor>?x\<rfloor>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, t_empty))),
                template_var 3)),
            template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("TypeRel.sees_methods_idemp",
     "[| ?P \<turnstile> ?C sees_methods ?Mm;
         ?Mm ?M = \<lfloor>(?m, ?D)\<rfloor> |]
      ==> EX Mm'.
             ?P \<turnstile> ?D sees_methods Mm' &
             Mm' ?M = \<lfloor>(?m, ?D)\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("TypeRel.sees_field_fun",
     "[| ?P \<turnstile> ?C sees ?F,?b:?T in ?D;
         ?P \<turnstile> ?C sees ?F,?b':?T' in ?D' |]
      ==> ?b = ?b' & ?T' = ?T & ?D' = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("TypeRel.has_fields_mono_lem",
     "[| ?P \<turnstile> ?D \<preceq>\<^sup>* ?C;
         ?P \<turnstile> ?C has_fields ?FDTs |]
      ==> EX pre.
             ?P \<turnstile> ?D has_fields pre @ ?FDTs &
             dom (map_of pre) Int dom (map_of ?FDTs) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypeRel.map_of_remap_SomeD2",
     "map_of (map (%((k, k'), x, x'). (k, k', x, x')) ?t) ?k =
      \<lfloor>(?k', ?x, ?x')\<rfloor> ==>
      map_of ?t (?k, ?k') = \<lfloor>(?x, ?x')\<rfloor>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_hole 10,
                    template_app (template_hole 9, t_empty))),
                template_var 4)),
            template_var 3),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))))),
    ("TypeRel.visible_methods_exist",
     "[| ?P \<turnstile> ?C sees_methods ?Mm;
         ?Mm ?M = \<lfloor>(?m, ?D)\<rfloor> |]
      ==> EX D' fs ms.
             class ?P ?D = \<lfloor>(D', fs, ms)\<rfloor> &
             map_of ms ?M = \<lfloor>?m\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("TypeRel.sees_method_decl_mono",
     "[| ?P \<turnstile> ?C' \<preceq>\<^sup>* ?C;
         ?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D;
         ?P \<turnstile> ?C' sees ?M, ?b' :  ?Ts'\<rightarrow>?T' = ?m' in ?D' |]
      ==> ?P \<turnstile> ?D' \<preceq>\<^sup>* ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 13),
                  template_var 12)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 11),
                          template_var 12),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 11),
                          template_var 13),
                        template_var 10),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 5)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 11)))
           ))),
    ("TypeRel.visible_method_exists",
     "?P \<turnstile> ?C sees ?M, ?b :  ?Ts\<rightarrow>?T = ?m in ?D ==>
      EX D' fs ms.
         class ?P ?D = \<lfloor>(D', fs, ms)\<rfloor> &
         map_of ms ?M = \<lfloor>(?b, ?Ts, ?T, ?m)\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 15, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("TypeRel.sees_method_fun",
     "[| ?P \<turnstile> ?C sees ?M, ?b :  ?TS\<rightarrow>?T = ?m in ?D;
         ?P \<turnstile> ?C sees ?M, ?b' :  ?TS'\<rightarrow>?T' = ?m' in ?D' |]
      ==> ?b = ?b' & ?TS' = ?TS & ?T' = ?T & ?m' = ?m & ?D' = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 12),
                          template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 12),
                          template_var 11),
                        template_var 10),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 9),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 8)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 7)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 6)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 5)))))
           ))),
    ("TypeRel.has_field_sees_aux",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         map_of ?FDTs (?F, ?C) = \<lfloor>(?b, ?T)\<rfloor> |]
      ==> map_of (map (%((F, D), b, T). (F, D, b, T)) ?FDTs) ?F =
          \<lfloor>(?C, ?b, ?T)\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 3),
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 4)),
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty))),
               template_var 3)),
           template_var 2),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 0)))))),
    ("TypeRel.visible_fields_exist",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         map_of ?FDTs (?F, ?D) = \<lfloor>(?b, ?T)\<rfloor> |]
      ==> EX D' fs ms.
             class ?P ?D = \<lfloor>(D', fs, ms)\<rfloor> &
             map_of fs ?F = \<lfloor>(?b, ?T)\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 4),
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("TypeRel.all_fields_in_has_fields",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         ?P \<turnstile> ?C \<preceq>\<^sup>* ?D;
         class ?P ?D = \<lfloor>(?D', ?fs, ?ms)\<rfloor>;
         (?F, ?b, ?T) : set ?fs |]
      ==> ((?F, ?D), ?b, ?T) : set ?FDTs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 8),
                  template_var 6)),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 9)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 9),
            template_var 6),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3)))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_app (template_hole 3, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 14, template_var 2),
                     template_var 6)),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 7))
           ))),
    ("TypeRel.sees_methods_decl_mono",
     "[| ?P \<turnstile> ?C' \<preceq>\<^sup>* ?C;
         ?P \<turnstile> ?C sees_methods ?Mm |]
      ==> EX Mm' Mm\<^sub>2.
             ?P \<turnstile> ?C' sees_methods Mm' &
             Mm' = ?Mm ++ Mm\<^sub>2 &
             (ALL M m D.
                 Mm\<^sub>2 M = \<lfloor>(m, D)\<rfloor> -->
                 ?P \<turnstile> D \<preceq>\<^sup>* ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("TypeRel.has_fields_mono_lem2",
     "[| ?P \<turnstile> ?C has_fields ?FDTs;
         class ?P ?C = \<lfloor>(?D, ?fs, ?ms)\<rfloor>;
         map_of ?FDTs (?F, ?C) = \<lfloor>(?b, ?T)\<rfloor> |]
      ==> EX FDTs'.
             ?FDTs = map (%(F, b, T). ((F, ?C), b, T)) ?fs @ FDTs' &
             map_of FDTs' (?F, ?C) = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 8),
            template_var 7),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3)))),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 6),
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 7)),
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("TypeRel.has_fields_declaring_classes",
     "?P \<turnstile> ?C has_fields ?FDTs ==>
      EX pre FDTs'.
         ?FDTs = pre @ FDTs' &
         (?C ~= Object -->
          (EX D fs ms.
              class ?P ?C = \<lfloor>(D, fs, ms)\<rfloor> &
              ?P \<turnstile> D has_fields FDTs')) &
         set (map (%t. snd (fst t)) pre) <= {?C} &
         set (map (%t. snd (fst t)) FDTs')
         <= {C'. C' ~= ?C & ?P \<turnstile> ?C \<preceq>\<^sup>* C'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 28, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 27, t_empty))))]
