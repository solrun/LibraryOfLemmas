   [("Conform.defval_conf", "?P,?h \<turnstile> default_val ?T :\<le> ?T",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Conform.lconf_empty", "?P,?h \<turnstile> Map.empty (:\<le>) ?E",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             t_empty),
           template_var 0)
         )),
    ("Conform.conf_NT", "(?P,?h \<turnstile> ?v :\<le> NT) = (?v = Null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Conform.conf_Null",
     "(?P,?h \<turnstile> Null :\<le> ?T) = ?P \<turnstile> NT \<le> ?T",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_hole 0),
         template_var 0))),
    ("Conform.oconf_blank",
     "?P \<turnstile> ?C has_fields ?FDTs ==>
      ?P,?h \<turnstile> blank ?P ?C \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Conform.soconf_sblank",
     "?P \<turnstile> ?C has_fields ?FDTs ==>
      ?P,?h,?C \<turnstile>\<^sub>s sblank ?P ?C \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Conform.typeof_conf",
     "typeof\<^bsub>?h\<^esub> ?v = \<lfloor>?T\<rfloor> ==>
      ?P,?h \<turnstile> ?v :\<le> ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Conform.typeof_lit_conf",
     "typeof ?v = \<lfloor>?T\<rfloor> ==> ?P,?h \<turnstile> ?v :\<le> ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, t_empty), template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Conform.confs_rev",
     "(?P,?h \<turnstile> rev ?s [:\<le>] ?t) =
      (?P,?h \<turnstile> ?s [:\<le>] rev ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Conform.oconf_hext",
     "[| ?P,?h \<turnstile> ?obj \<surd>; ?h \<unlhd> ?h' |]
      ==> ?P,?h' \<turnstile> ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Conform.hconfD",
     "[| ?P \<turnstile> ?h \<surd>; ?h ?a = \<lfloor>?obj\<rfloor> |]
      ==> ?P,?h \<turnstile> ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Conform.conf_hext",
     "[| ?h \<unlhd> ?h'; ?P,?h \<turnstile> ?v :\<le> ?T |]
      ==> ?P,?h' \<turnstile> ?v :\<le> ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Conform.lconf_hext",
     "[| ?P,?h \<turnstile> ?l (:\<le>) ?E; ?h \<unlhd> ?h' |]
      ==> ?P,?h' \<turnstile> ?l (:\<le>) ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Conform.soconf_hext",
     "[| ?P,?h,?C \<turnstile>\<^sub>s ?obj \<surd>; ?h \<unlhd> ?h' |]
      ==> ?P,?h',?C \<turnstile>\<^sub>s ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Conform.conf_widen",
     "[| ?P,?h \<turnstile> ?v :\<le> ?T; ?P \<turnstile> ?T \<le> ?T' |]
      ==> ?P,?h \<turnstile> ?v :\<le> ?T'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Conform.confs_hext",
     "[| ?P,?h \<turnstile> ?vs [:\<le>] ?Ts; ?h \<unlhd> ?h' |]
      ==> ?P,?h' \<turnstile> ?vs [:\<le>] ?Ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("Conform.oconf_new",
     "[| ?P,?h \<turnstile> ?obj \<surd>; ?h ?a = None |]
      ==> ?P,?h(?a |-> ?x) \<turnstile> ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 3, template_var 1), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 2)
           ))),
    ("Conform.shconf_hnew",
     "[| ?P,?h \<turnstile>\<^sub>s ?sh \<surd>; ?h ?a = None |]
      ==> ?P,?h(?a |-> ?obj) \<turnstile>\<^sub>s ?sh \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 3, template_var 1), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 2)
           ))),
    ("Conform.shconfD",
     "[| ?P,?h \<turnstile>\<^sub>s ?sh \<surd>;
         ?sh ?C = \<lfloor>(?sfs, ?i)\<rfloor> |]
      ==> ?P,?h,?C \<turnstile>\<^sub>s ?sfs \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 2),
             template_var 1)
           ))),
    ("Conform.confs_widens",
     "[| ?P,?h \<turnstile> ?vs [:\<le>] ?Ts;
         ?P \<turnstile> ?Ts [\<le>] ?Ts' |]
      ==> ?P,?h \<turnstile> ?vs [:\<le>] ?Ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 0)
           ))),
    ("Conform.soconf_new",
     "[| ?P,?h,?C \<turnstile>\<^sub>s ?obj \<surd>; ?h ?a = None |]
      ==> ?P,?h(?a |-> ?x),?C \<turnstile>\<^sub>s ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 4, template_var 1), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_var 3),
             template_var 2)
           ))),
    ("Conform.confs_conv_map",
     "(?P,?h \<turnstile> ?vs [:\<le>] ?Ts') =
      (EX Ts.
          map typeof\<^bsub>?h\<^esub> ?vs = map Some Ts &
          ?P \<turnstile> Ts [\<le>] ?Ts')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Conform.shconf_upd_obj",
     "[| ?P,?h \<turnstile>\<^sub>s ?sh \<surd>;
         ?P,?h,?C \<turnstile>\<^sub>s ?sfs' \<surd> |]
      ==> ?P,?h \<turnstile>\<^sub>s ?sh(?C |-> (?sfs', ?i')) \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("Conform.hconf_new",
     "[| ?P \<turnstile> ?h \<surd>; ?h ?a = None;
         ?P,?h \<turnstile> ?obj \<surd> |]
      ==> ?P \<turnstile> ?h(?a |-> ?obj) \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 2, template_var 1), template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Conform.oconf_upd_obj",
     "[| ?P,?h \<turnstile> ?obj \<surd>;
         ?h ?a = \<lfloor>(?C, ?fs)\<rfloor> |]
      ==> ?P,?h(?a |-> (?C, ?fs')) \<turnstile> ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_var 5, template_var 3),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)))),
             template_var 4)
           ))),
    ("Conform.shconf_hupd_obj",
     "[| ?P,?h \<turnstile>\<^sub>s ?sh \<surd>;
         ?h ?a = \<lfloor>(?C, ?fs)\<rfloor> |]
      ==> ?P,?h(?a |-> (?C, ?fs')) \<turnstile>\<^sub>s ?sh \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_var 5, template_var 3),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)))),
             template_var 4)
           ))),
    ("Conform.conf_upd_obj",
     "?h ?a = \<lfloor>(?C, ?fs)\<rfloor> ==>
      (?P,?h(?a |-> (?C, ?fs')) \<turnstile> ?x :\<le> ?T) =
      (?P,?h \<turnstile> ?x :\<le> ?T)",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 7),
                   template_var 6),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 2)))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 7),
             template_var 1),
           template_var 0)))),
    ("Conform.lconf_upd2",
     "[| ?P,?h \<turnstile> ?l (:\<le>) ?E;
         ?P,?h \<turnstile> ?v :\<le> ?T |]
      ==> ?P,?h \<turnstile> ?l(?V |-> ?v) (:\<le>) ?E(?V |-> ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 0),
                 template_app (template_hole 2, template_var 2))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Conform.soconf_upd_obj",
     "[| ?P,?h,?C \<turnstile>\<^sub>s ?obj \<surd>;
         ?h ?a = \<lfloor>(?Ca, ?fs)\<rfloor> |]
      ==> ?P,?h(?a |-> (?Ca, ?fs')),?C \<turnstile>\<^sub>s ?obj \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_var 6, template_var 3),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 7),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 0)))),
               template_var 5),
             template_var 4)
           ))),
    ("Conform.lconf_upd",
     "[| ?P,?h \<turnstile> ?l (:\<le>) ?E; ?P,?h \<turnstile> ?v :\<le> ?T;
         ?E ?V = \<lfloor>?T\<rfloor> |]
      ==> ?P,?h \<turnstile> ?l(?V |-> ?v) (:\<le>) ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_var 3, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_var 3)
           ))),
    ("Conform.confs_Cons2",
     "(?P,?h \<turnstile> ?xs [:\<le>] ?y # ?ys) =
      (EX z zs.
          ?xs = z # zs &
          ?P,?h \<turnstile> z :\<le> ?y &
          ?P,?h \<turnstile> zs [:\<le>] ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Conform.hconf_upd_obj",
     "[| ?P \<turnstile> ?h \<surd>; ?h ?a = \<lfloor>(?C, ?fs)\<rfloor>;
         ?P,?h \<turnstile> (?C, ?fs') \<surd> |]
      ==> ?P \<turnstile> ?h(?a |-> (?C, ?fs')) \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))))
           ))),
    ("Conform.soconf_fupd",
     "[| ?P \<turnstile> ?C has ?F,Static:?T in ?C;
         ?P,?h \<turnstile> ?v :\<le> ?T;
         ?P,?h,?C \<turnstile>\<^sub>s ?sfs \<surd> |]
      ==> ?P,?h,?C \<turnstile>\<^sub>s ?sfs(?F |-> ?v) \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_hole 4),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 2),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 2),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 2),
               template_var 5),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 4),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Conform.oconf_fupd",
     "[| ?P \<turnstile> ?C has ?F,NonStatic:?T in ?D;
         ?P,?h \<turnstile> ?v :\<le> ?T;
         ?P,?h \<turnstile> (?C, ?fs) \<surd> |]
      ==> ?P,?h \<turnstile> (?C, ?fs((?F, ?D) |-> ?v)) \<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_hole 6),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 2),
                template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 7),
                template_var 2),
              template_app
               (template_app (template_hole 3, template_var 6),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 7),
               template_var 2),
             template_app
              (template_app (template_hole 3, template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3)),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Conform.conf_ClassD",
     "?P,?h \<turnstile> ?v :\<le> Class ?C ==>
      ?v = Null |
      (EX a obj T.
          ?v = Addr a &
          ?h a = \<lfloor>obj\<rfloor> &
          obj_ty obj = T & ?P \<turnstile> T \<le> Class ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 13, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_hole 10)),
             template_app (template_hole 9, t_empty))
           ))),
    ("Conform.non_npD",
     "[| ?v ~= Null; ?P,?h \<turnstile> ?v :\<le> Class ?C |]
      ==> EX a C' fs.
             ?v = Addr a &
             ?h a = \<lfloor>(C', fs)\<rfloor> &
             ?P \<turnstile> C' \<preceq>\<^sup>* ?C",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 14)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 1),
                template_var 3),
              template_app (template_hole 12, template_var 0))
            )],
       template_predicate (template_app (template_hole 11, t_empty))))]
