   [("DBM_Basics.distinct_cnt", "distinct ?xs ==> cnt ?x ?xs <= 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)),
         template_hole 0))),
    ("DBM_Basics.cnt_0_I", "?x ~: set ?xs ==> cnt ?x ?xs = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app (template_hole 5, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_hole 0))),
    ("DBM_Basics.FW_not_empty",
     "?u \<turnstile>\<^bsub>?v,?n\<^esub> FW ?M' ?n ==>
      ?u \<turnstile>\<^bsub>?v,?n\<^esub> ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 0),
                      template_var 0),
                    template_var 0),
                  template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("DBM_Basics.sum_gt_neutral_dest",
     "\<one> < ?a + ?b ==> EX d. Le d <= ?a & Le (- d) <= ?b",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("DBM_Basics.dbm_entry_val_mono_2",
     "[| dbm_entry_val ?u None (Some ?c) ?b; ?b \<preceq> ?b' |]
      ==> dbm_entry_val ?u None (Some ?c) ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2),
               template_app (template_hole 1, template_var 2)),
             template_var 0)
           ))),
    ("DBM_Basics.dbm_entry_val_mono_3",
     "[| dbm_entry_val ?u (Some ?c) None ?b; ?b \<preceq> ?b' |]
      ==> dbm_entry_val ?u (Some ?c) None ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2)),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_app (template_hole 2, template_var 2)),
               template_hole 1),
             template_var 0)
           ))),
    ("DBM_Basics.dbm_entry_val_mono_1",
     "[| dbm_entry_val ?u (Some ?c) (Some ?c') ?b; ?b \<preceq> ?b' |]
      ==> dbm_entry_val ?u (Some ?c) (Some ?c') ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app (template_hole 1, template_var 3)),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app (template_hole 1, template_var 3)),
               template_app (template_hole 1, template_var 2)),
             template_var 0)
           ))),
    ("DBM_Basics.upd_2",
     "?i <= ?m ==>
      DBM_upd ?M1.0 ?f (Suc ?m) ?n ?N ?i ?j =
      DBM_upd ?M1.0 ?f (Suc ?m) 0 ?N ?i ?j",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_app (template_hole 1, template_var 5)),
                 template_var 2),
               template_var 1),
             template_var 6),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_app (template_hole 1, template_var 5)),
                 template_hole 0),
               template_var 1),
             template_var 6),
           template_var 0)))),
    ("DBM_Basics.upd_1",
     "?j <= ?n ==>
      DBM_upd ?M1.0 ?f (Suc ?m) ?n ?N (Suc ?m) ?j =
      DBM_upd ?M1.0 ?f (Suc ?m) ?j ?N (Suc ?m) ?j",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_app (template_hole 0, template_var 1)),
                 template_var 4),
               template_var 0),
             template_app (template_hole 0, template_var 1)),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_app (template_hole 0, template_var 1)),
                 template_var 5),
               template_var 0),
             template_app (template_hole 0, template_var 1)),
           template_var 5)))),
    ("DBM_Basics.sum_gt_neutral_dest'",
     "[| \<one> <= ?a; \<one> < ?a + ?b |]
      ==> EX d. Le d <= ?a & Le (- d) <= ?b & (0::?'a) <= d",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 1),
        template_inequation
         (less_than, template_hole 8,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("DBM_Basics.non_empty_cycle_free",
     "[| [?M]\<^bsub>?v,?n\<^esub> ~= {};
         ALL k<=?n. 0 < k --> (EX c. ?v c = k) |]
      ==> cycle_free ?M ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("DBM_Basics.FW_zone_equiv",
     "ALL k<=?n. 0 < k --> (EX c. ?v c = k) ==>
      [?M]\<^bsub>?v,?n\<^esub> = [FW ?M ?n]\<^bsub>?v,?n\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2),
                     template_var 2),
                   template_var 2),
                 template_var 2)),
             template_var 1),
           template_var 2)))),
    ("DBM_Basics.upd_id",
     "[| ?m <= ?N; ?n <= ?N; ?i <= ?m; ?j <= ?n |]
      ==> DBM_upd ?M1.0 ?f ?m ?n ?N ?i ?j = ?f ?i ?j",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_inequation (less_equals, template_var 4, template_var 5),
        template_inequation (less_equals, template_var 3, template_var 6),
        template_inequation (less_equals, template_var 2, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 6),
                 template_var 4),
               template_var 5),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_var 0, template_var 3),
           template_var 2)))),
    ("DBM_Basics.DBM_le_subset",
     "[| ALL i j. i <= ?n --> j <= ?n --> ?M i j \<preceq> ?M' i j;
         ?u : [?M]\<^bsub>?v,?n\<^esub> |]
      ==> ?u : [?M']\<^bsub>?v,?n\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 4))
           ))),
    ("DBM_Basics.neg_diag_empty",
     "[| ALL k<=?n. 0 < k --> (EX c. ?v c = k); ?i <= ?n;
         ?M ?i ?i < \<one> |]
      ==> [?M]\<^bsub>?v,?n\<^esub> = {}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation
         (less_than,
          template_app
           (template_app (template_var 0, template_var 1), template_var 1),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 3),
         template_hole 0))),
    ("DBM_Basics.upd_3",
     "[| ?m <= ?N; ?n <= ?N; ?j <= ?n; ?i <= ?m |]
      ==> DBM_upd ?M1.0 ?f ?m ?n ?N ?i ?j =
          DBM_upd ?M1.0 ?f ?i ?j ?N ?i ?j",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_inequation (less_equals, template_var 4, template_var 5),
        template_inequation (less_equals, template_var 3, template_var 4),
        template_inequation (less_equals, template_var 2, template_var 6)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 6),
                 template_var 4),
               template_var 5),
             template_var 2),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2),
                 template_var 3),
               template_var 5),
             template_var 2),
           template_var 3)))),
    ("DBM_Basics.D_dest",
     "?x =
      ??.Floyd_Warshall.linordered_ab_monoid_add_class.D ?m ?i ?j ?k ==>
      ?x : {len ?m ?i ?j xs |xs.
            set xs <= {0..?k} & ?i ~: set xs & ?j ~: set xs & distinct xs}",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app (template_hole 10, t_empty))
           ))),
    ("DBM_Basics.empty_not_cyc_free",
     "[| ALL c. ?v c <= ?n --> 0 < ?v c; [?M]\<^bsub>?v,?n\<^esub> = {} |]
      ==> ~ (ALL i xs.
                i <= ?n & set xs <= {0..?n} --> \<one> <= len ?M i i xs)",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 0),
              template_var 2),
            template_var 1),
          template_hole 10)],
       template_negation
        (template_predicate (template_app (template_hole 8, t_empty))))),
    ("DBM_Basics.cyc_free_obtains_valuation",
     "[| ALL i xs. i <= ?n & set xs <= {0..?n} --> \<one> <= len ?M i i xs;
         ALL c. ?v c <= ?n --> 0 < ?v c |]
      ==> EX u. u \<turnstile>\<^bsub>?v,?n\<^esub> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("DBM_Basics.cyc_free_not_empty",
     "[| ALL i xs. i <= ?n & set xs <= {0..?n} --> \<one> <= len ?M i i xs;
         ALL c. ?v c <= ?n --> 0 < ?v c |]
      ==> [?M]\<^bsub>?v,?n\<^esub> ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_var 2),
             template_hole 0)
           ))),
    ("DBM_Basics.neg_cycle_empty",
     "[| ALL k<=?n. 0 < k --> (EX c. ?v c = k); set ?xs <= {0..?n};
         ?i <= ?n; len ?M ?i ?i ?xs < \<one> |]
      ==> [?M]\<^bsub>?v,?n\<^esub> = {}",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_app
           (template_app (template_hole 6, template_hole 11),
            template_var 4)),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1),
              template_var 1),
            template_var 2),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3),
           template_var 4),
         template_hole 0))),
    ("DBM_Basics.DBM_val_bounded_neg_cycle",
     "[| ?u \<turnstile>\<^bsub>?v,?n\<^esub> ?M; ?i <= ?n;
         set ?xs <= {0..?n}; len ?M ?i ?i ?xs < \<one>;
         ALL k<=?n. 0 < k --> (EX c. ?v c = k) |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 0),
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 1),
              template_var 1),
            template_var 0),
          template_hole 6),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_hole 0))),
    ("DBM_Basics.not_empty_cyc_free",
     "[| ALL k<=?n. 0 < k --> (EX c. ?v c = k);
         [?M]\<^bsub>?v,?n\<^esub> ~= {} |]
      ==> ALL i xs.
             i <= ?n & set xs <= {0..?n} --> \<one> <= len ?M i i xs",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 1),
                template_var 2),
              template_hole 8)
            )],
       template_predicate (template_app (template_hole 18, t_empty)))),
    ("DBM_Basics.non_empty_dbm_diag_set",
     "[| ALL c.
            0 < ?v c &
            (ALL x y. ?v x <= ?n & ?v y <= ?n & ?v x = ?v y --> x = y);
         [?M]\<^bsub>?v,?n\<^esub> ~= {} |]
      ==> [?M]\<^bsub>?v,?n\<^esub> =
          [(%i j. if i = j then \<one> else ?M i j)]\<^bsub>?v,?n\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2),
                template_var 1),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 2),
           template_var 1)))),
    ("DBM_Basics.FW_detects_empty_zone",
     "[| ALL k<=?n. 0 < k --> (EX c. ?v c = k);
         ALL c. ?v c <= ?n --> 0 < ?v c |]
      ==> ([FW ?M ?n]\<^bsub>?v,?n\<^esub> = {}) =
          (EX i<=?n. FW ?M ?n i i < Le (0::?'b))",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 6, template_var 0),
                           template_var 2),
                         template_var 2),
                       template_var 2),
                     template_var 2)),
                 template_var 1),
               template_var 2)),
           template_hole 5),
         template_app (template_hole 4, t_empty)))),
    ("DBM_Basics.DBM_val_bounded_neg_cycle1",
     "[| ?u \<turnstile>\<^bsub>?v,?n\<^esub> ?M; ?i <= ?n;
         set ?xs <= {0..?n}; len ?M ?i ?i ?xs < \<one>;
         ALL k<=?n. 0 < k --> (EX c. ?v c = k); ?i ~= 0; cnt 0 ?xs <= 1 |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 0),
          template_app
           (template_app (template_hole 14, template_hole 13),
            template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 1),
              template_var 1),
            template_var 0),
          template_hole 10),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 13)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)),
          template_hole 1)],
       template_predicate (template_hole 0))),
    ("DBM_Basics.canonical_empty_zone",
     "[| ALL k<=?n. 0 < k --> (EX c. ?v c = k);
         ALL c. ?v c <= ?n --> 0 < ?v c; canonical ?M ?n |]
      ==> ([?M]\<^bsub>?v,?n\<^esub> = {}) = (EX i<=?n. ?M i i < \<one>)",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1),
               template_var 2)),
           template_hole 3),
         template_app (template_hole 2, t_empty)))),
    ("DBM_Basics.fix_index'",
     "[| Le ?r <= ?M ?i ?j; Le (- ?r) <= ?M ?j ?i; cycle_free ?M ?n;
         canonical ?M ?n; ?i <= ?n; ?j <= ?n; ?i ~= ?j |]
      ==> (ALL u.
              u \<turnstile>\<^bsub>?v,?n\<^esub> %i' j'.
               if i' = ?i & j' = ?j then Le ?r
               else if i' = ?j & j' = ?i then Le (- ?r) else ?M i' j' -->
              u \<turnstile>\<^bsub>?v,?n\<^esub> ?M) &
          cycle_free
           (%i' j'.
               if i' = ?i & j' = ?j then Le ?r
               else if i' = ?j & j' = ?i then Le (- ?r) else ?M i' j')
           ?n",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 5),
          template_app
           (template_app (template_var 4, template_var 3), template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 5)),
          template_app
           (template_app (template_var 4, template_var 2), template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 10, t_empty), template_var 1))
           ))),
    ("DBM_Basics.fix_index",
     "[| \<one> < ?M 0 ?i + ?M ?i 0; cycle_free ?M ?n; canonical ?M ?n;
         ?i <= ?n; ?i ~= 0 |]
      ==> EX M'.
             ((EX u. u \<turnstile>\<^bsub>?v,?n\<^esub> M') -->
              (EX u. u \<turnstile>\<^bsub>?v,?n\<^esub> ?M)) &
             M' 0 ?i + M' ?i 0 = \<one> &
             cycle_free M' ?n &
             (ALL j.
                 ?i ~= j & ?M 0 j + ?M j 0 = \<one> -->
                 M' 0 j + M' j 0 = \<one>) &
             (ALL j.
                 ?i ~= j & \<one> < ?M 0 j + ?M j 0 -->
                 \<one> < M' 0 j + M' j 0)",
     template_implication
      ([template_inequation
         (less_than, template_hole 14,
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app (template_var 3, template_hole 12),
                template_var 2)),
            template_app
             (template_app (template_var 3, template_var 2),
              template_hole 12))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 2, template_hole 12))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("DBM_Basics.fix_indices",
     "[| set ?xs <= {0..?n}; distinct ?xs;
         ALL i xs. i <= ?n & set xs <= {0..?n} --> \<one> <= len ?M i i xs;
         canonical ?M ?n |]
      ==> EX M'.
             ((EX u. u \<turnstile>\<^bsub>?v,?n\<^esub> M') -->
              (EX u. u \<turnstile>\<^bsub>?v,?n\<^esub> ?M)) &
             (ALL i:set ?xs. i ~= 0 --> M' 0 i + M' i 0 = \<one>) &
             (ALL i xs.
                 i <= ?n & set xs <= {0..?n} --> \<one> <= len M' i i xs) &
             (ALL i<=?n.
                 i ~: set ?xs & ?M 0 i + ?M i 0 = \<one> -->
                 M' 0 i + M' i 0 = \<one>)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 20, template_var 3),
          template_app
           (template_app (template_hole 19, template_hole 18),
            template_var 2)),
        template_predicate
         (template_app (template_hole 17, template_var 3)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("DBM_Basics.new_negative_cycle_aux",
     "[| ?i <= ?n; set ?xs <= {0..?n}; cycle_free ?M ?n; length ?xs = ?m;
         len (%i' j'.
                 if i' = ?i & j' = 0 then Le ?d
                 else if i' = 0 & j' = ?i then Le (- ?d) else ?M i' j')
          0 0 (?i # ?xs)
         < \<one> |
         len (%i' j'.
                 if i' = ?i & j' = 0 then Le ?d
                 else if i' = 0 & j' = ?i then Le (- ?d) else ?M i' j')
          ?i ?i (0 # ?xs)
         < \<one>;
         ?i ~= 0 |]
      ==> EX xs.
             set xs <= {0..?n} &
             0 ~: set xs &
             ?i ~: set xs &
             (len (%i' j'.
                      if i' = ?i & j' = 0 then Le ?d
                      else if i' = 0 & j' = ?i then Le (- ?d) else ?M i' j')
               0 0 (?i # xs)
              < \<one> |
              len (%i' j'.
                      if i' = ?i & j' = 0 then Le ?d
                      else if i' = 0 & j' = ?i then Le (- ?d) else ?M i' j')
               ?i ?i (0 # xs)
              < \<one>)",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 3),
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 4)
            ),
        template_equation
         (template_app (template_hole 12, template_var 3), template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 9, t_empty),
                          template_hole 15),
                        template_hole 15),
                      template_app
                       (template_app (template_hole 4, template_var 5),
                        template_var 3))),
                  template_hole 3)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, t_empty),
                        template_var 5),
                      template_var 5),
                    template_app
                     (template_app (template_hole 4, template_hole 15),
                      template_var 3))),
                template_hole 3))
            ),
        template_negation
         (template_equation (template_var 5, template_hole 15))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("DBM_Basics.new_negative_cycle_aux'",
     "[| ?i <= ?n; ?j <= ?n; set ?xs <= {0..?n}; cycle_free ?M ?n;
         length ?xs = ?m;
         len (%i' j'.
                 if i' = ?i & j' = ?j then Le ?d
                 else if i' = ?j & j' = ?i then Le (- ?d) else ?M i' j')
          ?i ?i (?j # ?xs)
         < \<one> |
         len (%i' j'.
                 if i' = ?i & j' = ?j then Le ?d
                 else if i' = ?j & j' = ?i then Le (- ?d) else ?M i' j')
          ?j ?j (?i # ?xs)
         < \<one>;
         ?i ~= ?j |]
      ==> EX xs.
             set xs <= {0..?n} &
             ?j ~: set xs &
             ?i ~: set xs &
             (len (%i' j'.
                      if i' = ?i & j' = ?j then Le ?d
                      else if i' = ?j & j' = ?i then Le (- ?d)
                           else ?M i' j')
               ?i ?i (?j # xs)
              < \<one> |
              len (%i' j'.
                      if i' = ?i & j' = ?j then Le ?d
                      else if i' = ?j & j' = ?i then Le (- ?d)
                           else ?M i' j')
               ?j ?j (?i # xs)
              < \<one>)",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_inequation (less_equals, template_var 4, template_var 5),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 3),
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 5)
            ),
        template_equation
         (template_app (template_hole 12, template_var 3), template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 9, t_empty),
                          template_var 6),
                        template_var 6),
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_var 3))),
                  template_hole 3)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, t_empty),
                        template_var 4),
                      template_var 4),
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_var 3))),
                template_hole 3))
            ),
        template_negation
         (template_equation (template_var 6, template_var 4))],
       template_predicate (template_app (template_hole 1, t_empty))))]
