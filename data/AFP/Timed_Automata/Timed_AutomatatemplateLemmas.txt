   [("Timed_Automata.step_z_sound",
     "?A \<turnstile> \<langle>?l, ?Z\<rangle> \<leadsto> \<langle>?l', ?Z'\<rangle> ==>
      ALL u':?Z'.
         EX u:?Z.
            ?A \<turnstile> \<langle>?l, u\<rangle> \<rightarrow> \<langle>?l',u'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Timed_Automata.step_t_determinacy1",
     "[| ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>\<^bsup>?d\<^esup> \<langle>?l', ?u'\<rangle>;
         ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>\<^bsup>?d\<^esup> \<langle>?l'', ?u''\<rangle> |]
      ==> ?l' = ?l''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 3, template_var 1))),
    ("Timed_Automata.step_t_determinacy2",
     "[| ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>\<^bsup>?d\<^esup> \<langle>?l', ?u'\<rangle>;
         ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>\<^bsup>?d\<^esup> \<langle>?l'', ?u''\<rangle> |]
      ==> ?u' = ?u''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Timed_Automata.step_z_complete1",
     "?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow> \<langle>?l',?u'\<rangle> ==>
      EX Z. ?A \<turnstile> \<langle>?l, {?u}\<rangle> \<leadsto> \<langle>?l', Z\<rangle> &
            ?u' : Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Timed_Automata.steps_z_sound",
     "[| ?A \<turnstile> \<langle>?l, ?Z\<rangle> \<leadsto>* \<langle>?l', ?Z'\<rangle>;
         ?u' : ?Z' |]
      ==> EX u:?Z.
             ?A \<turnstile> \<langle>?l, u\<rangle> \<rightarrow>* \<langle>?l', ?u'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3), t_empty)
           ))),
    ("Timed_Automata.step_z_complete",
     "[| ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow> \<langle>?l',?u'\<rangle>;
         ?u : ?Z |]
      ==> EX Z'.
             ?A \<turnstile> \<langle>?l, ?Z\<rangle> \<leadsto> \<langle>?l', Z'\<rangle> &
             ?u' : Z'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Timed_Automata.steps_z_complete",
     "[| ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>* \<langle>?l', ?u'\<rangle>;
         ?u : ?Z |]
      ==> EX Z'.
             ?A \<turnstile> \<langle>?l, ?Z\<rangle> \<leadsto>* \<langle>?l', Z'\<rangle> &
             ?u' : Z'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Timed_Automata.step_t_cont1",
     "[| (0::?'a) <= ?d; (0::?'a) <= ?e;
         ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>\<^bsup>?d\<^esup> \<langle>?l', ?u'\<rangle>;
         ?A \<turnstile> \<langle>?l', ?u'\<rangle> \<rightarrow>\<^bsup>?e\<^esup> \<langle>?l'', ?u''\<rangle> |]
      ==> ?A \<turnstile> \<langle>?l, ?u\<rangle> \<rightarrow>\<^bsup>?d +
                                  ?e\<^esup> \<langle>?l'', ?u''\<rangle>",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 8),
        template_inequation (less_equals, template_hole 2, template_var 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 8),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 3),
                    template_var 2),
                  template_var 7),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_var 7)),
               template_var 1),
             template_var 0)
           )))]
