Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.Propaedeutics" via "HOL-Library.Countable")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.132s elapsed time, 0.541s cpu time, 0.047s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.198s elapsed time, 0.804s cpu time, 0.047s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.320s elapsed time, 1.280s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.408s elapsed time, 1.630s cpu time, 0.126s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.Propaedeutics")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### Additional type variable(s) in locale specification "countable": 'a
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.994s elapsed time, 3.784s cpu time, 0.905s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.066s elapsed time, 3.914s cpu time, 0.870s GC time
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.309s elapsed time, 4.264s cpu time, 0.937s GC time
Loading theory "Draft.Propaedeutics" (required by "Draft.PropaedeuticsMoreTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.996s elapsed time, 6.228s cpu time, 1.123s GC time
Loading theory "Draft.Templates" (required by "Draft.PropaedeuticsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.128s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PropaedeuticsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.540s elapsed time, 1.146s cpu time, 0.129s GC time
Found termination order: "size_list size <*mlex*> {}"
specification
  agrK_inj: inj agrK
  sesK_inj: inj sesK
  priSK_pubSK: priSK ?X ~= pubSK ?X'
  priSK_symK: priSK ?X ~= symK ?n
  pubSK_symK: pubSK ?X ~= symK ?n
  invK_sesK: invK (sesK ?a) = sesK ?a
  invK_symK: invK (symK ?n) = symK ?n
  symK_bad: [| ?m : bad; symK ?n = symK ?m |] ==> ?n : bad
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "itemsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
### theory "Draft.Propaedeutics"
### 2.911s elapsed time, 4.583s cpu time, 1.006s GC time
Loading theory "Draft.PropaedeuticsMoreTemplates"
val templateLemmas =
   [("Propaedeutics.analz_subset", "?H <= analz ?H",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.items_subset", "?H <= items ?H",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.parts_subset", "?H <= parts ?H",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.analz_items_subset", "analz ?H <= items ?H",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.analz_parts_subset", "analz ?H <= parts ?H",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.items_parts_subset", "items ?H <= parts ?H",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.priSK_symK", "priSK ?X ~= symK ?n",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Propaedeutics.invK_sesK", "invK (sesK ?a) = sesK ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.invK_symK", "invK (symK ?n) = symK ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.analz_idem", "analz (analz ?H) = analz ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.items_idem", "items (items ?H) = items ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.parts_idem", "parts (parts ?H) = parts ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Propaedeutics.priSK_pubSK", "priSK ?X ~= pubSK ?X'",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))
         )),
    ("Propaedeutics.pubSK_symK", "pubSK ?X ~= symK ?n",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Propaedeutics.analz_insert",
     "insert ?X (analz ?H) <= analz (insert ?X ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Propaedeutics.items_insert",
     "insert ?X (items ?H) <= items (insert ?X ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Propaedeutics.parts_insert",
     "insert ?X (parts ?H) <= parts (insert ?X ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Propaedeutics.analz_mono", "?G <= ?H ==> analz ?G <= analz ?H",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Propaedeutics.items_mono", "?G <= ?H ==> items ?G <= items ?H",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Propaedeutics.parts_mono", "?G <= ?H ==> parts ?G <= parts ?H",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Propaedeutics.analzp_analz_eq",
     "analzp (%x. x : ?H) = (%x. x : analz ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Propaedeutics.itemsp_items_eq",
     "itemsp (%x. x : ?H) = (%x. x : items ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Propaedeutics.partsp_parts_eq",
     "partsp (%x. x : ?H) = (%x. x : parts ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Propaedeutics.synthp_synth_eq",
     "synthp (%x. x : ?H) = (%x. x : synth ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("Propaedeutics.analz_simp_insert_1",
     "?X : analz ?H ==> analz (insert ?X ?H) = analz ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Propaedeutics.items_simp_insert_1",
     "?X : items ?H ==> items (insert ?X ?H) = items ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Propaedeutics.synth_analz_fst",
     "\<lbrace>?X, ?Y\<rbrace> : synth (analz ?H) ==>
      ?X : synth (analz ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Propaedeutics.synth_analz_snd",
     "\<lbrace>?X, ?Y\<rbrace> : synth (analz ?H) ==>
      ?Y : synth (analz ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Propaedeutics.items_crypt",
     "items (insert (Crypt ?K ?X) ?H) =
      insert (Crypt ?K ?X) (items (insert ?X ?H))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Propaedeutics.parts_crypt",
     "parts (insert (Crypt ?K ?X) ?H) =
      insert (Crypt ?K ?X) (parts (insert ?X ?H))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Propaedeutics.analz_crypt_in_1",
     "analz (insert (Crypt ?K ?X) ?H)
      <= insert (Crypt ?K ?X) (analz (insert ?X ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Propaedeutics.items_crypt_1",
     "items (insert (Crypt ?K ?X) ?H)
      <= insert (Crypt ?K ?X) (items (insert ?X ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Propaedeutics.parts_crypt_1",
     "parts (insert (Crypt ?K ?X) ?H)
      <= insert (Crypt ?K ?X) (parts (insert ?X ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Propaedeutics.items_crypt_2",
     "insert (Crypt ?K ?X) (items (insert ?X ?H))
      <= items (insert (Crypt ?K ?X) ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Propaedeutics.parts_crypt_2",
     "insert (Crypt ?K ?X) (parts (insert ?X ?H))
      <= parts (insert (Crypt ?K ?X) ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Propaedeutics.symK_bad",
     "[| ?m : bad; symK ?n = symK ?m |] ==> ?n : bad",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)
           ))),
    ("Propaedeutics.set_spies",
     "Says ?i ?j ?k ?A ?B ?X : set ?evs ==> ?X : spies ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Propaedeutics.analz_mpair",
     "analz (insert \<lbrace>?X, ?Y\<rbrace> ?H) =
      insert \<lbrace>?X, ?Y\<rbrace> (analz ({?X, ?Y} Un ?H))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.items_mpair",
     "items (insert \<lbrace>?X, ?Y\<rbrace> ?H) =
      insert \<lbrace>?X, ?Y\<rbrace> (items ({?X, ?Y} Un ?H))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.parts_mpair",
     "parts (insert \<lbrace>?X, ?Y\<rbrace> ?H) =
      insert \<lbrace>?X, ?Y\<rbrace> (parts ({?X, ?Y} Un ?H))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.analz_mpair_1",
     "analz (insert \<lbrace>?X, ?Y\<rbrace> ?H)
      <= insert \<lbrace>?X, ?Y\<rbrace> (analz ({?X, ?Y} Un ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.items_mpair_1",
     "items (insert \<lbrace>?X, ?Y\<rbrace> ?H)
      <= insert \<lbrace>?X, ?Y\<rbrace> (items ({?X, ?Y} Un ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.parts_mpair_1",
     "parts (insert \<lbrace>?X, ?Y\<rbrace> ?H)
      <= insert \<lbrace>?X, ?Y\<rbrace> (parts ({?X, ?Y} Un ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.analz_mpair_2",
     "insert \<lbrace>?X, ?Y\<rbrace> (analz ({?X, ?Y} Un ?H))
      <= analz (insert \<lbrace>?X, ?Y\<rbrace> ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 0))),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Propaedeutics.items_mpair_2",
     "insert \<lbrace>?X, ?Y\<rbrace> (items ({?X, ?Y} Un ?H))
      <= items (insert \<lbrace>?X, ?Y\<rbrace> ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 0))),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Propaedeutics.parts_mpair_2",
     "insert \<lbrace>?X, ?Y\<rbrace> (parts ({?X, ?Y} Un ?H))
      <= parts (insert \<lbrace>?X, ?Y\<rbrace> ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 0))),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Propaedeutics.items_pri_agrk_out",
     "Pri_AgrK ?x ~: parts ?H ==>
      items (insert (Pri_AgrK ?x) ?H) = insert (Pri_AgrK ?x) (items ?H)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Propaedeutics.parts_auth_data",
     "parts (insert (Auth_Data ?x ?y) ?H) =
      {Pri_AgrK ?x, Pri_AgrK ?y, Auth_Data ?x ?y} Un parts ?H",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_hole 0)))),
         template_app (template_hole 5, template_var 0)))),
    ("Propaedeutics.analz_auth_data_in_1",
     "analz (insert (Auth_Data ?x ?y) ?H)
      <= insert (Auth_Data ?x ?y)
          (analz ({Pri_AgrK ?x, Pri_AgrK ?y} Un ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 2)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.items_auth_data_in_1",
     "items (insert (Auth_Data ?x ?y) ?H)
      <= insert (Auth_Data ?x ?y)
          (items ({Pri_AgrK ?x, Pri_AgrK ?y} Un ?H))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 2)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0))),
             template_var 0))))),
    ("Propaedeutics.parts_auth_data_1",
     "parts (insert (Auth_Data ?x ?y) ?H)
      <= {Pri_AgrK ?x, Pri_AgrK ?y, Auth_Data ?x ?y} Un parts ?H",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_hole 0)))),
         template_app (template_hole 5, template_var 0)))),
    ("Propaedeutics.parts_auth_data_2",
     "{Pri_AgrK ?x, Pri_AgrK ?y, Auth_Data ?x ?y} Un parts ?H
      <= parts (insert (Auth_Data ?x ?y) ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1)),
                 template_hole 1)))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Propaedeutics.analz_crypt_out",
     "Key (invK ?K) ~: analz ?H ==>
      analz (insert (Crypt ?K ?X) ?H) = insert (Crypt ?K ?X) (analz ?H)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_var 2))),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app (template_hole 3, template_var 1))))),
    ("Propaedeutics.synth_auth_data",
     "Auth_Data ?x ?y : synth ?H ==>
      Auth_Data ?x ?y : ?H | Pri_AgrK ?x : ?H & Pri_AgrK ?y : ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 0, template_var 2)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 0, template_var 1)),
                 template_var 0)))
           ))),
    ("Propaedeutics.synth_crypt",
     "Crypt ?K ?X : synth ?H ==>
      Crypt ?K ?X : ?H | ?X : synth ?H & Key ?K : ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("Propaedeutics.analz_crypt_in",
     "Key (invK ?K) : analz ?H ==>
      analz (insert (Crypt ?K ?X) ?H) =
      insert (Crypt ?K ?X) (analz (insert ?X ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))))),
    ("Propaedeutics.analz_crypt_in_2",
     "Key (invK ?K) : analz ?H ==>
      insert (Crypt ?K ?X) (analz (insert ?X ?H))
      <= analz (insert (Crypt ?K ?X) ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1))))),
    ("Propaedeutics.synth_mpair",
     "\<lbrace>?X, ?Y\<rbrace> : synth ?H ==>
      \<lbrace>?X, ?Y\<rbrace> : ?H | ?X : synth ?H & ?Y : synth ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("Propaedeutics.analz_auth_data_out",
     "[| Pri_AgrK ?x ~: analz ?H; Pri_AgrK ?y ~: analz ?H |]
      ==> analz (insert (Auth_Data ?x ?y) ?H) =
          insert (Auth_Data ?x ?y) (analz ?H)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app (template_hole 3, template_var 1))))),
    ("Propaedeutics.items_auth_data_out",
     "[| Pri_AgrK ?x ~: items ?H; Pri_AgrK ?y ~: items ?H |]
      ==> items (insert (Auth_Data ?x ?y) ?H) =
          insert (Auth_Data ?x ?y) (items ?H)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app (template_hole 3, template_var 1))))),
    ("Propaedeutics.synth_simp_intro",
     "[| ?X : synth ?H;
         ?X : range Nonce Un range Key Un range Passwd Un range Pri_AgrK Un
              range Pub_AgrK |]
      ==> ?X : ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app
                           (template_app
                             (template_hole 11,
                              template_app
                               (template_app
                                 (template_hole 10, template_hole 9),
                                template_hole 8)),
                            template_app
                             (template_app
                               (template_hole 10, template_hole 7),
                              template_hole 8))),
                        template_app
                         (template_app (template_hole 10, template_hole 6),
                          template_hole 8))),
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_hole 3))),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 13, template_var 1),
             template_var 0)
           ))),
    ("Propaedeutics.analz_auth_data_in",
     "Pri_AgrK ?x : analz ?H | Pri_AgrK ?y : analz ?H ==>
      analz (insert (Auth_Data ?x ?y) ?H) =
      insert (Auth_Data ?x ?y) (analz ({Pri_AgrK ?x, Pri_AgrK ?y} Un ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 5, template_var 1))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 5, template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_var 0)),
                     template_hole 0))),
               template_var 1)))))),
    ("Propaedeutics.analz_auth_data_in_2",
     "Pri_AgrK ?x : analz ?H | Pri_AgrK ?y : analz ?H ==>
      insert (Auth_Data ?x ?y) (analz ({Pri_AgrK ?x, Pri_AgrK ?y} Un ?H))
      <= analz (insert (Auth_Data ?x ?y) ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 5, template_var 1))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 5, template_var 1)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_var 0)),
                     template_hole 0))),
               template_var 1))),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1))))),
    ("Propaedeutics.items_auth_data_in",
     "Pri_AgrK ?x : items ?H | Pri_AgrK ?y : items ?H ==>
      items (insert (Auth_Data ?x ?y) ?H) =
      insert (Auth_Data ?x ?y) (items ({Pri_AgrK ?x, Pri_AgrK ?y} Un ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 5, template_var 1))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 5, template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_var 0)),
                     template_hole 0))),
               template_var 1)))))),
    ("Propaedeutics.items_auth_data_in_2",
     "Pri_AgrK ?x : items ?H | Pri_AgrK ?y : items ?H ==>
      insert (Auth_Data ?x ?y) (items ({Pri_AgrK ?x, Pri_AgrK ?y} Un ?H))
      <= items (insert (Auth_Data ?x ?y) ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 5, template_var 1))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 5, template_var 1)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_var 0)),
                     template_hole 0))),
               template_var 1))),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1))))),
    ("Propaedeutics.analz_simp_insert_2",
     "?X : range Agent Un range Number Un range Nonce Un range Hash Un
           range Passwd Un
           range Pub_AgrK ==>
      analz (insert ?X ?H) = insert ?X (analz ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app
                         (template_hole 17,
                          template_app
                           (template_app
                             (template_hole 17,
                              template_app
                               (template_app
                                 (template_hole 17,
                                  template_app
                                   (template_app
                                     (template_hole 16, template_hole 15),
                                    template_hole 14)),
                                template_app
                                 (template_app
                                   (template_hole 13, template_hole 12),
                                  template_hole 11))),
                            template_app
                             (template_app
                               (template_hole 13, template_hole 10),
                              template_hole 11))),
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_hole 7))),
                    template_app
                     (template_app (template_hole 13, template_hole 6),
                      template_hole 11))),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Propaedeutics.analz_simp",
     "?H <= range Agent Un range Number Un range Nonce Un range Key Un
            range Hash Un
            range Passwd Un
            range Pri_AgrK Un
            range Pub_AgrK ==>
      analz ?H = ?H",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 20,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_app
                                 (template_hole 20,
                                  template_app
                                   (template_app
                                     (template_hole 20,
template_app
 (template_app (template_hole 19, template_hole 18), template_hole 17)),
                                    template_app
                                     (template_app
 (template_hole 16, template_hole 15),
template_hole 14))),
                                template_app
                                 (template_app
                                   (template_hole 16, template_hole 13),
                                  template_hole 14))),
                            template_app
                             (template_app
                               (template_hole 16, template_hole 12),
                              template_hole 14))),
                        template_app
                         (template_app (template_hole 11, template_hole 10),
                          template_hole 9))),
                    template_app
                     (template_app (template_hole 16, template_hole 8),
                      template_hole 14))),
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5))),
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_hole 2)))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Propaedeutics.items_simp",
     "?H <= range Agent Un range Number Un range Nonce Un range Key Un
            range Hash Un
            range Passwd Un
            range Pri_AgrK Un
            range Pub_AgrK ==>
      items ?H = ?H",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 20,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_app
                                 (template_hole 20,
                                  template_app
                                   (template_app
                                     (template_hole 20,
template_app
 (template_app (template_hole 19, template_hole 18), template_hole 17)),
                                    template_app
                                     (template_app
 (template_hole 16, template_hole 15),
template_hole 14))),
                                template_app
                                 (template_app
                                   (template_hole 16, template_hole 13),
                                  template_hole 14))),
                            template_app
                             (template_app
                               (template_hole 16, template_hole 12),
                              template_hole 14))),
                        template_app
                         (template_app (template_hole 11, template_hole 10),
                          template_hole 9))),
                    template_app
                     (template_app (template_hole 16, template_hole 8),
                      template_hole 14))),
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5))),
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_hole 2)))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Propaedeutics.parts_simp",
     "?H <= range Agent Un range Number Un range Nonce Un range Key Un
            range Hash Un
            range Passwd Un
            range Pri_AgrK Un
            range Pub_AgrK ==>
      parts ?H = ?H",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 20,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_app
                                 (template_hole 20,
                                  template_app
                                   (template_app
                                     (template_hole 20,
template_app
 (template_app (template_hole 19, template_hole 18), template_hole 17)),
                                    template_app
                                     (template_app
 (template_hole 16, template_hole 15),
template_hole 14))),
                                template_app
                                 (template_app
                                   (template_hole 16, template_hole 13),
                                  template_hole 14))),
                            template_app
                             (template_app
                               (template_hole 16, template_hole 12),
                              template_hole 14))),
                        template_app
                         (template_app (template_hole 11, template_hole 10),
                          template_hole 9))),
                    template_app
                     (template_app (template_hole 16, template_hole 8),
                      template_hole 14))),
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5))),
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_hole 2)))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Propaedeutics.items_simp_insert_2",
     "?X : range Agent Un range Number Un range Nonce Un range Key Un
           range Hash Un
           range Passwd Un
           range Pub_AgrK ==>
      items (insert ?X ?H) = insert ?X (items ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_hole 18,
                          template_app
                           (template_app
                             (template_hole 18,
                              template_app
                               (template_app
                                 (template_hole 18,
                                  template_app
                                   (template_app
                                     (template_hole 18,
template_app
 (template_app (template_hole 17, template_hole 16), template_hole 15)),
                                    template_app
                                     (template_app
 (template_hole 14, template_hole 13),
template_hole 12))),
                                template_app
                                 (template_app
                                   (template_hole 14, template_hole 11),
                                  template_hole 12))),
                            template_app
                             (template_app
                               (template_hole 14, template_hole 10),
                              template_hole 12))),
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_hole 7))),
                    template_app
                     (template_app (template_hole 14, template_hole 6),
                      template_hole 12))),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Propaedeutics.parts_simp_insert",
     "?X : range Agent Un range Number Un range Nonce Un range Key Un
           range Hash Un
           range Passwd Un
           range Pri_AgrK Un
           range Pub_AgrK ==>
      parts (insert ?X ?H) = insert ?X (parts ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 1),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app
                     (template_hole 21,
                      template_app
                       (template_app
                         (template_hole 21,
                          template_app
                           (template_app
                             (template_hole 21,
                              template_app
                               (template_app
                                 (template_hole 21,
                                  template_app
                                   (template_app
                                     (template_hole 21,
template_app
 (template_app
   (template_hole 21,
    template_app
     (template_app (template_hole 20, template_hole 19), template_hole 18)),
  template_app
   (template_app (template_hole 17, template_hole 16), template_hole 15))),
                                    template_app
                                     (template_app
 (template_hole 17, template_hole 14),
template_hole 15))),
                                template_app
                                 (template_app
                                   (template_hole 17, template_hole 13),
                                  template_hole 15))),
                            template_app
                             (template_app
                               (template_hole 12, template_hole 11),
                              template_hole 10))),
                        template_app
                         (template_app (template_hole 17, template_hole 9),
                          template_hole 15))),
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_hole 6))),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 1, template_var 0)))))]:
   (string * thm * template) list
### theory "Draft.PropaedeuticsMoreTemplates"
### 0.375s elapsed time, 0.549s cpu time, 0.087s GC time
val it = (): unit
