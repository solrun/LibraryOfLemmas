Loading theory "HOL-Library.Stream" (required by "Draft.PAC_More_PolyTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.PAC_More_Poly" (required by "Draft.PAC_More_PolyTemplates")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PAC_More_PolyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.PAC_More_PolyTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Set_Algebras"
### 0.259s elapsed time, 1.030s cpu time, 0.069s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PAC_More_PolyTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.938s elapsed time, 3.567s cpu time, 0.437s GC time
"(x', u, lookup u x', A)"
  :: "'a * ('a \<Rightarrow>\<^sub>0 'b) * 'b * 'c"
### theory "Draft.PAC_More_Poly"
### 1.187s elapsed time, 4.344s cpu time, 1.030s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.017s elapsed time, 3.502s cpu time, 0.961s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.116s elapsed time, 5.513s cpu time, 1.201s GC time
Loading theory "Draft.Templates" (required by "Draft.PAC_More_PolyTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.067s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PAC_More_PolyTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.470s elapsed time, 0.478s cpu time, 0.000s GC time
Loading theory "Draft.PAC_More_PolyTemplates"
val templateLemmas =
   [("PAC_More_Poly.vars_uminus", "vars (- ?p) = vars ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PAC_More_Poly.Const_uminus", "Const (- ?n) = - Const ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("PAC_More_Poly.coeff_MPoly_monomial",
     "MPoly_Type.coeff (MPoly (monomial ?a ?m)) ?m = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 1),
       template_var 0)),
    ("PAC_More_Poly.degree_uminus",
     "MPoly_Type.degree (- ?A) ?x' = MPoly_Type.degree ?A ?x'",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("PAC_More_Poly.coeff_uminus",
     "MPoly_Type.coeff (- ?p) ?x = - MPoly_Type.coeff ?p ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("PAC_More_Poly.Const_mult", "Const (?a * ?b) = Const ?a * Const ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PAC_More_Poly.Const_add", "Const (?a + ?b) = Const ?a + Const ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PAC_More_Poly.Const\<^sub>0_mult",
     "Const\<^sub>0 (?a * ?b) = Const\<^sub>0 ?a * Const\<^sub>0 ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PAC_More_Poly.Const\<^sub>0_add",
     "Const\<^sub>0 (?a + ?b) = Const\<^sub>0 ?a + Const\<^sub>0 ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PAC_More_Poly.lookup_monomial_If",
     "lookup (monomial ?v ?k) = (%k'. if ?k = k' then ?v else (0::?'b))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       t_empty)),
    ("PAC_More_Poly.polynomial_sum_monoms",
     "?p =
      (SUM x:keys (mapping_of ?p).
          MPoly_Type.monom x (MPoly_Type.coeff ?p x))",
     template_equation
      (template_var 0,
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PAC_More_Poly.degree_notin_vars",
     "?x ~: vars ?B ==> MPoly_Type.degree ?B ?x = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("PAC_More_Poly.coeff_minus",
     "MPoly_Type.coeff ?p ?m - MPoly_Type.coeff ?q ?m =
      MPoly_Type.coeff (?p - ?q) ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("PAC_More_Poly.vars_mult_Const",
     "vars (Const ?n * ?a) = (if ?n = 0 then {} else vars ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_hole 0),
             template_app (template_hole 6, template_var 0))
           ))),
    ("PAC_More_Poly.degree_times_le",
     "MPoly_Type.degree (?A * ?B) ?x
      <= MPoly_Type.degree ?A ?x + MPoly_Type.degree ?B ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("PAC_More_Poly.ideal_mult_right_in",
     "?a : More_Modules.ideal ?A ==> ?a * ?b : More_Modules.ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("PAC_More_Poly.ideal_mult_right_in2",
     "?a : More_Modules.ideal ?A ==> ?b * ?a : More_Modules.ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("PAC_More_Poly.vars_mult_Var",
     "vars (Var ?x * ?p) = (if ?p = 0 then {} else insert ?x (vars ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 7, template_var 0)))
           ))),
    ("PAC_More_Poly.not_in_vars_coeff0",
     "?x ~: vars ?p ==>
      MPoly_Type.coeff ?p (monomial (Suc 0) ?x) = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app (template_hole 6, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("PAC_More_Poly.keys_add'",
     "?p : keys (?f + ?g) ==> ?p : keys ?f Un keys ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("PAC_More_Poly.vars_minus_Var_subset",
     "vars (?p' - Var ?x) <= ?\<V> ==> vars ?p' <= insert ?x ?\<V>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PAC_More_Poly.vars_add_Var_subset",
     "vars (?p' + Var ?x) <= ?\<V> ==> vars ?p' <= insert ?x ?\<V>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PAC_More_Poly.coeff_monomila_in_varsD",
     "MPoly_Type.coeff ?p (monomial (Suc 0) ?x) ~= 0 ==> ?x : vars ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app (template_hole 4, template_hole 3))),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("PAC_More_Poly.degree_mult_Var",
     "MPoly_Type.degree (?A * Var ?x') ?x' =
      (if ?A = 0 then 0 else Suc (MPoly_Type.degree ?A ?x'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app (template_hole 5, template_var 0))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0)))
           ))),
    ("PAC_More_Poly.degree_mult_Var'",
     "MPoly_Type.degree (Var ?x' * ?A) ?x' =
      (if ?A = 0 then 0 else Suc (MPoly_Type.degree ?A ?x'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 1)))
           ))),
    ("PAC_More_Poly.degree_sum_notin",
     "?x' ~: vars ?B ==>
      MPoly_Type.degree (?A + ?B) ?x' = MPoly_Type.degree ?A ?x'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("PAC_More_Poly.vars_mult_monom",
     "vars (?p * MPoly_Type.monom (monomial (Suc 0) ?x') 1) =
      (if ?p = 0 then {} else insert ?x' (vars ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 0),
                      template_app (template_hole 7, template_hole 6))),
                  template_hole 5)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 11, template_var 1)))
           ))),
    ("PAC_More_Poly.keys_mult_monomial",
     "keys (monomial ?n ?k * mapping_of ?a) =
      (if ?n = 0 then {} else (+) ?k ` keys (mapping_of ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1)),
                template_app (template_hole 6, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3)),
               template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_app
                (template_hole 9,
                 template_app (template_hole 6, template_var 0))))
           ))),
    ("PAC_More_Poly.MPoly_monomial_power'",
     "MPoly (monomial (1::?'a) ?x') ^ (?n + 1) =
      MPoly (monomial (1::?'a) (((%x. x + ?x') ^^ ?n) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 4))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0), t_empty),
               template_var 1)),
           template_hole 4)))),
    ("PAC_More_Poly.in_keys_minusI1",
     "[| ?t : keys ?p; ?t ~: keys ?q |] ==> ?t : keys (?p - ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("PAC_More_Poly.in_keys_minusI2",
     "[| ?t : keys ?q; ?t ~: keys ?p |] ==> ?t : keys (?p - ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("PAC_More_Poly.vars_in_right_only",
     "[| ?x : vars ?q; ?x ~: vars ?p |] ==> ?x : vars (?p + ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("PAC_More_Poly.keys_mapping_sum_add",
     "finite ?A ==>
      keys (mapping_of (sum ?f ?A))
      <= \<Union> (keys ` mapping_of ` range ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 1))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 7),
             template_app
              (template_app (template_hole 2, template_hole 6),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))))))),
    ("PAC_More_Poly.finit_whenI",
     "finite {x. 0 < ?y x} ==> finite {x. 0 < (?y x when x ~= ?x')}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6, template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("PAC_More_Poly.vars_Un_nointer",
     "keys (mapping_of ?p) Int keys (mapping_of ?q) = {} ==>
      vars (?p + ?q) = vars ?p Un vars ?q",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1))),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("PAC_More_Poly.polynomial_sum_monoms",
     "[| keys (mapping_of ?p) <= ?I; finite ?I |]
      ==> ?p = (SUM x:?I. MPoly_Type.monom x (MPoly_Type.coeff ?p x))",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1)),
          template_var 0),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("PAC_More_Poly.Max_Suc_Suc_Max",
     "[| finite ?A; ?A ~= {} |]
      ==> Max (insert 0 (Suc ` ?A)) = Suc (Max (insert 0 ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))))),
    ("PAC_More_Poly.monomial_inj",
     "(monomial ?c ?s = monomial ?d ?t) =
      (?c = (0::?'b) & ?d = (0::?'b) | ?c = ?d & ?s = ?t)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("PAC_More_Poly.MPoly_monomial_power",
     "0 < ?n ==>
      MPoly (monomial (1::?'a) ?x') ^ ?n =
      MPoly (monomial (1::?'a) (((%x. x + ?x') ^^ (?n - 1)) ?x'))",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))),
           template_var 1),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_hole 1)),
                   t_empty),
                 template_var 0)),
             template_hole 4))))),
    ("PAC_More_Poly.remove_key_lookup",
     "lookup (decrease_key ?k0.0 ?f) ?k =
      (if ?k = ?k0.0 & lookup ?f ?k ~= (0::?'a) then lookup ?f ?k - (1::?'a)
       else lookup ?f ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 2)),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_var 1),
                           template_var 0)),
                       template_hole 2)))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 0)),
                 template_hole 0)),
             template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0))
           ))),
    ("PAC_More_Poly.ideal_insert'",
     "More_Modules.ideal (insert ?a ?S) =
      {x + k * ?a |x k. x : More_Modules.ideal ?S}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("PAC_More_Poly.vars_unE",
     "[| ?x : vars (?a * ?b); ?x : vars ?a ==> ?thesis;
         ?x : vars ?b ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 2))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PAC_More_Poly.in_vars_addE",
     "[| ?x : vars (?p + ?q); ?x : vars ?p ==> ?thesis;
         ?x : vars ?q ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 2))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PAC_More_Poly.in_mapping_mult_single",
     "(?x : (%x. lookup x ?x') ` keys (?A * Var\<^sub>0 ?x')) =
      (0 < ?x & ?x - 1 : (%x. lookup x ?x') ` keys ?A)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 2),
         template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app (template_hole 5, template_var 1))))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 2)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)),
           template_app
            (template_app (template_hole 9, t_empty),
             template_app (template_hole 7, template_var 0)))))),
    ("PAC_More_Poly.polynomial_split_on_var",
     "(!!q r.
          [| ?p = MPoly_Type.monom (monomial (Suc 0) ?x') (1::?'a) * q + r;
             ?x' ~: vars r |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("PAC_More_Poly.polynomial_decomp_alien_var",
     "[| ?q = ?A * MPoly_Type.monom (monomial (Suc 0) ?x') 1 + ?b;
         ?x' ~: vars ?q; ?x' ~: vars ?b |]
      ==> ?A = 0",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_app (template_hole 6, template_hole 5))),
                  template_hole 4))),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_equation (template_var 2, template_hole 0))),
    ("PAC_More_Poly.polynomial_decomp_alien_var",
     "[| ?q = ?A * MPoly_Type.monom (monomial (Suc 0) ?x') 1 + ?b;
         ?x' ~: vars ?q; ?x' ~: vars ?b |]
      ==> ?q = ?b",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_app (template_hole 5, template_hole 4))),
                  template_hole 3))),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app (template_hole 0, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app (template_hole 0, template_var 0))
                )
            )],
       template_equation (template_var 3, template_var 0))),
    ("PAC_More_Poly.polynomial_split_on_var2",
     "[| ?x' ~: vars ?s;
         !!q r.
            [| ?p =
               (MPoly_Type.monom (monomial (Suc 0) ?x') 1 - ?s) * q + r;
               ?x' ~: vars r |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("PAC_More_Poly.polynomial_decomp_alien_var2",
     "[| ?q = ?A * (MPoly_Type.monom (monomial (Suc 0) ?x') 1 + ?p) + ?b;
         ?x' ~: vars ?q; ?x' ~: vars ?b; ?x' ~: vars ?p |]
      ==> ?A = 0",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 3),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 2),
                          template_app (template_hole 6, template_hole 5))),
                      template_hole 4)),
                  template_var 1))),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 4))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_equation (template_var 3, template_hole 0))),
    ("PAC_More_Poly.polynomial_decomp_alien_var2",
     "[| ?q = ?A * (MPoly_Type.monom (monomial (Suc 0) ?x') 1 + ?p) + ?b;
         ?x' ~: vars ?q; ?x' ~: vars ?b; ?x' ~: vars ?p |]
      ==> ?q = ?b",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_var 2),
                          template_app (template_hole 5, template_hole 4))),
                      template_hole 3)),
                  template_var 1))),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 0, template_var 4))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 0, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_equation (template_var 4, template_var 0))),
    ("PAC_More_Poly.vars_sum_vars_union",
     "finite {v. ?f v ~= 0} ==>
      vars (SUM v | ?f v ~= 0. ?f v * v)
      <= \<Union> (vars ` {v. ?f v ~= 0}) Un
         \<Union> (vars ` ?f ` {v. ?f v ~= 0})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12, template_app (template_hole 11, t_empty))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 11, t_empty))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_app (template_hole 11, t_empty)))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 6),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 11, t_empty)))))))),
    ("PAC_More_Poly.polynomial_split_on_var_diff_sq2",
     "(!!q r s.
          [| ?p =
             MPoly_Type.monom (monomial (Suc 0) ?x') 1 * q + r +
             s *
             ((MPoly_Type.monom (monomial (Suc 0) ?x') 1)\<^sup>2 -
              MPoly_Type.monom (monomial (Suc 0) ?x') 1);
             ?x' ~: vars r; ?x' ~: vars q |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.PAC_More_PolyTemplates"
### 0.672s elapsed time, 0.909s cpu time, 0.152s GC time
val it = (): unit
