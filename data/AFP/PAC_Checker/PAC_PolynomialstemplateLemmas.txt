   [("PAC_Polynomials.normalized_poly_normalize_poly",
     "normalized_poly (normalize_poly ?p)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PAC_Polynomials.comp_comp_fun_commute",
     "comp_fun_commute (add_to_coefficient o ?g)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("PAC_Polynomials.comp_comp_fun_commute_on",
     "comp_fun_commute_on ?R (add_to_coefficient o ?g)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("PAC_Polynomials.mult_poly_by_monom_simps",
     "mult_poly_by_monom ?t {#} = {#}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("PAC_Polynomials.ffold_empty", "ffold ?f ?z {||} = ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("PAC_Polynomials.comp_fun_commute_funpow",
     "comp_fun_commute (%x. add_to_coefficient x ^^ ?g x)",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("PAC_Polynomials.comp_fun_commute_on_funpow",
     "comp_fun_commute_on UNIV (%x. add_to_coefficient x ^^ ?g x)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2), t_empty)
         )),
    ("PAC_Polynomials.fold_graph_finite",
     "fold_graph add_to_coefficient ?z ?A ?y ==> finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("PAC_Polynomials.fold_mset_single",
     "fold_mset add_to_coefficient ?s {#?x#} = add_to_coefficient ?x ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("PAC_Polynomials.comp_fun_commute",
     "add_to_coefficient ?y o add_to_coefficient ?x =
      add_to_coefficient ?x o add_to_coefficient ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("PAC_Polynomials.fold_set_fold_remdups",
     "Finite_Set.fold add_to_coefficient ?y (set ?xs) =
      fold add_to_coefficient (remdups ?xs) ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 3),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("PAC_Polynomials.fun_left_comm",
     "add_to_coefficient ?y (add_to_coefficient ?x ?z) =
      add_to_coefficient ?x (add_to_coefficient ?y ?z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("PAC_Polynomials.normalized_poly_mono",
     "[| normalized_poly ?B; ?A <=# ?B |] ==> normalized_poly ?A",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("PAC_Polynomials.fold_graph_fold",
     "finite ?A ==>
      fold_graph add_to_coefficient ?z ?A
       (Finite_Set.fold add_to_coefficient ?z ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 1),
                 template_var 0),
               template_var 1))
           ))),
    ("PAC_Polynomials.mult_poly_by_monom_simps",
     "mult_poly_by_monom ?t (?ps + ?qs) =
      mult_poly_by_monom ?t ?ps + mult_poly_by_monom ?t ?qs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("PAC_Polynomials.fold_mset_add_mset",
     "fold_mset add_to_coefficient ?s (add_mset ?x ?M) =
      add_to_coefficient ?x (fold_mset add_to_coefficient ?s ?M)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 0)))),
    ("PAC_Polynomials.ffold_fun_left_comm",
     "add_to_coefficient ?x (ffold add_to_coefficient ?z ?A) =
      ffold add_to_coefficient (add_to_coefficient ?x ?z) ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("PAC_Polynomials.fold_mset_fun_left_comm",
     "add_to_coefficient ?x (fold_mset add_to_coefficient ?s ?M) =
      fold_mset add_to_coefficient (add_to_coefficient ?x ?s) ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("PAC_Polynomials.fold_equality",
     "fold_graph add_to_coefficient ?z ?A ?y ==>
      Finite_Set.fold add_to_coefficient ?z ?A = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("PAC_Polynomials.fold_mset_union",
     "fold_mset add_to_coefficient ?s (?M + ?N) =
      fold_mset add_to_coefficient (fold_mset add_to_coefficient ?s ?M) ?N",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("PAC_Polynomials.add_poly_p_empty_l",
     "add_poly_p^** (?p, ?q, ?r) ({#}, ?q, ?p + ?r)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 3, template_hole 1),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("PAC_Polynomials.add_poly_p_empty_r",
     "add_poly_p^** (?p, ?q, ?r) (?p, {#}, ?q + ?r)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("PAC_Polynomials.commute_left_comp",
     "add_to_coefficient ?y o (add_to_coefficient ?x o ?g) =
      add_to_coefficient ?x o (add_to_coefficient ?y o ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("PAC_Polynomials.ffold_finsert_fremove",
     "ffold add_to_coefficient ?z (finsert ?x ?A) =
      add_to_coefficient ?x (ffold add_to_coefficient ?z (?A |-| {|?x|}))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0)))))),
    ("PAC_Polynomials.fold_fun_left_comm",
     "finite ?A ==>
      add_to_coefficient ?x (Finite_Set.fold add_to_coefficient ?z ?A) =
      Finite_Set.fold add_to_coefficient (add_to_coefficient ?x ?z) ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 1),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("PAC_Polynomials.fold_graph_determ",
     "[| fold_graph add_to_coefficient ?z ?A ?x;
         fold_graph add_to_coefficient ?z ?A ?y |]
      ==> ?y = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("PAC_Polynomials.ffold_finsert2",
     "?x |\<notin>| ?A ==>
      ffold add_to_coefficient ?z (finsert ?x ?A) =
      ffold add_to_coefficient (add_to_coefficient ?x ?z) ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("PAC_Polynomials.ffold_finsert",
     "?x |\<notin>| ?A ==>
      ffold add_to_coefficient ?z (finsert ?x ?A) =
      add_to_coefficient ?x (ffold add_to_coefficient ?z ?A)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_var 1))))),
    ("PAC_Polynomials.ffold_rec",
     "?x |\<in>| ?A ==>
      ffold add_to_coefficient ?z ?A =
      add_to_coefficient ?x (ffold add_to_coefficient ?z (?A |-| {|?x|}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))))))),
    ("PAC_Polynomials.mult_poly_by_monom_simps",
     "mult_poly_by_monom ?a (add_mset ?p ?ps) =
      add_mset (fst ?a + fst ?p, snd ?a * snd ?p)
       (mult_poly_by_monom ?a ?ps)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_app (template_hole 0, template_var 1)))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 0)))),
    ("PAC_Polynomials.fold_insert_remove",
     "finite ?A ==>
      Finite_Set.fold add_to_coefficient ?z (insert ?x ?A) =
      add_to_coefficient ?x
       (Finite_Set.fold add_to_coefficient ?z (?A - {?x}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 0))))))),
    ("PAC_Polynomials.normalized_poly_simps",
     "normalized_poly (add_mset ?t ?p) =
      (snd ?t ~= 0 & fst ?t ~:# fst `# ?p & normalized_poly ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 1)),
                   template_hole 4))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_hole 2),
                         template_var 0))))),
               template_app (template_hole 10, template_var 0)))
           ))),
    ("PAC_Polynomials.add_poly_p_sym",
     "add_poly_p (?p, ?q, ?r) (?p', ?q', ?r') =
      add_poly_p (?q, ?p, ?r) (?q', ?p', ?r')",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("PAC_Polynomials.fold_insert2",
     "[| finite ?A; ?x ~: ?A |]
      ==> Finite_Set.fold add_to_coefficient ?z (insert ?x ?A) =
          Finite_Set.fold add_to_coefficient (add_to_coefficient ?x ?z) ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("PAC_Polynomials.fold_insert",
     "[| finite ?A; ?x ~: ?A |]
      ==> Finite_Set.fold add_to_coefficient ?z (insert ?x ?A) =
          add_to_coefficient ?x (Finite_Set.fold add_to_coefficient ?z ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_var 2))))),
    ("PAC_Polynomials.fold_rec",
     "[| finite ?A; ?x : ?A |]
      ==> Finite_Set.fold add_to_coefficient ?z ?A =
          add_to_coefficient ?x
           (Finite_Set.fold add_to_coefficient ?z (?A - {?x}))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))))))),
    ("PAC_Polynomials.wf_if_measure_in_wf",
     "[| wf ?R; !!a b. (a, b) : ?S ==> (?\<nu> a, ?\<nu> b) : ?R |]
      ==> wf ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("PAC_Polynomials.fold_graph_insertE_aux",
     "[| fold_graph add_to_coefficient ?z ?A ?y; ?a : ?A |]
      ==> EX y'.
             ?y = add_to_coefficient ?a y' &
             fold_graph add_to_coefficient ?z (?A - {?a}) y'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("PAC_Polynomials.fold_set_union_disj",
     "[| finite ?A; finite ?B; ?A Int ?B = {} |]
      ==> Finite_Set.fold add_to_coefficient ?z (?A Un ?B) =
          Finite_Set.fold add_to_coefficient
           (Finite_Set.fold add_to_coefficient ?z ?A) ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 2)),
           template_var 1)))),
    ("PAC_Polynomials.fold_mset_fusion",
     "[| comp_fun_commute ?g;
         !!x y. ?h (?g x y) = add_to_coefficient x (?h y) |]
      ==> ?h (fold_mset ?g ?w ?A) =
          fold_mset add_to_coefficient (?h ?w) ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_app (template_var 2, template_var 1)),
           template_var 0)))),
    ("PAC_Polynomials.add_to_coefficient_simps",
     "?n + \<Sum>\<^sub># (snd `# {#(a', uu_) :# ?b. a' = ?a#}) = 0 ==>
      add_to_coefficient (?a, ?n) ?b = {#(a', uu_) :# ?b. a' ~= ?a#}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, t_empty)),
                  template_var 0)))),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_var 0)))),
    ("PAC_Polynomials.fold_graph_insertE",
     "[| fold_graph add_to_coefficient ?z (insert ?x ?A) ?v; ?x ~: ?A;
         !!y. [| ?v = add_to_coefficient ?x y;
                 fold_graph add_to_coefficient ?z ?A y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)
                )
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("PAC_Polynomials.mult_poly_p_induct",
     "[| mult_poly_p ?q (?x1a, ?x1b) (?x2a, ?x2b);
         !!xs n p r.
            ?P (add_mset (xs, n) p) r p
             ({#(remdups_mset (xs + ys), n * m). (ys, m) :# ?q#} + r) |]
      ==> ?P ?x1a ?x1b ?x2a ?x2b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 5),
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("PAC_Polynomials.add_to_coefficient_simps_If",
     "add_to_coefficient (?a, ?n) ?b =
      {#(a', uu_) :# ?b. a' ~= ?a#} +
      (if ?n + \<Sum>\<^sub># (snd `# {#(a', uu_) :# ?b. a' = ?a#}) = 0
       then {#}
       else {#(?a,
               ?n +
               \<Sum>\<^sub># (snd `# {#(a', uu_) :# ?b. a' = ?a#}))#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, t_empty)),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app (template_hole 11, t_empty)),
                               template_var 0))))),
                     template_hole 2)),
                 template_hole 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 14, template_var 2),
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_app
                            (template_app
                              (template_hole 12,
                               template_app (template_hole 11, t_empty)),
                             template_var 0)))))),
                 template_hole 1)))
           ))),
    ("PAC_Polynomials.lexn_n",
     "0 < ?n ==>
      ((?x # ?xs, ?y # ?ys) : lexn ?r ?n) =
      ((length ?xs = ?n - 1 & length ?ys = ?n - 1) &
       ((?x, ?y) : ?r | ?x = ?y & (?xs, ?ys) : lexn ?r (?n - 1)))",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 5)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_var 3)),
                    template_app
                     (template_app (template_hole 10, template_var 2),
                      template_var 1))),
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 5))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 3)),
                       template_app
                        (template_app (template_hole 5, template_var 5),
                         template_hole 4))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_app
                      (template_app (template_hole 5, template_var 5),
                       template_hole 4)))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 2)),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_var 3),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_app
                        (template_app (template_hole 5, template_var 5),
                         template_hole 4))))))
             )))),
    ("PAC_Polynomials.add_to_coefficient_simps",
     "?n + \<Sum>\<^sub># (snd `# {#(a', uu_) :# ?b. a' = ?a#}) ~= 0 ==>
      add_to_coefficient (?a, ?n) ?b =
      {#(a', uu_) :# ?b. a' ~= ?a#} +
      {#(?a, ?n + \<Sum>\<^sub># (snd `# {#(a', uu_) :# ?b. a' = ?a#}))#}",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app (template_hole 8, t_empty)),
                      template_var 0)))),
              template_hole 6)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 9, template_app (template_hole 8, t_empty)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 13, template_var 2),
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 8, t_empty)),
                         template_var 0)))))),
             template_hole 0))))),
    ("PAC_Polynomials.add_poly_p_induct",
     "[| add_poly_p (?x1a, ?x1b, ?x1c) (?x2a, ?x2b, ?x2c);
         !!p a b q r. ?P p (add_mset (a, b) q) r p q (add_mset (a, b) r);
         !!a b p q r. ?P (add_mset (a, b) p) q r p q (add_mset (a, b) r);
         !!x n p q m r.
            ?P (add_mset (x, n) p) q (add_mset (x, m) r) p q
             (add_mset (x, n + m) r);
         !!p x n q m r.
            ?P p (add_mset (x, n) q) (add_mset (x, m) r) p q
             (add_mset (x, n + m) r);
         !!p q x r. ?P p q (add_mset (x, 0) r) p q r |]
      ==> ?P ?x1a ?x1b ?x1c ?x2a ?x2b ?x2c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 6),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4))),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_var 0, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("PAC_Polynomials.add_poly_pE",
     "[| add_poly_p ?S ?T;
         !!p x q r.
            [| ?S = (p, add_mset x q, r); ?T = (p, q, add_mset x r) |]
            ==> ?P;
         !!x p q r.
            [| ?S = (add_mset x p, q, r); ?T = (p, q, add_mset x r) |]
            ==> ?P;
         !!x n p q m r.
            [| ?S = (add_mset (x, n) p, q, add_mset (x, m) r);
               ?T = (p, q, add_mset (x, n + m) r) |]
            ==> ?P;
         !!p x n q m r.
            [| ?S = (p, add_mset (x, n) q, add_mset (x, m) r);
               ?T = (p, q, add_mset (x, n + m) r) |]
            ==> ?P;
         !!p q x r.
            [| ?S = (p, q, add_mset (x, 0) r); ?T = (p, q, r) |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0)))]
