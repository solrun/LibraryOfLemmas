   [("PAC_Specification.pac_idealI1", "?p : ?A ==> ?p : pac_ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("PAC_Specification.restricted_ideal_to_restricted_ideal_to\<^sub>ID",
     "restricted_ideal_to ?\<V> (set_mset ?A)
      <= restricted_ideal_to\<^sub>I ?\<V> ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("PAC_Specification.pac_ideal_mono",
     "?A <= ?B ==> pac_ideal ?A <= pac_ideal ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PAC_Specification.pac_idealI2",
     "?p : More_Modules.ideal ?A ==> ?p : pac_ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("PAC_Specification.X2_X_in_pac_ideal",
     "(Var ?c)\<^sup>2 - Var ?c : pac_ideal ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 1)),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)))),
               template_app (template_hole 4, template_var 1))),
           template_app (template_hole 0, template_var 0))
         )),
    ("PAC_Specification.pac_ideal_mult",
     "?p :# ?A ==> ?p * ?q : pac_ideal (set_mset ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)))
           ))),
    ("PAC_Specification.pac_idealI3",
     "?p : More_Modules.ideal ?A ==> ?p * ?q : pac_ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("PAC_Specification.vars_subst_in_left_only",
     "?x ~: vars ?p ==> ?x : vars (?p - Var ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("PAC_Specification.pac_ideal_Xsq2_iff",
     "((Var ?c)\<^sup>2 : pac_ideal ?A) = (Var ?c : pac_ideal ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("PAC_Specification.pac_ideal_insert_already_in",
     "?pq : pac_ideal (set_mset ?A) ==>
      pac_ideal (insert ?pq (set_mset ?A)) = pac_ideal (set_mset ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("PAC_Specification.vars_subst_in_left_only_diff_iff",
     "?x ~: vars ?p ==> vars (?p - Var ?x) = insert ?x (vars ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("PAC_Specification.vars_subst_in_left_only_iff",
     "?x ~: vars ?p ==> vars (?p + Var ?x) = insert ?x (vars ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("PAC_Specification.coeff_add_right_notin",
     "?x ~: vars ?p ==>
      MPoly_Type.coeff (Var ?x - ?p) (monomial (Suc 0) ?x) = (1::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("PAC_Specification.diff_in_polynomial_bool_pac_idealI2",
     "[| ?p : ?A; ?p - ?p' : More_Modules.ideal polynomial_bool |]
      ==> ?p' : pac_ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("PAC_Specification.coeff_add_left_notin",
     "?x ~: vars ?p ==>
      MPoly_Type.coeff (?p - Var ?x) (monomial (Suc 0) ?x) = - 1",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app (template_hole 9, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app (template_hole 5, template_var 1))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 3, template_hole 2))),
         template_app (template_hole 1, template_hole 0)))),
    ("PAC_Specification.pac_ideal_add",
     "[| ?p :# ?A; ?q :# ?A |] ==> ?p + ?q : pac_ideal (set_mset ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)))
           ))),
    ("PAC_Specification.diff_in_polynomial_bool_pac_idealI",
     "[| ?p : pac_ideal ?A; ?p - ?p' : More_Modules.ideal polynomial_bool |]
      ==> ?p' : pac_ideal ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 4, template_var 1))
           ))),
    ("PAC_Specification.restricted_idealI",
     "[| ?p : pac_ideal (set_mset ?A); vars ?p <= ?C |]
      ==> ?p : restricted_ideal_to\<^sub>I ?C ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1))))
           ))),
    ("PAC_Specification.ideal_insert_polynomial_bool_swap",
     "?r - ?s : More_Modules.ideal polynomial_bool ==>
      More_Modules.ideal (insert ?r (?A Un polynomial_bool)) =
      More_Modules.ideal (insert ?s (?A Un polynomial_bool))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 3))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 3)))))),
    ("PAC_Specification.PAC_Format_subset_ideal",
     "[| PAC_Format (?\<V>, ?A) (?\<V>', ?B);
         \<Union> (vars ` set_mset ?A) <= ?\<V> |]
      ==> restricted_ideal_to\<^sub>I ?\<V> ?B
          <= restricted_ideal_to\<^sub>I ?\<V> ?A &
          ?\<V> <= ?\<V>' & \<Union> (vars ` set_mset ?B) <= ?\<V>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app (template_hole 4, template_var 2))),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 0)))),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 2))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_app (template_hole 4, template_var 0)))),
                 template_var 1)))
           ))),
    ("PAC_Specification.rtranclp_PAC_Format_subset_ideal",
     "[| PAC_Format^** (?\<V>, ?A) (?\<V>', ?B);
         \<Union> (vars ` set_mset ?A) <= ?\<V> |]
      ==> restricted_ideal_to\<^sub>I ?\<V> ?B
          <= restricted_ideal_to\<^sub>I ?\<V> ?A &
          ?\<V> <= ?\<V>' & \<Union> (vars ` set_mset ?B) <= ?\<V>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app (template_hole 4, template_var 2))),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 0)))),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 2))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_app (template_hole 4, template_var 0)))),
                 template_var 1)))
           ))),
    ("PAC_Specification.extensions_are_safe",
     "[| ?x' : vars ?p; ?x' ~: ?\<V>;
         \<Union> (vars ` set_mset ?A) <= ?\<V>;
         MPoly_Type.coeff ?p (monomial (Suc 0) ?x') = 1; vars ?q <= ?\<V>;
         ?q : More_Modules.ideal
               (insert ?p (set_mset ?A Un polynomial_bool));
         ?x' ~: vars (?p - Var ?x');
         (Var ?x' - ?p)\<^sup>2 - (Var ?x' - ?p)
         : More_Modules.ideal polynomial_bool |]
      ==> ?q : More_Modules.ideal (set_mset ?A Un polynomial_bool)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 4),
              template_app (template_hole 23, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 24, template_var 4),
                  template_var 2)
                )
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 20,
            template_app
             (template_app (template_hole 19, template_hole 23),
              template_app (template_hole 18, template_var 1))),
          template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 3),
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app (template_hole 14, template_hole 13))),
          template_hole 12),
        template_inequation
         (less_equals, template_app (template_hole 23, template_var 0),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 18, template_var 1)),
                    template_hole 6))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 24, template_var 4),
                  template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app (template_hole 4, template_var 4))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_app
                           (template_hole 5,
                            template_app (template_hole 4, template_var 4)),
                          template_var 3)),
                      template_app
                       (template_hole 2,
                        template_app (template_hole 1, template_hole 0)))),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_var 4)),
                    template_var 3))),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 0),
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 18, template_var 1)),
                 template_hole 6)))
           ))),
    ("PAC_Specification.extensions_are_safe_uminus",
     "[| ?x' : vars ?p; ?x' ~: ?\<V>;
         \<Union> (vars ` set_mset ?A) <= ?\<V>;
         MPoly_Type.coeff ?p (monomial (Suc 0) ?x') = - 1; vars ?q <= ?\<V>;
         ?q : More_Modules.ideal
               (insert ?p (set_mset ?A Un polynomial_bool));
         ?x' ~: vars (?p + Var ?x');
         (Var ?x' + ?p)\<^sup>2 - (Var ?x' + ?p)
         : More_Modules.ideal polynomial_bool |]
      ==> ?q : More_Modules.ideal (set_mset ?A Un polynomial_bool)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 4),
              template_app (template_hole 25, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 26, template_var 4),
                  template_var 2)
                )
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 22,
            template_app
             (template_app (template_hole 21, template_hole 25),
              template_app (template_hole 20, template_var 1))),
          template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 3),
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app (template_hole 16, template_hole 15))),
          template_app (template_hole 14, template_hole 13)),
        template_inequation
         (less_equals, template_app (template_hole 25, template_var 0),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app (template_hole 20, template_var 1)),
                    template_hole 7))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 26, template_var 4),
                  template_app
                   (template_hole 25,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_app (template_hole 5, template_var 4))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_app
                           (template_hole 6,
                            template_app (template_hole 5, template_var 4)),
                          template_var 3)),
                      template_app
                       (template_hole 2,
                        template_app (template_hole 1, template_hole 0)))),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 4)),
                    template_var 3))),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_hole 7))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 0),
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 20, template_var 1)),
                 template_hole 7)))
           ))),
    ("PAC_Specification.PAC_Format_induct",
     "[| PAC_Format (?\<V>, ?A) (?\<V>', ?A');
         !!p q p' A \<V>.
            [| p :# A; q :# A;
               p + q - p' : More_Modules.ideal polynomial_bool;
               vars p' <= \<V> |]
            ==> ?P \<V> A \<V> (add_mset p' A);
         !!p q p' A \<V>.
            [| p :# A; p * q - p' : More_Modules.ideal polynomial_bool;
               vars p' <= \<V>; vars q <= \<V> |]
            ==> ?P \<V> A \<V> (add_mset p' A);
         !!p A \<V>. p :# A ==> ?P \<V> A \<V> (A - {#p#});
         !!p' x r.
            [| p'\<^sup>2 - p' : More_Modules.ideal polynomial_bool;
               vars p' <= ?\<V>; x ~: ?\<V> |]
            ==> ?P ?\<V> ?A (?\<V> Un {x': vars (p' - Var x). x' ~: ?\<V>})
                 (add_mset (p' - Var x) ?A) |]
      ==> ?P ?\<V> ?A ?\<V>' ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app (template_hole 27, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 27, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("PAC_Specification.PAC_Format_induct_split",
     "[| PAC_Format (?V, ?A) (?V', ?A');
         !!p A q p' \<V>.
            [| p :# A; q :# A;
               p + q - p' : More_Modules.ideal polynomial_bool;
               vars p' <= \<V> |]
            ==> ?P \<V> A \<V> (add_mset p' A);
         !!p A q p' \<V>.
            [| p :# A; p * q - p' : More_Modules.ideal polynomial_bool;
               vars p' <= \<V>; vars q <= \<V> |]
            ==> ?P \<V> A \<V> (add_mset p' A);
         !!p A \<V>. p :# A ==> ?P \<V> A \<V> (A - {#p#});
         !!p' \<V> x A.
            [| p'\<^sup>2 - p' : More_Modules.ideal polynomial_bool;
               vars p' <= \<V>; x ~: \<V> |]
            ==> ?P \<V> A (\<V> Un {x': vars (- Var x + p'). x' ~: \<V>})
                 (add_mset (- Var x + p') A) |]
      ==> ?P ?V ?A ?V' ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app (template_hole 27, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 27, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           )))]
