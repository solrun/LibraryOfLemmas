   [("Clausal_Calculus.true_clss_of_interp_iff_equal",
     "(?J \<TTurnstile>s clss_of_interp ?I) = (?J = ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Clausal_Calculus.entails_iff_models",
     "(clss_of_interp ?I \<TTurnstile>e ?CC) = (?I \<TTurnstile>s ?CC)",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Clausal_Calculus.entail_set_all_formulas",
     "(?N1.0 \<TTurnstile>e ?N2.0) =
      (ALL C:?N2.0. ?N1.0 \<TTurnstile>e {C})",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("Clausal_Calculus.entail_unions",
     "(ALL i:?I. ?N \<TTurnstile>e ?Ni i) =
      (?N \<TTurnstile>e \<Union> (?Ni ` ?I))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2), t_empty),
       template_app (template_hole 4, t_empty))),
    ("Clausal_Calculus.entail_union",
     "(?N \<TTurnstile>e ?N1.0 & ?N \<TTurnstile>e ?N2.0) =
      (?N \<TTurnstile>e ?N1.0 Un ?N2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 3, t_empty)),
       template_app (template_hole 3, t_empty))),
    ("Clausal_Calculus.entails_iff_unsatisfiable_single",
     "(?CC \<TTurnstile>e {?E}) =
      (~ satisfiable (?CC Un {{#- L#} |L. L :# ?E}))",
     template_equation
      (template_app (template_hole 16, t_empty),
       template_app
        (template_hole 11, template_app (template_hole 10, t_empty)))),
    ("Clausal_Calculus.entails_iff_unsatisfiable",
     "(?CC \<TTurnstile>e ?EE) =
      (ALL E:?EE. ~ satisfiable (?CC Un {{#- L#} |L. L :# E}))",
     template_equation
      (template_app (template_hole 15, t_empty),
       template_app
        (template_app (template_hole 12, template_var 0), t_empty)))]
