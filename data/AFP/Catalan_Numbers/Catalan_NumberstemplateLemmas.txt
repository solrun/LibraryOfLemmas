   [("Catalan_Numbers.finite_trees_of_size",
     "finite (Catalan_Numbers.trees_of_size ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Catalan_Numbers.trees_of_size_nonempty",
     "Catalan_Numbers.trees_of_size ?n ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Catalan_Numbers.card_trees_of_size",
     "card (Catalan_Numbers.trees_of_size ?n) = catalan ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Catalan_Numbers.fps_catalan_nth",
     "fps_nth fps_catalan ?n = of_nat (catalan ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Catalan_Numbers.catalan_code",
     "catalan ?n = Catalan_Numbers.catalan_aux ?n 0 1",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_hole 0))),
    ("Catalan_Numbers.count_nodes_eq_0_iff",
     "(Catalan_Numbers.count_nodes ?t = 0) =
      (?t = Catalan_Numbers.tree.Leaf)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Catalan_Numbers.catalan_aux_simps",
     "?n <= ?k ==> Catalan_Numbers.catalan_aux ?n ?k ?acc = ?acc",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 0))),
    ("Catalan_Numbers.catalan_eq_I",
     "real (catalan ?n) = ??.Catalan_Numbers.I ?n / (2 * pi)",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_hole 0)))),
    ("Catalan_Numbers.catalan_closed_form",
     "catalan ?n = (2 * ?n choose ?n) div Suc ?n",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0)),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Catalan_Numbers.catalan_closed_form_aux",
     "catalan ?n * Suc ?n = 2 * ?n choose ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 0)),
         template_var 0))),
    ("Catalan_Numbers.catalan_aux_correct",
     "?k <= ?n ==>
      Catalan_Numbers.catalan_aux ?n ?k (catalan ?k) = catalan ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Catalan_Numbers.trees_of_size_disjoint",
     "?m ~= ?n ==>
      Catalan_Numbers.trees_of_size ?m Int
      Catalan_Numbers.trees_of_size ?n =
      {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Catalan_Numbers.catalan_Suc",
     "catalan (Suc ?n) = (SUM i<=?n. catalan i * catalan (?n - i))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Catalan_Numbers.of_nat_catalan_closed_form",
     "of_nat (catalan ?n) = of_nat (2 * ?n choose ?n) / of_nat (Suc ?n)",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_var 0)),
               template_var 0))),
         template_app
          (template_hole 8,
           template_app (template_hole 0, template_var 0))))),
    ("Catalan_Numbers.mult_eq_imp_eq_div",
     "[| ?a * ?b = ?c; ?a ~= (0::?'a) |] ==> ?b = ?c div ?a",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 2, template_hole 1))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Catalan_Numbers.catalan_closed_form'",
     "catalan ?n = 2 * ?n choose ?n - (2 * ?n choose Suc ?n)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("Catalan_Numbers.catalan_Suc'",
     "catalan (Suc ?n) = catalan ?n * (2 * (2 * ?n + 1)) div (?n + 2)",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2))),
                     template_var 0)),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))))),
    ("Catalan_Numbers.catalan_Suc_aux",
     "(?n + 2) * catalan (Suc ?n) = 2 * (2 * ?n + 1) * catalan ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_hole 3))),
                   template_var 0)),
               template_hole 0))),
         template_app (template_hole 2, template_var 0)))),
    ("Catalan_Numbers.trees_of_size_Suc",
     "Catalan_Numbers.trees_of_size (Suc ?n) =
      (%(l, r). Catalan_Numbers.tree.Node l r) `
      (UN k<=?n.
          Catalan_Numbers.trees_of_size k \<times>
          Catalan_Numbers.trees_of_size (?n - k))",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Catalan_Numbers.catalan_closed_form_gbinomial",
     "real (catalan ?n) = 2 * (- 4) ^ ?n * (1 / 2 gchoose Suc ?n)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 7, template_hole 6))))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6)))),
           template_app (template_hole 0, template_var 0))))),
    ("Catalan_Numbers.I_Suc",
     "??.Catalan_Numbers.I (Suc ?n) =
      real (2 * (2 * ?n + 1)) / real (?n + 2) * ??.Catalan_Numbers.I ?n",
     template_equation
      (template_app
        (template_hole 10, template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3, template_hole 2))),
                         template_var 0)),
                     template_hole 0)))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))))),
         template_app (template_hole 10, template_var 0)))),
    ("Catalan_Numbers.integrable_I",
     "(%x. x powr (real ?n - 1 / 2) * sqrt (4 - x)) integrable_on {0..4}",
     template_predicate
      (
         template_app
          (template_app (template_hole 12, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 4, template_hole 3)))))
         )),
    ("Catalan_Numbers.of_nat_catalan_Suc'",
     "of_nat (catalan (Suc ?n)) =
      of_nat (2 * (2 * ?n + 1)) / of_nat (?n + 2) * of_nat (catalan ?n)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_var 0))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3, template_hole 2))),
                         template_var 0)),
                     template_hole 0)))),
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))))),
         template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0))))),
    ("Catalan_Numbers.gbinomial_asymptotic'",
     "?z ~: \<nat> ==>
      (%n. ?z gchoose
           (n +
            ?k)) \<sim>[sequentially] (%n.
    (- 1) ^ (n + ?k) / (Gamma (- ?z) * real n powr (?z + 1)))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty), template_hole 9),
             t_empty)
           ))),
    ("Catalan_Numbers.catalan_aux_simps",
     "?k < ?n ==>
      Catalan_Numbers.catalan_aux ?n ?k ?acc =
      Catalan_Numbers.catalan_aux ?n (Suc ?k)
       (?acc * (2 * (2 * ?k + 1)) div (?k + 2))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_app (template_hole 7, template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3, template_hole 2))),
                         template_var 2)),
                     template_hole 0)))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))))),
    ("Catalan_Numbers.catalan_integral_form",
     "((%x. x powr (real ?n - 1 / 2) * sqrt (4 - x) / (2 * pi)) has_integral
       real (catalan ?n))
       {0..4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 14, t_empty),
             template_app
              (template_hole 9,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 6, template_hole 5)))))
         ))]
