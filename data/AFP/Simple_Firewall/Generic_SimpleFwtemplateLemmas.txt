   [("Generic_SimpleFw.generalized_fw_join_1_Nil",
     "generalized_fw_join [] ?f2.0 = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Generic_SimpleFw.generalized_fw_join_2_Nil",
     "generalized_fw_join ?f1.0 [] = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Generic_SimpleFw.generalized_sfw_simps",
     "generalized_sfw [] ?p = None",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Generic_SimpleFw.gsfw_validI",
     "simple_fw_valid ?fw ==> gsfw_valid (map simple_rule_dtor ?fw)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Generic_SimpleFw.gsfw_join_valid",
     "[| gsfw_valid ?f1.0; gsfw_valid ?f2.0 |]
      ==> gsfw_valid (generalized_fw_join ?f1.0 ?f2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Generic_SimpleFw.generalized_sfw_mapsnd",
     "generalized_sfw (map (apsnd ?f) ?fw) ?p =
      map_option (apsnd ?f) (generalized_sfw ?fw ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Generic_SimpleFw.generalized_sfw_1_join_None",
     "generalized_sfw ?fw1.0 ?p = None ==>
      generalized_sfw (generalized_fw_join ?fw1.0 ?fw2.0) ?p = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Generic_SimpleFw.generalized_sfw_2_join_None",
     "generalized_sfw ?fw2.0 ?p = None ==>
      generalized_sfw (generalized_fw_join ?fw1.0 ?fw2.0) ?p = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_var 1),
         template_hole 0))),
    ("Generic_SimpleFw.generalized_sfw_append",
     "generalized_sfw (?a @ ?b) ?p =
      (case generalized_sfw ?a ?p of None => generalized_sfw ?b ?p
       | Some x => Some x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Generic_SimpleFw.simple_generalized_undecided",
     "simple_fw ?fw ?p ~= Undecided ==>
      generalized_sfw (map simple_rule_dtor ?fw) ?p ~= None",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 1)),
               template_var 0),
             template_hole 0)
           ))),
    ("Generic_SimpleFw.generalized_sfw_NoneD",
     "generalized_sfw ?fw ?p = None ==>
      ALL (a, b):set ?fw. ~ simple_matches a ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Generic_SimpleFw.simple_fw_iff_generalized_fw_accept",
     "(simple_fw ?fw ?p = Decision FinalAllow) =
      (EX r. generalized_sfw (map simple_rule_dtor ?fw) ?p =
             Some (r, Accept))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0)),
         template_app (template_hole 9, template_hole 8)),
       template_app (template_hole 7, t_empty))),
    ("Generic_SimpleFw.simple_fw_iff_generalized_fw_drop",
     "(simple_fw ?fw ?p = Decision FinalDeny) =
      (EX r. generalized_sfw (map simple_rule_dtor ?fw) ?p =
             Some (r, Drop))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0)),
         template_app (template_hole 9, template_hole 8)),
       template_app (template_hole 7, t_empty))),
    ("Generic_SimpleFw.simple_fw_iff_generalized_fw",
     "(simple_fw ?fw ?p = simple_action_to_decision ?a) =
      (EX r. generalized_sfw (map simple_rule_dtor ?fw) ?p = Some (r, ?a))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Generic_SimpleFw.generalized_sfw_simps",
     "generalized_sfw (?a # ?as) ?p =
      (if case ?a of (m, x) => simple_matches m ?p then Some ?a
       else generalized_sfw ?as ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 2)),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_var 0)))),
    ("Generic_SimpleFw.generalized_sfwSomeD",
     "generalized_sfw ?fw ?p = Some (?r, ?d) ==>
      (?r, ?d) : set ?fw & simple_matches ?r ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0)),
                 template_app (template_hole 1, template_var 3))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Generic_SimpleFw.generalized_sfw_filterD",
     "generalized_sfw (filter ?f ?fw) ?p = Some (?r, ?d) ==>
      simple_matches ?r ?p & ?f (?r, ?d)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_var 4,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))
           ))),
    ("Generic_SimpleFw.generalized_fw_join_2_nomatch",
     "~ simple_matches ?bm ?p ==>
      generalized_sfw (generalized_fw_join ?as ((?bm, ?bd) # ?bs)) ?p =
      generalized_sfw (generalized_fw_join ?as ?bs) ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_var 0))),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 3)))),
    ("Generic_SimpleFw.generalized_fw_split",
     "generalized_sfw ?fw ?p = Some ?r ==>
      EX fw1 fw3. ?fw = fw1 @ ?r # fw3 & generalized_sfw fw1 ?p = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Generic_SimpleFw.generalized_fw_join_1_nomatch",
     "~ simple_matches ?am ?p ==>
      generalized_sfw
       (concat
         (map (%(m2, b).
                  map (%u. (u, ?ad, b))
                   (option2list (simple_match_and ?am m2)))
           ?l2.0))
       ?p =
      None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)),
                 template_var 0))),
           template_var 2),
         template_hole 0))),
    ("Generic_SimpleFw.generalized_fw_join_1_1",
     "generalized_fw_join [(?m1.0, ?d1.0)] ?fw2.0 =
      foldr
       (%(m2, d2).
           (@) (case simple_match_and ?m1.0 m2 of None => []
                | Some mu => [(mu, ?d1.0, d2)]))
       ?fw2.0 []",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 1)),
             template_hole 9)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_var 0),
         template_hole 4))),
    ("Generic_SimpleFw.generalized_fw_join_cons_1",
     "generalized_fw_join ((?am, ?ad) # ?l1.0) ?l2.0 =
      concat
       (map (%(m2, b).
                map (%u. (u, ?ad, b))
                 (option2list (simple_match_and ?am m2)))
         ?l2.0) @
      generalized_fw_join ?l1.0 ?l2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               template_var 0))),
         template_app
          (template_app (template_hole 11, template_var 1),
           template_var 0)))),
    ("Generic_SimpleFw.generalized_sfw_join_set",
     "((?a, ?b1.0, ?b2.0) : set (generalized_fw_join ?f1.0 ?f2.0)) =
      (EX a1 a2.
          (a1, ?b1.0) : set ?f1.0 &
          (a2, ?b2.0) : set ?f2.0 & simple_match_and a1 a2 = Some ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 14, template_var 4),
             template_app
              (template_app (template_hole 13, template_var 3),
               template_var 2))),
         template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 1),
             template_var 0))),
       template_app (template_hole 10, t_empty))),
    ("Generic_SimpleFw.generalized_fw_joinI",
     "[| generalized_sfw ?f1.0 ?p = Some (?r1.0, ?d1.0);
         generalized_sfw ?f2.0 ?p = Some (?r2.0, ?d2.0) |]
      ==> generalized_sfw (generalized_fw_join ?f1.0 ?f2.0) ?p =
          Some (the (simple_match_and ?r1.0 ?r2.0), ?d1.0, ?d2.0)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 6),
            template_var 5),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 4),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 2),
            template_var 5),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 2)),
           template_var 5),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)))))),
    ("Generic_SimpleFw.simple_fw_join2",
     "(simple_fw ?rs1.0 ?p = Decision FinalAllow &
       simple_fw ?rs2.0 ?p = Decision FinalAllow) =
      (EX m. generalized_sfw
              (map (apsnd
                     (%x. case x of (Accept, b) => b | (Drop, b) => Drop))
                (generalized_fw_join (map simple_rule_dtor ?rs1.0)
                  (map simple_rule_dtor ?rs2.0)))
              ?p =
             Some (m, Accept))",
     template_equation
      (template_app
        (template_app
          (template_hole 18,
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_var 2),
                 template_var 1)),
             template_app (template_hole 15, template_hole 14))),
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app (template_hole 16, template_var 0),
               template_var 1)),
           template_app (template_hole 15, template_hole 14))),
       template_app (template_hole 13, t_empty))),
    ("Generic_SimpleFw.generalized_fw_joinD",
     "generalized_sfw (generalized_fw_join ?f1.0 ?f2.0) ?p =
      Some (?u, ?d1.0, ?d2.0) ==>
      EX r1 r2.
         generalized_sfw ?f1.0 ?p = Some (r1, ?d1.0) &
         generalized_sfw ?f2.0 ?p = Some (r2, ?d2.0) &
         Some ?u = simple_match_and r1 r2",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_var 5),
                template_var 4)),
            template_var 3),
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_var 0))))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Generic_SimpleFw.simple_fw_join",
     "(simple_fw ?rs1.0 ?p = Decision FinalAllow &
       simple_fw ?rs2.0 ?p = Decision FinalAllow) =
      (simple_fw
        (map (%(u, a, b).
                 SimpleRule u
                  (if a = Accept & b = Accept then Accept else Drop))
          (generalized_fw_join (map simple_rule_dtor ?rs1.0)
            (map simple_rule_dtor ?rs2.0)))
        ?p =
       Decision FinalAllow)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_var 2),
                     template_var 1)),
                 template_app (template_hole 12, template_hole 11))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_var 1)),
               template_app (template_hole 12, template_hole 11)))
           ),
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 10, template_app (template_hole 9, t_empty)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)))),
           template_var 1),
         template_app (template_hole 12, template_hole 11))))]
