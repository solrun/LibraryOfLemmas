   [("Lib_Enum_toString.enum_set_to_list", "set (enum_set_to_list ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Lib_Enum_toString.enum_set_get_one_empty",
     "enum_set_get_one ?ss {} = None",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Lib_Enum_toString.enum_set_get_one_enum_Some",
     "enum_set_get_one enum_class.enum ?S = Some ?x ==> ?x : ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lib_Enum_toString.enum_set_get_one_enum_Ex_Some",
     "?S ~= {} ==> EX x. enum_set_get_one enum_class.enum ?S = Some x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lib_Enum_toString.enum_set_get_one_None",
     "?S <= set ?ss ==> (enum_set_get_one ?ss ?S = None) = (?S = {})",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1),
           template_hole 2),
         template_equation (template_var 1, template_hole 0)))),
    ("Lib_Enum_toString.enum_set_to_list_simps",
     "enum_set_to_list ?S =
      (case enum_set_get_one enum_class.enum ?S of None => []
       | Some a => a # enum_set_to_list (?S - {a}))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Lib_Enum_toString.enum_set_get_one_Some",
     "[| ?S <= set ?ss; enum_set_get_one ?ss ?S = Some ?x |] ==> ?x : ?S",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Lib_Enum_toString.enum_set_get_one_Ex_Some",
     "[| ?S <= set ?ss; ?S ~= {} |]
      ==> EX x. enum_set_get_one ?ss ?S = Some x",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty))))]
