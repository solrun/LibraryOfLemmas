   [("L4_Protocol.simple_proto_conjunct_asimp",
     "simple_proto_conjunct ?proto ProtoAny = Some ?proto",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("L4_Protocol.protocol_Ex_neq", "EX p'. Proto p' ~= ?p",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("L4_Protocol.primitive_protocol_Ex_neq",
     "?p = Proto ?pi ==> EX p'. p' ~= ?pi",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("L4_Protocol.simple_proto_conjunct_None",
     "simple_proto_conjunct ?p1.0 ?p2.0 = None ==>
      ~ (match_proto ?p1.0 ?pkt & match_proto ?p2.0 ?pkt)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("L4_Protocol.simple_proto_conjunct_correct",
     "(match_proto ?p1.0 ?pkt & match_proto ?p2.0 ?pkt) =
      (case simple_proto_conjunct ?p1.0 ?p2.0 of None => False
       | Some proto => match_proto proto ?pkt)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("L4_Protocol.simple_proto_conjunct_Some",
     "simple_proto_conjunct ?p1.0 ?p2.0 = Some ?proto ==>
      match_proto ?proto ?pkt =
      (match_proto ?p1.0 ?pkt & match_proto ?p2.0 ?pkt)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("L4_Protocol.conjunctProtoD",
     "simple_proto_conjunct ?a (Proto ?b) = Some ?x ==>
      ?x = Proto ?b & (?a = ProtoAny | ?a = Proto ?b)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 5, template_var 1)),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 5, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 0)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 5, template_var 1))))
           ))),
    ("L4_Protocol.conjunctProtoD2",
     "simple_proto_conjunct (Proto ?b) ?a = Some ?x ==>
      ?x = Proto ?b & (?a = ProtoAny | ?a = Proto ?b)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2)),
            template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 5, template_var 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 5, template_var 2))))
           )))]
