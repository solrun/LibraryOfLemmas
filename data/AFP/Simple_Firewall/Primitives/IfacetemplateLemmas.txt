   [("Iface.internal_iface_name_match_refl",
     "internal_iface_name_match ?i ?i",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Iface.match_ifaceAny", "match_iface ifaceAny ?i",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Iface.match_iface_refl", "match_iface (Iface ?x) ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Iface.less_eq_empty", "Iface [] <= ?q",
     template_inequation
      (less_equals, template_app (template_hole 1, template_hole 0),
       template_var 0)),
    ("Iface.internal_iface_name_wildcard_longest_refl",
     "??.Iface.internal_iface_name_wildcard_longest ?i ?i = Some ?i",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Iface.iface_conjunct_ifaceAny",
     "iface_conjunct ifaceAny ?i = Some ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Iface.iface_conjunct_commute",
     "iface_conjunct ?i1.0 ?i2.0 = iface_conjunct ?i2.0 ?i1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Iface.internal_iface_name_to_set2",
     "??.Iface.internal_iface_name_to_set ?ifce =
      {i. internal_iface_name_match ?ifce i}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Iface.internal_iface_name_to_set",
     "internal_iface_name_match ?i ?p_iface =
      (?p_iface : ??.Iface.internal_iface_name_to_set ?i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Iface.match_iface_set",
     "match_iface (Iface ?i) ?p_iface =
      (?p_iface : ??.Iface.internal_iface_name_to_set ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Iface.match_iface_eqI", "?x = Iface ?y ==> match_iface ?x ?y",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Iface.Iface_less_eq_empty", "Iface ?x <= Iface [] ==> ?x = []",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_hole 1))],
       template_equation (template_var 0, template_hole 1))),
    ("Iface.strings_of_length_n",
     "set (List.n_lists ?n ??.Iface.all_chars) = {s. length s = ?n}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app (template_hole 2, t_empty))),
    ("Iface.match_iface_case_nowildcard",
     "~ iface_name_is_wildcard ?i ==>
      match_iface (Iface ?i) ?p_i = (?i = ?p_i)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0)
              )],
         template_equation (template_var 1, template_var 0)))),
    ("Iface.non_wildcard_ifaces",
     "set (??.Iface.non_wildcard_ifaces ?n) =
      {s. length s = ?n & ~ iface_name_is_wildcard s}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Iface.non_wildcard_ifaces_upto",
     "set (??.Iface.non_wildcard_ifaces_upto ?n) =
      {s. length s <= ?n & ~ iface_name_is_wildcard s}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Iface.compress_pos_interfaces_None",
     "compress_pos_interfaces ?ifces = None ==>
      ~ (ALL i:set ?ifces. match_iface i ?p_i)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 t_empty)
               )
           ))),
    ("Iface.iface_name_is_wildcard_fst",
     "[| iface_name_is_wildcard (?i # ?is); ?is ~= [] |]
      ==> iface_name_is_wildcard ?is",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_predicate
        (template_app (template_hole 4, template_var 0)))),
    ("Iface.iface_subset",
     "iface_subset ?i1.0 ?i2.0 =
      ({i. match_iface ?i1.0 i} <= {i. match_iface ?i2.0 i})",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("Iface.internal_iface_name_subset",
     "??.Iface.internal_iface_name_subset ?i1.0 ?i2.0 =
      ({i. internal_iface_name_match ?i1.0 i}
       <= {i. internal_iface_name_match ?i2.0 i})",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("Iface.iface_conjunct_None",
     "iface_conjunct ?i1.0 ?i2.0 = None ==>
      ~ (match_iface ?i1.0 ?p_i & match_iface ?i2.0 ?p_i)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Iface.internal_iface_name_wildcard_longest_commute",
     "[| iface_name_is_wildcard ?i1.0; iface_name_is_wildcard ?i2.0 |]
      ==> ??.Iface.internal_iface_name_wildcard_longest ?i1.0 ?i2.0 =
          ??.Iface.internal_iface_name_wildcard_longest ?i2.0 ?i1.0",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Iface.iface_conjunct",
     "(match_iface ?i1.0 ?p_i & match_iface ?i2.0 ?p_i) =
      (case iface_conjunct ?i1.0 ?i2.0 of None => False
       | Some x => match_iface x ?p_i)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Iface.match_iface_case_wildcard_length",
     "[| iface_name_is_wildcard ?i; match_iface (Iface ?i) ?p_i |]
      ==> length ?i - 1 <= length ?p_i",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_hole 0),
         template_app (template_hole 1, template_var 0)))),
    ("Iface.match_iface_case_wildcard_prefix",
     "iface_name_is_wildcard ?i ==>
      match_iface (Iface ?i) ?p_i =
      (butlast ?i = take (length ?i - 1) ?p_i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1)),
                template_var 0)
              )],
         template_equation
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0)),
             template_var 0))))),
    ("Iface.compress_pos_interfaces_Some",
     "compress_pos_interfaces ?ifces = Some ?ifce ==>
      match_iface ?ifce ?p_i = (ALL i:set ?ifces. match_iface i ?p_i)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Iface.iface_conjunct_Some",
     "iface_conjunct ?i1.0 ?i2.0 = Some ?x ==>
      match_iface ?x ?p_i =
      (match_iface ?i1.0 ?p_i & match_iface ?i2.0 ?p_i)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Iface.iface_name_is_wildcard_alt",
     "iface_name_is_wildcard ?eth = (?eth ~= [] & last ?eth = CHR ''+'')",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 2, template_hole 1),
                             template_hole 1),
                           template_hole 0),
                         template_hole 1),
                       template_hole 0),
                     template_hole 1),
                   template_hole 0),
                 template_hole 0)))
           ))),
    ("Iface.iface_name_is_wildcard_alt'",
     "iface_name_is_wildcard ?eth =
      (?eth ~= [] & hd (rev ?eth) = CHR ''+'')",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 2, template_hole 1),
                             template_hole 1),
                           template_hole 0),
                         template_hole 1),
                       template_hole 0),
                     template_hole 1),
                   template_hole 0),
                 template_hole 0)))
           ))),
    ("Iface.match_iface_case_wildcard",
     "iface_name_is_wildcard ?i ==>
      match_iface (Iface ?i) ?p_i =
      (butlast ?i = take (length ?i - 1) ?p_i &
       length ?i - 1 <= length ?p_i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1)),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1)),
                         template_hole 1)),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_hole 1)),
                 template_app (template_hole 2, template_var 0)))
             )))),
    ("Iface.iface_cons_less_eq_i",
     "Iface (?b # ?bs) <= ?i ==>
      EX q qs. ?i = Iface (q # qs) & (?b < q | Iface ?bs <= Iface qs)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)),
          template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Iface.internal_iface_name_wildcard_longest_correct",
     "[| iface_name_is_wildcard ?i1.0; iface_name_is_wildcard ?i2.0 |]
      ==> (match_iface (Iface ?i1.0) ?p_i &
           match_iface (Iface ?i2.0) ?p_i) =
          (case ??.Iface.internal_iface_name_wildcard_longest ?i1.0 ?i2.0 of
           None => False | Some x => match_iface (Iface x) ?p_i)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1), t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Iface.butlast_take_length_helper",
     "[| length ?i2.0 <= length ?i1.0;
         take (length ?i2.0 - Suc 0) ?i1.0 = butlast ?i2.0;
         butlast ?i1.0 = take (length ?i1.0 - Suc 0) ?x |]
      ==> butlast ?i2.0 = take (length ?i2.0 - Suc 0) ?x",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 6, template_var 2)),
                template_app (template_hole 2, template_hole 1))),
            template_var 1),
          template_app (template_hole 0, template_var 2)),
        template_equation
         (template_app (template_hole 0, template_var 1),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 6, template_var 1)),
                template_app (template_hole 2, template_hole 1))),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 6, template_var 2)),
               template_app (template_hole 2, template_hole 1))),
           template_var 0)))),
    ("Iface.inv_iface_name_set",
     "- ??.Iface.internal_iface_name_to_set ?i =
      (if iface_name_is_wildcard ?i
       then {c |c. length c < length (butlast ?i)} Un
            {c @ cs |c cs. length c = length (butlast ?i) & c ~= butlast ?i}
       else {c |c. length c < length ?i} Un
            {c @ cs |c cs. length ?i <= length c & c ~= ?i})",
     template_equation
      (template_app
        (template_hole 15, template_app (template_hole 14, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app (template_hole 12, template_var 0)),
           template_app
            (template_app
              (template_hole 11, template_app (template_hole 10, t_empty)),
             template_app (template_hole 10, t_empty))),
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_app (template_hole 10, t_empty)))))]
