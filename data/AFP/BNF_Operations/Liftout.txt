Loading theory "HOL-Library.BNF_Axiomatization" (required by "Draft.LiftMoreTemplates" via "Draft.Lift")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.506s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature BNF_AXIOMATIZATION =
  sig
    val bnf_axiomatization:
       (string -> bool) ->
         (binding option * (typ * sort)) list ->
           binding ->
             mixfix ->
               binding ->
                 binding ->
                   binding ->
                     typ list -> local_theory -> BNF_Def.bnf * local_theory
  end
structure BNF_Axiomatization: BNF_AXIOMATIZATION
### theory "HOL-Library.BNF_Axiomatization"
### 0.139s elapsed time, 0.570s cpu time, 0.039s GC time
Loading theory "Draft.Lift" (required by "Draft.LiftMoreTemplates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.235s elapsed time, 0.947s cpu time, 0.039s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.330s elapsed time, 1.315s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Lift"
### 0.260s elapsed time, 1.024s cpu time, 0.081s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.765s elapsed time, 2.472s cpu time, 0.290s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.958s elapsed time, 2.861s cpu time, 0.701s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.828s elapsed time, 4.419s cpu time, 0.866s GC time
Loading theory "Draft.Templates" (required by "Draft.LiftMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.046s elapsed time, 0.060s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LiftMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.449s elapsed time, 0.503s cpu time, 0.067s GC time
Loading theory "Draft.LiftMoreTemplates"
val templateLemmas =
   [("Lifting_Set.empty_transfer", "rel_set ?A {} {}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("Lifting.eq_onp_le_eq", "eq_onp ?P <= (=)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Lifting.neg_eq_OO", "Lifting.NEG ((=) OO ?A) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 0)
         )),
    ("Lifting.neg_OO_eq", "Lifting.NEG (?A OO (=)) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 0)
         )),
    ("Lifting.pos_eq_OO", "Lifting.POS ((=) OO ?A) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 0)
         )),
    ("Lifting.pos_OO_eq", "Lifting.POS (?A OO (=)) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 0)
         )),
    ("Lifting.equivp_reflp2", "equivp ?R ==> reflp ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lifting_Set.rel_set_conversep", "rel_set ?A^--1 = (rel_set ?A)^--1",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lifting.relator_eq_onp",
     "list_all2 (eq_onp ?P) = eq_onp (list_all ?P)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lifting.relator_eq_onp",
     "rel_tree (eq_onp ?P) = eq_onp (pred_tree ?P)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lifting.relator_eq_onp",
     "rel_option (eq_onp ?P) = eq_onp (pred_option ?P)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lifting.relator_eq_onp",
     "stream_all2 (eq_onp ?P) = eq_onp (pred_stream ?P)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lift.F'set3_bd", "|F'set3 ?x| \<le>o F'bd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0))),
               template_hole 1)),
           template_hole 0)
         )),
    ("Lift.F'set4_bd", "|F'set4 ?x| \<le>o F'bd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0))),
               template_hole 1)),
           template_hole 0)
         )),
    ("Lifting.reflp_ge_eq", "reflp ?R ==> (=) <= ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("Lifting_Set.bi_total_rel_set",
     "bi_total ?A ==> bi_total (rel_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.bi_unique_rel_set",
     "bi_unique ?A ==> bi_unique (rel_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.left_total_rel_set",
     "left_total ?A ==> left_total (rel_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.left_unique_rel_set",
     "left_unique ?A ==> left_unique (rel_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.right_total_rel_set",
     "right_total ?A ==> right_total (rel_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.right_unique_rel_set",
     "right_unique ?A ==> right_unique (rel_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.Pow_transfer",
     "rel_fun (rel_set ?A) (rel_set (rel_set ?A)) Pow Pow",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Lifting.in_respects", "(?x : Respects ?R) = ?R ?x ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 0, template_var 1), template_var 1))),
    ("Lifting_Set.UNIV_transfer", "bi_total ?A ==> rel_set ?A UNIV UNIV",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.UNIV_typedef_to_equivp",
     "type_definition ?Rep ?Abs UNIV ==> equivp (=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (template_app (template_hole 1, template_hole 0)))),
    ("Lifting_Set.insert_transfer",
     "rel_fun ?A (rel_fun (rel_set ?A) (rel_set ?A)) insert insert",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Lift.F'rel_unfold", "F'rel ?R1a ?R2a ?R1.0 ?R2.0 = Frel ?R1.0 ?R2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Lifting_Set.set_relator_eq_onp",
     "rel_set (eq_onp ?P) = eq_onp (%A. Ball A ?P)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Lifting_Set.Domainp_set",
     "Domainp (rel_set ?T) = (%A. Ball A (Domainp ?T))",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       t_empty)),
    ("Lifting.Quotient_part_equivp",
     "Quotient ?R ?Abs ?Rep ?T ==> part_equivp ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 3)))),
    ("Lifting.Quotient_symp", "Quotient ?R ?Abs ?Rep ?T ==> symp ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 3)))),
    ("Lifting.Quotient_transp", "Quotient ?R ?Abs ?Rep ?T ==> transp ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 3)))),
    ("Lifting.Quotient_right_total",
     "Quotient ?R ?Abs ?Rep ?T ==> right_total ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lifting.Quotient_right_unique",
     "Quotient ?R ?Abs ?Rep ?T ==> right_unique ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lifting_Set.Ball_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (=)) (=)) Ball Ball",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)),
                 template_hole 2)),
             template_hole 1),
           template_hole 0)
         )),
    ("Lifting_Set.Bex_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (=)) (=)) Bex Bex",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)),
                 template_hole 2)),
             template_hole 1),
           template_hole 0)
         )),
    ("Lifting_Set.union_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_set ?A) (rel_set ?A)) (Un) (Un)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Lift.F'set3_natural",
     "F'set3 o Fmap ?f3.0 ?f4.0 = (`) ?f3.0 o F'set3",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Lift.F'set4_natural",
     "F'set4 o Fmap ?f3.0 ?f4.0 = (`) ?f4.0 o F'set4",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Lifting_Set.rel_set_OO",
     "rel_set ?R OO rel_set ?S = rel_set (?R OO ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lifting.relator_eq_onp",
     "rel_sum (eq_onp ?P1.0) (eq_onp ?P2.0) =
      eq_onp (pred_sum ?P1.0 ?P2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lifting.relator_eq_onp",
     "rel_prod (eq_onp ?P1.0) (eq_onp ?P2.0) =
      eq_onp (pred_prod ?P1.0 ?P2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lifting_Set.card_transfer",
     "bi_unique ?A ==> rel_fun (rel_set ?A) (=) card card",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.finite_transfer",
     "bi_unique ?A ==> rel_fun (rel_set ?A) (=) finite finite",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.right_total_UNIV_transfer",
     "right_total ?A ==> rel_set ?A (Collect (Domainp ?A)) UNIV",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.NEG ?B ?A ==> Lifting.NEG (rel_set ?B) (rel_set ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.NEG ?B ?A ==> Lifting.NEG (rel_filter ?B) (rel_filter ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.NEG ?Ra ?R ==> Lifting.NEG (list_all2 ?Ra) (list_all2 ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.NEG ?Ra ?R ==> Lifting.NEG (rel_tree ?Ra) (rel_tree ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.NEG ?Ra ?R ==> Lifting.NEG (rel_option ?Ra) (rel_option ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.NEG ?Ra ?R ==>
      Lifting.NEG (stream_all2 ?Ra) (stream_all2 ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.POS ?A ?B ==> Lifting.POS (rel_set ?A) (rel_set ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.POS ?A ?B ==> Lifting.POS (rel_filter ?A) (rel_filter ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.POS ?R ?Ra ==> Lifting.POS (list_all2 ?R) (list_all2 ?Ra)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.POS ?R ?Ra ==> Lifting.POS (rel_tree ?R) (rel_tree ?Ra)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.POS ?R ?Ra ==> Lifting.POS (rel_option ?R) (rel_option ?Ra)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "Lifting.POS ?R ?Ra ==>
      Lifting.POS (stream_all2 ?R) (stream_all2 ?Ra)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.rel_set_mono", "?A <= ?B ==> rel_set ?A <= rel_set ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lifting_Set.image_transfer",
     "rel_fun (rel_fun ?A ?B) (rel_fun (rel_set ?A) (rel_set ?B)) (`) (`)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Lifting_Set.bind_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_set ?B)) (rel_set ?B))
       Set.bind Set.bind",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app (template_hole 2, template_var 0))),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Lifting_Set.Union_transfer",
     "rel_fun (rel_set (rel_set ?A)) (rel_set ?A) \<Union> \<Union>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0))),
               template_app (template_hole 2, template_var 0)),
             t_empty),
           t_empty)
         )),
    ("Lift.F'set1_natural",
     "F'set2 o Fmap ?f3.0 ?f4.0 = (`) ?f1.0 o F'set2",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 3, template_var 2), template_var 1)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Lift.F'set2_natural",
     "F'set2 o Fmap ?f3.0 ?f4.0 = (`) ?f2.0 o F'set2",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 3, template_var 2), template_var 1)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Lifting.pred_prod_beta",
     "pred_prod ?P ?Q ?xy = (?P (fst ?xy) & ?Q (snd ?xy))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_var 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Lifting_Set.Collect_transfer",
     "bi_total ?A ==>
      rel_fun (rel_fun ?A (=)) (rel_set ?A) Collect Collect",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)),
                 template_app (template_hole 2, template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.member_transfer",
     "bi_unique ?A ==> rel_fun ?A (rel_fun (rel_set ?A) (=)) (:) (:)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.typedef_to_part_equivp",
     "type_definition ?Rep ?Abs ?S ==> part_equivp (eq_onp (%x. x : ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Lifting.Quotient_abs_rep",
     "Quotient ?R ?Abs ?Rep ?T ==> ?Abs (?Rep ?a) = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_var 3, template_app (template_var 2, template_var 0)),
         template_var 0))),
    ("Lifting.Quotient_rep_reflp",
     "Quotient ?R ?Abs ?Rep ?T ==> ?R (?Rep ?a) (?Rep ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 4,
               template_app (template_var 2, template_var 0)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Lifting.eq_onp_to_Domainp",
     "Quotient (eq_onp ?P) ?Abs ?Rep ?T ==> Domainp ?T = ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 3))),
    ("Lifting.open_typedef_to_part_equivp",
     "type_definition ?Rep ?Abs {x. ?P x} ==> part_equivp (eq_onp ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_app (template_hole 2, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.strict_subset_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A) (rel_fun (rel_set ?A) (=)) (<) (<)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_var 0)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.subset_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A) (rel_fun (rel_set ?A) (=)) (<=) (<=)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_var 0)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.NEG_trans",
     "[| Lifting.NEG ?A ?B; Lifting.NEG ?B ?C |] ==> Lifting.NEG ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Lifting.POS_trans",
     "[| Lifting.POS ?A ?B; Lifting.POS ?B ?C |] ==> Lifting.POS ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Lifting.POS_apply",
     "[| Lifting.POS ?R ?R'; ?R ?f ?g |] ==> ?R' ?f ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Lifting.Quotient_bi_total",
     "[| Quotient ?R ?Abs ?Rep ?T; reflp ?R |] ==> bi_total ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lifting.Quotient_left_total",
     "[| Quotient ?R ?Abs ?Rep ?T; reflp ?R |] ==> left_total ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lifting_Set.Diff_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A) (rel_fun (rel_set ?A) (rel_set ?A)) (-) (-)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 3, template_var 0)),
                   template_app (template_hole 3, template_var 0))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.inter_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A) (rel_fun (rel_set ?A) (rel_set ?A)) (Int) (Int)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 3, template_var 0)),
                   template_app (template_hole 3, template_var 0))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.sum_parametric",
     "bi_unique ?A ==>
      rel_fun (rel_fun ?A (=)) (rel_fun (rel_set ?A) (=)) sum sum",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 4)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.prod_parametric",
     "bi_unique ?A ==>
      rel_fun (rel_fun ?A (=)) (rel_fun (rel_set ?A) (=)) prod prod",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 4)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.Quotient_rel_eq_transfer",
     "Quotient ?R ?Abs ?Rep ?T ==> rel_fun ?T (rel_fun ?T (=)) ?R (=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_var 3),
             template_hole 0)
           ))),
    ("Lifting.Quotient_to_Domainp",
     "Quotient ?R ?Abs ?Rep ?T ==> Domainp ?T = (%x. ?R x x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Lifting_Set.rel_set_transfer",
     "rel_fun (rel_fun ?A (rel_fun ?B (=)))
       (rel_fun (rel_set ?A) (rel_fun (rel_set ?B) (=))) rel_set rel_set",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_hole 6))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 6))),
             template_hole 1),
           template_hole 0)
         )),
    ("Lift.F'map_comp",
     "Fmap (?f3.0 o ?g3.0) (?f4.0 o ?g4.0) =
      Fmap ?f3.0 ?f4.0 o Fmap ?g3.0 ?g4.0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Lifting.pos_fun_distr",
     "rel_fun ?R ?S OO rel_fun ?R' ?S' <= rel_fun (?R OO ?R') (?S OO ?S')",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Lifting_Set.filter_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_fun ?A (=)) (rel_fun (rel_set ?A) (rel_set ?A))
       Set.filter Set.filter",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app (template_hole 2, template_var 0))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.NEG (?R4 OO ?S4) ?R1 ==>
      Lifting.NEG (list_all2 ?R4 OO list_all2 ?S4) (list_all2 ?R1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.NEG (?R4 OO ?S4) ?R1 ==>
      Lifting.NEG (rel_tree ?R4 OO rel_tree ?S4) (rel_tree ?R1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.NEG (?R4 OO ?S4) ?R1 ==>
      Lifting.NEG (rel_option ?R4 OO rel_option ?S4) (rel_option ?R1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.NEG (?R4 OO ?S4) ?R1 ==>
      Lifting.NEG (stream_all2 ?R4 OO stream_all2 ?S4) (stream_all2 ?R1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.NEG (?A4 OO ?B4) ?A1 ==>
      Lifting.NEG (rel_filter ?A4 OO rel_filter ?B4) (rel_filter ?A1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.NEG (?R4 OO ?S4) ?A1 ==>
      Lifting.NEG (rel_set ?R4 OO rel_set ?S4) (rel_set ?A1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.POS (?R3 OO ?S3) ?Ra1 ==>
      Lifting.POS (list_all2 ?R3 OO list_all2 ?S3) (list_all2 ?Ra1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.POS (?R3 OO ?S3) ?Ra1 ==>
      Lifting.POS (rel_tree ?R3 OO rel_tree ?S3) (rel_tree ?Ra1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.POS (?R3 OO ?S3) ?Ra1 ==>
      Lifting.POS (rel_option ?R3 OO rel_option ?S3) (rel_option ?Ra1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.POS (?R3 OO ?S3) ?Ra1 ==>
      Lifting.POS (stream_all2 ?R3 OO stream_all2 ?S3) (stream_all2 ?Ra1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.POS (?A3 OO ?B3) ?B1 ==>
      Lifting.POS (rel_filter ?A3 OO rel_filter ?B3) (rel_filter ?B1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "Lifting.POS (?R3 OO ?S3) ?B1 ==>
      Lifting.POS (rel_set ?R3 OO rel_set ?S3) (rel_set ?B1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting_Set.Compl_transfer",
     "[| bi_unique ?A; bi_total ?A |]
      ==> rel_fun (rel_set ?A) (rel_set ?A) uminus uminus",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.functional_converse_relation",
     "[| left_unique ?R; right_total ?R |] ==> ALL y. EX! x. ?R x y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lifting.functional_relation",
     "[| right_unique ?R; left_total ?R |] ==> ALL x. EX! y. ?R x y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lifting.Quotient_refl1",
     "[| Quotient ?R ?Abs ?Rep ?T; ?R ?r ?s |] ==> ?R ?r ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 5, template_var 1), template_var 1)
           ))),
    ("Lifting.Quotient_refl2",
     "[| Quotient ?R ?Abs ?Rep ?T; ?R ?r ?s |] ==> ?R ?s ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 5, template_var 0), template_var 0)
           ))),
    ("Lifting_Set.Image_parametric",
     "bi_unique ?A ==>
      rel_fun (rel_set (rel_prod ?A ?B)) (rel_fun (rel_set ?A) (rel_set ?B))
       (``) (``)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_app (template_hole 2, template_var 0))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.NEG_pcr_rule",
     "Lifting.NEG (?A OO ?B) ?C ==>
      Lifting.NEG (?A OO ?B OO ?X) (?C OO ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lifting.POS_pcr_rule",
     "Lifting.POS (?A OO ?B) ?C ==>
      Lifting.POS (?A OO ?B OO ?X) (?C OO ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lifting.Quotient_rel_rep",
     "Quotient ?R ?Abs ?Rep ?T ==> ?R (?Rep ?a) (?Rep ?b) = (?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_var 5,
                  template_app (template_var 3, template_var 1)),
                template_app (template_var 3, template_var 0))
              )],
         template_equation (template_var 1, template_var 0)))),
    ("Lifting_Set.Quotient_set",
     "Quotient ?R ?Abs ?Rep ?T ==>
      Quotient (rel_set ?R) ((`) ?Abs) ((`) ?Rep) (rel_set ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 3)),
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lifting.pcr_Domainp_total",
     "[| left_total ?B; Domainp ?A = ?P |] ==> Domainp (?A OO ?B) = ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Lifting.Quotient_composition_ge_eq",
     "[| left_total ?T; (=) <= ?R |] ==> (=) <= ?T OO ?R OO ?T^--1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_hole 5, template_var 0)],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Lifting.Quotient_composition_le_eq",
     "[| left_unique ?T; ?R <= (=) |] ==> ?T OO ?R OO ?T^--1 <= (=)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 0, template_hole 5)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_hole 0))),
    ("Lifting.relator_mono_raw",
     "[| Lifting.NEG ?A ?C; Lifting.POS ?B ?D |]
      ==> Lifting.POS (rel_fun ?A ?B) (rel_fun ?C ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "[| Lifting.NEG ?R1a ?R1.0; Lifting.NEG ?R2a ?R2.0 |]
      ==> Lifting.NEG (rel_sum ?R1a ?R2a) (rel_sum ?R1.0 ?R2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "[| Lifting.NEG ?R1a ?R1.0; Lifting.NEG ?R2a ?R2.0 |]
      ==> Lifting.NEG (rel_prod ?R1a ?R2a) (rel_prod ?R1.0 ?R2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "[| Lifting.POS ?C ?A; Lifting.NEG ?D ?B |]
      ==> Lifting.NEG (rel_fun ?C ?D) (rel_fun ?A ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "[| Lifting.POS ?R1.0 ?R1a; Lifting.POS ?R2.0 ?R2a |]
      ==> Lifting.POS (rel_sum ?R1.0 ?R2.0) (rel_sum ?R1a ?R2a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.relator_mono_raw",
     "[| Lifting.POS ?R1.0 ?R1a; Lifting.POS ?R2.0 ?R2a |]
      ==> Lifting.POS (rel_prod ?R1.0 ?R2.0) (rel_prod ?R1a ?R2a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.fun_mono",
     "[| ?C <= ?A; ?B <= ?D |] ==> rel_fun ?A ?B <= rel_fun ?C ?D",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Lifting_Set.rel_setD1",
     "[| rel_set ?R ?A ?B; ?x : ?A |] ==> EX y:?B. ?R ?x y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Lifting_Set.rel_setD2",
     "[| rel_set ?R ?A ?B; ?y : ?B |] ==> EX x:?A. ?R x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)
           ))),
    ("Lifting.apply_rsp'",
     "[| rel_fun ?R1.0 ?R2.0 ?f ?g; ?R1.0 ?x ?y |]
      ==> ?R2.0 (?f ?x) (?g ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 4,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Lifting.Quotient_id_abs_transfer",
     "[| Quotient ?R ?Abs ?Rep ?T; reflp ?R |]
      ==> rel_fun (=) ?T (%x. x) ?Abs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               t_empty),
             template_var 2)
           ))),
    ("Lifting.Quotient_rep_abs",
     "[| Quotient ?R ?Abs ?Rep ?T; ?R ?r ?r |] ==> ?R (?Rep (?Abs ?r)) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 0), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 4,
               template_app
                (template_var 2,
                 template_app (template_var 3, template_var 0))),
             template_var 0)
           ))),
    ("Lifting.Quotient_rel_abs",
     "[| Quotient ?R ?Abs ?Rep ?T; ?R ?r ?s |] ==> ?Abs ?r = ?Abs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            )],
       template_equation
        (template_app (template_var 4, template_var 1),
         template_app (template_var 4, template_var 0)))),
    ("Lifting.Quotient_rel_abs2",
     "[| Quotient ?R ?Abs ?Rep ?T; ?R (?Rep ?x) ?y |] ==> ?x = ?Abs ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_var 5,
                template_app (template_var 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 1, template_app (template_var 4, template_var 0)))),
    ("Lifting_Set.inj_on_transfer",
     "[| bi_unique ?A; bi_unique ?B |]
      ==> rel_fun (rel_fun ?A ?B) (rel_fun (rel_set ?A) (=)) inj_on inj_on",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.Quotient_cr_rel",
     "Quotient ?R ?Abs ?Rep ?T ==> ?T = (%x y. ?R x x & ?Abs x = y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, t_empty))),
    ("Lifting_Set.vimage_parametric",
     "[| bi_total ?A; bi_unique ?B |]
      ==> rel_fun (rel_fun ?A ?B) (rel_fun (rel_set ?B) (rel_set ?A)) (-`)
           (-`)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_app (template_hole 2, template_var 1))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.composed_equiv_rel_eq_eq_onp",
     "[| left_unique ?R; Domainp ?R = ?P |]
      ==> ?R OO (=) OO ?R^--1 = eq_onp ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Lifting_Set.INF_parametric",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (=)) (=))
       (%A f. Inf (f ` A)) (%A f. Inf (f ` A))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)),
                 template_hole 3)),
             t_empty),
           t_empty)
         )),
    ("Lifting_Set.SUP_parametric",
     "rel_fun (rel_set ?R) (rel_fun (rel_fun ?R (=)) (=))
       (%A f. Sup (f ` A)) (%A f. Sup (f ` A))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)),
                 template_hole 3)),
             t_empty),
           t_empty)
         )),
    ("Lifting_Set.right_total_Collect_transfer",
     "right_total ?A ==>
      rel_fun (rel_fun ?A (=)) (rel_set ?A) (%P. {x. P x & Domainp ?A x})
       Collect",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5)),
                 template_app (template_hole 4, template_var 0)),
               t_empty),
             template_hole 0)
           ))),
    ("Lifting.pcr_Domainp",
     "Domainp ?B = ?P ==> Domainp (?A OO ?B) = (%x. EX y. ?A x y & ?P y)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         t_empty))),
    ("Lifting_Set.Inter_transfer",
     "[| bi_unique ?A; bi_total ?A |]
      ==> rel_fun (rel_set (rel_set ?A)) (rel_set ?A) \<Inter> \<Inter>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_app (template_hole 2, template_var 0)),
               t_empty),
             t_empty)
           ))),
    ("Lifting.Quotient_total_abs_eq_iff",
     "[| Quotient ?R ?Abs ?Rep ?T; reflp ?R |]
      ==> (?Abs ?x = ?Abs ?y) = ?R ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 4, template_var 1)),
           template_app (template_var 4, template_var 0)),
         template_app
          (template_app (template_var 5, template_var 1),
           template_var 0)))),
    ("Lifting.Quotient_total_abs_induct",
     "[| Quotient ?R ?Abs ?Rep ?T; reflp ?R; !!y. ?P (?Abs y) |] ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, template_var 5)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Lifting_Set.right_total_Compl_transfer",
     "[| bi_unique ?A; right_total ?A |]
      ==> rel_fun (rel_set ?A) (rel_set ?A)
           (%S. - S Int Collect (Domainp ?A)) uminus",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app (template_hole 5, template_var 0)),
               t_empty),
             template_hole 0)
           ))),
    ("Lifting.apply_rsp''",
     "[| Quotient ?R ?Abs ?Rep ?T; rel_fun ?R ?S ?f ?f |]
      ==> ?S (?f (?Rep ?x)) (?f (?Rep ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 6),
                  template_var 2),
                template_var 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app
                (template_var 1,
                 template_app (template_var 4, template_var 0))),
             template_app
              (template_var 1,
               template_app (template_var 4, template_var 0)))
           ))),
    ("Lifting.Quotient_abs_induct",
     "[| Quotient ?R ?Abs ?Rep ?T; !!y. ?R y y ==> ?P (?Abs y) |]
      ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Lifting_Set.UNION_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_set ?B)) (rel_set ?B))
       (%A f. \<Union> (f ` A)) (%A f. \<Union> (f ` A))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app (template_hole 4, template_var 0))),
                 template_app (template_hole 4, template_var 0))),
             t_empty),
           t_empty)
         )),
    ("Lifting.pred_prod_split",
     "?P (pred_prod ?Q ?R ?xy) =
      (ALL x y. ?xy = (x, y) --> ?P (?Q x & ?R y))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Lifting_Set.fold_transfer",
     "[| bi_unique ?R; right_total ?R |]
      ==> rel_fun (rel_fun ?R (rel_fun (=) (=)))
           (rel_fun (=) (rel_fun (rel_set ?R) (=))) Finite_Set.fold
           Finite_Set.fold",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 5))),
                 template_app
                  (template_app (template_hole 4, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0)),
                     template_hole 5))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.Quotient_rep_abs_eq",
     "[| Quotient ?R ?Abs ?Rep ?T; ?R ?t ?t; ?R <= (=) |]
      ==> ?Rep (?Abs ?t) = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 0), template_var 0)
            ),
        template_inequation (less_equals, template_var 4, template_hole 0)],
       template_equation
        (template_app
          (template_var 2, template_app (template_var 3, template_var 0)),
         template_var 0))),
    ("Lifting.relator_eq_onp",
     "[| is_equality ?a1; left_unique ?R; Domainp ?R = ?P |]
      ==> ?R OO ?a1 OO ?R^--1 = eq_onp ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Lifting.pcr_Domainp_par_left_total",
     "[| Domainp ?B = ?P; left_total ?A; rel_fun ?A (=) ?P' ?P |]
      ==> Domainp (?A OO ?B) = ?P'",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3), template_var 2),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 1),
                  template_hole 3),
                template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_var 0))),
    ("Lifting.Quotient_rel",
     "Quotient ?R ?Abs ?Rep ?T ==>
      (?R ?r ?r & ?R ?s ?s & ?Abs ?r = ?Abs ?s) = ?R ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_var 5, template_var 1),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_var 5, template_var 0),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 4, template_var 1)),
               template_app (template_var 4, template_var 0)))),
         template_app
          (template_app (template_var 5, template_var 1),
           template_var 0)))),
    ("Lifting_Set.right_total_Inter_transfer",
     "[| bi_unique ?A; right_total ?A |]
      ==> rel_fun (rel_set (rel_set ?A)) (rel_set ?A)
           (%S. \<Inter> S Int Collect (Domainp ?A)) \<Inter>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0))),
                 template_app (template_hole 5, template_var 0)),
               t_empty),
             t_empty)
           ))),
    ("Lifting_Set.fold_graph_transfer",
     "[| bi_unique ?R; right_total ?R |]
      ==> rel_fun (rel_fun ?R (rel_fun (=) (=)))
           (rel_fun (=) (rel_fun (rel_set ?R) (rel_fun (=) (=)))) fold_graph
           fold_graph",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_hole 7))),
                 template_app
                  (template_app (template_hole 6, template_hole 7),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 0)),
                     template_app
                      (template_app (template_hole 3, template_hole 7),
                       template_hole 2)))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting_Set.rel_set_UNION",
     "[| rel_set ?Q ?A ?B; rel_fun ?Q (rel_set ?R) ?f ?g |]
      ==> rel_set ?R (\<Union> (?f ` ?A)) (\<Union> (?g ` ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app (template_hole 4, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 4))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("Lifting.apply_rsp",
     "[| Quotient ?R1.0 ?Abs1.0 ?Rep1.0 ?T1.0; rel_fun ?R1.0 ?R2.0 ?f ?g;
         ?R1.0 ?x ?y |]
      ==> ?R2.0 (?f ?x) (?g ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 8, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 4,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "[| Lifting.NEG (?R2 OO ?R'2) ?C1; Lifting.POS (?S2 OO ?S'2) ?D1 |]
      ==> Lifting.POS (rel_fun ?R2 ?S2 OO rel_fun ?R'2 ?S'2)
           (rel_fun ?C1 ?D1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "[| Lifting.NEG (?R1.4 OO ?S1.4) ?R1.1;
         Lifting.NEG (?R2.4 OO ?S2.4) ?R2.1 |]
      ==> Lifting.NEG (rel_sum ?R1.4 ?R2.4 OO rel_sum ?S1.4 ?S2.4)
           (rel_sum ?R1.1 ?R2.1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "[| Lifting.NEG (?R1.4 OO ?S1.4) ?R1.1;
         Lifting.NEG (?R2.4 OO ?S2.4) ?R2.1 |]
      ==> Lifting.NEG (rel_prod ?R1.4 ?R2.4 OO rel_prod ?S1.4 ?S2.4)
           (rel_prod ?R1.1 ?R2.1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "[| Lifting.POS (?R1.3 OO ?S1.3) ?R1a1;
         Lifting.POS (?R2.3 OO ?S2.3) ?R2a1 |]
      ==> Lifting.POS (rel_sum ?R1.3 ?R2.3 OO rel_sum ?S1.3 ?S2.3)
           (rel_sum ?R1a1 ?R2a1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "[| Lifting.POS (?R1.3 OO ?S1.3) ?R1a1;
         Lifting.POS (?R2.3 OO ?S2.3) ?R2a1 |]
      ==> Lifting.POS (rel_prod ?R1.3 ?R2.3 OO rel_prod ?S1.3 ?S2.3)
           (rel_prod ?R1a1 ?R2a1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Lifting_Set.vimage_right_total_transfer",
     "[| bi_unique ?B; right_total ?A |]
      ==> rel_fun (rel_fun ?A ?B) (rel_fun (rel_set ?B) (rel_set ?A))
           (%f X. f -` X Int Collect (Domainp ?A)) (-`)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 1)),
                   template_app (template_hole 5, template_var 0))),
               t_empty),
             template_hole 0)
           ))),
    ("Lifting.fun_quotient",
     "[| Quotient ?R1.0 ?abs1.0 ?rep1.0 ?T1.0;
         Quotient ?R2.0 ?abs2.0 ?rep2.0 ?T2.0 |]
      ==> Quotient (rel_fun ?R1.0 ?R2.0) (map_fun ?rep1.0 ?abs2.0)
           (map_fun ?abs1.0 ?rep2.0) (rel_fun ?T1.0 ?T2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 7),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Lifting.pcr_Domainp_par",
     "[| Domainp ?B = ?P2.0; Domainp ?A = ?P1.0;
         rel_fun ?A (=) ?P2' ?P2.0 |]
      ==> Domainp (?A OO ?B) = inf ?P1.0 ?P2'",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3),
                template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 4)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lifting.composed_equiv_rel_eq_onp",
     "[| left_unique ?R; rel_fun ?R (=) ?P ?P'; Domainp ?R = ?P'' |]
      ==> ?R OO eq_onp ?P' OO ?R^--1 = eq_onp (inf ?P'' ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_hole 9),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 7, template_var 3), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 2, template_var 3))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Lifting.Quotient_compose",
     "[| Quotient ?R1.0 ?Abs1.0 ?Rep1.0 ?T1.0;
         Quotient ?R2.0 ?Abs2.0 ?Rep2.0 ?T2.0 |]
      ==> Quotient (?T1.0 OO ?R2.0 OO ?T1.0^--1) (?Abs2.0 o ?Abs1.0)
           (?Rep1.0 o ?Rep2.0) (?T1.0 OO ?T2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app (template_hole 3, template_var 4)))),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 6)),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Lifting.relator_eq_onp",
     "[| left_unique ?R; Transfer.Rel (rel_fun ?R (=)) ?P ?P';
         Domainp ?R = ?P'' |]
      ==> ?R OO eq_onp ?P' OO ?R^--1 = eq_onp (inf ?P'' ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_hole 9)),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 7, template_var 3), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 2, template_var 3))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Lifting.neg_fun_distr1",
     "[| left_unique ?R; right_total ?R; right_unique ?R'; left_total ?R' |]
      ==> rel_fun (?R OO ?R') (?S OO ?S')
          <= rel_fun ?R ?S OO rel_fun ?R' ?S'",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Lifting.neg_fun_distr2",
     "[| right_unique ?R'; left_total ?R'; left_unique ?S';
         right_total ?S' |]
      ==> rel_fun (?R OO ?R') (?S OO ?S')
          <= rel_fun ?R ?S OO rel_fun ?R' ?S'",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2))))),
    ("Lifting_Set.bi_unique_rel_set_lemma",
     "[| bi_unique ?R; rel_set ?R ?X ?Y;
         !!f. [| ?Y = f ` ?X; inj_on f ?X; ALL x:?X. ?R x (f x) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Lifting.relator_distr_raw",
     "[| left_unique ?R2; right_total ?R2; right_unique ?R'2;
         left_total ?R'2; Lifting.POS (?R2 OO ?R'2) ?A1;
         Lifting.NEG (?S2 OO ?S'2) ?B1 |]
      ==> Lifting.NEG (rel_fun ?R2 ?S2 OO rel_fun ?R'2 ?S'2)
           (rel_fun ?A1 ?B1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Lifting.relator_distr_raw",
     "[| right_unique ?R'2; left_total ?R'2; left_unique ?S'2;
         right_total ?S'2; Lifting.POS (?R2 OO ?R'2) ?A1;
         Lifting.NEG (?S2 OO ?S'2) ?B1 |]
      ==> Lifting.NEG (rel_fun ?R2 ?S2 OO rel_fun ?R'2 ?S'2)
           (rel_fun ?A1 ?B1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 5)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lifting.QuotientI",
     "[| !!a. ?Abs (?Rep a) = a; !!a. ?R (?Rep a) (?Rep a);
         !!r s. ?R r s = (?R r r & ?R s s & ?Abs r = ?Abs s);
         ?T = (%x y. ?R x x & ?Abs x = y) |]
      ==> Quotient ?R ?Abs ?Rep ?T",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_equation (template_var 0, t_empty)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Lift.F'map_cong",
     "[| !!z. z : {} ==> ?f1.0 z = ?g1.0 z;
         !!z. z : {} ==> ?f2.0 z = ?g2.0 z;
         !!z. z : F'set3 ?x ==> ?f3.0 z = ?g3.0 z;
         !!z. z : F'set4 ?x ==> ?f4.0 z = ?g4.0 z |]
      ==> Fmap ?f3.0 ?f4.0 ?x = Fmap ?g3.0 ?g4.0 ?x",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 4))))]:
   (string * thm * template) list
### theory "Draft.LiftMoreTemplates"
### 0.341s elapsed time, 0.423s cpu time, 0.000s GC time
val it = (): unit
