Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.BNF_Axiomatization" (required by "Draft.LFPMoreTemplates" via "Draft.LFP")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature BNF_AXIOMATIZATION =
  sig
    val bnf_axiomatization:
       (string -> bool) ->
         (binding option * (typ * sort)) list ->
           binding ->
             mixfix ->
               binding ->
                 binding ->
                   binding ->
                     typ list -> local_theory -> BNF_Def.bnf * local_theory
  end
structure BNF_Axiomatization: BNF_AXIOMATIZATION
### theory "HOL-Library.BNF_Axiomatization"
### 0.115s elapsed time, 0.480s cpu time, 0.034s GC time
Loading theory "Draft.LFP" (required by "Draft.LFPMoreTemplates")
### theory "HOL-Library.Function_Algebras"
### 0.130s elapsed time, 0.533s cpu time, 0.034s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
val mk_IfN = fn: typ -> term list -> term list -> term
val transpose = fn: 'a list list -> 'a list list
val mk_TFrees' = fn: sort list -> Proof.context -> typ list * Proof.context
val WRAP = fn:
   ('a -> tactic) -> ('a -> tactic) -> 'a list -> tactic -> tactic
val eqFalseI = "~ ?P1 ==> ?P1 = False": thm
val name_noted_thms = fn:
   string -> string -> (string * thm list) list -> (string * thm list) list
val unfold_thms = fn: Proof.context -> thm list -> thm -> thm
val mk_Trueprop_eq = fn: term * term -> term
val mk_unabs_def = fn: int -> thm -> thm
val name_of_const = fn: string -> (typ -> typ) -> term -> string
val permute_like_unique = fn:
   ('a * 'b -> bool) -> 'a list -> 'b list -> 'c list -> 'c list
val mk_names = fn: int -> string -> string list
val mk_Frees = fn:
   string -> typ list -> Proof.context -> term list * Proof.context
val dtac = fn: Proof.context -> thm -> int -> tactic
val mk_TFrees = fn: int -> Proof.context -> typ list * Proof.context
val etac = fn: Proof.context -> thm -> int -> tactic
val resort_tfree_or_tvar = fn: sort -> typ -> typ
val base_name_of_typ = fn: typ -> string
val CONJ_WRAP_GEN' = fn:
   (int -> tactic) -> ('a -> int -> tactic) -> 'a list -> int -> tactic
val seq_conds = fn: (bool -> 'a -> 'b) -> int -> int -> 'a list -> 'b list
val mk_fresh_names = fn:
   Proof.context -> int -> string -> string list * Proof.context
val variant_tfrees = fn:
   string list -> Proof.context -> typ list * Proof.context
val parse_opt_binding_colon = fn: binding parser
val dest_TFree_or_TVar = fn: typ -> string * sort
val eqTrueI = "?Q ==> ?Q = True": thm
val fo_match = fn: Proof.context -> term -> term -> Type.tyenv * Envir.tenv
val rtac = fn: Proof.context -> thm -> int -> tactic
val mk_Freess' = fn:
   string ->
     typ list list ->
       Proof.context ->
         (term list list * (string * typ) list list) * Proof.context
val CONJ_WRAP = fn: ('a -> tactic) -> 'a list -> tactic
val list_exists_free = fn: term list -> term -> term
val ss_only = fn: thm list -> Proof.context -> Proof.context
val WRAP' = fn:
   ('a -> int -> tactic) ->
     ('a -> int -> tactic) -> 'a list -> (int -> tactic) -> int -> tactic
val splice = fn: 'a list -> 'a list -> 'a list
val mk_Freess = fn:
   string ->
     typ list list -> Proof.context -> term list list * Proof.context
val variant_types = fn:
   string list ->
     sort list -> Proof.context -> (string * sort) list * Proof.context
val rapp = fn: term -> term -> term
val mk_Frees' = fn:
   string ->
     typ list ->
       Proof.context -> (term list * (string * typ) list) * Proof.context
val mk_pred1T = fn: typ -> typ
val mk_predT = fn: typ list -> typ
val typ_subst_nonatomic = fn: (typ * typ) list -> typ -> typ
val pad_list = fn: 'a -> int -> 'a list -> 'a list
val CONJ_WRAP' = fn: ('a -> int -> tactic) -> 'a list -> int -> tactic
val standard_binding = "_": binding
val list_all_free = fn: term list -> term -> term
val subst_nonatomic_types = fn: (typ * typ) list -> term -> term
val lhs_head_of = fn: thm -> term
val map_prod = fn: ('a -> 'b) -> ('c -> 'd) -> 'a * 'c -> 'b * 'd
val CONJ_WRAP_GEN = fn: tactic -> ('a -> tactic) -> 'a list -> tactic
val permute_like = fn:
   ('a * 'a -> bool) -> 'a list -> 'a list -> 'b list -> 'b list
val substitute_noted_thm = fn: (string * thm list) list -> morphism
val mk_disjIN = fn: int -> int -> thm
val parse_binding_colon = fn: binding parser
val mk_abs_def = fn: thm -> thm
val mk_Trueprop_mem = fn: term * term -> term
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.864s cpu time, 0.034s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.338s elapsed time, 1.349s cpu time, 0.139s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.037s elapsed time, 3.901s cpu time, 1.017s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.120s elapsed time, 4.070s cpu time, 1.024s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
val fold1 =
   "fold1 ?s1' ?s2' (ctor1 ?z) =
    ?s1' (F1map id (fold1 ?s1' ?s2') (fold2 ?s1' ?s2') ?z)":
   thm
val fold2 =
   "fold2 ?s1' ?s2' (ctor2 ?z) =
    ?s2' (F2map id (fold1 ?s1' ?s2') (fold2 ?s1' ?s2') ?z)":
   thm
val it = "ctor1 o dtor1 = id": thm
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val it = "ctor2 o dtor2 = id": thm
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
val it =
   ["fold1 ?s1.34 ?f5 o IF1map ?g16 =
     fold1 (?s1.34 o F1map ?g16 id id) (?f5 o F2map ?g16 id id)",
    "fold2 ?s1.34 ?f5 o IF2map ?g16 =
     fold2 (?s1.34 o F1map ?g16 id id) (?f5 o F2map ?g16 id id)"]:
   thm list
val it =
   ["rec1 ?s1.42 ?f5 o IF1map ?g14 =
     rec1
      (?s1.42 o
       F1map ?g14 (map_prod (IF1map ?g14) id) (map_prod (IF2map ?g14) id))
      (?f5 o
       F2map ?g14 (map_prod (IF1map ?g14) id) (map_prod (IF2map ?g14) id))",
    "rec2 ?s1.42 ?f5 o IF2map ?g14 =
     rec2
      (?s1.42 o
       F1map ?g14 (map_prod (IF1map ?g14) id) (map_prod (IF2map ?g14) id))
      (?f5 o
       F2map ?g14 (map_prod (IF1map ?g14) id)
        (map_prod (IF2map ?g14) id))"]:
   thm list
### theory "HOL-Library.Tree"
### 2.064s elapsed time, 6.518s cpu time, 1.445s GC time
Loading theory "Draft.Templates" (required by "Draft.LFPMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.LFP"
### 2.088s elapsed time, 6.552s cpu time, 1.445s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.292s elapsed time, 0.909s cpu time, 0.795s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LFPMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.508s elapsed time, 0.547s cpu time, 0.044s GC time
Loading theory "Draft.LFPMoreTemplates"
val templateLemmas =
   [("LFP.worel_SucFbd", "wo_rel (cardSuc (?r1.0 +c ?r2.0))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("LFP.dtor1_ctor1", "dtor1 (ctor1 ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("LFP.dtor2_ctor2", "dtor2 (ctor2 ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("LFP.ctor1_dtor1", "ctor1 (dtor1 ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("LFP.ctor2_dtor2", "ctor2 (dtor2 ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("LFP.ctor1_nchotomy", "EX x. ?y = ctor1 x",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("LFP.ctor2_nchotomy", "EX x. ?y = ctor2 x",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("LFP.dtor1_nchotomy", "EX x. ?y = dtor1 x",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("LFP.dtor2_nchotomy", "EX x. ?y = dtor2 x",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("LFP.F1bd'_Card_order", "Card_order (?r1.0 +c ?r2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("LFP.dtor1_diff", "(dtor1 ?x = dtor1 ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("LFP.dtor2_diff", "(dtor2 ?x = dtor2 ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("LFP.ctor1_diff", "(ctor1 ?x = ctor1 ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("LFP.ctor2_diff", "(ctor2 ?x = ctor2 ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("LFP.alg_min_alg",
     "alg (min_alg1 ?s1.0 ?s2.0) (min_alg2 ?s1.0 ?s2.0) ?s1.0 ?s2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0)
         )),
    ("LFP.F1set1_bd", "|F1set1 ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.F1set2_bd", "|F1set2 ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.F1set3_bd", "|F1set3 ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.F2set1_bd", "|F2set1 ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.F2set2_bd", "|F2set2 ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.F2set3_bd", "|F2set3 ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.SucFbd_Card_order", "Card_order (cardSuc (?r1.0 +c ?r2.0))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("LFP.le_IF1rel_Comp",
     "IF1rel ?R1.0 OO IF1rel ?R2.0 <= IF1rel (?R1.0 OO ?R2.0)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("LFP.le_IF2rel_Comp",
     "IF2rel ?R1.0 OO IF2rel ?R2.0 <= IF2rel (?R1.0 OO ?R2.0)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("LFP.F1set1_bd_incr", "|F1set1 ?x| \<le>o F1bd'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("LFP.F2set1_bd_incr", "|F2set1 ?x| \<le>o F2bd'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("LFP.F1set2_bd_incr", "|F1set2 ?x| \<le>o F1bd'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("LFP.F2set2_bd_incr", "|F2set2 ?x| \<le>o F2bd'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("LFP.F1set3_bd_incr", "|F1set3 ?x| \<le>o F1bd'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("LFP.F2set3_bd_incr", "|F2set3 ?x| \<le>o F2bd'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("LFP.least_min_alg1",
     "alg ?B1.0 ?B2.0 ?s1.0 ?s2.0 ==> min_alg1 ?s1.0 ?s2.0 <= ?B1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 3))),
    ("LFP.least_min_alg2",
     "alg ?B1.0 ?B2.0 ?s1.0 ?s2.0 ==> min_alg2 ?s1.0 ?s2.0 <= ?B2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("LFP.ctor1_cases", "(!!x. ?y = ctor1 x ==> ?Q) ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("LFP.ctor2_cases", "(!!x. ?y = ctor2 x ==> ?Q) ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("LFP.dtor1_cases", "(!!x. ?y = dtor1 x ==> ?Q) ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("LFP.dtor2_cases", "(!!x. ?y = dtor2 x ==> ?Q) ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("LFP.F1bd'_Cinfinite", "Cinfinite (bd_F1 +c ?r2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))
         )),
    ("LFP.F2bd'_Cinfinite", "Cinfinite (bd_F2 +c ?r2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))
         )),
    ("LFP.init_ex_mor",
     "EX f g. mor UNIV UNIV ctor1 ctor2 UNIV UNIV ?s1.0 ?s2.0 f g",
     template_predicate (template_app (template_hole 8, t_empty))),
    ("LFP.IF1rel_F1rel",
     "IF1rel ?R (ctor1 ?a) (ctor1 ?b) =
      F1rel ?R (IF1rel ?R) (IF2rel ?R) ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("LFP.IF2rel_F2rel",
     "IF2rel ?R (ctor2 ?a) (ctor2 ?b) =
      F2rel ?R (IF1rel ?R) (IF2rel ?R) ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 4, template_var 2)),
           template_var 1),
         template_var 0))),
    ("LFP.mor_fold",
     "mor UNIV UNIV ctor1 ctor2 UNIV UNIV ?s1.0 ?s2.0 (fold1 ?s1.0 ?s2.0)
       (fold2 ?s1.0 ?s2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_hole 6),
                         template_hole 5),
                       template_hole 4),
                     template_hole 3),
                   template_hole 2),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("LFP.SucFbd_ASucFbd",
     "cardSuc (?r1.0 +c ?r2.0) <o
      (?p1.0 +c ctwo) ^c cardSuc (?r1.0 +c ?r2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1))))),
           template_hole 0)
         )),
    ("LFP.fold1",
     "fold1 ?s1.0 ?s2.0 (ctor1 ?x) =
      ?s1.0 (F1map id (fold1 ?s1.0 ?s2.0) (fold2 ?s1.0 ?s2.0) ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("LFP.fold2",
     "fold2 ?s1.0 ?s2.0 (ctor2 ?x) =
      ?s2.0 (F2map id (fold1 ?s1.0 ?s2.0) (fold2 ?s1.0 ?s2.0) ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("LFP.fold1_o_ctor1",
     "fold1 ?s1.0 ?s2.0 o ctor1 =
      ?s1.0 o F1map id (fold1 ?s1.0 ?s2.0) (fold2 ?s1.0 ?s2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("LFP.fold2_o_ctor2",
     "fold2 ?s1.0 ?s2.0 o ctor2 =
      ?s2.0 o F2map id (fold1 ?s1.0 ?s2.0) (fold2 ?s1.0 ?s2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))))),
    ("LFP.alg_not_empty",
     "alg ?B1.0 ?B2.0 ?s1.0 ?s2.0 ==> ?B1.0 ~= {} & ?B2.0 ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_hole 2))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)))
           ))),
    ("LFP.F1bd'_Cnotzero",
     "(bd_F1 +c ?r2.0, czero) ~: ordIso & Card_order (bd_F1 +c ?r2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0))),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)))
         )),
    ("LFP.F2bd'_Cnotzero",
     "(bd_F2 +c ?r2.0, czero) ~: ordIso & Card_order (bd_F2 +c ?r2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0))),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)))
         )),
    ("LFP.mor_str",
     "mor UNIV UNIV (F1map id ?s1.0 ?s2.0) (F2map id ?s1.0 ?s2.0) UNIV UNIV
       ?s1.0 ?s2.0 ?s1.0 ?s2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 7, template_hole 6),
                           template_hole 5),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_var 1),
                           template_var 0)),
                       template_app
                        (template_app
                          (template_app (template_hole 2, template_hole 3),
                           template_var 1),
                         template_var 0)),
                     template_hole 1),
                   template_hole 0),
                 template_var 1),
               template_var 0),
             template_var 1),
           template_var 0)
         )),
    ("LFP.F1map_comp_id",
     "F1map ?g1.0 ?g2.0 ?g3.0 (F1map id ?f2.0 ?f3.0 ?x) =
      F1map ?g1.0 (?g2.0 o ?f2.0) (?g3.0 o ?f3.0) ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("LFP.F2map_comp_id",
     "F2map ?g1.0 ?g2.0 ?g3.0 (F2map id ?f2.0 ?f3.0 ?x) =
      F2map ?g1.0 (?g2.0 o ?f2.0) (?g3.0 o ?f3.0) ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("LFP.rec1",
     "rec1 ?s1.0 ?s2.0 (ctor1 ?x) =
      ?s1.0 (F1map id <id , rec1 ?s1.0 ?s2.0> <id , rec2 ?s1.0 ?s2.0> ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0)))),
    ("LFP.rec2",
     "rec2 ?s1.0 ?s2.0 (ctor2 ?x) =
      ?s2.0 (F2map id <id , rec1 ?s1.0 ?s2.0> <id , rec2 ?s1.0 ?s2.0> ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_var 1))),
           template_var 0)))),
    ("LFP.fst_rec1_pair",
     "fst o
      fold1 <ctor1 o F1map id fst fst , ?ga>
       <ctor2 o F2map id fst fst , ?g> =
      id",
     template_equation
      (template_app
        (template_app (template_hole 13, template_hole 12),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_hole 12),
                     template_hole 5))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 6),
                     template_hole 12),
                   template_hole 5))),
             template_var 0))),
       template_hole 0)),
    ("LFP.fst_rec2_pair",
     "fst o
      fold2 <ctor1 o F1map id fst fst , ?ga>
       <ctor2 o F2map id fst fst , ?g> =
      id",
     template_equation
      (template_app
        (template_app (template_hole 13, template_hole 12),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_hole 5),
                     template_hole 12))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 6),
                     template_hole 5),
                   template_hole 12))),
             template_var 0))),
       template_hole 0)),
    ("LFP.mor_incl",
     "[| ?B1.0 <= ?B1'; ?B2.0 <= ?B2' |]
      ==> mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1' ?B2' ?s1.0 ?s2.0 id id",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 2, template_var 5),
                             template_var 3),
                           template_var 1),
                         template_var 0),
                       template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_hole 1),
             template_hole 0)
           ))),
    ("LFP.SucFbd_Cinfinite",
     "Cinfinite (cardSuc ((bd_F1 +c ?r2a) +c ?r2.0))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 1)),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_var 0)))),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1)),
                 template_var 0))))
         )),
    ("LFP.card_of_min_alg1", "|min_alg1 ?s1.0 ?s2.0| \<le>o ASucFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 16, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 13, template_hole 12)),
                     template_hole 11)),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_app (template_hole 6, template_hole 5))),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_hole 2, template_hole 1))))))),
           template_hole 0)
         )),
    ("LFP.card_of_min_alg2", "|min_alg2 ?s1.0 ?s2.0| \<le>o ASucFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 16, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 13, template_hole 12)),
                     template_hole 11)),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_app (template_hole 6, template_hole 5))),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_hole 2, template_hole 1))))))),
           template_hole 0)
         )),
    ("LFP.mor_incl_min_alg",
     "alg ?B1.0 ?B2.0 ?s1.0 ?s2.0 ==>
      mor (min_alg1 ?s1.0 ?s2.0) (min_alg2 ?s1.0 ?s2.0) ?s1.0 ?s2.0 ?B1.0
       ?B2.0 ?s1.0 ?s2.0 id id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_app
                                  (template_hole 3, template_var 1),
                                 template_var 0)),
                             template_app
                              (template_app
                                (template_hole 2, template_var 1),
                               template_var 0)),
                           template_var 1),
                         template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_hole 1),
             template_hole 0)
           ))),
    ("LFP.alg_F1set",
     "[| alg ?B1.0 ?B2.0 ?s1.0 ?s2.0; F1set2 ?x <= ?B1.0;
         F1set3 ?x <= ?B2.0 |]
      ==> ?s1.0 ?x : ?B1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)),
             template_var 4)
           ))),
    ("LFP.alg_F2set",
     "[| alg ?B1.0 ?B2.0 ?s1.0 ?s2.0; F2set2 ?x <= ?B1.0;
         F2set3 ?x <= ?B2.0 |]
      ==> ?s2.0 ?x : ?B2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 1, template_var 0)),
             template_var 3)
           ))),
    ("LFP.fold_unique_mor",
     "mor UNIV UNIV ctor1 ctor2 UNIV UNIV ?s1.0 ?s2.0 ?f ?g ==>
      ?f = fold1 ?s1.0 ?s2.0 & ?g = fold2 ?s1.0 ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 11, template_hole 10),
                              template_hole 9),
                            template_hole 8),
                          template_hole 7),
                        template_hole 6),
                      template_hole 5),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)))
           ))),
    ("LFP.SucFbd_Cnotzero",
     "(cardSuc ((bd_F1 +c ?r2a) +c ?r2.0), czero) ~: ordIso &
      Card_order (cardSuc ((bd_F1 +c ?r2a) +c ?r2.0))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_hole 4),
                               template_var 1)),
                           template_var 0))),
                     template_hole 3)),
                 template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 1)),
                     template_var 0)))),
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 1)),
                 template_var 0))))
         )),
    ("LFP.F1map_congL",
     "[| ALL a:F1set2 ?x. ?f a = a; ALL a:F1set3 ?x. ?g a = a |]
      ==> F1map id ?f ?g ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("LFP.F2map_congL",
     "[| ALL a:F2set2 ?x. ?f a = a; ALL a:F2set3 ?x. ?g a = a |]
      ==> F2map id ?f ?g ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("LFP.F1set1_IF1set", "F1set1 ?x <= IF1set (ctor1 ?x)",
     template_inequation
      (less_equals, template_app (template_hole 10, template_var 0),
       template_app
        (template_app (template_app (template_hole 9, t_empty), t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("LFP.F2set1_IF2set", "F2set1 ?x <= IF2set (ctor2 ?x)",
     template_inequation
      (less_equals, template_app (template_hole 10, template_var 0),
       template_app
        (template_app (template_app (template_hole 9, t_empty), t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("LFP.le_IFrel_Comp",
     "((IF1rel ?R OO IF1rel ?S) ?x1.0 ?y1.0 -->
       IF1rel (?R OO ?S) ?x1.0 ?y1.0) &
      ((IF2rel ?R OO IF2rel ?S) ?x2.0 ?y2.0 -->
       IF2rel (?R OO ?S) ?x2.0 ?y2.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 5)),
                       template_app (template_hole 6, template_var 4)),
                     template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4)),
                   template_var 3),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 5)),
                     template_app (template_hole 1, template_var 4)),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4)),
                 template_var 1),
               template_var 0)))
         )),
    ("LFP.IF2wit", "?x : IF2set IF2wit ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 10, t_empty), t_empty),
                template_hole 1))
            )],
       template_predicate (template_hole 0))),
    ("LFP.IF1set_bd", "|IF1set ?x| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_app (template_hole 12, t_empty), t_empty),
                     template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.IF2set_bd", "|IF2set ?y| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_app (template_hole 12, t_empty), t_empty),
                     template_var 0))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1))),
           template_hole 0)
         )),
    ("LFP.IF1wit", "?x : IF1set (IF1wit ?y) ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 10, t_empty), t_empty),
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation (template_var 1, template_var 0))),
    ("LFP.mor_UNIV",
     "mor UNIV UNIV ?s1.0 ?s2.0 UNIV UNIV ?s1' ?s2' ?f ?g =
      (?f o ?s1.0 = ?s1' o F1map id ?f ?g &
       ?g o ?s2.0 = ?s2' o F2map id ?f ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 14, template_hole 13),
                              template_hole 12),
                            template_var 5),
                          template_var 4),
                        template_hole 11),
                      template_hole 10),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_var 5)),
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 4)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_hole 4),
                     template_var 1),
                   template_var 0))))
           ))),
    ("LFP.ASucFbd_Cinfinite",
     "Cinfinite ((?p1.0 +c ctwo) ^c cardSuc ((bd_F1 +c ?r2a) +c ?r2.0))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_hole 6)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_hole 6)),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 1)),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_hole 6)),
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 1)),
                   template_var 0)))))
         )),
    ("LFP.mor_cong",
     "[| ?f' = ?f; ?g' = ?g;
         mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1' ?B2' ?s1' ?s2' ?f ?g |]
      ==> mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1' ?B2' ?s1' ?s2' ?f' ?g'",
     template_implication
      ([template_equation (template_var 11, template_var 10),
        template_equation (template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 7),
                              template_var 6),
                            template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0),
                template_var 10),
              template_var 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 0, template_var 7),
                             template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 11),
             template_var 9)
           ))),
    ("LFP.fold_unique",
     "[| ?f o ctor1 = ?s1.0 o F1map id ?f ?g;
         ?g o ctor2 = ?s2.0 o F2map id ?f ?g |]
      ==> ?f = fold1 ?s1.0 ?s2.0 & ?g = fold2 ?s1.0 ?s2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 3),
            template_hole 13),
          template_app
           (template_app (template_hole 12, template_var 2),
            template_app
             (template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 3),
              template_var 1))),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 7),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 10),
                template_var 3),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("LFP.copy",
     "[| alg ?B1.0 ?B2.0 ?s1.0 ?s2.0; bij_betw ?f ?B1' ?B1.0;
         bij_betw ?g ?B2' ?B2.0 |]
      ==> EX f' g'.
             alg ?B1' ?B2' f' g' &
             mor ?B1' ?B2' f' g' ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?f ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_var 6)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("LFP.fold_transfer",
     "rel_fun (rel_fun (F1rel ?R ?S ?T) ?S)
       (rel_fun (rel_fun (F2rel ?R ?S ?T) ?T) (rel_fun (IF1rel ?R) ?S))
       fold1 fold1 &
      rel_fun (rel_fun (F1rel ?R ?S ?T) ?S)
       (rel_fun (rel_fun (F2rel ?R ?S ?T) ?T) (rel_fun (IF2rel ?R) ?T))
       fold2 fold2",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 13, template_var 2),
                             template_var 1),
                           template_var 0)),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 10, template_var 2),
                               template_var 1),
                             template_var 0)),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 2)),
                       template_var 1))),
                 template_hole 7),
               template_hole 6)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app
                          (template_app (template_hole 13, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 10, template_var 2),
                             template_var 1),
                           template_var 0)),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 2)),
                     template_var 0))),
               template_hole 1),
             template_hole 0))
         )),
    ("LFP.mor_comp",
     "[| mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1' ?B2' ?s1' ?s2' ?f ?g;
         mor ?B1' ?B2' ?s1' ?s2' ?B1'' ?B2'' ?s1'' ?s2'' ?f' ?g' |]
      ==> mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1'' ?B2'' ?s1'' ?s2'' (?f' o ?f)
           (?g' o ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 4, template_var 15),
                              template_var 14),
                            template_var 13),
                          template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 3, template_var 11),
                              template_var 10),
                            template_var 9),
                          template_var 8),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 2, template_var 15),
                             template_var 14),
                           template_var 13),
                         template_var 12),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 7)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 6))
           ))),
    ("LFP.F1in_mono23",
     "[| ?A2.0 <= ?A2a; ?A3.0 <= ?A3a |]
      ==> F1in ?A1.0 ?A2.0 ?A3.0 <= F1in ?A1.0 ?A2a ?A3a",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("LFP.F2in_mono23",
     "[| ?A2.0 <= ?A2a; ?A3.0 <= ?A3a |]
      ==> F2in ?A1.0 ?A2.0 ?A3.0 <= F2in ?A1.0 ?A2a ?A3a",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("LFP.morE1",
     "[| mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1' ?B2' ?s1' ?s2' ?f ?g;
         ?z : F1in UNIV ?B1.0 ?B2.0 |]
      ==> ?f (?s1.0 ?z) = ?s1' (F1map id ?f ?g ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 13, template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, t_empty))
            )],
       template_equation
        (template_app
          (template_var 2, template_app (template_var 8, template_var 0)),
         template_app
          (template_var 4,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("LFP.morE2",
     "[| mor ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?B1' ?B2' ?s1' ?s2' ?f ?g;
         ?z : F2in UNIV ?B1.0 ?B2.0 |]
      ==> ?g (?s2.0 ?z) = ?s2' (F2map id ?f ?g ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 13, template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, t_empty))
            )],
       template_equation
        (template_app
          (template_var 1, template_app (template_var 7, template_var 0)),
         template_app
          (template_var 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("LFP.rec_unique",
     "[| ?f o ctor1 = ?s1.0 o F1map id <id , ?f> <id , ?g>;
         ?g o ctor2 = ?s2.0 o F2map id <id , ?f> <id , ?g> |]
      ==> ?f = rec1 ?s1.0 ?s2.0 & ?g = rec2 ?s1.0 ?s2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 18, template_var 3),
            template_hole 17),
          template_app
           (template_app (template_hole 16, template_var 2),
            template_app
             (template_app
               (template_app (template_hole 15, template_hole 14),
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_var 3)),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 1)))),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 7),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 14),
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_var 3)),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 1))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("LFP.IF1map_comp", "IF1map (?g o ?f) = IF1map ?g o IF1map ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 24,
           template_app
            (template_app (template_hole 23, template_hole 22),
             template_app
              (template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app (template_hole 20, template_var 1),
                     template_var 0)),
                 template_hole 19),
               template_hole 18))),
         template_app
          (template_app (template_hole 17, template_hole 16),
           template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 20, template_var 1),
                   template_var 0)),
               template_hole 19),
             template_hole 18))),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_hole 22),
                 template_app
                  (template_app
                    (template_app (template_hole 11, template_var 1),
                     template_hole 19),
                   template_hole 18))),
             template_app
              (template_app (template_hole 10, template_hole 16),
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 1),
                   template_hole 19),
                 template_hole 18)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 4),
               template_hole 3)))))),
    ("LFP.IF2map_comp", "IF2map (?g o ?f) = IF2map ?g o IF2map ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 24,
           template_app
            (template_app (template_hole 23, template_hole 22),
             template_app
              (template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app (template_hole 20, template_var 1),
                     template_var 0)),
                 template_hole 19),
               template_hole 18))),
         template_app
          (template_app (template_hole 17, template_hole 16),
           template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 20, template_var 1),
                   template_var 0)),
               template_hole 19),
             template_hole 18))),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_hole 22),
                 template_app
                  (template_app
                    (template_app (template_hole 11, template_var 1),
                     template_hole 19),
                   template_hole 18))),
             template_app
              (template_app (template_hole 10, template_hole 16),
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 1),
                   template_hole 19),
                 template_hole 18)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 4),
               template_hole 3)))))),
    ("LFP.Irel_induct",
     "[| ALL x y. F1rel ?P1.0 ?P2.0 ?P3.0 x y --> ?P2.0 (ctor1 x) (ctor1 y);
         ALL x y.
            F2rel ?P1.0 ?P2.0 ?P3.0 x y --> ?P3.0 (ctor2 x) (ctor2 y) |]
      ==> IF1rel ?P1.0 <= ?P2.0 & IF2rel ?P1.0 <= ?P3.0",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("LFP.IF1map",
     "IF1map ?f o ctor1 = ctor1 o F1map ?f (IF1map ?f) (IF2map ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_var 0),
                     template_hole 8),
                   template_hole 7))),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 8),
                 template_hole 7)))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 10),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_var 0),
                       template_hole 8),
                     template_hole 7))),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 8),
                   template_hole 7)))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_var 0),
                     template_hole 8),
                   template_hole 7))),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 8),
                 template_hole 7))))))),
    ("LFP.IF2map",
     "IF2map ?f o ctor2 = ctor2 o F2map ?f (IF1map ?f) (IF2map ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_var 0),
                     template_hole 8),
                   template_hole 7))),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 8),
                 template_hole 7)))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 5),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_var 0),
                       template_hole 8),
                     template_hole 7))),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 8),
                   template_hole 7)))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_var 0),
                     template_hole 8),
                   template_hole 7))),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 8),
                 template_hole 7))))))),
    ("LFP.IF1map_simps",
     "IF1map ?f (ctor1 ?v) = ctor1 (F1map ?f (IF1map ?f) (IF2map ?f) ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 7),
                 template_hole 6))),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 7),
               template_hole 6))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app
                      (template_app
                        (template_app (template_hole 8, template_var 1),
                         template_hole 7),
                       template_hole 6))),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_hole 7),
                     template_hole 6)))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 1),
                       template_hole 7),
                     template_hole 6))),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 7),
                   template_hole 6)))),
           template_var 0)))),
    ("LFP.IF2map_simps",
     "IF2map ?f (ctor2 ?v) = ctor2 (F2map ?f (IF1map ?f) (IF2map ?f) ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 7),
                 template_hole 6))),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 7),
               template_hole 6))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app
                      (template_app
                        (template_app (template_hole 8, template_var 1),
                         template_hole 7),
                       template_hole 6))),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_hole 7),
                     template_hole 6)))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 1),
                       template_hole 7),
                     template_hole 6))),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 7),
                   template_hole 6)))),
           template_var 0)))),
    ("LFP.IFmap_unique",
     "[| ?u o ctor1 = ctor1 o F1map ?f ?u ?v;
         ?v o ctor2 = ctor2 o F2map ?f ?u ?v |]
      ==> ?u = IF1map ?f & ?v = IF2map ?f",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 21, template_var 2),
            template_hole 20),
          template_app
           (template_app (template_hole 19, template_hole 18),
            template_app
             (template_app
               (template_app (template_hole 17, template_var 1),
                template_var 2),
              template_var 0))),
        template_equation
         (template_app
           (template_app (template_hole 15, template_var 0),
            template_hole 14),
          template_app
           (template_app (template_hole 13, template_hole 12),
            template_app
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_var 2),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 18),
                       template_app
                        (template_app
                          (template_app (template_hole 6, template_var 1),
                           template_hole 5),
                         template_hole 4))),
                   template_app
                    (template_app (template_hole 3, template_hole 12),
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_var 1),
                         template_hole 5),
                       template_hole 4))))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 7, template_hole 18),
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_var 1),
                         template_hole 5),
                       template_hole 4))),
                 template_app
                  (template_app (template_hole 3, template_hole 12),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 1),
                       template_hole 5),
                     template_hole 4)))))
           ))),
    ("LFP.F1set2_IF1set",
     "?a : F1set2 ?x ==> IF1set ?a <= IF1set (ctor1 ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 11, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_app (template_hole 9, t_empty), t_empty),
           template_var 1),
         template_app
          (template_app (template_app (template_hole 9, t_empty), t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("LFP.F2set2_IF2set",
     "?a : F2set2 ?x ==> IF1set ?a <= IF2set (ctor2 ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_app (template_hole 10, t_empty), t_empty),
           template_var 1),
         template_app
          (template_app (template_app (template_hole 1, t_empty), t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("LFP.F1set3_IF1set",
     "?a : F1set3 ?x ==> IF2set ?a <= IF1set (ctor1 ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_app (template_hole 10, t_empty), t_empty),
           template_var 1),
         template_app
          (template_app (template_app (template_hole 1, t_empty), t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("LFP.F2set3_IF2set",
     "?a : F2set3 ?x ==> IF2set ?a <= IF2set (ctor2 ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 11, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_app (template_hole 9, t_empty), t_empty),
           template_var 1),
         template_app
          (template_app (template_app (template_hole 9, t_empty), t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("LFP.IFset_bd", "|IF1set ?x| \<le>o IFbd & |IF2set ?y| \<le>o IFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_hole 14,
                       template_app
                        (template_app
                          (template_app (template_hole 13, t_empty),
                           t_empty),
                         template_var 1))),
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2))),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_app (template_hole 0, t_empty), t_empty),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2))),
             template_hole 1))
         )),
    ("LFP.IF1set_natural", "IF1set o IF1map ?f = (`) ?f o IF1set",
     template_equation
      (template_app
        (template_app
          (template_hole 29,
           template_app
            (template_app (template_hole 28, t_empty), t_empty)),
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_hole 17),
               template_app
                (template_app
                  (template_app (template_hole 16, template_var 0),
                   template_hole 15),
                 template_hole 14))),
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_app
              (template_app
                (template_app (template_hole 11, template_var 0),
                 template_hole 15),
               template_hole 14)))),
       template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app (template_app (template_hole 8, t_empty), t_empty)))),
    ("LFP.IF2set_natural", "IF2set o IF2map ?f = (`) ?f o IF2set",
     template_equation
      (template_app
        (template_app
          (template_hole 29,
           template_app
            (template_app (template_hole 28, t_empty), t_empty)),
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_hole 17),
               template_app
                (template_app
                  (template_app (template_hole 16, template_var 0),
                   template_hole 15),
                 template_hole 14))),
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_app
              (template_app
                (template_app (template_hole 11, template_var 0),
                 template_hole 15),
               template_hole 14)))),
       template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app (template_app (template_hole 8, t_empty), t_empty)))),
    ("LFP.IF1map_cong",
     "(!!a. a : IF1set ?x ==> ?f a = ?g a) ==> IF1map ?f ?x = IF1map ?g ?x",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_hole 4),
                 template_hole 3))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 4),
                 template_hole 3))),
           template_var 2)))),
    ("LFP.IF2map_cong",
     "(!!a. a : IF2set ?x ==> ?f a = ?g a) ==> IF2map ?f ?x = IF2map ?g ?x",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_hole 4),
                 template_hole 3))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 4),
                 template_hole 3))),
           template_var 2)))),
    ("LFP.ctor_induct",
     "[| !!x. [| !!a. a : F1set2 x ==> ?phi1.0 a;
                 !!a. a : F1set3 x ==> ?phi2.0 a |]
              ==> ?phi1.0 (ctor1 x);
         !!x. [| !!a. a : F2set2 x ==> ?phi1.0 a;
                 !!a. a : F2set3 x ==> ?phi2.0 a |]
              ==> ?phi2.0 (ctor2 x) |]
      ==> ?phi1.0 ?a & ?phi2.0 ?b",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("LFP.in_IF1rel",
     "IF1rel ?R ?x ?y =
      (EX z. z : IF1in {(x, y). ?R x y} &
             IF1map fst z = ?x & IF1map snd z = ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 38, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 37, t_empty))),
    ("LFP.in_IF2rel",
     "IF2rel ?R ?x ?y =
      (EX z. z : IF2in {(x, y). ?R x y} &
             IF2map fst z = ?x & IF2map snd z = ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 38, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 37, t_empty))),
    ("LFP.init_unique_mor",
     "[| ?a1.0 : car_init1 ?dummy; ?a2.0 : car_init2 ?dummy;
         mor (car_init1 ?dummy) (car_init2 ?dummy) (str_init1 ?dummy)
          (str_init2 ?dummy) ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?f1.0 ?f2.0;
         mor (car_init1 ?dummy) (car_init2 ?dummy) (str_init1 ?dummy)
          (str_init2 ?dummy) ?B1.0 ?B2.0 ?s1.0 ?s2.0 ?g1.0 ?g2.0 |]
      ==> ?f1.0 ?a1.0 = ?g1.0 ?a1.0 & ?f2.0 ?a2.0 = ?g2.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 10),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 9)),
                template_app (template_hole 5, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 8),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 6, template_var 9)),
                template_app (template_hole 5, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 3,
                                template_app
                                 (template_app
                                   (template_hole 7,
                                    template_app
                                     (template_hole 6, template_var 9)),
                                  template_app
                                   (template_hole 5, template_var 9))),
                              template_app
                               (template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 6, template_var 9)),
                                template_app
                                 (template_hole 5, template_var 9))),
                            template_app (template_hole 6, template_var 9)),
                          template_app (template_hole 5, template_var 9)),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 3,
                                template_app
                                 (template_app
                                   (template_hole 7,
                                    template_app
                                     (template_hole 6, template_var 9)),
                                  template_app
                                   (template_hole 5, template_var 9))),
                              template_app
                               (template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 6, template_var 9)),
                                template_app
                                 (template_hole 5, template_var 9))),
                            template_app (template_hole 6, template_var 9)),
                          template_app (template_hole 5, template_var 9)),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_var 3, template_var 10)),
                 template_app (template_var 1, template_var 10))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 8)),
               template_app (template_var 0, template_var 8)))
           ))),
    ("LFP.SucFbd_limit",
     "?x1.0 : Field SucFbd & ?x2.0 : Field SucFbd ==>
      EX y:Field SucFbd.
         (?x1.0 ~= y & (?x1.0, y) : SucFbd) &
         ?x2.0 ~= y & (?x2.0, y) : SucFbd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_hole 13,
                          template_app
                           (template_app
                             (template_hole 12, template_hole 11),
                            template_app
                             (template_hole 10, template_hole 9))),
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_app
                           (template_hole 6, template_hole 5))))))),
              template_app
               (template_app (template_hole 16, template_var 0),
                template_app
                 (template_hole 15,
                  template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app
                         (template_app (template_hole 12, template_hole 11),
                          template_app
                           (template_hole 10, template_hole 9))),
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_app
                         (template_hole 6, template_hole 5)))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 15,
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_app (template_hole 10, template_hole 9))),
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_hole 5)))))),
             t_empty)
           ))),
    ("LFP.mor_select",
     "[| ?i : II;
         mor (fst (fst (Rep_IIT ?i))) (snd (fst (Rep_IIT ?i)))
          (fst (snd (Rep_IIT ?i))) (snd (snd (Rep_IIT ?i))) UNIV UNIV ?s1'
          ?s2' ?f ?g |]
      ==> mor (car_init1 ?dummy) (car_init2 ?dummy) (str_init1 ?dummy)
           (str_init2 ?dummy) UNIV UNIV ?s1' ?s2' (?f o (%h. h ?i))
           (?g o (%h. h ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 5),
              template_app (template_hole 27, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 16,
                                template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14,
                                    template_app
                                     (template_hole 13, template_var 5)))),
                              template_app
                               (template_hole 12,
                                template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13, template_var 5)))),
                            template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 13, template_var 5)))),
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 10,
                              template_app
                               (template_hole 13, template_var 5)))),
                        template_hole 8),
                      template_hole 7),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 4, template_var 0)),
                                 template_app
                                  (template_hole 3, template_var 0))),
                             template_app
                              (template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 4, template_var 0)),
                               template_app
                                (template_hole 3, template_var 0))),
                           template_app (template_hole 4, template_var 0)),
                         template_app (template_hole 3, template_var 0)),
                       template_hole 8),
                     template_hole 7),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2), t_empty)),
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("LFP.IF1set_simps",
     "IF1set (ctor1 ?x) =
      F1set1 ?x Un
      (\<Union> (IF1set ` F1set2 ?x) Un \<Union> (IF2set ` F1set3 ?x))",
     template_equation
      (template_app
        (template_app (template_app (template_hole 15, t_empty), t_empty),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 14,
           template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 0, template_var 0))))))),
    ("LFP.IF2set_simps",
     "IF2set (ctor2 ?x) =
      F2set1 ?x Un
      (\<Union> (IF1set ` F2set2 ?x) Un \<Union> (IF2set ` F2set3 ?x))",
     template_equation
      (template_app
        (template_app (template_app (template_hole 15, t_empty), t_empty),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 14,
           template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app (template_hole 2, template_var 0)))),
           template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0))))))),
    ("LFP.init_induct",
     "LFP.closed ?dummy ?phi1.0 ?phi2.0 ==>
      (ALL x:car_init1 ?dummy. ?phi1.0 x) &
      (ALL x:car_init2 ?dummy. ?phi2.0 x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, t_empty)),
                  t_empty)),
              template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 10, template_var 2)),
                     template_app (template_hole 9, template_var 2))),
                 t_empty)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 10, template_var 2)),
                   template_app (template_hole 9, template_var 2))),
               t_empty))
           ))),
    ("LFP.ctor_induct2",
     "[| !!x y.
            [| !!a b. [| a : F1set2 x; b : F1set2 y |] ==> ?phi1.0 a b;
               !!a b. [| a : F1set3 x; b : F1set3 y |] ==> ?phi2.0 a b |]
            ==> ?phi1.0 (ctor1 x) (ctor1 y);
         !!x y.
            [| !!a b. [| a : F2set2 x; b : F2set2 y |] ==> ?phi1.0 a b;
               !!a b. [| a : F2set3 x; b : F2set3 y |] ==> ?phi2.0 a b |]
            ==> ?phi2.0 (ctor2 x) (ctor2 y) |]
      ==> ?phi1.0 ?a1.0 ?b1.0 & ?phi2.0 ?a2.0 ?b2.0",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_var 5, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_var 4, template_var 1),
               template_var 0))
           ))),
    ("LFP.IFmap_cong",
     "((ALL a:IF1set ?x. ?f a = ?g a) --> IF1map ?f ?x = IF1map ?g ?x) &
      ((ALL a:IF2set ?y. ?f a = ?g a) --> IF2map ?f ?y = IF2map ?g ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 25,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app
                        (template_app (template_hole 22, t_empty), t_empty),
                       template_var 3)),
                   t_empty)),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app (template_hole 10, template_hole 9),
                           template_app
                            (template_app
                              (template_app
                                (template_hole 8, template_var 2),
                               template_hole 7),
                             template_hole 6))),
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_app
                          (template_app
                            (template_app (template_hole 3, template_var 2),
                             template_hole 7),
                           template_hole 6))),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app
                          (template_app
                            (template_app (template_hole 8, template_var 1),
                             template_hole 7),
                           template_hole 6))),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 1),
                           template_hole 7),
                         template_hole 6))),
                   template_var 3)))),
           template_app
            (template_app
              (template_hole 24,
               template_app
                (template_app
                  (template_hole 23,
                   template_app
                    (template_app
                      (template_app (template_hole 2, t_empty), t_empty),
                     template_var 0)),
                 t_empty)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app
                          (template_app
                            (template_app (template_hole 8, template_var 2),
                             template_hole 7),
                           template_hole 6))),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_hole 7),
                         template_hole 6))),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 1),
                           template_hole 7),
                         template_hole 6))),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 1),
                         template_hole 7),
                       template_hole 6))),
                 template_var 0))))
         )),
    ("LFP.IFset_natural",
     "?f ` IF1set ?x = IF1set (IF1map ?f ?x) &
      ?f ` IF2set ?y = IF2set (IF2map ?f ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 32,
             template_app
              (template_app
                (template_hole 31,
                 template_app
                  (template_app (template_hole 30, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 29, t_empty), t_empty),
                     template_var 1))),
               template_app
                (template_app
                  (template_app (template_hole 20, t_empty), t_empty),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app
                          (template_app
                            (template_app (template_hole 8, template_var 2),
                             template_hole 7),
                           template_hole 6))),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_hole 7),
                         template_hole 6))),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 31,
               template_app
                (template_app (template_hole 30, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 2, t_empty), t_empty),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 1, t_empty), t_empty),
               template_app
                (template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 2),
                           template_hole 7),
                         template_hole 6))),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 2),
                         template_hole 7),
                       template_hole 6))),
                 template_var 0))))
         )),
    ("LFP.min_algs_mono1",
     "relChain SucFbd (%i. fst (min_algs ?s1.0 ?s2.0 i))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 36,
             template_app
              (template_hole 35,
               template_app
                (template_app
                  (template_hole 34,
                   template_app
                    (template_app (template_hole 33, template_hole 32),
                     template_app (template_hole 31, template_hole 30))),
                 template_app
                  (template_app (template_hole 29, template_hole 28),
                   template_app (template_hole 27, template_hole 26))))),
           t_empty)
         )),
    ("LFP.min_algs_mono2",
     "relChain SucFbd (%i. snd (min_algs ?s1.0 ?s2.0 i))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 36,
             template_app
              (template_hole 35,
               template_app
                (template_app
                  (template_hole 34,
                   template_app
                    (template_app (template_hole 33, template_hole 32),
                     template_app (template_hole 31, template_hole 30))),
                 template_app
                  (template_app (template_hole 29, template_hole 28),
                   template_app (template_hole 27, template_hole 26))))),
           t_empty)
         )),
    ("LFP.least_min_algs",
     "alg ?B1.0 ?B2.0 ?s1.0 ?s2.0 ==>
      ?i : Field SucFbd -->
      fst (min_algs ?s1.0 ?s2.0 ?i) <= ?B1.0 &
      snd (min_algs ?s1.0 ?s2.0 ?i) <= ?B2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 39, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 38,
               template_app
                (template_app (template_hole 37, template_var 0),
                 template_app
                  (template_hole 36,
                   template_app
                    (template_hole 35,
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 33, template_hole 32),
                           template_app
                            (template_hole 31, template_hole 30))),
                       template_app
                        (template_app (template_hole 29, template_hole 28),
                         template_app
                          (template_hole 27, template_hole 26))))))),
             template_app
              (template_app
                (template_hole 25,
                 template_app
                  (template_app
                    (template_hole 24,
                     template_app
                      (template_hole 23,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 22,
                             template_app
                              (template_hole 35,
                               template_app
                                (template_app
                                  (template_hole 34,
                                   template_app
                                    (template_app
(template_hole 33, template_hole 32),
                                     template_app
(template_hole 31, template_hole 30))),
                                 template_app
                                  (template_app
                                    (template_hole 29, template_hole 28),
                                   template_app
                                    (template_hole 27,
                                     template_hole 26))))),
                           t_empty),
                         template_var 0))),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 22,
                           template_app
                            (template_hole 35,
                             template_app
                              (template_app
                                (template_hole 34,
                                 template_app
                                  (template_app
                                    (template_hole 33, template_hole 32),
                                   template_app
                                    (template_hole 31, template_hole 30))),
                               template_app
                                (template_app
                                  (template_hole 29, template_hole 28),
                                 template_app
                                  (template_hole 27, template_hole 26))))),
                         t_empty),
                       template_var 0))),
                 template_var 3)))
           ))),
    ("LFP.card_of_min_algs",
     "?i : Field SucFbd -->
      |fst (min_algs ?s1.0 ?s2.0 ?i)| \<le>o ASucFbd &
      |snd (min_algs ?s1.0 ?s2.0 ?i)| \<le>o ASucFbd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 50,
             template_app
              (template_app (template_hole 49, template_var 2),
               template_app
                (template_hole 48,
                 template_app
                  (template_hole 47,
                   template_app
                    (template_app
                      (template_hole 46,
                       template_app
                        (template_app (template_hole 45, template_hole 44),
                         template_app
                          (template_hole 43, template_hole 42))),
                     template_app
                      (template_app (template_hole 41, template_hole 40),
                       template_app
                        (template_hole 39, template_hole 38))))))),
           template_app
            (template_app
              (template_hole 37,
               template_app
                (template_app
                  (template_hole 36,
                   template_app
                    (template_app
                      (template_hole 35,
                       template_app
                        (template_hole 34,
                         template_app
                          (template_hole 33,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 32,
                                 template_app
                                  (template_hole 47,
                                   template_app
                                    (template_app
(template_hole 46,
 template_app
  (template_app (template_hole 45, template_hole 44),
   template_app (template_hole 43, template_hole 42))),
                                     template_app
(template_app (template_hole 41, template_hole 40),
 template_app (template_hole 39, template_hole 38))))),
                               t_empty),
                             template_var 2)))),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_hole 22)),
                           template_hole 5)),
                       template_app
                        (template_hole 47,
                         template_app
                          (template_app
                            (template_hole 46,
                             template_app
                              (template_app
                                (template_hole 45, template_hole 44),
                               template_app
                                (template_hole 43, template_hole 42))),
                           template_app
                            (template_app
                              (template_hole 41, template_hole 40),
                             template_app
                              (template_hole 39, template_hole 38))))))),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 15,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 32,
                               template_app
                                (template_hole 47,
                                 template_app
                                  (template_app
                                    (template_hole 46,
                                     template_app
(template_app (template_hole 45, template_hole 44),
 template_app (template_hole 43, template_hole 42))),
                                   template_app
                                    (template_app
(template_hole 41, template_hole 40),
                                     template_app
(template_hole 39, template_hole 38))))),
                             t_empty),
                           template_var 2)))),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6, template_hole 22)),
                         template_hole 5)),
                     template_app
                      (template_hole 47,
                       template_app
                        (template_app
                          (template_hole 46,
                           template_app
                            (template_app
                              (template_hole 45, template_hole 44),
                             template_app
                              (template_hole 43, template_hole 42))),
                         template_app
                          (template_app
                            (template_hole 41, template_hole 40),
                           template_app
                            (template_hole 39, template_hole 38))))))),
               template_hole 0)))
         )),
    ("LFP.min_algs1",
     "?i : Field SucFbd ==>
      fst (min_algs ?s1.0 ?s2.0 ?i) =
      min_G1 (min_algs ?s1.0 ?s2.0) ?i Un
      ?s1.0 `
      F1in UNIV (min_G1 (min_algs ?s1.0 ?s2.0) ?i)
       (min_G2 (min_algs ?s1.0 ?s2.0) ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 38, template_var 2),
              template_app
               (template_hole 37,
                template_app
                 (template_hole 36,
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app
                       (template_app (template_hole 34, template_hole 33),
                        template_app (template_hole 32, template_hole 31))),
                    template_app
                     (template_app (template_hole 30, template_hole 29),
                      template_app (template_hole 28, template_hole 27))))))
            )],
       template_equation
        (template_app
          (template_hole 25,
           template_app
            (template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_hole 36,
                   template_app
                    (template_app
                      (template_hole 35,
                       template_app
                        (template_app (template_hole 34, template_hole 33),
                         template_app
                          (template_hole 32, template_hole 31))),
                     template_app
                      (template_app (template_hole 30, template_hole 29),
                       template_app
                        (template_hole 28, template_hole 27))))),
               t_empty),
             template_var 2)),
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_hole 21,
               template_app
                (template_app (template_hole 20, t_empty),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_hole 36,
                       template_app
                        (template_app
                          (template_hole 35,
                           template_app
                            (template_app
                              (template_hole 34, template_hole 33),
                             template_app
                              (template_hole 32, template_hole 31))),
                         template_app
                          (template_app
                            (template_hole 30, template_hole 29),
                           template_app
                            (template_hole 28, template_hole 27))))),
                   template_var 2)))),
           template_app
            (template_app (template_hole 18, template_var 1),
             template_app (template_hole 17, t_empty)))))),
    ("LFP.min_algs2",
     "?i : Field SucFbd ==>
      snd (min_algs ?s1.0 ?s2.0 ?i) =
      min_G2 (min_algs ?s1.0 ?s2.0) ?i Un
      ?s2.0 `
      F2in UNIV (min_G1 (min_algs ?s1.0 ?s2.0) ?i)
       (min_G2 (min_algs ?s1.0 ?s2.0) ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 38, template_var 2),
              template_app
               (template_hole 37,
                template_app
                 (template_hole 36,
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app
                       (template_app (template_hole 34, template_hole 33),
                        template_app (template_hole 32, template_hole 31))),
                    template_app
                     (template_app (template_hole 30, template_hole 29),
                      template_app (template_hole 28, template_hole 27))))))
            )],
       template_equation
        (template_app
          (template_hole 25,
           template_app
            (template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_hole 36,
                   template_app
                    (template_app
                      (template_hole 35,
                       template_app
                        (template_app (template_hole 34, template_hole 33),
                         template_app
                          (template_hole 32, template_hole 31))),
                     template_app
                      (template_app (template_hole 30, template_hole 29),
                       template_app
                        (template_hole 28, template_hole 27))))),
               t_empty),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_hole 36,
                       template_app
                        (template_app
                          (template_hole 35,
                           template_app
                            (template_app
                              (template_hole 34, template_hole 33),
                             template_app
                              (template_hole 32, template_hole 31))),
                         template_app
                          (template_app
                            (template_hole 30, template_hole 29),
                           template_app
                            (template_hole 28, template_hole 27))))),
                   template_var 2)))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, t_empty)))))),
    ("LFP.min_algs",
     "?i : Field SucFbd ==>
      min_algs ?s1.0 ?s2.0 ?i =
      min_H ?s1.0 ?s2.0 (min_algs ?s1.0 ?s2.0) ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 38, template_var 2),
              template_app
               (template_hole 37,
                template_app
                 (template_hole 36,
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app
                       (template_app (template_hole 34, template_hole 33),
                        template_app (template_hole 32, template_hole 31))),
                    template_app
                     (template_app (template_hole 30, template_hole 29),
                      template_app (template_hole 28, template_hole 27))))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 25,
               template_app
                (template_hole 36,
                 template_app
                  (template_app
                    (template_hole 35,
                     template_app
                      (template_app (template_hole 34, template_hole 33),
                       template_app (template_hole 32, template_hole 31))),
                   template_app
                    (template_app (template_hole 30, template_hole 29),
                     template_app (template_hole 28, template_hole 27))))),
             t_empty),
           template_var 2),
         template_app
          (template_app
            (template_hole 24,
             template_app
              (template_app
                (template_hole 23,
                 template_app
                  (template_hole 22,
                   template_app
                    (template_app (template_hole 21, t_empty),
                     template_app
                      (template_app
                        (template_hole 19,
                         template_app
                          (template_hole 36,
                           template_app
                            (template_app
                              (template_hole 35,
                               template_app
                                (template_app
                                  (template_hole 34, template_hole 33),
                                 template_app
                                  (template_hole 32, template_hole 31))),
                             template_app
                              (template_app
                                (template_hole 30, template_hole 29),
                               template_app
                                (template_hole 28, template_hole 27))))),
                       template_var 2)))),
               template_app
                (template_app (template_hole 18, template_var 1),
                 template_app (template_hole 17, t_empty)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, t_empty),
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_hole 36,
                         template_app
                          (template_app
                            (template_hole 35,
                             template_app
                              (template_app
                                (template_hole 34, template_hole 33),
                               template_app
                                (template_hole 32, template_hole 31))),
                           template_app
                            (template_app
                              (template_hole 30, template_hole 29),
                             template_app
                              (template_hole 28, template_hole 27))))),
                     template_var 2)))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, t_empty)))))))]:
   (string * thm * template) list
### theory "Draft.LFPMoreTemplates"
### 0.544s elapsed time, 0.672s cpu time, 0.052s GC time
val it = (): unit
