   [("Quantum.id_is_unitary", "unitary (1\<^sub>m ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Quantum.dagger_of_sqr_is_sqr",
     "square_mat cpx_sqr_mat_to_cpx_mat ?M\<^sup>\<dagger>",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Quantum.id_is_gate", "gate ?n (Quantum.Id ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))
         )),
    ("Quantum.cpx_mat_cnj_cnj", "?M\<^sup>\<star>\<^sup>\<star> = ?M",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Quantum.dagger_of_dagger_is_id",
     "?M\<^sup>\<dagger>\<^sup>\<dagger> = ?M",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Quantum.inner_prod_with_itself_nonneg_reals",
     "\<langle>?u|?u\<rangle> : \<real>\<^sub>\<ge>\<^sub>0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("Quantum.inner_prod_with_itself_real",
     "\<langle>?u|?u\<rangle> : \<real>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("Quantum.dim_col_of_dagger", "dim_col ?M\<^sup>\<dagger> = dim_row ?M",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.dim_row_of_dagger", "dim_row ?M\<^sup>\<dagger> = dim_col ?M",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.inner_prod_with_itself_Im", "Im \<langle>?u|?u\<rangle> = 0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 0)),
       template_hole 0)),
    ("Quantum.cnj_transpose_is_dagger",
     "?M\<^sup>\<star>\<^sup>t = ?M\<^sup>\<dagger>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.bra_bra_vec", "\<langle>|?v\<rangle>| = bra_vec ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.cpx_mat_cnj_id", "1\<^sub>m ?n\<^sup>\<star> = 1\<^sub>m ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.transpose_cnj_is_dagger",
     "?M\<^sup>t\<^sup>\<star> = ?M\<^sup>\<dagger>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.dagger_of_id_is_id",
     "1\<^sub>m ?n\<^sup>\<dagger> = 1\<^sub>m ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.dagger_of_transpose_is_cnj",
     "?M\<^sup>t\<^sup>\<dagger> = ?M\<^sup>\<star>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quantum.col_fst_is_col", "col_fst ?M = col ?M 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Quantum.ket_vec_col", "col |?v\<rangle> 0 = ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Quantum.inner_prod_with_itself_Re", "0 <= Re \<langle>?u|?u\<rangle>",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Quantum.dagger_of_ket_is_bra",
     "|?v\<rangle>\<^sup>\<dagger> = \<langle>|?v\<rangle>|",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Quantum.transpose_of_unitary_is_unitary",
     "unitary ?U ==> unitary ?U\<^sup>t",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quantum.inner_prod_csqrt",
     "csqrt \<langle>?v|?v\<rangle> =
      complex_of_real \<parallel>?v\<parallel>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Quantum.mat_unitary_mat",
     "unitary ?M ==> inverts_mat ?M ?M\<^sup>\<dagger>",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quantum.unitary_mat_mat",
     "unitary ?M ==> inverts_mat ?M\<^sup>\<dagger> ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Quantum.dim_col_of_cjn_prod",
     "dim_col (?M\<^sup>\<star> * ?N\<^sup>\<star>) = dim_col ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("Quantum.dim_row_of_cjn_prod",
     "dim_row (?M\<^sup>\<star> * ?N\<^sup>\<star>) = dim_row ?M",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 1))),
    ("Quantum.smult_ket_vec",
     "|?x \<cdot>\<^sub>v ?v\<rangle> = ?x \<cdot>\<^sub>m |?v\<rangle>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Quantum.cpx_vec_length_inner_prod",
     "complex_of_real (\<parallel>?v\<parallel>\<^sup>2) =
      \<langle>?v|?v\<rangle>",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Quantum.unit_cpx_vec_length",
     "?i < ?n ==> \<parallel>unit_vec ?n ?i\<parallel> = 1",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Quantum.state_col_ket_vec",
     "state 1 ?v ==> state 1 |col ?v 0\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Quantum.col_ket_vec", "dim_col ?M = 1 ==> |col ?M 0\<rangle> = ?M",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_var 0))),
    ("Quantum.inner_prod_with_itself_eq0",
     "?u = 0\<^sub>v (dim_vec ?u) ==> \<langle>?u|?u\<rangle> = 0",
     template_implication
      ([template_equation
         (template_var 0,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Quantum.row_bra_vec",
     "row (bra_vec ?v) 0 = vec (dim_vec ?v) (%i. cnj (?v $ i))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty))),
    ("Quantum.row_bra",
     "row \<langle>|?v\<rangle>| 0 = vec (dim_vec ?v) (%i. cnj (?v $ i))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty))),
    ("Quantum.right_inv_of_unitary_transpose",
     "unitary ?U ==>
      ?U\<^sup>t * ?U\<^sup>t\<^sup>\<dagger> = 1\<^sub>m (dim_col ?U)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Quantum.left_inv_of_unitary_transpose",
     "unitary ?U ==>
      ?U\<^sup>t\<^sup>\<dagger> * ?U\<^sup>t = 1\<^sub>m (dim_row ?U)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Quantum.inner_prod_with_itself_nonneg_reals_non0",
     "?u ~= 0\<^sub>v (dim_vec ?u) ==> \<langle>?u|?u\<rangle> ~= 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 0,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0),
             template_hole 0)
           ))),
    ("Quantum.inner_prod_with_itself_Re_non0",
     "?u ~= 0\<^sub>v (dim_vec ?u) ==> 0 < Re \<langle>?u|?u\<rangle>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 0,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))))),
    ("Quantum.smult_vec_length",
     "0 <= ?x ==>
      \<parallel>complex_of_real ?x \<cdot>\<^sub>v ?v\<parallel> =
      ?x * \<parallel>?v\<parallel>",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("Quantum.inner_prod_cnj",
     "dim_vec ?u = dim_vec ?v ==>
      \<langle>?v|?u\<rangle> = cnj \<langle>?u|?v\<rangle>",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Quantum.bitwise_inner_prod_with_zero",
     "?m < 2 ^ ?n ==> 0 \<cdot>\<^bsub>?n\<^esub>  ?m = 0",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3))),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_var 1),
         template_hole 0))),
    ("Quantum.gate_on_state_is_state",
     "[| gate ?n ?A; state ?n ?v |] ==> state ?n (?A * ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Quantum.prod_of_gate_is_gate",
     "[| gate ?n ?G1.0; gate ?n ?G2.0 |] ==> gate ?n (?G1.0 * ?G2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Quantum.ket_vec_index",
     "?i < dim_vec ?v ==> |?v\<rangle> $$ (?i, 0) = ?v $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Quantum.transpose_of_prod",
     "dim_col ?M = dim_row ?N ==>
      ?M * ?N\<^sup>t = ?N\<^sup>t * ?M\<^sup>t",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 1))))),
    ("Quantum.cpx_mat_cnj_prod",
     "dim_col ?M = dim_row ?N ==>
      ?M * ?N\<^sup>\<star> = ?M\<^sup>\<star> * ?N\<^sup>\<star>",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Quantum.dagger_of_prod",
     "dim_col ?M = dim_row ?N ==>
      ?M * ?N\<^sup>\<dagger> = ?N\<^sup>\<dagger> * ?M\<^sup>\<dagger>",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 1))))),
    ("Quantum.inner_prod_with_row_bra_vec",
     "dim_vec ?u = dim_vec ?v ==>
      \<langle>?u|?v\<rangle> = row (bra_vec ?u) 0 \<bullet> ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_hole 0)),
           template_var 0)))),
    ("Quantum.cpx_length_of_vec_of_list",
     "\<parallel>vec_of_list ?l\<parallel> =
      sqrt (SUM i<length ?l. (cmod (?l ! i))\<^sup>2)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Quantum.smult_vec_length_bis",
     "0 <= ?x ==>
      \<parallel>col (complex_of_real ?x \<cdot>\<^sub>m |?v\<rangle>)
                  0\<parallel> =
      ?x * \<parallel>?v\<parallel>",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 1)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 6, template_var 0))))),
    ("Quantum.mult_ket_vec_is_ket_vec_of_mult",
     "dim_col ?A = dim_vec ?v ==>
      |col_fst (?A * |?v\<rangle>)\<rangle> = ?A * |?v\<rangle>",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("Quantum.norm_vec_index_unit_vec_is_1",
     "[| ?j < ?n; ?j = ?i |] ==> cmod (unit_vec ?n ?i $ ?j) = 1",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_equation (template_var 2, template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_hole 0))),
    ("Quantum.mat_on_ket",
     "dim_col ?A = dim_vec ?v ==>
      ?A * |?v\<rangle> = |col (?A * |?v\<rangle>) 0\<rangle>",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0))),
             template_hole 0))))),
    ("Quantum.bra_mat_on_vec",
     "dim_col ?A = dim_vec ?v ==>
      \<langle>?A * |?v\<rangle>| =
      \<langle>|?v\<rangle>| * ?A\<^sup>\<dagger>",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 1))))),
    ("Quantum.dagger_of_mat_on_ket",
     "dim_col ?A = dim_vec ?v ==>
      ?A * |?v\<rangle>\<^sup>\<dagger> =
      \<langle>|?v\<rangle>| * ?A\<^sup>\<dagger>",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 3, template_var 1))))),
    ("Quantum.norm_vec_index_unit_vec_is_0",
     "[| ?j < ?n; ?j ~= ?i |] ==> cmod (unit_vec ?n ?i $ ?j) = 0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_hole 0))),
    ("Quantum.row_transpose",
     "[| dim_col ?M = ?n; ?i < ?n |] ==> row ?M\<^sup>t ?i = col ?M ?i",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Quantum.col_tranpose",
     "[| dim_row ?M = ?n; ?i < ?n |] ==> col ?M\<^sup>t ?i = row ?M ?i",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Quantum.inverts_mat_sym",
     "[| inverts_mat ?A ?B; dim_row ?B = dim_col ?A; square_mat ?B |]
      ==> inverts_mat ?B ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), template_var 1)
           ))),
    ("Quantum.col_ket_vec_index",
     "?i < dim_row ?v ==> |col ?v 0\<rangle> $$ (?i, 0) = ?v $$ (?i, 0)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 1))))),
    ("Quantum.unitary_is_length_preserving",
     "[| unitary ?U; dim_vec ?v = dim_col ?U |]
      ==> \<parallel>col_fst (?U * |?v\<rangle>)\<parallel> =
          \<parallel>?v\<parallel>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 3, template_var 0)))),
    ("Quantum.row_of_dagger",
     "?i < dim_col ?M ==>
      row ?M\<^sup>\<dagger> ?i =
      vec (dim_row ?M) (%j. cnj (?M $$ (j, ?i)))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           t_empty)))),
    ("Quantum.col_of_dagger",
     "?j < dim_row ?M ==>
      col ?M\<^sup>\<dagger> ?j =
      vec (dim_col ?M) (%i. cnj (?M $$ (?j, i)))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           t_empty)))),
    ("Quantum.inner_prod_with_times_mat",
     "dim_vec ?u = dim_vec ?v ==>
      \<langle>?u|?v\<rangle> =
      (\<langle>|?u\<rangle>| * |?v\<rangle>) $$ (0, 0)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 0))))),
    ("Quantum.inner_prod_with_row_bra_vec_col_ket_vec",
     "dim_vec ?u = dim_vec ?v ==>
      \<langle>?u|?v\<rangle> =
      row \<langle>|?u\<rangle>| 0 \<bullet> col |?v\<rangle> 0",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1))),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_hole 1))))),
    ("Quantum.unitary_unit_col",
     "[| unitary ?U; dim_col ?U = ?n; ?i < ?n |]
      ==> \<parallel>col ?U ?i\<parallel> = 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_hole 0))),
    ("Quantum.unitary_unit_row",
     "[| unitary ?U; dim_row ?U = ?n; ?i < ?n |]
      ==> \<parallel>row ?U ?i\<parallel> = 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_hole 0))),
    ("Quantum.unit_vec_to_col",
     "[| dim_col ?A = ?n; ?i < ?n |]
      ==> col ?A ?i = col_fst (?A * |unit_vec ?n ?i\<rangle>)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2), template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("Quantum.H_values_right_bottom",
     "?i = 1 & ?j = 1 ==> H $$ (?i, ?j) = complex_of_real (- 1 / sqrt 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)),
              template_app
               (template_app (template_hole 13, template_var 0),
                template_hole 12))
            )],
       template_equation
        (template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Quantum.col_index_of_mat_col",
     "[| dim_col ?v = 1; ?i < dim_row ?v |]
      ==> col ?v 0 $ ?i = ?v $$ (?i, 0)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1), template_hole 8),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 2))))),
    ("Quantum.length_preserving_is_unitary",
     "[| square_mat ?U;
         ALL v.
            dim_vec v = dim_col ?U -->
            \<parallel>col_fst (?U * |v\<rangle>)\<parallel> =
            \<parallel>v\<parallel> |]
      ==> unitary ?U",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Quantum.orthogonal_unit_vec",
     "[| ?i < ?n; ?j < ?n; ?i ~= ?j |]
      ==> \<langle>unit_vec ?n ?i|unit_vec ?n ?j\<rangle> = 0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Quantum.unitary_is_sq_length_preserving",
     "[| unitary ?U; dim_vec ?v = dim_col ?U |]
      ==> \<parallel>col_fst (?U * |?v\<rangle>)\<parallel>\<^sup>2 =
          \<parallel>?v\<parallel>\<^sup>2",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app (template_hole 3, template_var 0))))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Quantum.unitary_is_length_preserving_bis",
     "[| unitary ?U; dim_row ?v = dim_col ?U; dim_col ?v = 1 |]
      ==> \<parallel>col (?U * ?v) 0\<parallel> =
          \<parallel>col ?v 0\<parallel>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))))),
    ("Quantum.inner_prod_with_unitary_mat",
     "[| unitary ?U; dim_vec ?u = dim_col ?U; dim_vec ?v = dim_col ?U |]
      ==> \<langle>col_fst
                    (?U *
                     |?u\<rangle>)|col_fst (?U * |?v\<rangle>)\<rangle> =
          \<langle>?u|?v\<rangle>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1)))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Quantum.vec_index_is_linear",
     "[| dim_vec ?u = dim_vec ?v; ?j < dim_vec ?u |]
      ==> (?k \<cdot>\<^sub>v ?u + ?l \<cdot>\<^sub>v ?v) $ ?j =
          ?k * ?u $ ?j + ?l * ?v $ ?j",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 4),
          template_app (template_hole 7, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 4)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3))),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)))))),
    ("Quantum.orthogonal_col_of_unitary",
     "[| unitary ?U; dim_col ?U = ?n; ?i < ?n; ?j < ?n; ?i ~= ?j |]
      ==> \<langle>col ?U ?i|col ?U ?j\<rangle> = 0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_equation
         (template_app (template_hole 6, template_var 3), template_var 2),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_than, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_hole 0))),
    ("Quantum.orthogonal_row_of_unitary",
     "[| unitary ?U; dim_row ?U = ?n; ?i < ?n; ?j < ?n; ?i ~= ?j |]
      ==> \<langle>row ?U ?i|row ?U ?j\<rangle> = 0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_equation
         (template_app (template_hole 6, template_var 3), template_var 2),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_than, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_hole 0))),
    ("Quantum.unitary_is_sq_length_preserving_bis",
     "[| unitary ?U; dim_row ?v = dim_col ?U; dim_col ?v = 1 |]
      ==> \<parallel>col (?U * ?v) 0\<parallel>\<^sup>2 =
          \<parallel>col ?v 0\<parallel>\<^sup>2",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_app (template_hole 10, template_var 1)),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_hole 9)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0)),
                 template_hole 3))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 3))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Quantum.H_values",
     "[| ?i < dim_row H; ?j < dim_col H; ?i ~= 1 | ?j ~= 1 |]
      ==> H $$ (?i, ?j) = complex_of_real (1 / sqrt 2)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 16, template_hole 15)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 14, template_hole 15)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10))),
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_hole 10)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_hole 15),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Quantum.sum_of_unit_vec_length",
     "[| ?i < ?n; ?j < ?n; ?i ~= ?j |]
      ==> complex_of_real
           (\<parallel>unit_vec ?n ?i +
                       ?c \<cdot>\<^sub>v
                       unit_vec ?n ?j\<parallel>\<^sup>2) =
          1 + cnj ?c * ?c",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_var 1))))),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0))))),
    ("Quantum.bitwise_inner_prod_fst_el_0",
     "?i < 2 ^ ?n | ?j < 2 ^ ?n ==>
      ?i \<cdot>\<^bsub>Suc ?n\<^esub>  ?j =
      ?i mod 2 ^ ?n \<cdot>\<^bsub>?n\<^esub>  ?j mod 2 ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4))),
                    template_var 1))),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4))),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 1)))))),
    ("Quantum.sum_of_unit_vec_to_col",
     "[| dim_col ?A = ?n; ?i < ?n; ?j < ?n |]
      ==> col ?A ?i + ?c \<cdot>\<^sub>v col ?A ?j =
          col_fst
           (?A *
            |unit_vec ?n ?i + ?c \<cdot>\<^sub>v unit_vec ?n ?j\<rangle>)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 4), template_var 3),
        template_inequation (less_than, template_var 2, template_var 3),
        template_inequation (less_than, template_var 1, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1))))))))),
    ("Quantum.unit_vec_of_right_length_is_state",
     "?i < 2 ^ ?n ==>
      unit_vec (2 ^ ?n) ?i
      : {uu_.
         EX n v.
            uu_ = v & dim_vec v = 2 ^ n & \<parallel>v\<parallel> = 1}",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12))),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13, template_hole 12))),
                     template_var 0)),
                 template_var 1)),
             template_app (template_hole 9, t_empty))
           ))),
    ("Quantum.inner_prod_is_linear",
     "ALL i:{0, 1}. dim_vec ?u = dim_vec (?v i) ==>
      \<langle>?u|?l 0 \<cdot>\<^sub>v ?v 0 +
                  ?l 1 \<cdot>\<^sub>v ?v 1\<rangle> =
      (SUM i<=1. ?l i * \<langle>?u|?v i\<rangle>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app (template_hole 12, template_hole 10),
                    template_hole 9))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_var 0, template_hole 11)),
                 template_app (template_var 1, template_hole 11))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 0, template_hole 10)),
               template_app (template_var 1, template_hole 10)))),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_hole 10))))),
    ("Quantum.bitwise_inner_prod_fst_el_is_1",
     "[| 2 ^ ?n <= ?i & 2 ^ ?n <= ?j;
         ?i < 2 ^ (?n + 1) & ?j < 2 ^ (?n + 1) |]
      ==> ?i \<cdot>\<^bsub>?n + 1\<^esub>  ?j =
          1 + ?i mod 2 ^ ?n \<cdot>\<^bsub>?n\<^esub>  ?j mod 2 ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app (template_hole 7, template_hole 6))),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_hole 6))),
                    template_var 2)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_hole 6))),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_hole 3)))),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_hole 6))),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_hole 3))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_hole 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_var 2))))))),
    ("Quantum.inner_prod_is_sesquilinear",
     "[| dim_vec ?u1.0 = ?n; dim_vec ?u2.0 = ?n; dim_vec ?v1.0 = ?n;
         dim_vec ?v2.0 = ?n |]
      ==> \<langle>?c1.0 \<cdot>\<^sub>v ?u1.0 +
                   ?c2.0 \<cdot>\<^sub>v
                   ?u2.0|?c3.0 \<cdot>\<^sub>v ?v1.0 +
                         ?c4.0 \<cdot>\<^sub>v ?v2.0\<rangle> =
          cnj ?c1.0 * ?c3.0 * \<langle>?u1.0|?v1.0\<rangle> +
          cnj ?c2.0 * ?c3.0 * \<langle>?u2.0|?v1.0\<rangle> +
          cnj ?c1.0 * ?c4.0 * \<langle>?u1.0|?v2.0\<rangle> +
          cnj ?c2.0 * ?c4.0 * \<langle>?u2.0|?v2.0\<rangle>",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 8), template_var 7),
        template_equation
         (template_app (template_hole 7, template_var 6), template_var 7),
        template_equation
         (template_app (template_hole 7, template_var 5), template_var 7),
        template_equation
         (template_app (template_hole 7, template_var 4), template_var 7)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 8)),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 6))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 5)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 4))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 3)),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 5, template_var 8),
                         template_var 5))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 0, template_var 2)),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 5)))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 3)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_var 8),
                   template_var 4)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 4))))))]
