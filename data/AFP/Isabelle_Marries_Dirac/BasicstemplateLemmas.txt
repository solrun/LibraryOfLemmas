   [("Basics.cos_squared_le_one", "(cos ?x)\<^sup>2 <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Basics.sin_squared_le_one", "(sin ?x)\<^sup>2 <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Basics.exp_of_real_cnj",
     "cnj (exp (\<i> * complex_of_real ?x)) =
      exp (- (\<i> * complex_of_real ?x))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)))))),
    ("Basics.exp_of_real_cnj2",
     "cnj (exp (- (\<i> * complex_of_real ?x))) =
      exp (\<i> * complex_of_real ?x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Basics.exp_of_real",
     "exp (\<i> * complex_of_real ?x) =
      complex_of_real (cos ?x) + \<i> * complex_of_real (sin ?x)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0)))))),
    ("Basics.exp_of_real_inv",
     "exp (- (\<i> * complex_of_real ?x)) =
      complex_of_real (cos ?x) - \<i> * complex_of_real (sin ?x)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0)))))),
    ("Basics.exp_of_half_pi",
     "?x = pi / 2 ==> exp (\<i> * complex_of_real ?x) = \<i>",
     template_implication
      ([template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 9, template_hole 8),
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_hole 5))))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))),
         template_hole 1))),
    ("Basics.sum_of_index_diff",
     "(SUM i = ?a..<?a + ?b. ?f (i - ?a)) = sum ?f {..<?b}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Basics.exp_of_minus_half_pi",
     "?x = pi / 2 ==> exp (- (\<i> * complex_of_real ?x)) = - \<i>",
     template_implication
      ([template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_hole 6))))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 3, template_hole 1)))),
    ("Basics.index_div_eq",
     "?i : {?a * ?b..<(?a + 1) * ?b} ==> ?i div ?b = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Basics.sqr_of_sqrt_2",
     "?z * 2 / (complex_of_real (sqrt 2) * complex_of_real (sqrt 2)) = ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_hole 3))))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_hole 3)))))),
       template_var 0)),
    ("Basics.sqr_of_cmod_of_prod",
     "(cmod (?z1.0 * ?z2.0))\<^sup>2 =
      (cmod ?z1.0)\<^sup>2 * (cmod ?z2.0)\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Basics.index_mod_eq",
     "?i : {?a * ?b..<(?a + 1) * ?b} ==> ?i mod ?b = ?i - ?a * ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_hole 3)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))))),
    ("Basics.cos_of_quarter_pi",
     "?x = pi / 2 ==> cos (?x / 2) = sqrt 2 / 2",
     template_implication
      ([template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))))),
    ("Basics.sin_of_quarter_pi",
     "?x = pi / 2 ==> sin (?x / 2) = sqrt 2 / 2",
     template_implication
      ([template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))))),
    ("Basics.less_power_add_imp_div_less",
     "?i < 2 ^ (?m + ?n) ==> ?i div 2 ^ ?n < 2 ^ ?m",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_hole 2))),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_var 1)))),
    ("Basics.sum_insert",
     "[| ?x ~: ?F; finite ?F |]
      ==> sum ?P (insert ?x ?F) = sum ?P ?F + ?P ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1)),
           template_app (template_var 0, template_var 2))))),
    ("Basics.set_4_disj", "?i < 4 ==> ?i = 0 | ?i = 1 | ?i = 2 | ?i = 3",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 6, template_hole 5))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5)))),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 0, template_hole 5))))))
           ))),
    ("Basics.neq_imp_neq_div_or_mod",
     "?i ~= ?j ==>
      ?i div 2 ^ ?n ~= ?j div 2 ^ ?n | ?i mod 2 ^ ?n ~= ?j mod 2 ^ ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_hole 1))),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))),
                       template_var 0))))),
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_hole 1))),
                     template_var 0)))))
           ))),
    ("Basics.index_matrix_prod",
     "[| ?i < dim_row ?A; ?j < dim_col ?B; dim_col ?A = dim_row ?B |]
      ==> (?A * ?B) $$ (?i, ?j) =
          (SUM k<dim_row ?B. ?A $$ (?i, k) * ?B $$ (k, ?j))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 9, template_var 0)))))),
    ("Basics.div_mult_mod_eq_minus",
     "?i div 2 ^ ?n * 2 ^ ?n + ?i mod 2 ^ ?n - ?j div 2 ^ ?n * 2 ^ ?n -
      ?j mod 2 ^ ?n =
      ?i - ?j",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 2, template_hole 1))),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_hole 1))),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_hole 1))),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 1)))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 1))),
       template_app
        (template_app (template_hole 8, template_var 2), template_var 0))),
    ("Basics.index_one_mat_div_mod",
     "[| ?i < 2 ^ (?m + ?n); ?j < 2 ^ (?m + ?n) |]
      ==> 1\<^sub>m (2 ^ ?m) $$ (?i div 2 ^ ?n, ?j div 2 ^ ?n) *
          1\<^sub>m (2 ^ ?n) $$ (?i mod 2 ^ ?n, ?j mod 2 ^ ?n) =
          1\<^sub>m (2 ^ (?m + ?n)) $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app (template_hole 9, template_hole 8))),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_hole 8))),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app (template_hole 9, template_hole 8))),
                     template_var 1))))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_hole 8))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app (template_hole 9, template_hole 8))),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_hole 8))),
                   template_var 1))))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_hole 8))),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1)))),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0)))))]
