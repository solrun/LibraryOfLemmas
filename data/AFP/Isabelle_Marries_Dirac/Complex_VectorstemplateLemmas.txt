   [("Complex_Vectors.module_cpx_vec",
     "Module.module cpx_rng (module_cpx_vec ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Complex_Vectors.vecspace_cpx_vec",
     "vectorspace cpx_rng (module_cpx_vec ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Complex_Vectors.unit_vectors_carrier_vec",
     "unit_vectors ?n <= carrier_vec ?n",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Vectors.unit_vectors_is_basis",
     "vectorspace.basis cpx_rng (module_cpx_vec ?n) (unit_vectors ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Complex_Vectors.unit_vectors_is_lin_indpt",
     "~ module.lin_dep cpx_rng (module_cpx_vec ?n) (unit_vectors ?n)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Complex_Vectors.unit_vectors_is_genset",
     "LinearCombinations.module.span cpx_rng (module_cpx_vec ?n)
       (unit_vectors ?n) =
      carrier (module_cpx_vec ?n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Complex_Vectors.dim_vec_lincomb",
     "[| finite ?F; ?f : ?F \<rightarrow> UNIV; ?F <= carrier_vec ?n |]
      ==> dim_vec (module.lincomb (module_cpx_vec ?n) ?f ?F) = ?n",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 2), t_empty))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1),
             template_var 2)),
         template_var 0))),
    ("Complex_Vectors.lincomb_over_singleton",
     "[| ?x : carrier_vec ?n; ?f : {?x} \<rightarrow> UNIV |]
      ==> module.lincomb (module_cpx_vec ?n) ?f {?x} =
          ?f ?x \<cdot>\<^sub>v ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 5)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_hole 5)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 0, template_var 2)),
           template_var 2)))),
    ("Complex_Vectors.lincomb_vec_index",
     "[| finite ?F; ?i < ?n; ?F <= carrier_vec ?n;
         ?f : ?F \<rightarrow> UNIV |]
      ==> module.lincomb (module_cpx_vec ?n) ?f ?F $ ?i =
          (SUM v:?F. ?f v * v $ ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_var 3), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 3)))),
    ("Complex_Vectors.state_qbit_is_lincomb",
     "state_qbit ?n =
      {module.lincomb (module_cpx_vec (2 ^ ?n)) a A |a A.
       finite A &
       A <= unit_vectors (2 ^ ?n) &
       a : A \<rightarrow> UNIV &
       \<parallel>module.lincomb (module_cpx_vec (2 ^ ?n)) a A\<parallel> =
       1}",
     template_equation
      (template_app (template_hole 20, template_var 0),
       template_app (template_hole 19, t_empty)))]
