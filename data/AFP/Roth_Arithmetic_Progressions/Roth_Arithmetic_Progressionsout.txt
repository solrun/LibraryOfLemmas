Loading theory "Draft.Roth_Arithmetic_Progressions" (required by "Draft.Roth_Arithmetic_ProgressionsTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Roth_Arithmetic_ProgressionsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Roth_Arithmetic_ProgressionsTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.238s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.125s elapsed time, 0.364s cpu time, 0.058s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Roth_Arithmetic_ProgressionsTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.BigO"
### 0.598s elapsed time, 1.242s cpu time, 0.088s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Roth_Arithmetic_ProgressionsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.518s elapsed time, 1.102s cpu time, 0.177s GC time
(?a, ?b) : ?A | (?b, ?a) : ?A ==> {?a, ?b} : mk_uedge ` ?A
Found termination order: "{}"
### theory "Draft.Roth_Arithmetic_Progressions"
### 2.258s elapsed time, 3.724s cpu time, 0.400s GC time
Loading theory "Draft.Roth_Arithmetic_ProgressionsTemplates"
val templateLemmas =
   [("Roth_Arithmetic_Progressions.edge_density_le1",
     "edge_density ?X ?Y ?G <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Roth_Arithmetic_Progressions.triangle_free_graph_empty",
     "uedges ?G = {} ==> triangle_free_graph ?G",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_ss_uedges",
     "mk_uedge ` all_edges_between ?X ?Y ?G <= uedges ?G",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Roth_Arithmetic_Progressions.triangle_set_power_set_ss",
     "uwellformed ?G ==> triangle_set ?G <= Pow (uverts ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Roth_Arithmetic_Progressions.edge_density_zero",
     "?Y = {} ==> edge_density ?X ?Y ?G = 0",
     template_implication
      ([template_equation (template_var 2, template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_hole 0))),
    ("Roth_Arithmetic_Progressions.all_edges_between_disjoint_family_on1",
     "disjoint ?R ==>
      disjoint_family_on (%X. all_edges_between X ?Y ?G) ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 2)
           ))),
    ("Roth_Arithmetic_Progressions.all_edges_between_disjoint_family_on2",
     "disjoint ?R ==>
      disjoint_family_on (%Y. all_edges_between ?X Y ?G) ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 2)
           ))),
    ("Roth_Arithmetic_Progressions.triangle_commu1",
     "triangle_in_graph ?x ?y ?z ?G ==> triangle_in_graph ?y ?x ?z ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Roth_Arithmetic_Progressions.finite_triangle_set",
     "[| finite (uverts ?G); uwellformed ?G |]
      ==> finite (triangle_set ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Roth_Arithmetic_Progressions.card_triangle_triples_rotate",
     "card (triangle_triples ?X ?Y ?Z ?G) =
      card (triangle_triples ?Y ?Z ?X ?G)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Roth_Arithmetic_Progressions.inj_on_mk_uedge",
     "?X Int ?Y = {} ==> inj_on mk_uedge (all_edges_between ?X ?Y ?G)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Roth_Arithmetic_Progressions.all_edges_betw_D1",
     "(?x, ?y) : all_edges_between ?X ?Y ?G ==> ?x : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4), template_var 2)
           ))),
    ("Roth_Arithmetic_Progressions.all_edges_betw_D2",
     "(?x, ?y) : all_edges_between ?X ?Y ?G ==> ?y : ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("Roth_Arithmetic_Progressions.min_card_fin_X_elem",
     "[| finite ?X; ?x : ?X |] ==> 1 <= card ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 1)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_Union2",
     "all_edges_between ?X (\<Union> ?\<Y>) ?G =
      (UN Y:?\<Y>. all_edges_between ?X Y ?G)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_Union1",
     "all_edges_between (\<Union> ?\<X>) ?Y ?G =
      (UN X:?\<X>. all_edges_between X ?Y ?G)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_mono2",
     "?Y <= ?Z ==>
      all_edges_between ?X ?Y ?G <= all_edges_between ?X ?Z ?G",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_mono1",
     "?Y <= ?Z ==>
      all_edges_between ?Y ?X ?G <= all_edges_between ?Z ?X ?G",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_disjoint1",
     "disjoint ?R ==> disjoint ((%X. all_edges_between X ?Y ?G) ` ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, t_empty), template_var 2))
           ))),
    ("Roth_Arithmetic_Progressions.all_edges_between_disjoint2",
     "disjoint ?R ==> disjoint ((%Y. all_edges_between ?X Y ?G) ` ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, t_empty), template_var 2))
           ))),
    ("Roth_Arithmetic_Progressions.finite_all_edges_between'",
     "[| finite (uverts ?G); uwellformed ?G |]
      ==> finite (all_edges_between ?X ?Y ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Roth_Arithmetic_Progressions.p3_int_iff",
     "(progression3 (int ?k) (int ?d) <= int ` ?A) =
      (progression3 ?k ?d <= ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app (template_hole 2, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Roth_Arithmetic_Progressions.triangle_vertices_distinct1",
     "[| uwellformed ?G; triangle_in_graph ?x ?y ?z ?G |] ==> ?x ~= ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_negation
        (template_equation (template_var 2, template_var 1)))),
    ("Roth_Arithmetic_Progressions.triangle_vertices_distinct2",
     "[| uwellformed ?G; triangle_in_graph ?x ?y ?z ?G |] ==> ?y ~= ?z",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Roth_Arithmetic_Progressions.triangle_vertices_distinct3",
     "[| uwellformed ?G; triangle_in_graph ?x ?y ?z ?G |] ==> ?z ~= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_negation
        (template_equation (template_var 0, template_var 2)))),
    ("Roth_Arithmetic_Progressions.triangle_in_graph_verts",
     "[| uwellformed ?G; triangle_in_graph ?x ?y ?z ?G |]
      ==> ?x : uverts ?G",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Roth_Arithmetic_Progressions.triangle_in_graph_verts",
     "[| uwellformed ?G; triangle_in_graph ?x ?y ?z ?G |]
      ==> ?y : uverts ?G",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Roth_Arithmetic_Progressions.triangle_in_graph_verts",
     "[| uwellformed ?G; triangle_in_graph ?x ?y ?z ?G |]
      ==> ?z : uverts ?G",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Roth_Arithmetic_Progressions.all_edges_betw_sigma_neighbor",
     "uwellformed ?G ==>
      all_edges_between ?X ?Y ?G = (SIGMA x:?X. neighbors_ss x ?Y ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Roth_Arithmetic_Progressions.card_triangle_3",
     "[| ?t : triangle_set ?G; uwellformed ?G |] ==> card ?t = 3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Roth_Arithmetic_Progressions.all_edges_between_subset_times",
     "all_edges_between ?X ?Y ?G
      <= (?X Int \<Union> (uedges ?G)) \<times>
         (?Y Int \<Union> (uedges ?G))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))),
         t_empty))),
    ("Roth_Arithmetic_Progressions.all_edges_betw_D3",
     "(?x, ?y) : all_edges_between ?X ?Y ?G ==> {?x, ?y} : uedges ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Roth_Arithmetic_Progressions.edge_vertices_not_equal",
     "[| uwellformed ?G; {?x, ?y} : uedges ?G |] ==> ?x ~= ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_hole 3))),
              template_app (template_hole 2, template_var 2))
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Roth_Arithmetic_Progressions.uwellformed_alt_fst",
     "[| uwellformed ?G; {?x, ?y} : uedges ?G |] ==> ?x : uverts ?G",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_hole 3))),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Roth_Arithmetic_Progressions.uwellformed_alt_snd",
     "[| uwellformed ?G; {?x, ?y} : uedges ?G |] ==> ?y : uverts ?G",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_hole 3))),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Roth_Arithmetic_Progressions.edge_btw_vertices_not_equal",
     "[| uwellformed ?G; (?x, ?y) : all_edges_between ?X ?Y ?G |]
      ==> ?x ~= ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0),
                template_var 4))
            )],
       template_negation
        (template_equation (template_var 3, template_var 2)))),
    ("Roth_Arithmetic_Progressions.RothArithmeticProgressions",
     "0 < upper_asymptotic_density ?A ==>
      EX k d. 0 < d & progression3 k d <= ?A",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Roth_Arithmetic_Progressions.triangle_in_graph_ss",
     "[| uedges ?Gnew <= uedges ?G; triangle_in_graph ?x ?y ?z ?Gnew |]
      ==> triangle_in_graph ?x ?y ?z ?G",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 4),
          template_app (template_hole 1, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Roth_Arithmetic_Progressions.max_edges_graph",
     "[| uwellformed ?G; finite (uverts ?G) |]
      ==> card (uedges ?G) <= (card (uverts ?G))\<^sup>2",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 8, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Roth_Arithmetic_Progressions.subgraph_edge_wf",
     "[| uwellformed ?G; uverts ?H = uverts ?G; uedges ?H <= uedges ?G |]
      ==> uwellformed ?H",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (template_app (template_hole 4, template_var 0)))),
    ("Roth_Arithmetic_Progressions.in_mk_uedge_img_iff",
     "({?a, ?b} : mk_uedge ` ?A) = ((?a, ?b) : ?A | (?b, ?a) : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 5))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_E_diff",
     "all_edges_between ?X ?Y (?V, ?E - ?E') =
      all_edges_between ?X ?Y (?V, ?E) - all_edges_between ?X ?Y (?V, ?E')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Roth_Arithmetic_Progressions.all_edges_between_E_Un",
     "all_edges_between ?X ?Y (?V, ?E Un ?E') =
      all_edges_between ?X ?Y (?V, ?E) Un
      all_edges_between ?X ?Y (?V, ?E')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Roth_Arithmetic_Progressions.uwellformed_alt",
     "[| uwellformed ?G; {?x, ?y} : uedges ?G |] ==> {?x, ?y} <= uverts ?G",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_hole 3))),
              template_app (template_hole 2, template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3)),
         template_app (template_hole 0, template_var 2)))),
    ("Roth_Arithmetic_Progressions.all_edges_between_E_UN",
     "all_edges_between ?X ?Y (?V, \<Union> (?E ` ?I)) =
      (UN i:?I. all_edges_between ?X ?Y (?V, ?E i))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Roth_Arithmetic_Progressions.triangle_set_graph_edge_ss",
     "[| uwellformed ?G; uedges ?Gnew <= uedges ?G;
         uverts ?Gnew = uverts ?G |]
      ==> triangle_set ?Gnew <= triangle_set ?G",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Roth_Arithmetic_Progressions.edge_density_eq0",
     "[| all_edges_between ?A ?B ?G = {}; ?X <= ?A; ?Y <= ?B |]
      ==> edge_density ?X ?Y ?G = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3),
            template_var 2),
          template_hole 4),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2),
         template_hole 0))),
    ("Roth_Arithmetic_Progressions.mult_mod_cancel_right",
     "[| ?a * ?n mod ?m = ?b * ?n mod ?m; coprime ?m ?n |]
      ==> ?a mod ?m = ?b mod ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 2)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("Roth_Arithmetic_Progressions.mult_mod_cancel_left",
     "[| ?n * ?a mod ?m = ?n * ?b mod ?m; coprime ?m ?n |]
      ==> ?a mod ?m = ?b mod ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 0)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("Roth_Arithmetic_Progressions.card_all_edges_betw_neighbor",
     "[| finite ?X; finite ?Y; uwellformed ?G |]
      ==> card (all_edges_between ?X ?Y ?G) =
          (SUM x:?X. card (neighbors_ss x ?Y ?G))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 2)))),
    ("Roth_Arithmetic_Progressions.triangle_in_graph_edge_point",
     "uwellformed ?G ==>
      triangle_in_graph ?x ?y ?z ?G =
      ({?y, ?z} : uedges ?G &
       neighbor_in_graph ?x ?y ?G & neighbor_in_graph ?x ?z ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_app (template_hole 1, template_var 3))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 3)))))),
    ("Roth_Arithmetic_Progressions.all_edges_betw_I",
     "[| ?x : ?X; ?y : ?Y; {?x, ?y} : uedges ?G |]
      ==> (?x, ?y) : all_edges_between ?X ?Y ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 4))),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0))
           ))),
    ("Roth_Arithmetic_Progressions.card_all_edges_between",
     "[| finite ?Y; finite (uverts ?G); uwellformed ?G |]
      ==> card (all_edges_between ?X ?Y ?G) =
          (SUM y:?Y. card (all_edges_between ?X {y} ?G))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 2)))),
    ("Roth_Arithmetic_Progressions.all_edges_preserved",
     "[| all_edges_between ?A ?B ?G' = all_edges_between ?A ?B ?G; ?X <= ?A;
         ?Y <= ?B |]
      ==> all_edges_between ?X ?Y ?G' = all_edges_between ?X ?Y ?G",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 5),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Roth_Arithmetic_Progressions.triangle_set_graph_edge_ss_bound",
     "[| uwellformed ?G; finite (uverts ?G); uedges ?Gnew <= uedges ?G;
         uverts ?Gnew = uverts ?G |]
      ==> card (triangle_set ?Gnew) <= card (triangle_set ?G)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Roth_Arithmetic_Progressions.real_mult_gt_cube",
     "[| ?X <= ?A; ?X <= ?B; ?X <= ?C; 0 <= ?X |]
      ==> ?X ^ 3 <= ?A * ?B * ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation (less_equals, template_hole 5, template_var 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Roth_Arithmetic_Progressions.mk_triangle_from_ss_edges",
     "[| (?x, ?y) : all_edges_between ?X ?Y ?G;
         (?x, ?z) : all_edges_between ?X ?Z ?G;
         (?y, ?z) : all_edges_between ?Y ?Z ?G |]
      ==> triangle_in_graph ?x ?y ?z ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 0),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 5),
               template_var 1),
             template_var 2)
           ))),
    ("Roth_Arithmetic_Progressions.card_or_filter_max",
     "finite ?A ==>
      card {a: ?A. ?P a | ?Q a} <= card {a: ?A. ?P a} + card {a: ?A. ?Q a}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 5, template_app (template_hole 4, t_empty))),
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty)))))),
    ("Roth_Arithmetic_Progressions.card_3_iff",
     "(card ?S = 3) =
      (EX x y z. ?S = {x, y, z} & x ~= y & y ~= z & x ~= z)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_hole 7))),
       template_app (template_hole 6, t_empty))),
    ("Roth_Arithmetic_Progressions.corollary_triangle_removal",
     "0 < ?\<epsilon> ==>
      EX N>0.
         ALL G.
            N < card (uverts G) -->
            uwellformed G -->
            unique_triangles G -->
            real (card (uedges G))
            <= ?\<epsilon> * real ((card (uverts G))\<^sup>2)",
     template_implication
      ([template_inequation (less_than, template_hole 19, template_var 0)],
       template_predicate (template_app (template_hole 18, t_empty)))),
    ("Roth_Arithmetic_Progressions.sum_prod_le_prod_sum",
     "(!!i. i : ?I ==> (0::?'b) <= ?a i & (0::?'b) <= ?b i) ==>
      (SUM i:?I. SUM j:?I. ?a i * ?b j) <= sum ?a ?I * sum ?b ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, t_empty), template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2)),
           template_app
            (template_app (template_hole 1, t_empty), template_var 2))))),
    ("Roth_Arithmetic_Progressions.edge_density_implies_edge_exists",
     "[| ?X <= uverts ?G; ?Y <= uverts ?G; 0 < ?\<epsilon>; uwellformed ?G;
         ?\<epsilon> <= edge_density ?X ?Y ?G;
         !!e. e : all_edges_between ?X ?Y ?G ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 8, template_var 3)),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 2),
            template_var 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Roth_Arithmetic_Progressions.convert_triangle_rep_ss",
     "[| ?X <= uverts ?G; ?Y <= uverts ?G; ?Z <= uverts ?G |]
      ==> mk_triangle_set `
          {(x, y, z).
           (x, y, z) : ?X \<times> ?Y \<times> ?Z &
           triangle_in_graph x y z ?G}
          <= triangle_set ?G",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 14, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 14, template_var 2)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 14, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 12, template_hole 11),
           template_app
            (template_hole 10, template_app (template_hole 9, t_empty))),
         template_app (template_hole 0, template_var 2)))),
    ("Roth_Arithmetic_Progressions.RothArithmeticProgressions_aux",
     "[| 0 < ?\<epsilon>;
         !!X. ALL N>=X.
                 ALL A<={..<N}.
                    (\<nexists>k d. 0 < d & progression3 k d <= A) -->
                    real (card A) < ?\<epsilon> * real N ==>
              ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_than, template_hole 16, template_var 1),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Roth_Arithmetic_Progressions.regular_pairI",
     "[| 0 < ?\<epsilon>; regular_pair ?X ?Y ?G ?\<epsilon>; ?X' <= ?X;
         ?Y' <= ?Y; ?\<epsilon> * real (card ?X) <= real (card ?X');
         ?\<epsilon> * real (card ?Y) <= real (card ?Y') |]
      ==> \<bar>edge_density ?X' ?Y' ?G - edge_density ?X ?Y ?G\<bar>
          <= ?\<epsilon>",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 5),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 5),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 4))),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1))),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 5),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3))),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2))),
         template_var 5))),
    ("Roth_Arithmetic_Progressions.triple_sigma_rewrite_card",
     "[| finite ?X; finite ?Y; finite ?Z |]
      ==> card {(x, y, z). x : ?X & (y, z) : ?Y \<times> ?Z & ?P x y z} =
          (SUM x:?X. card {(y, z). (y, z) : ?Y \<times> ?Z & ?P x y z})",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10, template_app (template_hole 9, t_empty))),
         template_app
          (template_app (template_hole 2, t_empty), template_var 3)))),
    ("Roth_Arithmetic_Progressions.card_convert_triangle_rep",
     "[| ?X <= uverts ?G; ?Y <= uverts ?G; ?Z <= uverts ?G;
         finite (uverts ?G); uwellformed ?G |]
      ==> 1 / 6 *
          real
           (card
             {(x, y, z).
              (x, y, z) : ?X \<times> ?Y \<times> ?Z &
              triangle_in_graph x y z ?G})
          <= real (card (triangle_set ?G))",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 24, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 24, template_var 2)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 24, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 23,
              template_app (template_hole 24, template_var 2))
            ),
        template_predicate
         (template_app (template_hole 22, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app (template_hole 19, template_hole 18),
               template_app
                (template_hole 17,
                 template_app
                  (template_hole 16,
                   template_app (template_hole 15, template_hole 14))))),
           template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app (template_hole 10, t_empty))))),
         template_app
          (template_hole 13,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)))))),
    ("Roth_Arithmetic_Progressions.card_convert_triangle_rep_bound",
     "[| ?t <= real
                (card
                  {(x, y, z).
                   (x, y, z) : ?X \<times> ?Y \<times> ?Z &
                   triangle_in_graph x y z ?G});
         ?X <= uverts ?G; ?Y <= uverts ?G; ?Z <= uverts ?G;
         finite (uverts ?G); uwellformed ?G |]
      ==> 1 / 6 * ?t <= real (card (triangle_set ?G))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_hole 24,
            template_app
             (template_hole 23,
              template_app
               (template_hole 22,
                template_app (template_hole 21, t_empty))))),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 11, template_var 0)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 11, template_var 0)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 11, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))))),
           template_var 4),
         template_app
          (template_hole 24,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Roth_Arithmetic_Progressions.triangle_removal_lemma",
     "0 < ?\<epsilon> ==>
      EX \<delta>>0.
         ALL G.
            0 < card (uverts G) -->
            uwellformed G -->
            real (card (triangle_set G))
            <= \<delta> * real (card (uverts G) ^ 3) -->
            (EX Gnew.
                triangle_free_graph Gnew &
                uverts Gnew = uverts G &
                uedges Gnew <= uedges G &
                real (card (uedges G - uedges Gnew))
                <= ?\<epsilon> * real ((card (uverts G))\<^sup>2))",
     template_implication
      ([template_inequation (less_than, template_hole 25, template_var 0)],
       template_predicate (template_app (template_hole 24, t_empty)))),
    ("Roth_Arithmetic_Progressions.neighbor_set_meets_e_reg_cond",
     "[| ?X <= uverts ?G; ?Y <= uverts ?G; 0 < ?\<epsilon>; finite ?X;
         finite ?Y; uwellformed ?G; regular_pair ?X ?Y ?G ?\<epsilon>;
         2 * ?\<epsilon> <= edge_density ?X ?Y ?G;
         (edge_density ?X ?Y ?G - ?\<epsilon>) * real (card ?Y)
         <= real (card (neighbors_ss ?x ?Y ?G)) |]
      ==> ?\<epsilon> * real (card ?Y)
          <= real (card (neighbors_ss ?x ?Y ?G))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 15, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 15, template_var 3)),
        template_inequation (less_than, template_hole 13, template_var 1),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5))),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 2),
            template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 2),
                    template_var 3)),
                template_var 1)),
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 2))),
          template_app
           (template_hole 2,
            template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 2),
                template_var 3))))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 3)))))),
    ("Roth_Arithmetic_Progressions.regular_pair_neighbor_bound",
     "[| finite (uverts ?G); ?X <= uverts ?G; ?Y <= uverts ?G; 0 < card ?X;
         uwellformed ?G; 0 < ?\<epsilon>; regular_pair ?X ?Y ?G ?\<epsilon>;
         2 * ?\<epsilon> <= edge_density ?X ?Y ?G |]
      ==> real
           (card
             {x: ?X.
              real (card (neighbors_ss x ?Y ?G))
              < (edge_density ?X ?Y ?G - ?\<epsilon>) * real (card ?Y)})
          < ?\<epsilon> * real (card ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 3))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 20, template_var 3)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 20, template_var 3)),
        template_inequation
         (less_than, template_hole 17,
          template_app (template_hole 16, template_var 2)),
        template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_inequation (less_than, template_hole 13, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))),
            template_var 0),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 3))],
       template_inequation
        (less_than,
         template_app
          (template_hole 5,
           template_app
            (template_hole 16, template_app (template_hole 4, t_empty))),
         template_app
          (template_app (template_hole 10, template_var 0),
           template_app
            (template_hole 5,
             template_app (template_hole 16, template_var 2)))))),
    ("Roth_Arithmetic_Progressions.triangle_counting_lemma",
     "[| ?X <= uverts ?G; ?Y <= uverts ?G; ?Z <= uverts ?G; 0 < ?\<epsilon>;
         finite (uverts ?G); uwellformed ?G;
         regular_pair ?X ?Y ?G ?\<epsilon>;
         regular_pair ?Y ?Z ?G ?\<epsilon>;
         regular_pair ?X ?Z ?G ?\<epsilon>;
         2 * ?\<epsilon> <= edge_density ?X ?Y ?G;
         2 * ?\<epsilon> <= edge_density ?X ?Z ?G;
         2 * ?\<epsilon> <= edge_density ?Y ?Z ?G |]
      ==> (1 - 2 * ?\<epsilon>) * (edge_density ?X ?Y ?G - ?\<epsilon>) *
          (edge_density ?X ?Z ?G - ?\<epsilon>) *
          (edge_density ?Y ?Z ?G - ?\<epsilon>) *
          real (card ?X) *
          real (card ?Y) *
          real (card ?Z)
          <= real (card (triangle_triples ?X ?Y ?Z ?G))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 17, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 17, template_var 3)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 17, template_var 3)),
        template_inequation (less_than, template_hole 15, template_var 0),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 17, template_var 3))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 2),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))),
            template_var 0),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2),
            template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))),
            template_var 0),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1),
            template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))),
            template_var 0),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 3))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_app
                                (template_hole 10,
                                 template_app
                                  (template_app
                                    (template_hole 5, template_hole 4),
                                   template_app
                                    (template_app
(template_hole 10,
 template_app
  (template_hole 9, template_app (template_hole 8, template_hole 7))),
                                     template_var 0))),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_app (template_hole 6, template_var 4), template_var 2),
                                     template_var 3)),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_app
                                    (template_hole 6, template_var 4),
                                   template_var 1),
                                 template_var 3)),
                             template_var 0))),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 6, template_var 2),
                               template_var 1),
                             template_var 3)),
                         template_var 0))),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 4)))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 3)))))),
    ("Roth_Arithmetic_Progressions.all_edges_btwn_neighbour_sets_lower_bound",
     "[| ?X <= uverts ?G; ?Y <= uverts ?G; ?Z <= uverts ?G; 0 < ?\<epsilon>;
         finite (uverts ?G); uwellformed ?G; finite ?X; finite ?Y;
         finite ?Z; regular_pair ?X ?Y ?G ?\<epsilon>;
         regular_pair ?Y ?Z ?G ?\<epsilon>;
         regular_pair ?X ?Z ?G ?\<epsilon>;
         2 * ?\<epsilon> <= edge_density ?X ?Y ?G;
         2 * ?\<epsilon> <= edge_density ?X ?Z ?G;
         2 * ?\<epsilon> <= edge_density ?Y ?Z ?G;
         (edge_density ?X ?Y ?G - ?\<epsilon>) * real (card ?Y)
         <= real (card (neighbors_ss ?x ?Y ?G));
         (edge_density ?X ?Z ?G - ?\<epsilon>) * real (card ?Z)
         <= real (card (neighbors_ss ?x ?Z ?G));
         ?x : ?X |]
      ==> (edge_density ?Y ?Z ?G - ?\<epsilon>) *
          real (card (neighbors_ss ?x ?Y ?G)) *
          real (card (neighbors_ss ?x ?Z ?G))
          <= real
              (card
                (all_edges_between (neighbors_ss ?x ?Y ?G)
                  (neighbors_ss ?x ?Z ?G) ?G))",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app (template_hole 18, template_var 4)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 18, template_var 4)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 18, template_var 4)),
        template_inequation (less_than, template_hole 16, template_var 1),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 18, template_var 4))
            ),
        template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_predicate
         (template_app (template_hole 15, template_var 5)),
        template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 3),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 3),
            template_var 4)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_var 2),
            template_var 4)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2),
            template_var 4)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 5),
                      template_var 3),
                    template_var 4)),
                template_var 1)),
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 3))),
          template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 3),
                template_var 4)))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 5),
                      template_var 2),
                    template_var 4)),
                template_var 1)),
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2))),
          template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2),
                template_var 4)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 7, template_var 3),
                         template_var 2),
                       template_var 4)),
                   template_var 1)),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 3),
                     template_var 4))))),
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2),
                 template_var 4)))),
         template_app
          (template_hole 5,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 3),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 2),
                   template_var 4)),
               template_var 4))))))]:
   (string * thm * template) list
### theory "Draft.Roth_Arithmetic_ProgressionsTemplates"
### 1.605s elapsed time, 2.274s cpu time, 0.730s GC time
val it = (): unit
