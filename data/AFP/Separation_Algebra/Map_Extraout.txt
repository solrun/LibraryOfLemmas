Loading theory "Draft.Map_Extra" (required by "Draft.Map_ExtraTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.117s elapsed time, 0.490s cpu time, 0.044s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.227s elapsed time, 0.925s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs")
### theory "Draft.Map_Extra"
### 0.289s elapsed time, 1.152s cpu time, 0.125s GC time
### theory "HOL-Library.Nat_Bijection"
### 0.347s elapsed time, 1.329s cpu time, 0.125s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.760s elapsed time, 2.356s cpu time, 0.299s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.989s elapsed time, 2.896s cpu time, 0.810s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.887s elapsed time, 4.496s cpu time, 0.975s GC time
Loading theory "Draft.Templates" (required by "Draft.Map_ExtraTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Map_ExtraTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.488s elapsed time, 0.546s cpu time, 0.073s GC time
Loading theory "Draft.Map_ExtraTemplates"
val templateLemmas =
   [("Map_Extra.map_disj_empty_right", "?h \<bottom> Map.empty",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), t_empty)
         )),
    ("Map_Extra.map_disj_empty_left", "Map.empty \<bottom> ?h",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Map_Extra.restrict_map_UNIV", "?m |` UNIV = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Map_Extra.restrict_map_le", "?m |` ?S \<subseteq>\<^sub>m ?m",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("Map_Extra.map_add_restricted_self", "?m ++ ?m |` ?S = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Map_Extra.None_com", "(None = ?x) = (?x = None)",
     template_bimplication
      (template_equation (template_hole 0, template_var 0),
       template_equation (template_var 0, template_hole 0))),
    ("Map_Extra.map_disj_com",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 = ?h\<^sub>1 \<bottom> ?h\<^sub>0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Map_Extra.restrict_map_sub_disj", "?h |` ?S \<bottom> ?h `- ?S",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Map_Extra.map_add_restrict_dom_right", "(?m ++ ?m') |` dom ?m' = ?m'",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Map_Extra.map_disj_comp",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 |` (UNIV - dom ?h\<^sub>0)",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 1))))
         )),
    ("Map_Extra.restrict_map_sub_add", "?h |` ?S ++ ?h `- ?S = ?h",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Map_Extra.dom_empty_is_empty", "(dom ?m = {}) = (?m = Map.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, t_empty))),
    ("Map_Extra.Some_com", "(Some ?y = ?x) = (?x = Some ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Map_Extra.map_le_empty2",
     "(?m \<subseteq>\<^sub>m Map.empty) = (?m = Map.empty)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_equation (template_var 0, t_empty))),
    ("Map_Extra.map_disj_restrict_dom",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 |` (dom ?h\<^sub>1 - dom ?h\<^sub>0)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 1))))
         )),
    ("Map_Extra.non_dom_eval_eq", "(?x ~: dom ?m) = (?m ?x = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)))
            )],
       template_equation
        (template_app (template_var 0, template_var 1), template_hole 0))),
    ("Map_Extra.map_le_override",
     "?h \<bottom> ?h' ==> ?h \<subseteq>\<^sub>m ?h ++ ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Map_Extra.restrict_map_on_disj'",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      ?h\<^sub>0 \<bottom> ?h\<^sub>1 |` ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Map_Extra.restrict_map_disj_left",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      ?h\<^sub>0 |` ?S \<bottom> ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Map_Extra.map_add_ac",
     "?m1.0 ++ ?m2.0 ++ ?m3.0 = ?m1.0 ++ (?m2.0 ++ ?m3.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map_Extra.map_add_restrict_comp_right",
     "?m |` ?S ++ ?m |` (UNIV - ?S) = ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))),
       template_var 1)),
    ("Map_Extra.map_add_restrict_comp_left",
     "?m |` (UNIV - ?S) ++ ?m |` ?S = ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_var 1)),
    ("Map_Extra.None_not_eq", "(None ~= ?x) = (EX y. ?x = Some y)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Map_Extra.empty_forall_equiv",
     "(?m = Map.empty) = (ALL x. ?m x = None)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), t_empty),
       template_app (template_hole 1, t_empty))),
    ("Map_Extra.map_le_restrict",
     "?m \<subseteq>\<^sub>m ?m' ==> ?m = ?m' |` dom ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Map_Extra.restrict_map_on_disj",
     "?h\<^sub>0' \<bottom> ?h\<^sub>1 ==>
      ?h\<^sub>0 |` dom ?h\<^sub>0' \<bottom> ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_var 1)
           ))),
    ("Map_Extra.restrict_map_dom", "?S = dom ?m ==> ?m |` ?S = ?m",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Map_Extra.restrict_map_subdom", "dom ?m <= ?S ==> ?m |` ?S = ?m",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Map_Extra.non_dom_eval", "?x ~: dom ?m ==> ?m ?x = None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app (template_var 0, template_var 1), template_hole 0))),
    ("Map_Extra.restrict_self_UNIV",
     "?m |` (dom ?m - ?S) = ?m |` (UNIV - ?S)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("Map_Extra.map_add_restrict_comp_right_dom",
     "?m |` ?S ++ ?m |` (dom ?m - ?S) = ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))),
       template_var 1)),
    ("Map_Extra.dom_iff", "(EX y. ?m ?x = Some y) = (?x : dom ?m)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Map_Extra.map_add_left_cancelI",
     "?m\<^sub>1 = ?m\<^sub>1' ==>
      ?m\<^sub>0 ++ ?m\<^sub>1 = ?m\<^sub>0 ++ ?m\<^sub>1'",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Map_Extra.restrict_map_disj_dom_empty",
     "?h \<bottom> ?h' ==> ?h |` dom ?h' = Map.empty",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Map_Extra.map_add_com",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      ?h\<^sub>0 ++ ?h\<^sub>1 = ?h\<^sub>1 ++ ?h\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Map_Extra.map_disjD",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      dom ?h\<^sub>0 Int dom ?h\<^sub>1 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Map_Extra.map_add_dom_eq", "dom ?m = dom ?m' ==> ?m ++ ?m' = ?m'",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Map_Extra.map_disjI",
     "dom ?h\<^sub>0 Int dom ?h\<^sub>1 = {} ==>
      ?h\<^sub>0 \<bottom> ?h\<^sub>1",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Map_Extra.map_add_restrict",
     "(?m\<^sub>0 ++ ?m\<^sub>1) |` ?S =
      ?m\<^sub>0 |` ?S ++ ?m\<^sub>1 |` ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Map_Extra.map_add_disj",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ++ ?h\<^sub>2 =
      (?h\<^sub>0 \<bottom> ?h\<^sub>1 & ?h\<^sub>0 \<bottom> ?h\<^sub>2)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Map_Extra.map_add_disj'",
     "?h\<^sub>1 ++ ?h\<^sub>2 \<bottom> ?h\<^sub>0 =
      (?h\<^sub>1 \<bottom> ?h\<^sub>0 & ?h\<^sub>2 \<bottom> ?h\<^sub>0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Map_Extra.restrict_map_univ_disj_eq",
     "?h \<bottom> ?h' ==> ?h |` (UNIV - dom ?h') = ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("Map_Extra.map_add_restrict_dom_left",
     "?h \<bottom> ?h' ==> (?h ++ ?h') |` dom ?h = ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_var 1))),
    ("Map_Extra.map_disj_map_le",
     "[| ?h\<^sub>0' \<subseteq>\<^sub>m ?h\<^sub>0;
         ?h\<^sub>0 \<bottom> ?h\<^sub>1 |]
      ==> ?h\<^sub>0' \<bottom> ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Map_Extra.restrict_map_disj_dom",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      ?h |` dom ?h\<^sub>0 \<bottom> ?h |` dom ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Map_Extra.restrict_map_disj",
     "?S Int ?T = {} ==> ?h |` ?S \<bottom> ?h |` ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Map_Extra.restrict_map_empty",
     "dom ?m Int ?S = {} ==> ?m |` ?S = Map.empty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         t_empty))),
    ("Map_Extra.map_le_conv2",
     "(?h\<^sub>0' \<subseteq>\<^sub>m ?h\<^sub>0) =
      (EX h\<^sub>1.
          ?h\<^sub>0 = ?h\<^sub>0' ++ h\<^sub>1 &
          ?h\<^sub>0' \<bottom> h\<^sub>1)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Map_Extra.map_submap_break",
     "?h \<subseteq>\<^sub>m ?h' ==> ?h' = ?h' |` (UNIV - dom ?h) ++ ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1)))),
           template_var 1)))),
    ("Map_Extra.map_add_restrict_right",
     "?x <= dom ?m' ==> (?m ++ ?m') |` ?x = ?m' |` ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Map_Extra.map_le_same_dom_eq",
     "[| ?m\<^sub>0 \<subseteq>\<^sub>m ?m\<^sub>1;
         dom ?m\<^sub>0 = dom ?m\<^sub>1 |]
      ==> ?m\<^sub>0 = ?m\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Map_Extra.map_disj_None_right",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?x : dom ?h\<^sub>0 |]
      ==> ?h\<^sub>1 ?x = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_equation
        (template_app (template_var 1, template_var 0), template_hole 0))),
    ("Map_Extra.map_disj_None_left",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?x : dom ?h\<^sub>1 |]
      ==> ?h\<^sub>0 ?x = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app (template_var 2, template_var 0), template_hole 0))),
    ("Map_Extra.map_disj_eq_dom_left",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         dom ?h\<^sub>0' = dom ?h\<^sub>0 |]
      ==> ?h\<^sub>0' \<bottom> ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("Map_Extra.map_leI_left",
     "[| ?h = ?h\<^sub>0 ++ ?h\<^sub>1; ?h\<^sub>0 \<bottom> ?h\<^sub>1 |]
      ==> ?h\<^sub>0 \<subseteq>\<^sub>m ?h",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("Map_Extra.map_leI_right",
     "[| ?h = ?h\<^sub>0 ++ ?h\<^sub>1; ?h\<^sub>0 \<bottom> ?h\<^sub>1 |]
      ==> ?h\<^sub>1 \<subseteq>\<^sub>m ?h",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Map_Extra.map_le_dom_restrict_sub_add",
     "?m' \<subseteq>\<^sub>m ?m ==> ?m |` (dom ?m - dom ?m') ++ ?m' = ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 0, template_var 1)))),
           template_var 1),
         template_var 0))),
    ("Map_Extra.map_add_left_commute",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      ?h\<^sub>0 ++ (?h\<^sub>1 ++ ?h\<^sub>2) =
      ?h\<^sub>1 ++ (?h\<^sub>0 ++ ?h\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Map_Extra.map_dom_disj_restrict_right",
     "?h\<^sub>0 \<bottom> ?h\<^sub>1 ==>
      (?h\<^sub>0 ++ ?h\<^sub>0') |` dom ?h\<^sub>1 =
      ?h\<^sub>0' |` dom ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Map_Extra.map_le_dom_subset_restrict",
     "[| ?m' \<subseteq>\<^sub>m ?m; dom ?m' <= ?S |]
      ==> ?m' \<subseteq>\<^sub>m ?m |` ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Map_Extra.map_disj_None_left'",
     "[| ?h\<^sub>0 ?x = Some ?y; ?h\<^sub>1 \<bottom> ?h\<^sub>0 |]
      ==> ?h\<^sub>1 ?x = None",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app (template_var 0, template_var 2), template_hole 0))),
    ("Map_Extra.map_disj_None_right'",
     "[| ?h\<^sub>1 ?x = Some ?y; ?h\<^sub>1 \<bottom> ?h\<^sub>0 |]
      ==> ?h\<^sub>0 ?x = None",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 0, template_var 2), template_hole 0))),
    ("Map_Extra.restrict_map_cancel",
     "(?m |` ?S = ?m |` ?T) = (dom ?m Int ?S = dom ?m Int ?T)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 2), template_var 0)),
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Map_Extra.map_disj_update_left",
     "?p : dom ?h\<^sub>1 ==>
      ?h\<^sub>0 \<bottom> ?h\<^sub>1(?p |-> ?v) =
      ?h\<^sub>0 \<bottom> ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 2)))),
    ("Map_Extra.map_disj_update_right",
     "?p : dom ?h\<^sub>1 ==>
      ?h\<^sub>1(?p |-> ?v) \<bottom> ?h\<^sub>0 =
      ?h\<^sub>1 \<bottom> ?h\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_app (template_hole 0, template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Map_Extra.map_le_add_cancel",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         ?h\<^sub>0' \<subseteq>\<^sub>m ?h\<^sub>0 |]
      ==> ?h\<^sub>0' ++ ?h\<^sub>1 \<subseteq>\<^sub>m
          ?h\<^sub>0 ++ ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Map_Extra.subset_map_restrict_sub_add",
     "?T <= ?S ==> ?m |` (?S - ?T) ++ ?m |` ?T = ?m |` ?S",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Map_Extra.map_add_restrict_dom_left'",
     "[| ?h \<bottom> ?h'; ?S = dom ?h |] ==> (?h ++ ?h') |` ?S = ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0, template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_var 2))),
    ("Map_Extra.map_add_eval_left",
     "[| ?x : dom ?h; ?h \<bottom> ?h' |] ==> (?h ++ ?h') ?x = ?h ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 1, template_var 2)))),
    ("Map_Extra.map_add_eval_right",
     "[| ?x : dom ?h'; ?h \<bottom> ?h' |] ==> (?h ++ ?h') ?x = ?h' ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 1, template_var 2)))),
    ("Map_Extra.map_add_eval_right'",
     "[| ?x ~: dom ?h; ?h \<bottom> ?h' |] ==> (?h ++ ?h') ?x = ?h' ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Map_Extra.map_add_eval_left'",
     "[| ?x ~: dom ?h'; ?h \<bottom> ?h' |] ==> (?h ++ ?h') ?x = ?h ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Map_Extra.map_add_lr_disj",
     "[| ?h\<^sub>0 ++ ?h\<^sub>1 = ?h\<^sub>0' ++ ?h\<^sub>1';
         ?h\<^sub>1 \<bottom> ?h\<^sub>1' |]
      ==> dom ?h\<^sub>1 <= dom ?h\<^sub>0'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Map_Extra.map_add_right_dom_eq",
     "[| ?m\<^sub>0 ++ ?m\<^sub>1 = ?m\<^sub>0' ++ ?m\<^sub>1';
         dom ?m\<^sub>1 = dom ?m\<^sub>1' |]
      ==> ?m\<^sub>1 = ?m\<^sub>1'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("Map_Extra.restrict_map_sub_union",
     "?m |` (dom ?m - (?S Un ?T)) = ?m |` (dom ?m - ?T) |` (dom ?m - ?S)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1)))),
    ("Map_Extra.map_add_restrict_nonmember_left",
     "?x ~: dom ?m ==> (?m ++ ?m') |` {?x} = ?m' |` {?x}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Map_Extra.map_add_restrict_nonmember_right",
     "?x ~: dom ?m' ==> (?m ++ ?m') |` {?x} = ?m |` {?x}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Map_Extra.restrict_map_remerge",
     "?S Int ?T = {} ==> ?m |` ?S ++ ?m |` ?T = ?m |` (?S Un ?T)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Map_Extra.map_le_on_disj_left",
     "[| ?h' \<subseteq>\<^sub>m ?h; ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         ?h' = ?h\<^sub>0 ++ ?h\<^sub>1 |]
      ==> ?h\<^sub>0 \<subseteq>\<^sub>m ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 2)
           ))),
    ("Map_Extra.map_le_on_disj_right",
     "[| ?h' \<subseteq>\<^sub>m ?h; ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         ?h' = ?h\<^sub>1 ++ ?h\<^sub>0 |]
      ==> ?h\<^sub>0 \<subseteq>\<^sub>m ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 2)
           ))),
    ("Map_Extra.map_disj_common",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?h\<^sub>0 ?p = Some ?v;
         ?h\<^sub>1 ?p = Some ?v' |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 4, template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate (template_hole 0))),
    ("Map_Extra.map_add_left_cancel",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         ?h\<^sub>0 \<bottom> ?h\<^sub>1' |]
      ==> (?h\<^sub>0 ++ ?h\<^sub>1 = ?h\<^sub>0 ++ ?h\<^sub>1') =
          (?h\<^sub>1 = ?h\<^sub>1')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Map_Extra.map_le_sub_dom",
     "[| ?h\<^sub>0 ++ ?h\<^sub>1 \<subseteq>\<^sub>m ?h;
         ?h\<^sub>0 \<bottom> ?h\<^sub>1 |]
      ==> ?h\<^sub>0 \<subseteq>\<^sub>m ?h |` (dom ?h - dom ?h\<^sub>1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Map_Extra.map_add_right_eq",
     "[| ?h ++ ?h\<^sub>0 = ?h ++ ?h\<^sub>1; ?h\<^sub>0 \<bottom> ?h;
         ?h\<^sub>1 \<bottom> ?h |]
      ==> ?h\<^sub>0 = ?h\<^sub>1",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Map_Extra.map_add_left_eq",
     "[| ?h\<^sub>0 ++ ?h = ?h\<^sub>1 ++ ?h; ?h\<^sub>0 \<bottom> ?h;
         ?h\<^sub>1 \<bottom> ?h |]
      ==> ?h\<^sub>0 = ?h\<^sub>1",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Map_Extra.map_le_override_bothD",
     "[| ?h\<^sub>0' ++ ?h\<^sub>1 \<subseteq>\<^sub>m
         ?h\<^sub>0 ++ ?h\<^sub>1;
         ?h\<^sub>0' \<bottom> ?h\<^sub>1;
         ?h\<^sub>0 \<bottom> ?h\<^sub>1 |]
      ==> ?h\<^sub>0' \<subseteq>\<^sub>m ?h\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Map_Extra.restrict_map_compose",
     "[| ?S Un ?T = dom ?m; ?S Int ?T = {} |]
      ==> ?m |` ?S ++ ?m |` ?T = ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Map_Extra.map_le_conv",
     "(?h\<^sub>0' \<subseteq>\<^sub>m ?h\<^sub>0 &
       ?h\<^sub>0' ~= ?h\<^sub>0) =
      (EX h\<^sub>1.
          ?h\<^sub>0 = ?h\<^sub>0' ++ h\<^sub>1 &
          ?h\<^sub>0' \<bottom> h\<^sub>1 & ?h\<^sub>0' ~= ?h\<^sub>0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app (template_hole 2, t_empty))),
    ("Map_Extra.map_add_update_left",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?p : dom ?h\<^sub>0 |]
      ==> (?h\<^sub>0 ++ ?h\<^sub>1)(?p |-> ?v) =
          ?h\<^sub>0(?p |-> ?v) ++ ?h\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_var 2)))),
    ("Map_Extra.map_add_update_right",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?p : dom ?h\<^sub>1 |]
      ==> (?h\<^sub>0 ++ ?h\<^sub>1)(?p |-> ?v) =
          ?h\<^sub>0 ++ ?h\<^sub>1(?p |-> ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Map_Extra.map_add_left_dom_eq",
     "[| ?h\<^sub>0 ++ ?h\<^sub>1 = ?h\<^sub>0' ++ ?h\<^sub>1';
         ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?h\<^sub>0' \<bottom> ?h\<^sub>1';
         dom ?h\<^sub>0 = dom ?h\<^sub>0' |]
      ==> ?h\<^sub>0 = ?h\<^sub>0'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 0, template_var 3),
          template_app (template_hole 0, template_var 1))],
       template_equation (template_var 3, template_var 1))),
    ("Map_Extra.map_disj_add_eq_dom_right_eq",
     "[| ?h\<^sub>0 ++ ?h\<^sub>1 = ?h\<^sub>0' ++ ?h\<^sub>1';
         dom ?h\<^sub>0 = dom ?h\<^sub>0'; ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         ?h\<^sub>0' \<bottom> ?h\<^sub>1' |]
      ==> ?h\<^sub>1 = ?h\<^sub>1'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Map_Extra.map_disj_add_eq_dom_left_eq",
     "[| ?h\<^sub>0 ++ ?h\<^sub>1 = ?h\<^sub>0' ++ ?h\<^sub>1';
         dom ?h\<^sub>1 = dom ?h\<^sub>1'; ?h\<^sub>0 \<bottom> ?h\<^sub>1;
         ?h\<^sub>0' \<bottom> ?h\<^sub>1' |]
      ==> ?h\<^sub>0 = ?h\<^sub>0'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 3, template_var 1))),
    ("Map_Extra.prod_restrict_map_add",
     "[| ?S Un ?T = ?U; ?S Int ?T = {} |]
      ==> ?m |` (?X \<times> ?S) ++ ?m |` (?X \<times> ?T) =
          ?m |` (?X \<times> ?U)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 4), template_var 3),
          template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0), t_empty))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0), t_empty))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))))),
    ("Map_Extra.map_add_disj_restrict_both",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?S Int ?S' = {};
         ?T Int ?T' = {} |]
      ==> ?h\<^sub>0 |` ?S ++ ?h\<^sub>1 |` ?T \<bottom>
          ?h\<^sub>0 |` ?S' ++ ?h\<^sub>1 |` ?T'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_hole 2),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Map_Extra.map_add3_update",
     "[| ?h\<^sub>0 \<bottom> ?h\<^sub>1; ?h\<^sub>1 \<bottom> ?h\<^sub>2;
         ?h\<^sub>0 \<bottom> ?h\<^sub>2; ?p : dom ?h\<^sub>0 |]
      ==> (?h\<^sub>0 ++ ?h\<^sub>1 ++ ?h\<^sub>2)(?p |-> ?v) =
          ?h\<^sub>0(?p |-> ?v) ++ ?h\<^sub>1 ++ ?h\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3)),
                 template_var 2)),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_var 3)),
           template_var 2))))]:
   (string * thm * template) list
### theory "Draft.Map_ExtraTemplates"
### 0.311s elapsed time, 0.391s cpu time, 0.000s GC time
val it = (): unit
