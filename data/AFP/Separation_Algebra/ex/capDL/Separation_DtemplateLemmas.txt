   [("Abstract_Separation_D.add_to_slots_empty",
     "Abstract_Separation_D.add_to_slots Map.empty ?h = ?h",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("Abstract_Separation_D.update_object_slots_id",
     "update_slots (object_slots ?a) ?a = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Abstract_Separation_D.clean_slots_empty",
     "clean_slots Map.empty ?cmp = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       t_empty)),
    ("Abstract_Separation_D.slots_of_heap_empty",
     "slots_of_heap Map.empty ?object_id = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       t_empty)),
    ("Abstract_Separation_D.object_slots_object_clean_fields",
     "object_slots (object_clean_fields ?obj ?cmp) = object_slots ?obj",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.union_intersection1", "?A Int (?A Un ?B) = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Abstract_Separation_D.union_intersection2", "?B Int (?A Un ?B) = ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 1)),
    ("Abstract_Separation_D.union_intersection", "(?A Un ?B) Int ?A = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 1)),
    ("Abstract_Separation_D.union_intersection", "(?A Un ?B) Int ?B = ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 0)),
    ("Abstract_Separation_D.has_slots_object_clean",
     "has_slots (object_clean ?obj ?cmp) = has_slots ?obj",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.has_slots_object_clean_fields",
     "has_slots (object_clean_fields ?obj ?cmp) = has_slots ?obj",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.has_slots_object_clean_slots",
     "has_slots (object_clean_slots ?obj ?cmp) = has_slots ?obj",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.object_type_add_to_slots",
     "object_type (Abstract_Separation_D.add_to_slots ?slots ?x) =
      object_type ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Abstract_Separation_D.object_type_object_clean",
     "object_type (object_clean ?x ?cmp) = object_type ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.object_type_object_clean_fields",
     "object_type (object_clean_fields ?x ?cmp) = object_type ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.object_type_object_clean_slots",
     "object_type (object_clean_slots ?x ?cmp) = object_type ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Abstract_Separation_D.object_type_update_slots",
     "object_type (update_slots ?slots ?x) = object_type ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Abstract_Separation_D.not_conflicting_objects_empty",
     "not_conflicting_objects ?s (SepState Map.empty (%obj_id. {}))
       ?obj_id",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, t_empty), t_empty)),
           template_var 0)
         )),
    ("Abstract_Separation_D.empty_not_conflicting_objects",
     "not_conflicting_objects (SepState Map.empty (%obj_id. {})) ?s
       ?obj_id",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), t_empty)),
             template_var 1),
           template_var 0)
         )),
    ("Abstract_Separation_D.object_slots_object_clean",
     "object_slots (object_clean ?obj ?cmp) =
      clean_slots (object_slots ?obj) ?cmp",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Abstract_Separation_D.object_slots_object_clean_slots",
     "object_slots (object_clean_slots ?obj ?cmp) =
      clean_slots (object_slots ?obj) ?cmp",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Abstract_Separation_D.not_conflicting_objects_comm",
     "not_conflicting_objects ?h1.0 ?h2.0 ?obj =
      not_conflicting_objects ?h2.0 ?h1.0 ?obj",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Abstract_Separation_D.object_clean_idem",
     "object_clean (object_clean ?obj ?cmp) ?cmp = object_clean ?obj ?cmp",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Abstract_Separation_D.object_clean_fields_idem",
     "object_clean_fields (object_clean_fields ?obj ?cmp) ?cmp =
      object_clean_fields ?obj ?cmp",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Abstract_Separation_D.object_clean_slots_idem",
     "object_clean_slots (object_clean_slots ?obj ?cmp) ?cmp =
      object_clean_slots ?obj ?cmp",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Abstract_Separation_D.update_slots_object_clean_slots",
     "update_slots ?slots (object_clean_slots ?obj ?cmp) =
      update_slots ?slots ?obj",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1))),
    ("Abstract_Separation_D.update_slots_update_slots",
     "update_slots ?slots (update_slots ?slots' ?obj) =
      update_slots ?slots ?obj",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Abstract_Separation_D.the_set_inter",
     "the_set (?A Int ?B) = the_set ?A Int the_set ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Abstract_Separation_D.the_set_union",
     "the_set (?A Un ?B) = the_set ?A Un the_set ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Abstract_Separation_D.object_slots_update_slots",
     "has_slots ?obj ==> object_slots (update_slots ?slots ?obj) = ?slots",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Abstract_Separation_D.update_slots_no_slots",
     "~ has_slots ?obj ==> update_slots ?slots ?obj = ?obj",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Abstract_Separation_D.object_slots_update_slots_object_clean_fields",
     "object_slots (update_slots ?slots (object_clean_fields ?obj ?cmp)) =
      object_slots (update_slots ?slots ?obj)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Abstract_Separation_D.cdl_heap_add_empty",
     "cdl_heap_add (SepState ?h ?gs) (SepState Map.empty (%obj_id. {})) =
      ?h",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_var 1)),
    ("Abstract_Separation_D.empty_cdl_heap_add",
     "cdl_heap_add (SepState Map.empty (%obj_id. {})) (SepState ?h ?gs) =
      ?h",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_app (template_hole 2, t_empty), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_var 1)),
    ("Abstract_Separation_D.add_to_slots_twice",
     "Abstract_Separation_D.add_to_slots ?x
       (Abstract_Separation_D.add_to_slots ?y ?a) =
      Abstract_Separation_D.add_to_slots (?x ++ ?y) ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Abstract_Separation_D.object_clean_fields_twice",
     "object_clean_fields (object_clean_fields ?obj ?cmp') ?cmp =
      object_clean_fields ?obj (?cmp Int ?cmp')",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Abstract_Separation_D.object_clean_fields_object_clean_slots",
     "object_clean_fields (object_clean_slots ?obj ?gs) ?gs =
      object_clean_slots (object_clean_fields ?obj ?gs) ?gs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Abstract_Separation_D.object_clean_fields_update_slots",
     "object_clean_fields (update_slots ?slots ?obj) ?cmp =
      update_slots ?slots (object_clean_fields ?obj ?cmp)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Abstract_Separation_D.update_slots_add_to_slots_empty",
     "update_slots Map.empty
       (Abstract_Separation_D.add_to_slots ?new ?obj) =
      update_slots Map.empty ?obj",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("Abstract_Separation_D.not_conflicting_objects_empty_object",
     "sep_heap ?x ?obj_id = None ==> not_conflicting_objects ?x ?y ?obj_id",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Abstract_Separation_D.empty_object_not_conflicting_objects",
     "sep_heap ?y ?obj_id = None ==> not_conflicting_objects ?x ?y ?obj_id",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Abstract_Separation_D.sep_state_add_comm",
     "sep_state_disj ?x ?y ==> sep_state_add ?x ?y = sep_state_add ?y ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Abstract_Separation_D.object_slots_update_slots_empty",
     "~ has_slots ?obj ==>
      object_slots (update_slots ?slots ?obj) = Map.empty",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         t_empty))),
    ("Abstract_Separation_D.update_slots_same_object",
     "?a = ?b ==> update_slots ?a ?obj = update_slots ?b ?obj",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Abstract_Separation_D.slots_of_heap_empty2",
     "?h ?obj_id = None ==> slots_of_heap ?h ?obj_id = Map.empty",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_var 0), template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         t_empty))),
    ("Abstract_Separation_D.map_add_result_empty1",
     "?a ++ ?b = Map.empty ==> ?a = Map.empty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          t_empty)],
       template_equation (template_var 1, t_empty))),
    ("Abstract_Separation_D.map_add_result_empty2",
     "?a ++ ?b = Map.empty ==> ?b = Map.empty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          t_empty)],
       template_equation (template_var 0, t_empty))),
    ("Abstract_Separation_D.cdl_heap_add_none1",
     "cdl_heap_add ?x ?y ?obj_id = None ==> sep_heap ?x ?obj_id = None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_hole 1))),
    ("Abstract_Separation_D.cdl_heap_add_none2",
     "cdl_heap_add ?x ?y ?obj_id = None ==> sep_heap ?y ?obj_id = None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 1))),
    ("Abstract_Separation_D.object_type_has_slots",
     "[| has_slots ?x; object_type ?x = object_type ?y |] ==> has_slots ?y",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 2, template_var 0)))),
    ("Abstract_Separation_D.restrict_map_disj'",
     "?S Int ?T = {} ==> ?h |` ?S \<bottom> ?h' |` ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Abstract_Separation_D.the_set_inter_empty",
     "?A Int ?B = {} ==> the_set ?A Int the_set ?B = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Abstract_Separation_D.update_slots_of_heap_id",
     "?h ?obj_id = Some ?obj ==>
      update_slots (slots_of_heap ?h ?obj_id) ?obj = ?obj",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_var 0))),
    ("Abstract_Separation_D.object_clean_all",
     "object_type ?obj_a = object_type ?obj_b ==>
      object_clean ?obj_b {} = object_clean ?obj_a {}",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Abstract_Separation_D.add_to_slots_assoc",
     "Abstract_Separation_D.add_to_slots ?x
       (Abstract_Separation_D.add_to_slots (?y ++ ?z) ?obj) =
      Abstract_Separation_D.add_to_slots (?x ++ ?y)
       (Abstract_Separation_D.add_to_slots ?z ?obj)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Abstract_Separation_D.sep_state_add_disjL",
     "[| sep_state_disj ?y ?z; sep_state_disj ?x (sep_state_add ?y ?z) |]
      ==> sep_state_disj ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 2)
           ))),
    ("Abstract_Separation_D.sep_state_add_disjR",
     "[| sep_state_disj ?y ?z; sep_state_disj ?x (sep_state_add ?y ?z) |]
      ==> sep_state_disj ?x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Abstract_Separation_D.object_type_object_addL",
     "object_type ?obj = object_type ?obj' ==>
      object_type (object_add ?obj ?obj' ?cmp ?cmp') = object_type ?obj",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 3)))),
    ("Abstract_Separation_D.object_type_object_addR",
     "object_type ?obj = object_type ?obj' ==>
      object_type (object_add ?obj ?obj' ?cmp ?cmp') = object_type ?obj'",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 2)))),
    ("Abstract_Separation_D.update_slots_eq",
     "update_slots ?a ?o1.0 = update_slots ?a ?o2.0 ==>
      update_slots ?b ?o1.0 = update_slots ?b ?o2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Abstract_Separation_D.inter_empty_not_both",
     "[| ?x : ?A; ?A Int ?B = {} |] ==> ?x ~: ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)
               )
           ))),
    ("Abstract_Separation_D.object_slots_add_to_slots",
     "object_type ?y = object_type ?z ==>
      object_slots
       (Abstract_Separation_D.add_to_slots (object_slots ?y) ?z) =
      object_slots ?y ++ object_slots ?z",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Abstract_Separation_D.cdl_ghost_state_add_assoc",
     "cdl_ghost_state_add
       (SepState (cdl_heap_add ?x ?y) (cdl_ghost_state_add ?x ?y)) ?z =
      cdl_ghost_state_add ?x
       (SepState (cdl_heap_add ?y ?z) (cdl_ghost_state_add ?y ?z))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Abstract_Separation_D.add_to_slots_object_slots",
     "object_type ?y = object_type ?z ==>
      Abstract_Separation_D.add_to_slots
       (object_slots (Abstract_Separation_D.add_to_slots ?x ?y)) ?z =
      Abstract_Separation_D.add_to_slots (?x ++ object_slots ?y) ?z",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2))),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 1, template_var 2))),
           template_var 1)))),
    ("Abstract_Separation_D.sep_state_add_disj",
     "[| sep_state_disj ?y ?z; sep_state_disj ?x ?y; sep_state_disj ?x ?z |]
      ==> sep_state_disj ?x (sep_state_add ?y ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Abstract_Separation_D.map_add_restrict_comm",
     "?S Int ?T = {} ==> ?h |` ?S ++ ?h' |` ?T = ?h' |` ?T ++ ?h |` ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Abstract_Separation_D.clean_slots_map_add_comm",
     "?cmps_a Int ?cmps_b = {} ==>
      clean_slots ?slots_a ?cmps_a ++ clean_slots ?slots_b ?cmps_b =
      clean_slots ?slots_b ?cmps_b ++ clean_slots ?slots_a ?cmps_a",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Abstract_Separation_D.map_add_emptyE",
     "[| ?a ++ ?b = Map.empty;
         [| ?a = Map.empty; ?b = Map.empty |] ==> ?R |]
      ==> ?R",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          t_empty),
        template_implication
         ([template_equation (template_var 2, t_empty)],
          template_implication
           ([template_equation (template_var 1, t_empty)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Abstract_Separation_D.object_add_comm",
     "[| object_type ?obj_a = object_type ?obj_b;
         ?cmps_a Int ?cmps_b = {} |]
      ==> object_add ?obj_a ?obj_b ?cmps_a ?cmps_b =
          object_add ?obj_b ?obj_a ?cmps_b ?cmps_a",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0),
           template_var 1)))),
    ("Abstract_Separation_D.add_to_slots_comm",
     "[| object_slots ?y_obj \<bottom> object_slots ?z_obj;
         update_slots Map.empty ?y_obj = update_slots Map.empty ?z_obj |]
      ==> Abstract_Separation_D.add_to_slots (object_slots ?z_obj) ?y_obj =
          Abstract_Separation_D.add_to_slots (object_slots ?y_obj) ?z_obj",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, t_empty), template_var 1),
          template_app
           (template_app (template_hole 2, t_empty), template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 0)))),
    ("Abstract_Separation_D.update_slots_object_clean",
     "[| None ~: ?cmps; None ~: ?cmps';
         object_type ?obj = object_type ?obj' |]
      ==> update_slots ?slots (object_clean ?obj ?cmps) =
          update_slots ?slots (object_clean ?obj' ?cmps')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Abstract_Separation_D.update_slots_object_clean_fields",
     "[| None ~: ?cmps; None ~: ?cmps';
         object_type ?obj = object_type ?obj' |]
      ==> update_slots ?slots (object_clean_fields ?obj ?cmps) =
          update_slots ?slots (object_clean_fields ?obj' ?cmps')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Abstract_Separation_D.cdl_heap_add_assoc",
     "[| sep_state_disj ?x ?y; sep_state_disj ?y ?z; sep_state_disj ?x ?z |]
      ==> cdl_heap_add
           (SepState (cdl_heap_add ?x ?y) (cdl_ghost_state_add ?x ?y)) ?z =
          cdl_heap_add ?x
           (SepState (cdl_heap_add ?y ?z) (cdl_ghost_state_add ?y ?z))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Abstract_Separation_D.object_clean_fields_no_slots",
     "[| None ~: ?cmps; None ~: ?cmps';
         object_type ?obj = object_type ?obj'; ~ has_slots ?obj;
         ~ has_slots ?obj' |]
      ==> object_clean_fields ?obj ?cmps =
          object_clean_fields ?obj' ?cmps'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Abstract_Separation_D.cdl_heap_add_assoc'",
     "ALL obj_id.
         not_conflicting_objects ?x ?z obj_id &
         not_conflicting_objects ?y ?z obj_id &
         not_conflicting_objects ?x ?z obj_id ==>
      cdl_heap_add
       (SepState (cdl_heap_add ?x ?y) (cdl_ghost_state_add ?x ?y)) ?z =
      cdl_heap_add ?x
       (SepState (cdl_heap_add ?y ?z) (cdl_ghost_state_add ?y ?z))",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Abstract_Separation_D.object_clean_comm",
     "[| object_type ?obj_a = object_type ?obj_b;
         object_slots ?obj_a ++ object_slots ?obj_b =
         object_slots ?obj_b ++ object_slots ?obj_a;
         None ~: ?cmp |]
      ==> object_clean
           (Abstract_Separation_D.add_to_slots (object_slots ?obj_a) ?obj_b)
           ?cmp =
          object_clean
           (Abstract_Separation_D.add_to_slots (object_slots ?obj_b) ?obj_a)
           ?cmp",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2)),
            template_app (template_hole 6, template_var 1)),
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 6, template_var 2))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 1)),
               template_var 2)),
           template_var 0))))]
