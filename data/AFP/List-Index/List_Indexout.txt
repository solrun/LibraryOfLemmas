Loading theory "Draft.List_Index" (required by "Draft.List_IndexMoreTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
consts
  find_index :: "('a => bool) => 'a list => nat"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.614s cpu time, 0.038s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  map_index' :: "nat => (nat => 'a => 'b) => 'a list => 'b list"
### theory "HOL-Library.Set_Algebras"
### 0.205s elapsed time, 0.835s cpu time, 0.038s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs")
consts
  insert_nth :: "nat => 'a => 'a list => 'a list"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.363s elapsed time, 1.455s cpu time, 0.112s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.List_Index"
### 0.378s elapsed time, 1.506s cpu time, 0.112s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.750s elapsed time, 2.443s cpu time, 0.284s GC time
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.978s elapsed time, 2.788s cpu time, 0.713s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.842s elapsed time, 4.360s cpu time, 0.861s GC time
Loading theory "Draft.Templates" (required by "Draft.List_IndexMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.067s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.List_IndexMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.458s elapsed time, 0.504s cpu time, 0.054s GC time
Loading theory "Draft.List_IndexMoreTemplates"
val templateLemmas =
   [("List_Index.inj_on_index", "inj_on (index ?xs) (set ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("List_Index.inj_on_last_index", "inj_on (last_index ?xs) (set ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("List_Index.index_Nil", "index [] ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("List_Index.find_index_le_size", "find_index ?P ?xs <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("List_Index.index_le_size", "index ?xs ?x <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("List_Index.last_index_le_size", "last_index ?xs ?x <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("List_Index.map_index_id", "map_index (curry snd) ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("List_Index.set_remove_nth_subset",
     "set (remove_nth ?j ?xs) <= set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("List_Index.length_map_index'",
     "length (map_index' ?n ?f ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("List_Index.distinct_remove_nth",
     "distinct ?xs ==> distinct (remove_nth ?i ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List_Index.length_insert_nth",
     "length (insert_nth ?n ?x ?xs) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("List_Index.find_index_conv_takeWhile",
     "find_index ?P ?xs = length (takeWhile (Not o ?P) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("List_Index.set_insert_nth",
     "set (insert_nth ?i ?x ?xs) = insert ?x (set ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("List_Index.inj_on_index2", "?I <= set ?xs ==> inj_on (index ?xs) ?I",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("List_Index.index_less_size_conv",
     "(index ?xs ?x < length ?xs) = (?x : set ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("List_Index.last_index_less_size_conv",
     "(last_index ?xs ?x < length ?xs) = (?x : set ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("List_Index.map_index_no_index", "map_index (%n. ?f) ?xs = map ?f ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List_Index.map_index'_is_NilD",
     "map_index' ?n ?f ?xs = [] ==> ?xs = []",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("List_Index.index_conv_takeWhile",
     "index ?xs ?x = length (takeWhile ((~=) ?x) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 1)))),
    ("List_Index.remove_nth_take_drop",
     "remove_nth ?i ?xs = take ?i ?xs @ drop (Suc ?i) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("List_Index.find_index_first",
     "?i < find_index ?P ?xs ==> ~ ?P (?xs ! ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))
               )
           ))),
    ("List_Index.find_index_less_size_conv",
     "(find_index ?P ?xs < length ?xs) = (EX x:set ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("List_Index.drop_map_index",
     "drop ?p (map_index ?f ?xs) = map_index' ?p ?f (drop ?p ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Index.take_map_index",
     "take ?p (map_index ?f ?xs) = map_index ?f (take ?p ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Index.nth_index", "?x : set ?xs ==> ?xs ! index ?xs ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("List_Index.nth_last_index",
     "?x : set ?xs ==> ?xs ! last_index ?xs ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("List_Index.index_conv_size_if_notin",
     "?x ~: set ?xs ==> index ?xs ?x = length ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List_Index.index_first", "?i < index ?xs ?x ==> ?x ~= ?xs ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_negation
        (
           template_equation
            (template_var 0,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("List_Index.map_index",
     "map_index ?f ?xs = map2 ?f [0..<length ?xs] ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 5),
               template_app (template_hole 0, template_var 0))),
           template_var 0)))),
    ("List_Index.nth_insert_nth_index_eq",
     "?i <= length ?xs ==> insert_nth ?i ?x ?xs ! ?i = ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("List_Index.remove_nth_insert_nth",
     "?i <= length ?xs ==> remove_nth ?i (insert_nth ?i ?x ?xs) = ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)),
         template_var 1))),
    ("List_Index.last_index_drop",
     "last_index ?xs ?x < ?i ==> ?x ~: set (drop ?i ?xs)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)))
               )
           ))),
    ("List_Index.index_take",
     "?i <= index ?xs ?x ==> ?x ~: set (take ?i ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)))
               )
           ))),
    ("List_Index.nth_find_index",
     "find_index ?P ?xs < length ?xs ==> ?P (?xs ! find_index ?P ?xs)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_var 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))
           ))),
    ("List_Index.index_map_inj",
     "inj ?f ==> index (map ?f ?xs) (?f ?y) = index ?xs ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Index.length_remove_nth",
     "?i < length ?xs ==> length (remove_nth ?i ?xs) = length ?xs - 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_hole 0)))),
    ("List_Index.index_Cons",
     "index (?x # ?xs) ?a = (if ?x = ?a then 0 else index ?xs ?a + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0)),
               template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)),
               template_hole 0))
           ))),
    ("List_Index.length_fold_insert_nth",
     "length (fold (%(p, b). insert_nth p b) ?pxs ?xs) =
      length ?xs + length ?pxs",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("List_Index.insert_nth_take_drop",
     "insert_nth ?n ?x ?xs = take ?n ?xs @ [?x] @ drop ?n ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("List_Index.map_index'_map_zip",
     "map_index' ?n ?f ?xs = map2 ?f [?n..<?n + length ?xs] ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0)))),
           template_var 0)))),
    ("List_Index.map_map_index",
     "map ?g (map_index ?f ?xs) = map_index (%n x. ?g (?f n x)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1), t_empty),
         template_var 0))),
    ("List_Index.map_index_map",
     "map_index ?f (map ?g ?xs) = map_index (%n x. ?f n (?g x)) ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 2), t_empty),
         template_var 0))),
    ("List_Index.insert_nth_remove_nth",
     "?i < length ?xs ==>
      insert_nth ?i (?xs ! ?i) (remove_nth ?i ?xs) = ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("List_Index.index_take_if_index",
     "index ?xs ?x <= ?n ==> index (take ?n ?xs) ?x = index ?xs ?x",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("List_Index.map_index_eq_imp_length_eq",
     "map_index ?f ?xs = map_index ?g ?ys ==> length ?xs = length ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app
             (template_app (template_hole 3, template_hole 4),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("List_Index.map_index'_eq_imp_length_eq",
     "map_index' ?n ?f ?xs = map_index' ?n ?g ?ys ==>
      length ?xs = length ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("List_Index.distinct_insert_nth",
     "[| distinct ?xs; ?x ~: set ?xs |]
      ==> distinct (insert_nth ?i ?x ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 2))
           ))),
    ("List_Index.map_index_append",
     "map_index ?f (?a @ ?b) =
      map_index ?f ?a @ map_index' (length ?a) ?f ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 1)),
             template_var 2),
           template_var 0)))),
    ("List_Index.map_index'_comp",
     "map_index' ?n ?f (map_index' ?n ?g ?xs) =
      map_index' ?n (%n. ?f n o ?g n) ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), t_empty),
         template_var 0))),
    ("List_Index.size_index_conv",
     "length ?xs = ?n ==> (?n = index ?xs ?x) = (?x ~: set ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("List_Index.size_last_index_conv",
     "length ?xs = ?n ==> (?n = last_index ?xs ?x) = (?x ~: set ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("List_Index.index_size_conv",
     "length ?xs = ?n ==> (index ?xs ?x = ?n) = (?x ~: set ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("List_Index.last_index_size_conv",
     "length ?xs = ?n ==> (last_index ?xs ?x = ?n) = (?x ~: set ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("List_Index.index_take_if_set",
     "?x : set (take ?n ?xs) ==> index (take ?n ?xs) ?x = index ?xs ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("List_Index.index_nth_id",
     "[| distinct ?xs; ?n < length ?xs |] ==> index ?xs (?xs ! ?n) = ?n",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("List_Index.index_less",
     "[| ?x : set ?xs; length ?xs <= ?n |] ==> index ?xs ?x < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("List_Index.last_index_less",
     "[| ?x : set ?xs; length ?xs <= ?n |] ==> last_index ?xs ?x < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("List_Index.nth_map_index",
     "?p < length ?xs ==> map_index ?f ?xs ! ?p = ?f ?p (?xs ! ?p)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_var 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("List_Index.set_drop_if_index",
     "[| distinct ?xs; index ?xs ?x < ?i |] ==> ?x ~: set (drop ?i ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)))
               )
           ))),
    ("List_Index.map_index'_append",
     "map_index' ?n ?f (?a @ ?b) =
      map_index' ?n ?f ?a @ map_index' (?n + length ?a) ?f ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 1))),
             template_var 2),
           template_var 0)))),
    ("List_Index.size_eq_find_index_conv",
     "length ?xs = ?n ==>
      (?n = find_index ?P ?xs) = (ALL x:set ?xs. ~ ?P x)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)))),
    ("List_Index.find_index_eq_size_conv",
     "length ?xs = ?n ==>
      (find_index ?P ?xs = ?n) = (ALL x:set ?xs. ~ ?P x)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)))),
    ("List_Index.index_image",
     "[| distinct ?xs; set ?xs = ?X |]
      ==> index ?xs ` ?X = {0..<length ?xs}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1))))),
    ("List_Index.index_upt",
     "[| ?m <= ?i; ?i < ?n |] ==> index [?m..<?n] ?i = ?i - ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("List_Index.index_last",
     "[| ?xs ~= []; distinct ?xs |]
      ==> index ?xs (last ?xs) = length ?xs - 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("List_Index.set_take_if_index",
     "[| index ?xs ?x < ?i; ?i <= length ?xs |] ==> ?x : set (take ?i ?xs)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("List_Index.index_append",
     "index (?xs @ ?ys) ?x =
      (if ?x : set ?xs then index ?xs ?x else length ?xs + index ?ys ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))))),
    ("List_Index.nth_insert_nth_front",
     "[| ?i < ?j; ?j <= length ?xs |]
      ==> insert_nth ?j ?x ?xs ! ?i = ?xs ! ?i",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 3)))),
    ("List_Index.find_index_append",
     "find_index ?P (?xs @ ?ys) =
      (if EX x:set ?xs. ?P x then find_index ?P ?xs
       else length ?xs + find_index ?P ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0))))),
    ("List_Index.set_map_index",
     "(?x : set (map_index ?f ?xs)) =
      (EX i<length ?xs. ?f i (?xs ! i) = ?x)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1),
             template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("List_Index.index_eq_index_conv",
     "?x : set ?xs | ?y : set ?xs ==>
      (index ?xs ?x = index ?xs ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 1)))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_equation (template_var 2, template_var 0)))),
    ("List_Index.last_index_eq_index_conv",
     "?x : set ?xs | ?y : set ?xs ==>
      (last_index ?xs ?x = last_index ?xs ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 1)))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_equation (template_var 2, template_var 0)))),
    ("List_Index.set_remove_nth",
     "[| distinct ?xs; ?j < length ?xs |]
      ==> set (remove_nth ?j ?xs) = set ?xs - {?xs ! ?j}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("List_Index.index_rev",
     "[| distinct ?xs; ?x : set ?xs |]
      ==> index (rev ?xs) ?x = length ?xs - index ?xs ?x - 1",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0))),
           template_hole 0)))),
    ("List_Index.nth_insert_nth_back",
     "[| ?j < ?i; ?i <= length ?xs |]
      ==> insert_nth ?j ?x ?xs ! ?i = ?xs ! (?i - 1)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("List_Index.bij_betw_index",
     "[| distinct ?xs; ?X = set ?xs; ?l = length ?xs |]
      ==> bij_betw (index ?xs) ?X {0..<?l}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 6, template_var 2)),
        template_equation
         (template_var 0, template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("List_Index.set_map_index'",
     "(?x : set (map_index' ?n ?f ?xs)) =
      (EX i<length ?xs. ?f (?n + i) (?xs ! i) = ?x)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0))),
       template_app (template_hole 6, t_empty))),
    ("List_Index.map_index_congL",
     "ALL p<length ?xs. ?f p (?xs ! p) = ?xs ! p ==>
      map_index ?f ?xs = ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("List_Index.last_index_Cons",
     "last_index (?x # ?xs) ?y =
      (if ?x = ?y then if ?x : set ?xs then last_index ?xs ?y + 1 else 0
       else last_index ?xs ?y + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_app (template_hole 3, template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 8, template_var 1),
                         template_var 0)),
                     template_hole 1)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_var 0)),
               template_hole 1))
           ))),
    ("List_Index.last_index_Snoc",
     "last_index (?xs @ [?x]) ?y =
      (if ?x = ?y then length ?xs
       else if ?y : set ?xs then last_index ?xs ?y else length ?xs + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app (template_hole 2, template_var 2))),
                 template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 4, template_var 2)),
                 template_hole 0)))
           ))),
    ("List_Index.index_map_inj_on",
     "[| inj_on ?f ?S; ?y : ?S; set ?xs <= ?S |]
      ==> index (map ?f ?xs) (?f ?y) = index ?xs ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app (template_var 3, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List_Index.map_index_cong",
     "ALL p<length ?xs. ?f p (?xs ! p) = ?g p (?xs ! p) ==>
      map_index ?f ?xs = map_index ?g ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 2)))),
    ("List_Index.last_index_append",
     "last_index (?xs @ ?ys) ?x =
      (if ?x : set ?ys then length ?xs + last_index ?ys ?x
       else if ?x : set ?xs then last_index ?xs ?x
            else length ?xs + length ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 2))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 0, template_var 1)))))),
    ("List_Index.index_update_if_diff2",
     "[| ?n < length ?xs; ?x ~= ?xs ! ?n; ?x ~= ?y |]
      ==> index (?xs[?n := ?y]) ?x = index ?xs ?x",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 3))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("List_Index.find_index_eq_iff",
     "(find_index ?P ?xs = ?i) =
      (?i <= length ?xs &
       (ALL j<?i. ~ ?P (?xs ! j)) & (?i < length ?xs --> ?P (?xs ! ?i)))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app (template_hole 5, template_var 1))),
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 4, t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 5, template_var 1))),
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("List_Index.index_eq_iff",
     "(index ?xs ?x = ?i) =
      (?i <= length ?xs &
       (ALL j<?i. ?xs ! j ~= ?x) & (?i < length ?xs --> ?xs ! ?i = ?x))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app (template_hole 6, template_var 2))),
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 5, t_empty)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app (template_hole 6, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0)),
                   template_var 1))))
           ))),
    ("List_Index.map_index'_is_ConsD",
     "map_index' ?n ?f ?xs = ?y # ?ys ==>
      EX z zs.
         ?xs = z # zs & ?f ?n z = ?y & map_index' (?n + 1) ?f zs = ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("List_Index.nth_insert_nth",
     "[| ?i <= length ?xs; ?j <= length ?xs |]
      ==> insert_nth ?j ?x ?xs ! ?i =
          (if ?i = ?j then ?x
           else if ?i < ?j then ?xs ! ?i else ?xs ! (?i - 1))",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 0),
                    template_var 2)),
                template_var 3)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 1)),
                 template_var 0),
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0))))
             )))),
    ("List_Index.find_index_eqI",
     "[| ?i <= length ?xs; ALL j<?i. ~ ?P (?xs ! j);
         ?i < length ?xs ==> ?P (?xs ! ?i) |]
      ==> find_index ?P ?xs = ?i",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_inequation
            (less_than, template_var 2,
             template_app (template_hole 7, template_var 1))],
          template_predicate
           (
              template_app
               (template_var 0,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2))
              ))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("List_Index.invar_fold_insert_nth",
     "[| ALL x:set ?pxs. ?p < fst x; ?p < length ?xs; ?xs ! ?p = ?b |]
      ==> fold (%(x, y). insert_nth x y) ?pxs ?xs ! ?p = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 3)),
              t_empty)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, t_empty)),
                 template_var 3),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("List_Index.index_eqI",
     "[| ?i <= length ?xs; ALL j<?i. ?xs ! j ~= ?x;
         ?i < length ?xs ==> ?xs ! ?i = ?x |]
      ==> index ?xs ?x = ?i",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_implication
         ([template_inequation
            (less_than, template_var 2,
             template_app (template_hole 8, template_var 1))],
          template_equation
           (template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("List_Index.insert_nth_inverse",
     "[| ?j <= length ?xs; ?j' <= length ?xs'; ?x ~: set ?xs;
         ?x ~: set ?xs'; insert_nth ?j ?x ?xs = insert_nth ?j' ?x ?xs' |]
      ==> ?j = ?j'",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 0),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0),
            template_var 1))],
       template_equation (template_var 4, template_var 2))),
    ("List_Index.index_swap_if_distinct",
     "[| distinct ?xs; ?i < length ?xs; ?j < length ?xs |]
      ==> index (?xs[?i := ?xs ! ?j, ?j := ?xs ! ?i]) ?x =
          (if ?x = ?xs ! ?i then ?j
           else if ?x = ?xs ! ?j then ?i else index ?xs ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 3))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_app
                           (template_app (template_hole 3, template_var 3),
                            template_var 2),
                          template_app
                           (template_app (template_hole 2, template_var 3),
                            template_var 1))),
                      template_var 1),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2))),
                 template_var 1),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 1))),
                   template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 0)))
             )))),
    ("List_Index.nth_fold_insert_nth",
     "[| sorted (map fst ?pxs); distinct (map fst ?pxs);
         ALL (p, b):set ?pxs. p < length ?xs + length ?pxs;
         ?i < length ?pxs; ?pxs ! ?i = (?p, ?b) |]
      ==> fold (%(p, b). insert_nth p b) ?pxs ?xs ! ?p = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 4)),
              template_app (template_hole 12, t_empty))
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 4), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, t_empty)),
                 template_var 4),
               template_var 3)),
           template_var 1),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.List_IndexMoreTemplates"
### 0.279s elapsed time, 0.371s cpu time, 0.000s GC time
val it = (): unit
