Loading theory "Draft.TypeIds" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype" via "Draft.DirectSubtypes" via "Draft.JavaType")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.132s elapsed time, 0.545s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.239s elapsed time, 0.972s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.334s elapsed time, 1.327s cpu time, 0.142s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "Draft.TypeIds"
### 1.244s elapsed time, 4.803s cpu time, 0.894s GC time
Loading theory "Draft.JavaType" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype" via "Draft.DirectSubtypes")
### theory "HOL-Library.BigO"
### 1.037s elapsed time, 3.941s cpu time, 0.898s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.069s elapsed time, 3.975s cpu time, 0.798s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.988s elapsed time, 6.303s cpu time, 1.091s GC time
Loading theory "Draft.Templates" (required by "Draft.UnivSpecMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.108s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.UnivSpecMoreTemplates")
consts
  isprimitive :: "Javatype => bool"
consts
  isclass :: "Javatype => bool"
### theory "Draft.JavaType"
### 1.195s elapsed time, 2.730s cpu time, 0.321s GC time
Loading theory "Draft.DirectSubtypes" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype")
### theory "Draft.DirectSubtypes"
### 0.270s elapsed time, 0.816s cpu time, 0.664s GC time
Loading theory "Draft.Subtype" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes")
instantiation
  Javatype :: order
  less_eq_Javatype == less_eq :: Javatype => Javatype => bool
  less_Javatype == less :: Javatype => Javatype => bool
val widen_tac = fn: Proof.context -> int -> tactic
### theory "Draft.Subtype"
### 0.099s elapsed time, 0.200s cpu time, 0.000s GC time
Loading theory "Draft.Attributes" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep")
Loading theory "Draft.Value" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.779s elapsed time, 2.023s cpu time, 0.795s GC time
### theory "Draft.Value"
### 0.696s elapsed time, 1.598s cpu time, 0.173s GC time
### theory "Draft.Attributes"
### 0.839s elapsed time, 1.784s cpu time, 0.227s GC time
Loading theory "Draft.AttributesIndep" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location")
### theory "Draft.AttributesIndep"
### 0.026s elapsed time, 0.029s cpu time, 0.000s GC time
Loading theory "Draft.Location" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store")
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "arrV"
### No equation for constructor "nullV"
consts
  loc :: "Value => AttId => Location"
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "objV"
### No equation for constructor "nullV"
consts
  arr_len :: "Value => Location"
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "objV"
### No equation for constructor "nullV"
consts
  arr_loc :: "Value => nat => Location"
### theory "Draft.Location"
### 0.521s elapsed time, 0.564s cpu time, 0.057s GC time
Loading theory "Draft.Store" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML" via "Draft.StoreProperties")
overloading
  alive \<equiv> alive :: Value => Store => bool
overloading
  access \<equiv> access :: Store => Location => Value
  update \<equiv> update :: Store => Location => Value => Store
  alloc \<equiv> alloc :: Store => New => Store
  new \<equiv> new :: Store => New => Value
### theory "Draft.Store"
### 0.571s elapsed time, 0.618s cpu time, 0.065s GC time
Loading theory "Draft.StoreProperties" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec" via "Draft.JML")
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
### Ambiguous input (line 692 of "$AFP/JiveDataStoreModel/Isabelle_Store/StoreProperties.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###     ("_sModify" ("_position" s)
###       ("_smodifybind" ("_position" l) ("_position" y)))))
### ("\<^const>HOL.Trueprop"
###   ("_sModify"
###     ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###       ("_position" s))
###     ("_smodifybind" ("_position" l) ("_position" y))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 708 of "$AFP/JiveDataStoreModel/Isabelle_Store/StoreProperties.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###     ("_sModify" ("_position" s) ("_position" t))))
### ("\<^const>HOL.Trueprop"
###   ("_sModify"
###     ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###       ("_position" s))
###     ("_position" t)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
instantiation
  Store :: order
  less_eq_Store == less_eq :: Store => Store => bool
  less_Store == less :: Store => Store => bool
### Ambiguous input (line 932 of "$AFP/JiveDataStoreModel/Isabelle_Store/StoreProperties.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###     ("_sModify" ("_position" s) ("_position" t))))
### ("\<^const>HOL.Trueprop"
###   ("_sModify"
###     ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###       ("_position" s))
###     ("_position" t)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "treach"
  Proving monotonicity ...
### theory "Draft.StoreProperties"
### 0.443s elapsed time, 1.078s cpu time, 0.885s GC time
Loading theory "Draft.JML" (required by "Draft.UnivSpecMoreTemplates" via "Draft.UnivSpec")
### theory "Draft.JML"
### 0.026s elapsed time, 0.027s cpu time, 0.000s GC time
Loading theory "Draft.UnivSpec" (required by "Draft.UnivSpecMoreTemplates")
### theory "Draft.UnivSpec"
### 0.027s elapsed time, 0.027s cpu time, 0.000s GC time
Loading theory "Draft.UnivSpecMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.UnivSpecMoreTemplates"
### 0.448s elapsed time, 0.616s cpu time, 0.047s GC time
val it = (): unit
