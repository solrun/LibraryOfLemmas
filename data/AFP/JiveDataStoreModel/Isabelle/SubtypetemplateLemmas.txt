   [("Subtype.NullT_leaf_abs", "NullT <= AClassT ?C",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Subtype.NullT_leaf_array", "NullT <= ArrT ?C",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Subtype.NullT_leaf", "NullT <= CClassT ?C",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Subtype.NullT_leaf_int", "NullT <= InterfaceT ?C",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Subtype.Object_root_abs", "AClassT ?C <= CClassT Object",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Subtype.Object_root_array", "ArrT ?C <= CClassT Object",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Subtype.Object_root", "CClassT ?C <= CClassT Object",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Subtype.Object_root_int", "InterfaceT ?C <= CClassT Object",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Subtype.widen_refl", "?X \<preceq> ?X",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 0)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Subtype.acyclic_imp_antisym_rtrancl", "acyclic ?r ==> antisym (?r^*)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Subtype.widen_asm", "?a <= ?b ==> ?a <= ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Subtype.Object_rootD", "CClassT Object <= ?c ==> CClassT Object = ?c",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_hole 1),
          template_var 0)],
       template_equation
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Subtype.widen_strict_to_widen",
     "?C \<prec> ?D = (?C \<preceq> ?D & ?C ~= ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app (template_hole 5, template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0)),
                 template_app (template_hole 2, template_hole 4))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Subtype.widen_antisym",
     "[| ?a \<preceq> ?b; ?b \<preceq> ?a |] ==> ?a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Subtype.distinct_rtrancl_into_trancl",
     "[| ?x ~= ?y; (?x, ?y) : ?r^* |] ==> (?x, ?y) : ?r^+",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Subtype.acyclic_trancl_rtrancl",
     "acyclic ?r ==> ((?x, ?y) : ?r^+) = ((?x, ?y) : ?r^* & ?x ~= ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0)),
                template_app (template_hole 4, template_var 2))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 0)),
                   template_app (template_hole 2, template_var 2))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))
             )))),
    ("Subtype.widen_trans",
     "[| ?a \<preceq> ?b; ?b \<preceq> ?c |] ==> ?a \<preceq> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_hole 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Subtype.subtype_wrong_elims",
     "[| (?a, ?b) : ?r^*; ?a = ?b ==> ?thesis;
         !!y. [| (?a, y) : ?r^*; (y, ?b) : ?r |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app (template_hole 2, template_var 1))
            ),
        template_implication
         ([template_equation (template_var 3, template_var 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0)))]
