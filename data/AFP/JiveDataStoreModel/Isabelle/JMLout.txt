Loading theory "Draft.TypeIds" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype" via "Draft.DirectSubtypes" via "Draft.JavaType")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.507s cpu time, 0.045s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.194s elapsed time, 0.801s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.375s elapsed time, 1.503s cpu time, 0.142s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.960s elapsed time, 3.649s cpu time, 0.802s GC time
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "Draft.TypeIds"
### 1.201s elapsed time, 4.603s cpu time, 0.847s GC time
Loading theory "Draft.JavaType" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype" via "Draft.DirectSubtypes")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.043s elapsed time, 3.742s cpu time, 0.740s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.936s elapsed time, 6.115s cpu time, 0.998s GC time
Loading theory "Draft.Templates" (required by "Draft.JMLMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.JMLMoreTemplates")
consts
  isprimitive :: "Javatype => bool"
consts
  isclass :: "Javatype => bool"
### theory "Draft.JavaType"
### 1.190s elapsed time, 2.723s cpu time, 0.264s GC time
Loading theory "Draft.DirectSubtypes" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype")
### theory "Draft.DirectSubtypes"
### 0.258s elapsed time, 0.779s cpu time, 0.625s GC time
Loading theory "Draft.Subtype" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes")
instantiation
  Javatype :: order
  less_eq_Javatype == less_eq :: Javatype => Javatype => bool
  less_Javatype == less :: Javatype => Javatype => bool
val widen_tac = fn: Proof.context -> int -> tactic
### theory "Draft.Subtype"
### 0.096s elapsed time, 0.192s cpu time, 0.000s GC time
Loading theory "Draft.Attributes" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location" via "Draft.AttributesIndep")
Loading theory "Draft.Value" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.753s elapsed time, 1.917s cpu time, 0.731s GC time
### theory "Draft.Value"
### 0.680s elapsed time, 1.523s cpu time, 0.136s GC time
### theory "Draft.Attributes"
### 0.829s elapsed time, 1.706s cpu time, 0.176s GC time
Loading theory "Draft.AttributesIndep" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store" via "Draft.Location")
### theory "Draft.AttributesIndep"
### 0.026s elapsed time, 0.029s cpu time, 0.000s GC time
Loading theory "Draft.Location" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties" via "Draft.Store")
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "arrV"
### No equation for constructor "nullV"
consts
  loc :: "Value => AttId => Location"
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "objV"
### No equation for constructor "nullV"
consts
  arr_len :: "Value => Location"
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "objV"
### No equation for constructor "nullV"
consts
  arr_loc :: "Value => nat => Location"
### theory "Draft.Location"
### 0.524s elapsed time, 0.558s cpu time, 0.044s GC time
Loading theory "Draft.Store" (required by "Draft.JMLMoreTemplates" via "Draft.JML" via "Draft.StoreProperties")
overloading
  alive \<equiv> alive :: Value => Store => bool
overloading
  access \<equiv> access :: Store => Location => Value
  update \<equiv> update :: Store => Location => Value => Store
  alloc \<equiv> alloc :: Store => New => Store
  new \<equiv> new :: Store => New => Value
### theory "Draft.Store"
### 0.577s elapsed time, 0.611s cpu time, 0.047s GC time
Loading theory "Draft.StoreProperties" (required by "Draft.JMLMoreTemplates" via "Draft.JML")
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
### Ambiguous input (line 692 of "$AFP/JiveDataStoreModel/Isabelle_Store/StoreProperties.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###     ("_sModify" ("_position" s)
###       ("_smodifybind" ("_position" l) ("_position" y)))))
### ("\<^const>HOL.Trueprop"
###   ("_sModify"
###     ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###       ("_position" s))
###     ("_smodifybind" ("_position" l) ("_position" y))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 708 of "$AFP/JiveDataStoreModel/Isabelle_Store/StoreProperties.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###     ("_sModify" ("_position" s) ("_position" t))))
### ("\<^const>HOL.Trueprop"
###   ("_sModify"
###     ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###       ("_position" s))
###     ("_position" t)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
instantiation
  Store :: order
  less_eq_Store == less_eq :: Store => Store => bool
  less_Store == less :: Store => Store => bool
### Ambiguous input (line 932 of "$AFP/JiveDataStoreModel/Isabelle_Store/StoreProperties.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###     ("_sModify" ("_position" s) ("_position" t))))
### ("\<^const>HOL.Trueprop"
###   ("_sModify"
###     ("\<^const>StoreProperties.xeq_syntax" ("_position" s) ("_position" x)
###       ("_position" s))
###     ("_position" t)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "treach"
  Proving monotonicity ...
### theory "Draft.StoreProperties"
### 0.189s elapsed time, 0.189s cpu time, 0.000s GC time
Loading theory "Draft.JML" (required by "Draft.JMLMoreTemplates")
### theory "Draft.JML"
### 0.023s elapsed time, 0.024s cpu time, 0.000s GC time
Loading theory "Draft.JMLMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.JMLMoreTemplates"
### 0.443s elapsed time, 0.657s cpu time, 0.106s GC time
val it = (): unit
