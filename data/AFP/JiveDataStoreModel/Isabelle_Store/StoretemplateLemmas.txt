   [("Store.always_welltyped_store", "wts ?OS",
     template_predicate (template_app (template_hole 0, template_var 0))),
    ("Store.alive_trivial_simps", "alive nullV ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Store.alive_trivial_simps", "alive (boolV ?b) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Store.alive_trivial_simps", "alive (byteV ?by) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Store.alive_trivial_simps", "alive (intgV ?i) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Store.alive_trivial_simps", "alive (shortV ?sh) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Store.alive_init", "alive (init ?T) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Store.isNewArr_simps", "isNewArr (new_instance ?C) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Store.alive_access", "alive (?s@@?l) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("Store.new_unalive_old_Store", "~ alive (new ?s ?t) ?s",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 1)
             )
         )),
    ("Store.isNewArr_simps", "isNewArr (new_array ?T ?l) = True",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Store.typeofNew_simps", "typeofNew (new_instance ?C) = CClassT ?C",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.typeofNew_simps", "typeofNew (new_array ?T ?l) = ArrT ?T",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Store.typeof_new", "\<tau> new ?s ?t = typeofNew ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.access_type_safe", "\<tau> ?s@@?l <= ltype ?l",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.new_alive_alloc", "alive (new ?s ?t) (?s\<langle>?t\<rangle>)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Store.alive_primitive", "isprimitive \<tau> ?x ==> alive ?x ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Store.alive_update_invariant",
     "alive ?x (?s\<langle>?l := ?y\<rangle>) = alive ?x ?s",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 3), template_var 2))),
    ("Store.aliveImpl_vals_independent",
     "aliveImpl ?x (?s(| vals := ?z |)) = aliveImpl ?x ?s",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Store.new_update",
     "new (?s\<langle>?l := ?x\<rangle>) ?t = new ?s ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 3), template_var 0))),
    ("Store.alive_alloc_propagation",
     "alive ?x ?s ==> alive ?x (?s\<langle>?t\<rangle>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Store.update_unalive_val",
     "~ alive ?x ?s ==> ?s\<langle>?l := ?x\<rangle> = ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_var 1))),
    ("Store.all_le_eq", "(ALL a. (a < ?d) = (a < ?c)) = (?d = ?c)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Store.ref_arr_len_new",
     "ref (arr_len (new ?s (new_array ?T ?n))) = new ?s (new_array ?T ?n)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Store.all_le_eq_imp_eq", "(ALL a. (a < ?d) = (a < ?c)) --> ?d = ?c",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Store.alive_arr_len",
     "isArrV ?x ==> alive (ref (arr_len ?x)) ?s = alive ?x ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Store.update_unalive_loc",
     "~ alive (ref ?l) ?s ==> ?s\<langle>?l := ?x\<rangle> = ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 2)),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Store.ref_arr_loc_new",
     "ref (new ?s (new_array ?T ?n).[?i]) = new ?s (new_array ?T ?n)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Store.alive_arr_loc",
     "isArrV ?x ==> alive (ref (?x.[?i])) ?s = alive ?x ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Store.access_unalive",
     "~ alive (ref ?l) ?s ==> ?s@@?l = init (ltype ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Store.update_type_mismatch",
     "~ \<tau> ?x <= ltype ?l ==> ?s\<langle>?l := ?x\<rangle> = ?s",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_equals, template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_var 0))),
    ("Store.alive_alloc_exhaust",
     "alive ?x (?s\<langle>?t\<rangle>) = (alive ?x ?s | ?x = new ?s ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Store.access_arr_len_new_alloc",
     "?s\<langle>new_array ?T
                  ?l\<rangle>@@arr_len (new ?s (new_array ?T ?l)) =
      intgV (int ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Store.access_update_other",
     "?l ~= ?m ==> ?s\<langle>?l := ?x\<rangle>@@?m = ?s@@?m",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Store.value_array_inhabitants",
     "(ALL x. \<tau> x = ArrT ?typeId --> ?P x) =
      (ALL a. ?P (arrV ?typeId a))",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Store.value_class_inhabitants",
     "(ALL x. \<tau> x = CClassT ?typeId --> ?P x) =
      (ALL a. ?P (objV ?typeId a))",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Store.ref_loc_new",
     "CClassT ?C <= dtype ?f ==>
      ref (new ?s (new_instance ?C)..?f) = new ?s (new_instance ?C)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Store.alloc_new_instance_in_Store",
     "Rep_Store ?s
      (| newOID :=
           %D. if ?C = D then Suc (newOID (Rep_Store ?s) ?C)
               else newOID (Rep_Store ?s) D |)
      : Store",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("Store.le_Suc_eq",
     "(ALL a. (a < Suc ?n) = (a < Suc ?m)) = (ALL a. (a < ?n) = (a < ?m))",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Store.access_alloc",
     "isNewArr ?t --> ?l ~= arr_len (new ?s ?t) ==>
      ?s\<langle>?t\<rangle>@@?l = ?s@@?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 2)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Store.alive_loc",
     "[| isObjV ?x; \<tau> ?x <= dtype ?f |]
      ==> alive (ref (?x..?f)) ?s = alive ?x ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Store.new_eq",
     "(new ?s1.0 ?t = new ?s2.0 ?t) =
      (ALL x. \<tau> x = typeofNew ?t --> alive x ?s1.0 = alive x ?s2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0), template_var 1)),
       template_app (template_hole 5, t_empty))),
    ("Store.Store_eqI",
     "[| ALL x. alive x ?s1.0 = alive x ?s2.0; ALL l. ?s1.0@@l = ?s2.0@@l |]
      ==> ?s1.0 = ?s2.0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Store.update_access_same",
     "[| alive (ref ?l) ?s; alive ?x ?s; \<tau> ?x <= ltype ?l |]
      ==> ?s\<langle>?l := ?x\<rangle>@@?l = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("Store.alive_alloc_cases",
     "[| alive ?x (?s\<langle>?t\<rangle>); alive ?x ?s ==> ?P;
         ?x = new ?s ?t ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Store.access_new",
     "[| ref ?l = new ?s ?t; isNewArr ?t --> ?l ~= arr_len (new ?s ?t) |]
      ==> ?s\<langle>?t\<rangle>@@?l = init (ltype ?l)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 9, template_var 1),
                      template_var 0)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("Store.comm",
     "[| ref ?l ~= new ?s ?t; ?x ~= new ?s ?t |]
      ==> ?s\<langle>?t, ?l := ?x\<rangle> = ?s
          \<langle>?l := ?x, ?t\<rangle>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1)))),
    ("Store.vals_update_in_Store",
     "[| alive (ref ?l) ?s; alive ?y ?s; \<tau> ?y <= ltype ?l |]
      ==> Rep_Store ?s(| vals := (vals (Rep_Store ?s))(?l := ?y) |)
          : Store",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app (template_hole 1, template_var 1))),
             template_hole 0)
           ))),
    ("Store.alloc_new_array_in_Store",
     "Rep_Store ?s
      (| newAID :=
           %S. if ?T = S then Suc (newAID (Rep_Store ?s) ?T)
               else newAID (Rep_Store ?s) S,
         vals := (vals (Rep_Store ?s))
           (arrLenLoc ?T (newAID (Rep_Store ?s) ?T) := intgV (int ?n)) |)
      : Store",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app (template_hole 9, template_var 2)))),
           template_hole 0)
         )),
    ("Store.update_induct",
     "[| ?P ?s;
         [| alive (ref ?l) ?s; alive ?v ?s; \<tau> ?v <= ltype ?l |]
         ==> ?P (Abs_Store
                  (Rep_Store ?s
                   (| vals := (vals (Rep_Store ?s))(?l := ?v) |))) |]
      ==> ?P (?s\<langle>?l := ?v\<rangle>)",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 9, template_var 1)),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 10, template_var 0),
                   template_var 2)
                 )],
            template_implication
             ([template_inequation
                (less_equals,
                 template_app (template_hole 7, template_var 0),
                 template_app (template_hole 6, template_var 1))],
              template_predicate
               (
                  template_app
                   (template_var 3,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, t_empty),
                        template_app (template_hole 1, template_var 2))))
                  ))))],
       template_predicate
        (
           template_app
            (template_var 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           )))]
