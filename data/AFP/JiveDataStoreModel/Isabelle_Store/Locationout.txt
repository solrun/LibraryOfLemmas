Loading theory "Draft.TypeIds" (required by "Draft.LocationMoreTemplates" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype" via "Draft.DirectSubtypes" via "Draft.JavaType")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.141s elapsed time, 0.577s cpu time, 0.056s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.224s elapsed time, 0.911s cpu time, 0.056s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.340s elapsed time, 1.366s cpu time, 0.188s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.TypeIds"
### 1.184s elapsed time, 4.572s cpu time, 1.030s GC time
Loading theory "Draft.JavaType" (required by "Draft.LocationMoreTemplates" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype" via "Draft.DirectSubtypes")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.027s elapsed time, 3.912s cpu time, 1.013s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.061s elapsed time, 3.930s cpu time, 0.881s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.981s elapsed time, 6.235s cpu time, 1.177s GC time
Loading theory "Draft.Templates" (required by "Draft.LocationMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.150s cpu time, 0.046s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LocationMoreTemplates")
consts
  isprimitive :: "Javatype => bool"
consts
  isclass :: "Javatype => bool"
### theory "Draft.JavaType"
### 1.204s elapsed time, 2.809s cpu time, 0.250s GC time
Loading theory "Draft.DirectSubtypes" (required by "Draft.LocationMoreTemplates" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes" via "Draft.Subtype")
### theory "Draft.DirectSubtypes"
### 0.077s elapsed time, 0.181s cpu time, 0.052s GC time
Loading theory "Draft.Subtype" (required by "Draft.LocationMoreTemplates" via "Draft.Location" via "Draft.AttributesIndep" via "Draft.Attributes")
instantiation
  Javatype :: order
  less_eq_Javatype == less_eq :: Javatype => Javatype => bool
  less_Javatype == less :: Javatype => Javatype => bool
val widen_tac = fn: Proof.context -> int -> tactic
### theory "Draft.Subtype"
### 0.075s elapsed time, 0.147s cpu time, 0.000s GC time
Loading theory "Draft.Attributes" (required by "Draft.LocationMoreTemplates" via "Draft.Location" via "Draft.AttributesIndep")
Loading theory "Draft.Value" (required by "Draft.LocationMoreTemplates" via "Draft.Location")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.556s elapsed time, 1.354s cpu time, 0.111s GC time
### theory "Draft.Value"
### 0.663s elapsed time, 1.584s cpu time, 0.159s GC time
### theory "Draft.Attributes"
### 0.792s elapsed time, 1.716s cpu time, 0.159s GC time
Loading theory "Draft.AttributesIndep" (required by "Draft.LocationMoreTemplates" via "Draft.Location")
### theory "Draft.AttributesIndep"
### 0.025s elapsed time, 0.028s cpu time, 0.000s GC time
Loading theory "Draft.Location" (required by "Draft.LocationMoreTemplates")
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "arrV"
### No equation for constructor "nullV"
consts
  loc :: "Value => AttId => Location"
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "objV"
### No equation for constructor "nullV"
consts
  arr_len :: "Value => Location"
### No equation for constructor "boolV"
### No equation for constructor "intgV"
### No equation for constructor "shortV"
### No equation for constructor "byteV"
### No equation for constructor "objV"
### No equation for constructor "nullV"
consts
  arr_loc :: "Value => nat => Location"
### theory "Draft.Location"
### 0.513s elapsed time, 0.541s cpu time, 0.038s GC time
Loading theory "Draft.LocationMoreTemplates"
val templateLemmas =
   [("Location.isArrLenLoc_simps", "isArrLenLoc (staticLoc ?f) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Location.isStaticLoc_simps", "isStaticLoc (staticLoc ?f) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Location.ref_simps", "ref (staticLoc ?f) = nullV",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Location.isArrLenLoc_simps", "isArrLenLoc (arrLenLoc ?T ?a) = True",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Location.isArrLenLoc_simps", "isArrLenLoc (objLoc ?cf ?a) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Location.isStaticLoc_simps", "isStaticLoc (arrLenLoc ?T ?a) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Location.isStaticLoc_simps", "isStaticLoc (objLoc ?cf ?a) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Location.ltype_simps", "ltype (staticLoc ?f) = rtype ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Location.ltype_simps", "ltype (arrLenLoc ?T ?a) = IntgT",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Location.isArrLenLoc_simps", "isArrLenLoc (arrLoc ?T ?a ?i) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Location.isStaticLoc_simps", "isStaticLoc (arrLoc ?T ?a ?i) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Location.ref_simps", "ref (arrLenLoc ?T ?a) = arrV ?T ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Location.ltype_simps", "ltype (objLoc ?cf ?a) = rtype (att ?cf)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("Location.ltype_simps", "ltype (arrLoc ?T ?a ?i) = at2jt ?T",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 2))),
    ("Location.ref_simps", "ref (objLoc ?cf ?a) = objV (cls ?cf) ?a",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Location.ref_simps", "ref (arrLoc ?T ?a ?i) = arrV ?T ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Location.obj_arr_len", "isArrV ?r ==> ref (arr_len ?r) = ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Location.obj_arr_loc", "isArrV ?r ==> ref (?r.[?i]) = ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Location.ref_loc",
     "[| isObjV ?r; \<tau> ?r <= dtype ?f |] ==> ref (?r..?f) = ?r",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1)))]:
   (string * thm * template) list
### theory "Draft.LocationMoreTemplates"
### 0.410s elapsed time, 0.582s cpu time, 0.052s GC time
val it = (): unit
