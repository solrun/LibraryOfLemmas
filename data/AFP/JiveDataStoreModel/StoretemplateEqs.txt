   [("Store.isNewArr_simps", "isNewArr (new_instance ?C) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Store.isNewArr_simps", "isNewArr (new_array ?T ?l) = True",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Store.typeofNew_simps", "typeofNew (new_instance ?C) = CClassT ?C",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.typeofNew_simps", "typeofNew (new_array ?T ?l) = ArrT ?T",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Store.typeof_new", "\<tau> new ?s ?t = typeofNew ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.alive_update_invariant",
     "alive ?x (?s\<langle>?l := ?y\<rangle>) = alive ?x ?s",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 3), template_var 2))),
    ("Store.aliveImpl_vals_independent",
     "aliveImpl ?x (?s(| vals := ?z |)) = aliveImpl ?x ?s",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Store.new_update",
     "new (?s\<langle>?l := ?x\<rangle>) ?t = new ?s ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 3), template_var 0))),
    ("Store.all_le_eq", "(ALL a. (a < ?d) = (a < ?c)) = (?d = ?c)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Store.ref_arr_len_new",
     "ref (arr_len (new ?s (new_array ?T ?n))) = new ?s (new_array ?T ?n)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Store.ref_arr_loc_new",
     "ref (new ?s (new_array ?T ?n).[?i]) = new ?s (new_array ?T ?n)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Store.alive_alloc_exhaust",
     "alive ?x (?s\<langle>?t\<rangle>) = (alive ?x ?s | ?x = new ?s ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Store.access_arr_len_new_alloc",
     "?s\<langle>new_array ?T
                  ?l\<rangle>@@arr_len (new ?s (new_array ?T ?l)) =
      intgV (int ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Store.value_array_inhabitants",
     "(ALL x. \<tau> x = ArrT ?typeId --> ?P x) =
      (ALL a. ?P (arrV ?typeId a))",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Store.value_class_inhabitants",
     "(ALL x. \<tau> x = CClassT ?typeId --> ?P x) =
      (ALL a. ?P (objV ?typeId a))",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Store.le_Suc_eq",
     "(ALL a. (a < Suc ?n) = (a < Suc ?m)) = (ALL a. (a < ?n) = (a < ?m))",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Store.new_eq",
     "(new ?s1.0 ?t = new ?s2.0 ?t) =
      (ALL x. \<tau> x = typeofNew ?t --> alive x ?s1.0 = alive x ?s2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0), template_var 1)),
       template_app (template_hole 5, t_empty)))]
